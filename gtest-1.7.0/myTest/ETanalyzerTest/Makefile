# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = ../..

# Where to find user code.
USER_DIR = /home/jun/straight-DTA/gtest-1.7.0/myTest/ETanalyzerTest

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread -std=c++0x
CXXFLAGS += -D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS

#Gaoyao
LIBDIR=/home/jun/llvm-3.x/build/Release+Asserts/lib
OBJDIR=/home/jun/llvm-3.x/build/lib/Transforms/Hello/Release+Debug+Asserts
LIBS= -lLLVMIRReader -lLLVMTableGen -lLLVMMCJIT -lLLVMRuntimeDyld -lLLVMObject -lLLVMMCDisassembler -lLLVMLinker -lLLVMipo -lLLVMInterpreter -lLLVMInstrumentation -lLLVMJIT -lLLVMExecutionEngine -lLLVMDebugInfo -lLLVMBitWriter -lLLVMX86Disassembler -lLLVMX86AsmParser -lLLVMX86CodeGen -lLLVMX86Desc -lLLVMSelectionDAG -lLLVMX86AsmPrinter -lLLVMX86Utils -lLLVMX86Info -lLLVMAsmPrinter -lLLVMMCParser -lLLVMCodeGen -lLLVMScalarOpts -lLLVMInstCombine -lLLVMTransformUtils -lLLVMipa -lLLVMAsmParser -lLLVMBitReader -lLLVMAnalysis -lLLVMTarget -lLLVMMC -lLLVMCore -lLLVMSupport -ldl -lpthread
OBJS= $(OBJDIR)/INPUT_InstTrace.o $(OBJDIR)/Analyzer_handleConstExpr.o $(OBJDIR)/Analyzer_test.o $(OBJDIR)/inlineLog.o $(OBJDIR)/INPUT_SyscallTrace.o $(OBJDIR)/MetaDFAOrigin.o $(OBJDIR)/Analyzer_handleLibCall.o $(OBJDIR)/Analyzer_utils.o $(OBJDIR)/INPUT_GlobalData.o $(OBJDIR)/instrumentIR.o  $(OBJDIR)/Analyzer_instHandlers.o     $(OBJDIR)/DEBUG_utils.o $(OBJDIR)/LocalMemMap.o $(OBJDIR)/OUTPUT_GraphGenerator.o $(OBJDIR)/Analyzer.o $(OBJDIR)/GlobalMemMap.o $(OBJDIR)/INPUT_SigHandler.o $(OBJDIR)/MetaDFA.o

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = TEST_InstTrace 

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all : $(TESTS)

clean :
	rm -f $(TESTS) gtest.a gtest_main.a *.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.

TEST_InstTrace.o : $(USER_DIR)/TEST_InstTrace.cc
	echo $(USER_DIR)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/TEST_InstTrace.cc

#Gaoyao: link with gtest.a instead of gtest_main.a, coz the
#TEST_InstTrace.cc has main function defined
TEST_InstTrace : TEST_InstTrace.o gtest.a $(OBJS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@ -L$(LIBDIR) $(LIBS)

run.TEST_InstTrace:TEST_InstTrace
	./TEST_InstTrace
