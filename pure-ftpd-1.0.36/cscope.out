cscope 15 $HOME/Downloads/pure-ftpd-1.0.36               0001065296
	@config.h

14 
	#CONF_SNPRINTF_TYPE
 8

	)

17 
	#CONF_TCP_SO_RCVBUF
 87380

	)

20 
	#CONF_TCP_SO_SNDBUF
 16384

	)

59 
	#GETGROUPS_T
 
gid_t


	)

65 
	#HAVE_ALARM
 1

	)

68 
	#HAVE_ALLOCA
 1

	)

72 
	#HAVE_ALLOCA_H
 1

	)

78 
	#HAVE_CHOWN
 1

	)

88 
	#HAVE_CRYPT_H
 1

	)

98 
	#HAVE_DEV_RANDOM


	)

101 
	#HAVE_DEV_URANDOM


	)

105 
	#HAVE_DIRENT_H
 1

	)

111 
	#HAVE_FCNTL_H
 1

	)

114 
	#HAVE_FILENO
 1

	)

117 
	#HAVE_FORK
 1

	)

120 
	#HAVE_GETADDRINFO
 1

	)

123 
	#HAVE_GETGROUPS
 1

	)

126 
	#HAVE_GETHOSTNAME
 1

	)

129 
	#HAVE_GETLOADAVG
 1

	)

132 
	#HAVE_GETNAMEINFO
 1

	)

135 
	#HAVE_GETOPT_H
 1

	)

138 
	#HAVE_GETOPT_LONG
 1

	)

141 
	#HAVE_GETPAGESIZE
 1

	)

144 
	#HAVE_ICONV_H
 1

	)

147 
	#HAVE_INET_NTOP
 1

	)

150 
	#HAVE_INET_PTON
 1

	)

153 
	#HAVE_INITGROUPS
 1

	)

156 
	#HAVE_INTTYPES_H
 1

	)

168 
	#HAVE_LIBCRYPT
 1

	)

219 
	#HAVE_LOCALE_H
 1

	)

229 
	#HAVE_MADVISE
 1

	)

235 
	#HAVE_MEMORY_H
 1

	)

238 
	#HAVE_MEMSET
 1

	)

241 
	#HAVE_MKFIFO
 1

	)

244 
	#HAVE_MKNOD
 1

	)

247 
	#HAVE_MMAP
 1

	)

250 
	#HAVE_MUNMAP
 1

	)

262 
	#HAVE_NETINET_IN_H
 1

	)

265 
	#HAVE_NETINET_IN_SYSTM_H
 1

	)

292 
	#HAVE_POSIX_FADVISE
 1

	)

295 
	#HAVE_POSIX_TERMIOS


	)

298 
	#HAVE_PREAD
 1

	)

304 
	#HAVE_PTRACE
 1

	)

307 
	#HAVE_PUTENV
 1

	)

310 
	#HAVE_RANDOM
 1

	)

313 
	#HAVE_REALPATH
 1

	)

316 
	#HAVE_SCALAR_TIMEZONE


	)

331 
	#HAVE_SETEGID
 1

	)

334 
	#HAVE_SETENV
 1

	)

337 
	#HAVE_SETEUID
 1

	)

340 
	#HAVE_SETGROUPS
 1

	)

343 
	#HAVE_SETLOCALE
 1

	)

349 
	#HAVE_SETREGID
 1

	)

352 
	#HAVE_SETRESGID
 1

	)

355 
	#HAVE_SETRESUID
 1

	)

358 
	#HAVE_SETREUID
 1

	)

361 
	#HAVE_SETRLIMIT
 1

	)

364 
	#HAVE_SETUSERSHELL
 1

	)

367 
	#HAVE_SGTTY_H
 1

	)

370 
	#HAVE_SHADOW_H
 1

	)

376 
	#HAVE_SNPRINTF
 1

	)

385 
	#HAVE_STATFS
 1

	)

388 
	#HAVE_STATVFS
 1

	)

391 
	#HAVE_STATVFS64


	)

398 
	#HAVE_STDARG_H
 1

	)

401 
	#HAVE_STDDEF_H
 1

	)

404 
	#HAVE_STDINT_H
 1

	)

407 
	#HAVE_STDLIB_H
 1

	)

410 
	#HAVE_STRDUP
 1

	)

413 
	#HAVE_STRFTIME
 1

	)

416 
	#HAVE_STRINGS_H
 1

	)

419 
	#HAVE_STRING_H
 1

	)

428 
	#HAVE_STRTOQ
 1

	)

431 
	#HAVE_STRTOULL
 1

	)

434 
	#HAVE_STRUCT_ADDRINFO


	)

440 
	#HAVE_STRUCT_TM_TM_ZONE
 1

	)

443 
	#HAVE_SYSLOG_NAMES


	)

453 
	#HAVE_SYS_FCNTL_H
 1

	)

456 
	#HAVE_SYS_FILE_H
 1

	)

459 
	#HAVE_SYS_IOCTL_H
 1

	)

465 
	#HAVE_SYS_MOUNT_H
 1

	)

472 
	#HAVE_SYS_PARAM_H
 1

	)

478 
	#HAVE_SYS_PTRACE_H
 1

	)

481 
	#HAVE_SYS_RESOURCE_H
 1

	)

484 
	#HAVE_SYS_SELECT_H
 1

	)

487 
	#HAVE_SYS_SENDFILE_H
 1

	)

490 
	#HAVE_SYS_SOCKET_H
 1

	)

493 
	#HAVE_SYS_STATVFS_H
 1

	)

496 
	#HAVE_SYS_STAT_H
 1

	)

499 
	#HAVE_SYS_TIME_H
 1

	)

502 
	#HAVE_SYS_TYPES_H
 1

	)

505 
	#HAVE_SYS_UIO_H
 1

	)

508 
	#HAVE_SYS_VFS_H
 1

	)

511 
	#HAVE_SYS_WAIT_H
 1

	)

514 
	#HAVE_TERMIO_H
 1

	)

517 
	#HAVE_TIMEGM
 1

	)

521 
	#HAVE_TM_ZONE
 1

	)

528 
	#HAVE_TZSET
 1

	)

531 
	#HAVE_UNISTD_H
 1

	)

534 
	#HAVE_UNSETENV
 1

	)

537 
	#HAVE_UTIME
 1

	)

540 
	#HAVE_UTIMES
 1

	)

543 
	#HAVE_UTIME_H
 1

	)

546 
	#HAVE_UTIME_NULL
 1

	)

552 
	#HAVE_VFORK
 1

	)

558 
	#HAVE_VFPRINTF
 1

	)

561 
	#HAVE_VPRINTF
 1

	)

564 
	#HAVE_VSNPRINTF
 1

	)

568 
	#HAVE_WAIT3
 1

	)

571 
	#HAVE_WAITPID
 1

	)

577 
	#HAVE_WORKING_FORK
 1

	)

580 
	#HAVE_WORKING_VFORK
 1

	)

593 
	#LSTAT_FOLLOWS_SLASHED_SYMLINK
 1

	)

687 
	#PACKAGE
 "puª-·pd"

	)

690 
	#PACKAGE_BUGREPORT
 "bug†©Öuª·pd dŸ org"

	)

693 
	#PACKAGE_NAME
 "puª-·pd"

	)

696 
	#PACKAGE_STRING
 "puª-·pd 1.0.36"

	)

699 
	#PACKAGE_TARNAME
 "puª-·pd"

	)

702 
	#PACKAGE_URL
 ""

	)

705 
	#PACKAGE_VERSION
 "1.0.36"

	)

723 
	#REALPATH_WORKS_WITH_UNREADABLE_DIRECTORIES


	)

726 
	#RETSIGTYPE
 

	)

729 
	#SAFE_GETGROUPS_0


	)

732 
	#SELECT_TYPE_ARG1
 

	)

735 
	#SELECT_TYPE_ARG234
 (
fd_£t
 *)

	)

738 
	#SELECT_TYPE_ARG5
 (
timevÆ
 *)

	)

741 
	#SENDFILE64_LINUX


	)

753 
	#SENDFILE_LINUX


	)

756 
	#SIZEOF_INT
 4

	)

759 
	#SIZEOF_LONG
 8

	)

762 
	#SIZEOF_LONG_LONG
 8

	)

765 
	#SIZEOF_MODE_T
 4

	)

768 
	#SIZEOF_SHORT
 2

	)

782 
	#STDC_HEADERS
 1

	)

785 
	#STRUCT_TM_TM_GMTOFF


	)

797 
	#TIME_WITH_SYS_TIME
 1

	)

819 
	#USE_SHADOW


	)

828 #i‚de‡
_ALL_SOURCE


829 
	#_ALL_SOURCE
 1

	)

832 #i‚de‡
_GNU_SOURCE


833 
	#_GNU_SOURCE
 1

	)

836 #i‚de‡
_POSIX_PTHREAD_SEMANTICS


837 
	#_POSIX_PTHREAD_SEMANTICS
 1

	)

840 #i‚de‡
_TANDEM_SOURCE


841 
	#_TANDEM_SOURCE
 1

	)

844 #i‚de‡
__EXTENSIONS__


845 
	#__EXTENSIONS__
 1

	)

850 
	#VERSION
 "1.0.36"

	)

908 #i‡
deföed
 
AC_APPLE_UNIVERSAL_BUILD


909 #i‡
deföed
 
__BIG_ENDIAN__


910 
	#WORDS_BIGENDIAN
 1

	)

913 #i‚de‡
WORDS_BIGENDIAN


948 #i‚de‡
__˝lu•lus


	@puredb/src/example_read.c

4 
	~<c⁄fig.h
>

6 
	~"puªdb_p.h
"

7 
	~"puªdb_ªad.h
"

9 
	$maö
()

11 *
d©a
;

12 
PuªDB
 
db
;

13 
off_t
 
ªços
;

14 
size_t
 
ªéí
;

15 
îr
;

17 i‡(
	`puªdb_›í
(&
db
, "puredb.pdb") != 0) {

18 
	`≥º‹
("Can't openÅhe database");

19 
íd
;

21 i‡((
îr
 = 
	`puªdb_föd_s
(&
db
, "key42", &
ªços
, &
ªéí
)) != 0) {

22 
	`Ârötf
(
°dîr
, "Thêkey wa¢'àfound [îr=%d]\n", 
îr
);

23 
íd
;

25 i‡((
d©a
 = 
	`puªdb_ªad
(&
db
, 
ªços
, 
ªéí
)Ë!
NULL
) {

26 
	`¥ötf
("Thêmachög d©®i†: [%s]\n", 
d©a
);

27 
	`puªdb_ªad_‰ì
(
d©a
);

29 
íd
:

30 i‡(
	`puªdb_˛o£
(&
db
) != 0) {

31 
	`≥º‹
("The database couldn't beÖroperly closed");

35 
	}
}

	@puredb/src/example_write.c

4 
	~<c⁄fig.h
>

6 
	~"puªdb_p.h
"

7 
	~"puªdb_wrôe.h
"

9 
	$maö
()

11 
PuªDBW
 
dbw
;

13 i‡(
	`puªdbw_›í
(&
dbw
, "puredb.index", "puredb.data", "puredb.pdb") != 0) {

14 
	`≥º‹
("Can't createÅhe database");

15 
íd
;

17 i‡(
	`puªdbw_add_s
(&
dbw
, "key", "content") != 0 ||

18 
	`puªdbw_add_s
(&
dbw
, "key2", "content2") != 0 ||

19 
	`puªdbw_add_s
(&
dbw
, "key42", "content42") != 0) {

20 
	`≥º‹
("Error while inserting key/dataÖairs");

21 
íd
;

23 i‡(
	`puªdbw_˛o£
(&
dbw
) != 0) {

24 
	`≥º‹
("Error while closingÅhe database");

27 
íd
:

28 
	`puªdbw_‰ì
(&
dbw
);

31 
	}
}

	@puredb/src/puredb_p.h

4 #i‚de‡
__PUREDB_P_H__


5 
	#__PUREDB_P_H__
 1

	)

7 
	~<°dio.h
>

8 #ifde‡
STDC_HEADERS


9 
	~<°dlib.h
>

10 
	~<°ddef.h
>

11 
	~<°d¨g.h
>

13 #i‡
HAVE_STDLIB_H


14 
	~<°dlib.h
>

17 #i‡
HAVE_STRING_H


18 #i‡!
STDC_HEADERS
 && 
HAVE_MEMORY_H


19 
	~<mem‹y.h
>

21 
	~<°rög.h
>

23 #i‡
HAVE_STRINGS_H


24 
	~<°rögs.h
>

27 
	~<limôs.h
>

28 
	~<î∫o.h
>

29 #ifde‡
HAVE_UNISTD_H


30 
	~<uni°d.h
>

32 
	~<sys/ty≥s.h
>

33 
	~<sys/°©.h
>

34 #ifde‡
HAVE_FCNTL_H


35 
	~<f˙é.h
>

36 #ñi‡
deföed
(
HAVE_SYS_FCNTL_H
)

37 
	~<sys/f˙é.h
>

39 #ifde‡
HAVE_IOCTL_H


40 
	~<io˘l.h
>

41 #ñi‡
deföed
(
HAVE_SYS_IOCTL_H
)

42 
	~<sys/io˘l.h
>

44 #ifde‡
HAVE_NETINET_IN_SYSTM_H


45 
	~<√töë/ö_sy°m.h
>

47 #ifde‡
HAVE_NETINET_IN_H


48 
	~<√töë/ö.h
>

50 #ifde‡
HAVE_MMAP


51 
	~<sys/mm™.h
>

53 #ifde‡
HAVE_WINDOWS_H


54 
	~<wödows.h
>

56 #ifde‡
HAVE_IO_H


57 
	~<io.h
>

59 #ifde‡
HAVE_SYS_PARAM_H


60 
	~<sys/∑øm.h
>

63 #ifde‡
HAVE_ALLOCA


64 #ifde‡
HAVE_ALLOCA_H


65 
	~<Æloˇ.h
>

67 
	#ALLOCA
(
X
Ë
	`Æloˇ
(X)

	)

68 
	#ALLOCA_FREE
(
X
Ëdÿ{ } 0)

	)

70 
	#ALLOCA
(
X
Ë
	`mÆloc
(X)

	)

71 
	#ALLOCA_FREE
(
X
Ë
	`‰ì
(X)

	)

74 #i‚de‡
O_NOFOLLOW


75 
	#O_NOFOLLOW
 0

	)

78 #i‚de‡
O_BINARY


79 
	#O_BINARY
 0

	)

82 #i‡!
deföed
(
O_NDELAY
Ë&& deföed(
O_NONBLOCK
)

83 
	#O_NDELAY
 
O_NONBLOCK


	)

86 #i‚de‡
FNDELAY


87 
	#FNDELAY
 
O_NDELAY


	)

90 #i‚de‡
MAP_FILE


91 
	#MAP_FILE
 0

	)

94 #i‚de‡
MAP_FAILED


95 
	#MAP_FAILED
 ((*Ë-1)

	)

98 #i‡
deföed
(
HAVE_MAPVIEWOFFILE
Ë|| deföed(
HAVE_MMAP
)

99 
	#USE_MAPPED_IO
 1

	)

102 #i‚de‡
î∫o


103 
î∫o
;

	@puredb/src/puredb_read.c

4 
	~<c⁄fig.h
>

6 
	~"puªdb_p.h
"

7 
	~"puªdb_ªad.h
"

9 
puªdb_u32_t
 
	$puªdb_hash
(c⁄° * c⁄° 
msg
, 
size_t
 
Àn
)

11 
puªdb_u32_t
 
j
 = (puredb_u32_t) 5381U;

13 
Àn
 != 0) {

14 
Àn
--;

15 
j
 += (j << 5);

16 
j
 ^((Ë
msg
[
Àn
]);

18 
j
 &= 0xffffffff;

20  
j
;

21 
	}
}

23 
ssize_t
 
	$ß„_ªad
(c⁄° 
fd
, * c⁄° 
buf_
, 
size_t
 
maxÀn
)

25 *
buf
 = (*Ë
buf_
;

26 
ssize_t
 
ªadnb
;

29 (
ªadnb
 = 
	`ªad
(
fd
, 
buf
, 
maxÀn
)Ë< (
ssize_t
) 0 &&

30 
î∫o
 =
EINTR
);

31 i‡(
ªadnb
 < (
ssize_t
Ë0 ||Ñódnb > (ssize_tË
maxÀn
) {

32  
ªadnb
;

34 i‡(
ªadnb
 =(
ssize_t
) 0) {

35 
ªt
:

36  (
ssize_t
Ë(
buf
 - (*Ë
buf_
);

38 
maxÀn
 -
ªadnb
;

39 
buf
 +
ªadnb
;

40 } 
maxÀn
 > (
ssize_t
) 0);

41 
ªt
;

42 
	}
}

44 
	$ªad_be_l⁄g
(c⁄° 
PuªDB
 * c⁄° 
db
,

45 c⁄° 
puªdb_u32_t
 
off£t
,

46 
puªdb_u32_t
 * c⁄° 
ªsu…
)

48 
m≠off£tbuf
[4];

49 *
m≠off£t
;

51 #ifde‡
USE_MAPPED_IO


52 i‡(
db
->
m≠
 !
NULL
) {

53 
m≠off£t
 = 
db
->
m≠
 + 
off£t
;

57 i‡(
	`l£ek
(
db
->
fd
, 
off£t
, 
SEEK_SET
Ë=(
off_t
) -1) {

60 i‡(
	`ß„_ªad
(
db
->
fd
, 
m≠off£tbuf
,  mapoffsetbuf) !=

61 (
ssize_t
Ë 
m≠off£tbuf
) {

64 
m≠off£t
 = 
m≠off£tbuf
;

66 *
ªsu…
 = 
m≠off£t
[0] << 24 | mapoffset[1] << 16 |

67 
m≠off£t
[2] << 8 | mapoffset[3];

70 
	}
}

72 
	$ªad_memcmp
(c⁄° 
PuªDB
 * c⁄° 
db
, c⁄° 
puªdb_u32_t
 
off£t
,

73 c⁄° *
°r
, c⁄° 
puªdb_u32_t
 
Àn
)

75 *
m≠off£tbuf
;

76 
cmp
;

78 #ifde‡
USE_MAPPED_IO


79 i‡(
db
->
m≠
 !
NULL
) {

80  
	`memcmp
(
db
->
m≠
 + 
off£t
, 
°r
, (
size_t
Ë
Àn
) != 0;

83 i‡((
m≠off£tbuf
 = (*Ë
	`ALLOCA
(
Àn
)Ë=
NULL
) {

86 i‡(
	`l£ek
(
db
->
fd
, 
off£t
, 
SEEK_SET
Ë=(
off_t
) -1) {

87 
îr
:

88 
	`ALLOCA_FREE
(
m≠off£tbuf
);

91 i‡(
	`ß„_ªad
(
db
->
fd
, 
m≠off£tbuf
, (
size_t
Ë
Àn
Ë!(
ssize_t
)Üen) {

92 
îr
;

94 
cmp
 = 
	`memcmp
(
m≠off£tbuf
, 
°r
, (
size_t
Ë
Àn
) != 0;

95 
	`ALLOCA_FREE
(
m≠off£tbuf
);

97  
cmp
;

98 
	}
}

100 
	$puªdb_›í
(
PuªDB
 * c⁄° 
db
, c⁄° *
dbfûe
)

102 
°©
 
°
;

104 
db
->
m≠
 = 
NULL
;

105 i‡((
db
->
fd
 = 
	`›í
(
dbfûe
, 
O_RDONLY
 | 
O_BINARY
)) == -1) {

108 i‡(
	`f°©
(
db
->
fd
, &
°
Ë< 0 || st.
°_size
 > (
off_t
) 0xffffffff ||

109 (
db
->
size
 = (
puªdb_u32_t
Ë
°
.
°_size
) <

110 ((
size_t
Ë(256U + 1UË* (
puªdb_u32_t
) +

111  
PUREDB_VERSION
 - (
size_t
) 1U)) {

112 
	`˛o£
(
db
->
fd
);

116 #ifde‡
HAVE_MMAP


117 i‡((*Ë(
db
->
m≠
 =

118 (*Ë
	`mm≠
(
NULL
, 
db
->
size
, 
PROT_READ
,

119 
MAP_FILE
 | 
MAP_SHARED
, 
db
->
fd
,

120 (
off_t
Ë0)Ë=(*Ë
MAP_FAILED
) {

121 
db
->
m≠
 = 
NULL
;

123 #ñi‡
	`deföed
(
HAVE_MAPVIEWOFFILE
)

125 
HANDLE
 
fûeh
;

127 
fûeh
 = (
HANDLE
Ë
	`_gë_osfh™dÀ
(
db
->
fd
);

128 i‡(
fûeh
 !(
HANDLE
) -1) {

129 
HANDLE
 
fmh
;

131 
fmh
 = 
	`Cª©eFûeM≠pög
(
fûeh
, 0, 
PAGE_READONLY
, 0, 0, 0);

132 i‡(
fmh
) {

133 
db
->
m≠
 = 
	`M≠VõwOfFûe
(
fmh
, 
FILE_MAP_READ
, 0, 0, db->
size
);

134 
	`Clo£H™dÀ
(
fmh
);

139 i‡(
	`ªad_memcmp
(
db
, (
puªdb_u32_t
) 0U,

140 (c⁄° *Ë
PUREDB_VERSION
,

141  
PUREDB_VERSION
 - (
size_t
) 1U) != 0) {

146 
	}
}

148 
	$puªdb_föd
(
PuªDB
 * c⁄° 
db
, c⁄° * c⁄° 
toföd
,

149 c⁄° 
size_t
 
toföd_Àn
, 
off_t
 * c⁄° 
ªços
,

150 
size_t
 * c⁄° 
ªéí
)

152 
puªdb_u32_t
 
hash
;

153 
puªdb_u32_t
 
sˇ¬ed_hash
;

154 
puªdb_u32_t
 
hash0
;

155 
puªdb_u32_t
 
hash1
;

156 
puªdb_u32_t
 
hash1e
;

157 
puªdb_u32_t
 
œ°¶Ÿ
;

158 
puªdb_u32_t
 
¶Ÿlo
;

159 
puªdb_u32_t
 
¶Ÿhi
;

160 
puªdb_u32_t
 
¢o
;

162 *
ªços
 = (
off_t
) -1;

163 *
ªéí
 = (
size_t
) 0U;

164 
hash
 = 
	`puªdb_hash
(
toföd
, 
toföd_Àn
);

165 
hash0
 =  
PUREDB_VERSION
 - (
size_t
) 1U +

166 (
hash
 & 0xffË* (
puªdb_u32_t
);

168 i‡((
hash0
 + (
puªdb_u32_t
Ë* 2UË> 
db
->
size
) {

171 i‡(
	`ªad_be_l⁄g
(
db
, 
hash0
, &
hash1
) < 0) {

174 i‡(
	`ªad_be_l⁄g
(
db
, 
hash0
 + (
puªdb_u32_t
), &
hash1e
) < 0) {

177 i‡(
hash1e
 <
hash1
) {

180 i‡(
hash1
 =(
puªdb_u32_t
) 0U) {

183 i‡(
hash1
 > 
db
->
size
) {

186 
œ°¶Ÿ
 = (
hash1e
 - 
hash1
Ë/ ((
puªdb_u32_t
) + (puredb_u32_t));

187 i‡(
œ°¶Ÿ
 <= 0U) {

190 
œ°¶Ÿ
--;

191 #i‡!
	`deföed
(
MINIMAL
Ë&& !deföed(
NO_BINARY_LOOKUP
)

192 
¶Ÿlo
 = 0U;

193 
¶Ÿhi
 = 
œ°¶Ÿ
;

194 
¢o
 = 
¶Ÿhi
 / 2U;

195 
¶Ÿlo
 <
¶Ÿhi
) {

196 i‡(
	`ªad_be_l⁄g
(
db
, 
hash1
 + 
¢o
 *

197 ((
puªdb_u32_t
) + (puredb_u32_t)),

198 &
sˇ¬ed_hash
) < 0) {

201 i‡(
sˇ¬ed_hash
 =
hash
) {

202 
¢o
 > 0U) {

203 
¢o
--;

204 i‡(
	`ªad_be_l⁄g
(
db
, 
hash1
 + 
¢o
 *

205 ((
puªdb_u32_t
) + (puredb_u32_t)),

206 &
sˇ¬ed_hash
) < 0) {

209 i‡(
sˇ¬ed_hash
 !
hash
) {

210 
¢o
++;

214 
hash1
 +
¢o
 * ((
puªdb_u32_t
) + (puredb_u32_t));

215 
sh‹tcut
;

217 i‡(
sˇ¬ed_hash
 > 
hash
) {

218 i‡(
¢o
 <= 0U) {

221 
¶Ÿhi
 = 
¢o
 - 1;

223 i‡(
¢o
 >
œ°¶Ÿ
) {

226 
¶Ÿlo
 = 
¢o
 + 1;

228 
¢o
 = (
¶Ÿhi
 + 
¶Ÿlo
) / 2U;

230 
hash1
 +
¢o
 * ((
puªdb_u32_t
) + (puredb_u32_t));

233 i‡(
	`ªad_be_l⁄g
(
db
, 
hash1
, &
sˇ¬ed_hash
) < 0) {

236 i‡(
sˇ¬ed_hash
 > 
hash
) {

239 i‡(
sˇ¬ed_hash
 =
hash
) {

240 
puªdb_u32_t
 
d©a
;

241 
puªdb_u32_t
 
key_size
;

242 
puªdb_u32_t
 
d©a_size
;

244 
sh‹tcut
:

245 i‡(
	`ªad_be_l⁄g
(
db
, 
hash1
 + 4, &
d©a
) < 0) {

248 i‡(
d©a
 > 
db
->
size
) {

251 i‡(
	`ªad_be_l⁄g
(
db
, 
d©a
, &
key_size
) < 0) {

254 i‡(
key_size
 !(
puªdb_u32_t
Ë
toföd_Àn
) {

255 
åy√xt
;

257 i‡(
	`ªad_memcmp
(
db
, 
d©a
 + (
puªdb_u32_t
),

258 (c⁄° *Ë
toföd
, 
toföd_Àn
) != 0) {

259 
åy√xt
;

261 
d©a
 +(
puªdb_u32_t
Ë+ 
toföd_Àn
;

262 i‡(
	`ªad_be_l⁄g
(
db
, 
d©a
, &
d©a_size
) < 0) {

265 
d©a
 +(
puªdb_u32_t
);

266 *
ªços
 = (
off_t
Ë
d©a
;

267 *
ªéí
 = (
size_t
Ë
d©a_size
;

271 
åy√xt
:

272 
hash1
 +(
puªdb_u32_t
) + (puredb_u32_t);

273 i‡(
œ°¶Ÿ
 == 0U) {

276 
œ°¶Ÿ
--;

280 
	}
}

282 
	$puªdb_föd_s
(
PuªDB
 * c⁄° 
db
, c⁄° * c⁄° 
toföd
,

283 
off_t
 * c⁄° 
ªços
, 
size_t
 * c⁄° 
ªéí
)

285  
	`puªdb_föd
(
db
, 
toföd
, 
	`°æí
—oföd), 
ªços
, 
ªéí
);

286 
	}
}

288 *
	$puªdb_ªad
(
PuªDB
 * c⁄° 
db
, c⁄° 
off_t
 
off£t
, c⁄° 
size_t
 
Àn
)

290 *
buf
;

292 i‡((
buf
 = 
	`mÆloc
(
Àn
 + (
size_t
Ë1U)Ë=
NULL
) {

293  
NULL
;

295 #ifde‡
USE_MAPPED_IO


296 i‡(
db
->
m≠
 !
NULL
) {

297 
	`mem˝y
(
buf
, 
db
->
m≠
 + 
off£t
, 
Àn
);

301 i‡(
	`l£ek
(
db
->
fd
, 
off£t
, 
SEEK_SET
Ë=(
off_t
) -1 ||

302 
	`ß„_ªad
(
db
->
fd
, 
buf
, 
Àn
Ë!(
ssize_t
)Üen) {

303 
	`‰ì
(
buf
);

304  
NULL
;

307 ((*Ë
buf
)[
Àn
] = 0U;

309  
buf
;

310 
	}
}

312 
	$puªdb_˛o£
(
PuªDB
 * c⁄° 
db
)

314 
ªt
 = 0;

316 #ifde‡
HAVE_MMAP


317 i‡(
db
->
m≠
 !
NULL
) {

318 #ifde‡
HAVE_MUNMAP


319 (Ë
	`munm≠
((*Ë
db
->
m≠
, db->
size
);

321 
db
->
m≠
 = 
NULL
;

323 #ñi‡
	`deföed
(
HAVE_MAPVIEWOFFILE
)

324 i‡(
db
->
m≠
 !
NULL
) {

325 (Ë
	`Unm≠VõwOfFûe
(
db
->
m≠
);

326 
db
->
m≠
 = 
NULL
;

329 i‡(
db
->
fd
 != -1) {

330 
ªt
 = 
	`˛o£
(
db
->
fd
);

331 
db
->
fd
 = -1;

334  
ªt
;

335 
	}
}

	@puredb/src/puredb_read.h

4 #i‚de‡
__PUREDB_READ_H__


5 
	#__PUREDB_READ_H__
 1

	)

7 
	~<limôs.h
>

9 
	#PUREDB_VERSION
 "PDB2"

	)

10 
	#PUREDB_LIB_VERSION
 1

	)

12 #i‚de‡
PUREDB_U32_T


13 #i‡
SHRT_MAX
 >= 2147483647

14 
	tpuªdb_u32_t
;

15 #ñi‡
INT_MAX
 >= 2147483647

16 
	tpuªdb_u32_t
;

18 
	tpuªdb_u32_t
;

20 
	#PUREDB_U32_T
 1

	)

23 
	sPuªDB_
 {

24 *
	mm≠
;

25 
	mfd
;

26 
puªdb_u32_t
 
	msize
;

27 } 
	tPuªDB
;

29 
	#puªdb_gëfd
(
X
Ë((X)->
fd
)

	)

31 
	#puªdb_gësize
(
X
Ë((
off_t
Ë((X)->
size
))

	)

33 
	#puªdb_ªad_‰ì
(
X
Ëi‡((XË!
NULL
Ë
	`‰ì
(X)

	)

35 
puªdb_›í
(
PuªDB
 * c⁄° 
db
, c⁄° *
dbfûe
);

37 
puªdb_˛o£
(
PuªDB
 * c⁄° 
db
);

39 
puªdb_föd
(
PuªDB
 * c⁄° 
db
, c⁄° * c⁄° 
toföd
,

40 c⁄° 
size_t
 
toföd_Àn
, 
off_t
 * c⁄° 
ªços
,

41 
size_t
 * c⁄° 
ªéí
);

43 
puªdb_föd_s
(
PuªDB
 * c⁄° 
db
, c⁄° * c⁄° 
toföd
,

44 
off_t
 * c⁄° 
ªços
, 
size_t
 * c⁄° 
ªéí
);

46 *
puªdb_ªad
(
PuªDB
 * c⁄° 
db
, c⁄° 
off_t
 
off£t
, c⁄° 
size_t
 
Àn
);

	@puredb/src/puredb_write.c

4 
	~<c⁄fig.h
>

6 
	~"puªdb_p.h
"

7 
	~"puªdb_wrôe.h
"

9 #i‚de‡
HAVE_STRDUP


10 *
	$°rdup
(c⁄° *
°r
)

12 *
√w°r
;

13 
size_t
 
°r_Àn_1
;

15 i‡(
°r
 =
NULL
 ||

16 (
°r_Àn_1
 = 
	`°æí
(
°r
Ë+ (
size_t
) 1U) <= (size_t) 0U ||

17 (
√w°r
 = 
	`mÆloc
(
°r_Àn_1
)Ë=
NULL
) {

18  
NULL
;

20 
	`mem˝y
(
√w°r
, 
°r
, 
°r_Àn_1
);

22  
√w°r
;

23 
	}
}

26 
puªdb_u32_t
 
	$puªdbw_hash
(c⁄° * c⁄° 
msg
, 
size_t
 
Àn
)

28 
puªdb_u32_t
 
j
 = (puredb_u32_t) 5381U;

30 
Àn
 != 0) {

31 
Àn
--;

32 
j
 += (j << 5);

33 
j
 ^((Ë
msg
[
Àn
]);

35 
j
 &= 0xffffffff;

37  
j
;

38 
	}
}

40 
	$puªdbw_›í
(
PuªDBW
 * c⁄° 
dbw
,

41 c⁄° * c⁄° 
fûe_ödex
,

42 c⁄° * c⁄° 
fûe_d©a
,

43 c⁄° * c⁄° 
fûe_föÆ
)

45 
dbw
->
fûe_ödex
 = 
NULL
;

46 
dbw
->
fûe_d©a
 = 
NULL
;

47 
dbw
->
fûe_föÆ
 = 
NULL
;

48 
dbw
->
Âödex
 = 
NULL
;

49 
dbw
->
Âd©a
 = 
NULL
;

51 
z
 = ( 
dbw
->
hash_èbÀ0
) / ( dbw->hash_table0[0]) - 1;

54 
dbw
->
hash_èbÀ0
[
z
].
hash1_li°
 = 
NULL
;

55 
dbw
->
hash_èbÀ0
[
z
].
hash1_li°_size
 = (
size_t
) 0U;

56 
z
--;

57 } 
z
 >= 0);

59 i‡((
dbw
->
fûe_ödex
 = 
	`°rdup
(fûe_ödex)Ë=
NULL
 ||

60 (
dbw
->
fûe_d©a
 = 
	`°rdup
(fûe_d©a)Ë=
NULL
 ||

61 (
dbw
->
fûe_föÆ
 = 
	`°rdup
(fûe_föÆ)Ë=
NULL
 ||

62 (
dbw
->
Âödex
 = 
	`f›í
(
fûe_ödex
, "wb")Ë=
NULL
 ||

63 (
dbw
->
Âd©a
 = 
	`f›í
(
fûe_d©a
, "w+b")Ë=
NULL
) {

67 
dbw
->
d©a_off£t_cou¡î
 = (
puªdb_u32_t
) 0U;

68 
dbw
->
off£t_fú°_d©a
 = (
puªdb_u32_t
)

69 ( 
PUREDBW_VERSION
 - (
size_t
) 1U +

70 (1U +  
dbw
->
hash_èbÀ0
 /  dbw->hash_table0[0]) *

71 (
puªdb_u32_t
));

72 i‡(
	`fwrôe
(
PUREDBW_VERSION
, (
size_t
) 1U,

73  
PUREDBW_VERSION
 - (
size_t
) 1U,

74 
dbw
->
Âödex
Ë!( 
PUREDBW_VERSION
 - (
size_t
) 1U)) {

78 
	}
}

80 
	$puªdbw_add
(
PuªDBW
 * c⁄° 
dbw
,

81 c⁄° * c⁄° 
key
, c⁄° 
size_t
 
key_Àn
,

82 c⁄° * c⁄° 
c⁄ã¡
, c⁄° 
size_t
 
c⁄ã¡_Àn
)

84 c⁄° 
puªdb_u32_t
 
hash
 = 
	`puªdbw_hash
(
key
, 
key_Àn
);

85 c⁄° 
puªdb_u32_t
 
hash_hi
 = 
hash
 & 0xff;

86 
Hash0
 * c⁄° 
hash0
 = &
dbw
->
hash_èbÀ0
[
hash_hi
];

87 
Hash1
 *
hash1
;

89 i‡(
hash0
->
hash1_li°
 =
NULL
) {

90 
hash0
->
hash1_li°_size
 = (
Hash1
);

91 i‡((
hash0
->
hash1_li°
 = 
	`mÆloc
(hash0->
hash1_li°_size
)Ë=
NULL
) {

95 
Hash1
 *
√w≤t
;

97 
hash0
->
hash1_li°_size
 +(
Hash1
);

98 i‡((
√w≤t
 = 
	`ªÆloc
(
hash0
->
hash1_li°
,

99 
hash0
->
hash1_li°_size
)Ë=
NULL
) {

102 
hash0
->
hash1_li°
 = 
√w≤t
;

104 
dbw
->
off£t_fú°_d©a
 +(
puªdb_u32_t
) + (puredb_u32_t);

105 
hash1
 = (
Hash1
 *Ë(*Ë((*Ë
hash0
->
hash1_li°
 +

106 
hash0
->
hash1_li°_size
 - (
Hash1
));

107 
hash1
->
hash
 = hash;

108 
hash1
->
off£t_d©a
 = 
dbw
->
d©a_off£t_cou¡î
;

109 
dbw
->
d©a_off£t_cou¡î
 +(
puªdb_u32_t
) + (puredb_u32_t) +

110 + 
key_Àn
 + 
c⁄ã¡_Àn
;

112 c⁄° 
puªdb_u32_t
 
key_Àn_
 = 
	`ht⁄l
(’uªdb_u32_tË
key_Àn
);

113 i‡(
	`fwrôe
(&
key_Àn_
,  key_Àn_, (
size_t
Ë1U, 
dbw
->
Âd©a
) !=

114 (
size_t
) 1U) {

118 i‡(
	`fwrôe
(
key
, (
size_t
Ë1U, 
key_Àn
, 
dbw
->
Âd©a
) != key_len) {

122 c⁄° 
puªdb_u32_t
 
c⁄ã¡_Àn_
 = 
	`ht⁄l
(’uªdb_u32_tË
c⁄ã¡_Àn
);

123 i‡(
	`fwrôe
(&
c⁄ã¡_Àn_
,  c⁄ã¡_Àn_, (
size_t
) 1U,

124 
dbw
->
Âd©a
Ë!(
size_t
) 1U) {

128 i‡(
	`fwrôe
(
c⁄ã¡
, (
size_t
Ë1U, 
c⁄ã¡_Àn
, 
dbw
->
Âd©a
)

129 !
c⁄ã¡_Àn
) {

135 
	}
}

137 
	$puªdbw_add_s
(
PuªDBW
 * c⁄° 
dbw
,

138 c⁄° * c⁄° 
key
, c⁄° * c⁄° 
c⁄ã¡
)

140  
	`puªdbw_add
(
dbw
, 
key
, 
	`°æí
(key), 
c⁄ã¡
, strlen(content));

141 
	}
}

143 
	$hash1_cmp_hook
(c⁄° * c⁄° 
a
, c⁄° * c⁄° 
b
)

145 
puªdb_u32_t
 
ha
 = ((c⁄° 
Hash1
 *Ë
a
)->
hash
;

146 
puªdb_u32_t
 
hb
 = ((c⁄° 
Hash1
 *Ë
b
)->
hash
;

148 i‡(
ha
 < 
hb
) {

150 } i‡(
ha
 > 
hb
) {

153 
ha
 = ((c⁄° 
Hash1
 *Ë
a
)->
off£t_d©a
;

154 
hb
 = ((c⁄° 
Hash1
 *Ë
b
)->
off£t_d©a
;

155 i‡(
ha
 < 
hb
) {

157 } i‡(
ha
 > 
hb
) {

161 
	}
}

163 
	$wrôekeys
(
PuªDBW
 * c⁄° 
dbw
)

165 
hash_˙t
 = ()

166 ( 
dbw
->
hash_èbÀ0
 /  dbw->hash_table0[0]);

167 c⁄° 
Hash0
 *
hash0
 = 
dbw
->
hash_èbÀ0
;

169 
puªdb_u32_t
 
off£t
 = (puredb_u32_t)

170 ((1U +  
dbw
->
hash_èbÀ0
 /  dbw->hash_table0[0]) *

171 (
puªdb_u32_t
Ë+  
PUREDBW_VERSION
 - (
size_t
) 1U);

174 c⁄° 
puªdb_u32_t
 
off£t_
 = 
	`ht⁄l
(’uªdb_u32_tË
off£t
);

176 i‡(
	`fwrôe
(&
off£t_
,  off£t_, (
size_t
Ë1U, 
dbw
->
Âödex
) !=

177 (
size_t
) 1U) {

182 i‡(
hash0
->
hash1_li°_size
 <= 0U) {

183 
off£t
 +(
puªdb_u32_t
);

184 
dbw
->
off£t_fú°_d©a
 +(
puªdb_u32_t
);

186 
off£t
 +((
hash0
->
hash1_li°_size
 / (
Hash1
)) *

187 ((
puªdb_u32_t
) + (puredb_u32_t)));

189 
hash0
++;

190 
hash_˙t
--;

191 } 
hash_˙t
 != 0);

193 c⁄° 
puªdb_u32_t
 
nuŒ_
 = (puªdb_u32_tË
	`ht⁄l
(
off£t
);

194 i‡(
	`fwrôe
(&
nuŒ_
, ÇuŒ_, (
size_t
Ë1U, 
dbw
->
Âödex
) !=

195 (
size_t
) 1U) {

200 
hash_˙t
 = (Ë( 
dbw
->
hash_èbÀ0
 /  dbw->hash_table0[0]);

201 
hash0
 = 
dbw
->
hash_èbÀ0
;

203 
Hash1
 *
hash1
 = 
hash0
->
hash1_li°
;

204 
size_t
 
li°_size
 = 
hash0
->
hash1_li°_size
;

206 i‡(
hash1
 =
NULL
) {

207 c⁄° 
puªdb_u32_t
 
nuŒ_
 =

208 (
puªdb_u32_t
Ë
	`ht⁄l
((
hash0
 - 
dbw
->
hash_èbÀ0
) + 1U);

210 i‡(
	`fwrôe
(&
nuŒ_
, ÇuŒ_, (
size_t
Ë1U, 
dbw
->
Âödex
) !=

211 (
size_t
) 1U) {

214 
√xt
;

216 
	`qs‹t
((*Ë
hash1
, 
hash0
->
hash1_li°_size
 / (
Hash1
),

217 (
Hash1
), 
hash1_cmp_hook
);

220 c⁄° 
puªdb_u32_t
 
hash_
 = 
	`ht⁄l
(
hash1
->
hash
);

222 i‡(
	`fwrôe
(&
hash_
,  hash_, (
size_t
Ë1U, 
dbw
->
Âödex
) !=

223 (
size_t
) 1U) {

228 c⁄° 
puªdb_u32_t
 
off£t_d©a_
 = 
	`ht⁄l
(
hash1
->
off£t_d©a
 +

229 
dbw
->
off£t_fú°_d©a
);

231 i‡(
	`fwrôe
(&
off£t_d©a_
,  offset_data_,

232 (
size_t
Ë1U, 
dbw
->
Âödex
) != (size_t) 1U) {

236 
hash1
++;

237 
li°_size
 -(
Hash1
);

238 } 
li°_size
 > (
size_t
) 0U);

239 
√xt
:

240 
hash0
++;

241 
hash_˙t
--;

242 } 
hash_˙t
 != 0);

245 
	}
}

247 
	$‰ì°ru˘s
(
PuªDBW
 * c⁄° 
dbw
)

249 
Hash0
 *
hash0
 = 
dbw
->
hash_èbÀ0
;

250 
hash0_˙t
 = (Ë( 
dbw
->
hash_èbÀ0
 /  dbw->hash_table0[0]);

253 
	`‰ì
(
hash0
->
hash1_li°
);

254 
hash0
->
hash1_li°
 = 
NULL
;

255 
hash0
++;

256 
hash0_˙t
--;

257 } 
hash0_˙t
 > 0);

260 
	}
}

262 
	$mîgefûes
(
PuªDBW
 * c⁄° 
dbw
)

264 
size_t
 
ªadnb
;

265 
buf
[4096];

267 
	`ªwöd
(
dbw
->
Âd©a
);

268 (
ªadnb
 = 
	`‰ód
(
buf
, (
size_t
Ë1U,  buf, 
dbw
->
Âd©a
)) >

269 (
size_t
) 0U) {

270 i‡(
	`fwrôe
(
buf
, (
size_t
Ë1U, 
ªadnb
, 
dbw
->
Âödex
) !=Ñeadnb) {

274 i‡(
	`f˛o£
(
dbw
->
Âd©a
) != 0) {

277 
dbw
->
Âd©a
 = 
NULL
;

278 
	`fÊush
(
dbw
->
Âödex
);

279 #ifde‡
HAVE_FILENO


280 
	`fsync
(
	`fûío
(
dbw
->
Âödex
));

282 i‡(
	`f˛o£
(
dbw
->
Âödex
) != 0) {

285 
dbw
->
Âödex
 = 
NULL
;

286 (Ë
	`u∆ök
(
dbw
->
fûe_d©a
);

287 i‡(
	`ª«me
(
dbw
->
fûe_ödex
, dbw->
fûe_föÆ
) < 0)

289 (Ë
	`u∆ök
(
dbw
->
fûe_föÆ
);

290 i‡(
	`ª«me
(
dbw
->
fûe_ödex
, dbw->
fûe_föÆ
) < 0) {

296 
	}
}

298 
	$‰ìÆl
(
PuªDBW
 * c⁄° 
dbw
)

300 i‡(
dbw
->
Âödex
 !
NULL
) {

301 
	`f˛o£
(
dbw
->
Âödex
);

302 
dbw
->
Âödex
 = 
NULL
;

304 i‡(
dbw
->
Âd©a
 !
NULL
) {

305 
	`f˛o£
(
dbw
->
Âd©a
);

306 
dbw
->
Âd©a
 = 
NULL
;

308 
	`‰ì
(
dbw
->
fûe_ödex
);

309 
dbw
->
fûe_ödex
 = 
NULL
;

310 
	`‰ì
(
dbw
->
fûe_d©a
);

311 
dbw
->
fûe_d©a
 = 
NULL
;

312 
	`‰ì
(
dbw
->
fûe_föÆ
);

313 
dbw
->
fûe_föÆ
 = 
NULL
;

314 
	}
}

316 
	$puªdbw_‰ì
(
PuªDBW
 * c⁄° 
dbw
)

318 
	`‰ì°ru˘s
(
dbw
);

319 
	`‰ìÆl
(
dbw
);

320 
	}
}

322 
	$puªdbw_˛o£
(
PuªDBW
 * c⁄° 
dbw
)

324 i‡(
	`wrôekeys
(
dbw
) != 0) {

327 
	`‰ì°ru˘s
(
dbw
);

328 i‡(
	`mîgefûes
(
dbw
) != 0) {

331 
	`‰ìÆl
(
dbw
);

334 
	}
}

	@puredb/src/puredb_write.h

4 #i‚de‡
__PUREDB_WRITE_H__


5 
	#__PUREDB_WRITE_H__
 1

	)

7 
	~<limôs.h
>

9 
	#PUREDBW_VERSION
 "PDB2"

	)

10 
	#PUREDBW_LIB_VERSION
 1

	)

12 #i‚de‡
PUREDB_U32_T


13 #i‡
SHRT_MAX
 >= 2147483647

14 
	tpuªdb_u32_t
;

15 #ñi‡
INT_MAX
 >= 2147483647

16 
	tpuªdb_u32_t
;

18 
	tpuªdb_u32_t
;

20 
	#PUREDB_U32_T
 1

	)

23 
	sHash1_
 {

24 
puªdb_u32_t
 
	mhash
;

25 
puªdb_u32_t
 
	moff£t_d©a
;

26 } 
	tHash1
;

28 
	sHash0_
 {

29 
Hash1
 *
	mhash1_li°
;

30 
size_t
 
	mhash1_li°_size
;

31 } 
	tHash0
;

33 
	sPuªDBW_
 {

34 
FILE
 *
	mÂödex
;

35 
FILE
 *
	mÂd©a
;

36 *
	mfûe_ödex
;

37 *
	mfûe_d©a
;

38 *
	mfûe_föÆ
;

39 
puªdb_u32_t
 
	md©a_off£t_cou¡î
;

40 
puªdb_u32_t
 
	moff£t_fú°_d©a
;

41 
Hash0
 
	mhash_èbÀ0
[256];

42 } 
	tPuªDBW
;

44 
puªdbw_›í
(
PuªDBW
 * c⁄° 
dbw
,

45 c⁄° * c⁄° 
fûe_ödex
,

46 c⁄° * c⁄° 
fûe_d©a
,

47 c⁄° * c⁄° 
fûe_föÆ
);

49 
puªdbw_˛o£
(
PuªDBW
 * c⁄° 
dbw
);

51 
puªdbw_‰ì
(
PuªDBW
 * c⁄° 
dbw
);

53 
puªdbw_add
(
PuªDBW
 * c⁄° 
dbw
,

54 c⁄° * c⁄° 
key
, c⁄° 
size_t
 
key_Àn
,

55 c⁄° * c⁄° 
c⁄ã¡
, c⁄° 
size_t
 
c⁄ã¡_Àn
);

57 
puªdbw_add_s
(
PuªDBW
 * c⁄° 
dbw
,

58 c⁄° * c⁄° 
key
, c⁄° * c⁄° 
c⁄ã¡
);

	@puredb/src/regression.c

4 
	~<c⁄fig.h
>

5 #ifde‡
HAVE_SNPRINTF


7 
	~"puªdb_p.h
"

8 
	~"puªdb_ªad.h
"

9 
	~"puªdb_wrôe.h
"

10 
	~<time.h
>

12 
	$maö
()

14 
key
[42];

15 
d©a
[42];

16 
curkey
 = 0ULL;

17 
nbªc
 = 0ULL;

18 
PuªDBW
 
dbw
;

19 
PuªDB
 
db
;

20 
off_t
 
ªços
;

21 
size_t
 
ªéí
;

22 *
foundd©a
;

23 
∑ss
 = 0;

24 
£ed
 = 0U;

25 
øndomrounds
 = 42000;

27 
	`¥ötf
("StartingÑegressionÅests\n\nDatabase creation (wait) ... ");

28 
	`fÊush
(
°dout
);

29 i‡(
	`puªdbw_›í
(&
dbw
, "puredb.index", "puredb.data", "puredb.pdb") != 0) {

30 
	`≥º‹
("Can't createÅhe database");

31 
íd
;

33 
£ed
 = (Ë
	`time
(
NULL
);

34 
	`§™d
(
£ed
);

36 
curkey
 +(
	`ønd
() & 0x4fff);

37 
	`¢¥ötf
(
key
,  key, "%Œu", 
curkey
);

38 
	`¢¥ötf
(
d©a
,  d©a, "%Œu", 
curkey
 ^ 0x12345678abcdefULL);

39 i‡(
	`puªdbw_add_s
(&
dbw
, 
key
, 
d©a
) != 0) {

40 
íd
;

42 
nbªc
++;

43 } 
curkey
 < () 0xfffffff0);

44 i‡(
	`puªdbw_˛o£
(&
dbw
) != 0) {

45 
íd
;

47 
∑ss
++;

48 
íd
:

49 
	`puªdbw_‰ì
(&
dbw
);

50 i‡(
∑ss
 == 0) {

51 
	`puts
("Failure :(");

52 
	`u∆ök
("puredb.index");

53 
	`u∆ök
("puredb.data");

54 
	`u∆ök
("puredb.pdb");

57 
	`¥ötf
("Suc˚ss! %ŒuÑec‹d†havêbì¿wrôãn\n", 
nbªc
);

58 
∑ss
 = 0;

60 
	`¥ötf
("DatabaseÜookups (wait) ... ");

61 
	`fÊush
(
°dout
);

62 i‡(
	`puªdb_›í
(&
db
, "puredb.pdb") != 0) {

63 
	`≥º‹
("Can't openÅhe database");

64 
íd2
;

66 
curkey
 = 0ULL;

67 
	`§™d
(
£ed
);

69 
curkey
 +(
	`ønd
() & 0x4fff);

70 
	`¢¥ötf
(
key
,  key, "%Œu", 
curkey
);

71 
	`¢¥ötf
(
d©a
,  d©a, "%Œu", 
curkey
 ^ 0x12345678abcdefULL);

72 i‡(
	`puªdb_föd_s
(&
db
, 
key
, &
ªços
, &
ªéí
) != 0) {

73 
	`Ârötf
(
°dîr
, "The key wasn't found\n");

74 
íd2
;

76 i‡((
foundd©a
 = 
	`puªdb_ªad
(&
db
, 
ªços
, 
ªéí
)Ë!
NULL
) {

77 i‡(
	`°rcmp
(
foundd©a
, 
d©a
) != 0) {

78 
	`Ârötf
(
°dîr
, "Wrong data\n");

79 
íd2
;

81 
	`puªdb_ªad_‰ì
(
foundd©a
);

83 } 
curkey
 < 0xfffffff0);

84 
	`¥ötf
("alsoÅryingÇon-existent data ... ");

85 
	`fÊush
(
°dout
);

87 
curkey
 <<= 1;

88 
curkey
 ^(Ë
	`ønd
();

89 
	`¢¥ötf
(
key
,  key, "%Œu", 
curkey
);

90 i‡(
	`puªdb_föd_s
(&
db
, 
key
, &
ªços
, &
ªéí
) == 0) {

91 
foundd©a
 = 
	`puªdb_ªad
(&
db
, 
ªços
, 
ªéí
);

92 
	`puªdb_ªad_‰ì
(
foundd©a
);

94 
øndomrounds
--;

95 } 
øndomrounds
 > 0U);

96 
∑ss
++;

97 
íd2
:

98 i‡(
	`puªdb_˛o£
(&
db
) != 0) {

99 
	`≥º‹
("The database couldn't beÖroperly closed");

101 
	`u∆ök
("puredb.pdb");

102 i‡(
∑ss
 == 0) {

103 
	`puts
("Failure :(");

106 
	`puts
("Success!");

110 
	}
}

113 
	$maö
()

116 
	}
}

	@src/alt_arc4random.c

37 
	~<c⁄fig.h
>

39 #i‚de‡
__O≥nBSD__


40 
	~"·pd.h
"

41 
	~"ß„_rw.h
"

42 
	~"Æt_¨c4øndom.h
"

44 #i‡
SIZEOF_INT
 < 4

45 #îr‹ 
Unsuµ‹ãd
 
¨chôe˘uª


48 
	sÆt_¨c4_°ªam
 {

49 
	mi
;

50 
	mj
;

51 
	ms
[256];

54 
	grs_öôülized
;

55 
Æt_¨c4_°ªam
 
	grs
;

56 
pid_t
 
	gÆt_¨c4_°ú_pid
;

57 
	gÆt_¨c4_cou¡
;

58 
	gøndom_d©a_sour˚_fd
 = -1;

59 
Æt_¨c4_gëbyã
();

62 
	#_Æt_¨c4_LOCK
(Ëdÿ{ } 0)

	)

63 
	#_Æt_¨c4_UNLOCK
(Ëdÿ{ } 0)

	)

65 #ifde‡
WITH_DMALLOC


66 
	~<dmÆloc.h
>

70 
	$Æt_¨c4_øndom_dev_›í
()

72 c⁄° * c⁄° 
devi˚s
[] = {

73 "/dev/¨™dom", "/dev/uøndom", "/dev/øndom", 
NULL


75 c⁄° * c⁄° *
devi˚
 = 
devi˚s
;

78 i‡(
	`ac˚ss
(*
devi˚
, 
F_OK
 | 
R_OK
) == 0) {

79  
	`›í
(*
devi˚
, 
O_RDONLY
);

81 
devi˚
++;

82 } *
devi˚
 !
NULL
);

85 
	}
}

88 
	$Æt_¨c4_öô
()

90 
n
;

92 
n
 = 0;Ç < 256;Ç++) {

93 
rs
.
s
[
n
] =Ç;

95 
rs
.
i
 = 0;

96 
rs
.
j
 = 0;

98 i‡(
øndom_d©a_sour˚_fd
 != -1) {

101 
øndom_d©a_sour˚_fd
 = 
	`Æt_¨c4_øndom_dev_›í
();

102 
	}
}

105 
	$Æt_¨c4_addøndom
(*
d©
, 
d©Àn
)

107 
n
;

108 
si
;

110 
rs
.
i
--;

111 
n
 = 0;Ç < 256;Ç++) {

112 
rs
.
i
 = (rs.i + 1);

113 
si
 = 
rs
.
s
[rs.
i
];

114 
rs
.
j
 = (rs.j + 
si
 + 
d©
[
n
 % 
d©Àn
]);

115 
rs
.
s
[rs.
i
] =Ñs.s[rs.
j
];

116 
rs
.
s
[rs.
j
] = 
si
;

118 
rs
.
j
 =Ñs.
i
;

119 
	}
}

122 
	$Æt_¨c4_°ú
()

124 
i
;

125 
∫d
[128];

127 i‡(!
rs_öôülized
) {

128 
	`Æt_¨c4_öô
();

129 
rs_öôülized
 = 1;

132 i‡(
øndom_d©a_sour˚_fd
 != -1) {

133 
	`ß„_ªad
(
øndom_d©a_sour˚_fd
, 
∫d
, Ñnd);

135 #ifde‡
HAVE_RANDOM_DEV


136 
	`_exô
(1);

138 
size_t
 
i
 = (size_t) 0U;

139 #ifde‡
HAVE_ARC4RANDOM


140 
u_öt32_t
 
r
;

142 
r
 = 
	`¨c4øndom
();

143 
	`mem˝y
(&
∫d
[
i
], &
r
, (
size_t
) 4U);

144 
i
 +(
size_t
) 4U;

145 } 
i
 < (
∫d
));

146 #ñi‡
	`deföed
(
HAVE_RANDOM
)

147 
r
;

149 
r
 = (Ë
	`øndom
();

150 
∫d
[
i
++] = 
r
 & 0xFF;

151 
∫d
[
i
++] = (
r
 << 8) & 0xFF;

152 } 
i
 < (
∫d
));

154 
r
;

156 
r
 = (Ë
	`ønd
();

157 
∫d
[
i
++] = 
r
;

158 } 
i
 < (
∫d
));

163 
	`Æt_¨c4_addøndom
(
∫d
, (rnd));

169 
i
 = 0; i < 256; i++) {

170 (Ë
	`Æt_¨c4_gëbyã
();

172 
Æt_¨c4_cou¡
 = 1600000;

173 
	}
}

176 
	$Æt_¨c4_°ú_if_√eded
()

178 
pid_t
 
pid
 = 
	`gëpid
();

180 i‡(
Æt_¨c4_cou¡
 <0 || !
rs_öôülized
 || 
Æt_¨c4_°ú_pid
 !
pid
) {

181 
Æt_¨c4_°ú_pid
 = 
pid
;

182 
	`Æt_¨c4_°ú
();

184 
	}
}

187 
	$Æt_¨c4_gëbyã
()

189 
si
, 
sj
;

191 
rs
.
i
 = (rs.i + 1);

192 
si
 = 
rs
.
s
[rs.
i
];

193 
rs
.
j
 = (rs.j + 
si
);

194 
sj
 = 
rs
.
s
[rs.
j
];

195 
rs
.
s
[rs.
i
] = 
sj
;

196 
rs
.
s
[rs.
j
] = 
si
;

198  (
rs
.
s
[(
si
 + 
sj
) & 0xff]);

199 
	}
}

202 
	$Æt_¨c4_gëw‹d
()

204 
vÆ
;

205 
vÆ
 = ((Ë
	`Æt_¨c4_gëbyã
()) << 24;

206 
vÆ
 |((Ë
	`Æt_¨c4_gëbyã
()) << 16;

207 
vÆ
 |((Ë
	`Æt_¨c4_gëbyã
()) << 8;

208 
vÆ
 |((Ë
	`Æt_¨c4_gëbyã
());

210  
vÆ
;

211 
	}
}

214 
	$Æt_¨c4øndom_°ú
()

216 
	`_Æt_¨c4_LOCK
();

217 
	`Æt_¨c4_°ú
();

218 
	`_Æt_¨c4_UNLOCK
();

219 
	}
}

222 
	$Æt_¨c4øndom_˛o£
()

224 
ªt
 = -1;

226 
	`_Æt_¨c4_LOCK
();

227 i‡(
øndom_d©a_sour˚_fd
 !-1 && 
	`˛o£
(random_data_source_fd) == 0) {

228 
øndom_d©a_sour˚_fd
 = -1;

229 
ªt
 = 0;

231 
	`_Æt_¨c4_UNLOCK
();

233  
ªt
;

234 
	}
}

237 
	$Æt_¨c4øndom_addøndom
(*
d©
, 
d©Àn
)

239 
	`_Æt_¨c4_LOCK
();

240 i‡(!
rs_öôülized
) {

241 
	`Æt_¨c4_°ú
();

243 
	`Æt_¨c4_addøndom
(
d©
, 
d©Àn
);

244 
	`_Æt_¨c4_UNLOCK
();

245 
	}
}

248 
	$Æt_¨c4øndom
()

250 
vÆ
;

251 
	`_Æt_¨c4_LOCK
();

252 
Æt_¨c4_cou¡
 -= 4;

253 
	`Æt_¨c4_°ú_if_√eded
();

254 
vÆ
 = 
	`Æt_¨c4_gëw‹d
();

255 
	`_Æt_¨c4_UNLOCK
();

257  (Ë
vÆ
;

258 
	}
}

261 
	$Æt_¨c4øndom_buf
(*
_buf
, 
size_t
 
n
)

263 *
buf
 = (*)
_buf
;

264 
	`_Æt_¨c4_LOCK
();

265 
	`Æt_¨c4_°ú_if_√eded
();

266 
n
--) {

267 i‡(--
Æt_¨c4_cou¡
 <= 0) {

268 
	`Æt_¨c4_°ú
();

270 
buf
[
n
] = 
	`Æt_¨c4_gëbyã
();

272 
	`_Æt_¨c4_UNLOCK
();

273 
	}
}

286 
	$Æt_¨c4øndom_unif‹m
(
uµî_bound
)

288 
r
, 
mö
;

290 i‡(
uµî_bound
 < 2U) {

294 #i‡(
ULONG_MAX
 > 0xffffffffUL)

295 
mö
 = (Ë(0x100000000UL % 
uµî_bound
);

298 i‡(
uµî_bound
 > 0x80000000)

299 
mö
 = 1 + ~
uµî_bound
;

302 
mö
 = ((0xfffffff‡- (
uµî_bound
 * 2)) + 1) % upper_bound;

313 
r
 = 
	`Æt_¨c4øndom
();

314 i‡(
r
 >
mö
) {

319  
r
 % 
uµî_bound
;

320 
	}
}

324 
	~"Æt_¨c4øndom.h
"

327 
	$Æt_¨c4øndom_˛o£
()

330 
	}
}

	@src/alt_arc4random.h

2 #i‚de‡
__ALT_ARC4RANDOM_H__


3 
	#__ALT_ARC4RANDOM_H__
 1

	)

5 
	~<°dlib.h
>

7 #ifde‡
__O≥nBSD__


9 
	#Æt_¨c4øndom
(Ë
	`¨c4øndom
()

	)

10 
	#Æt_¨c4øndom_°ú
(Ë
	`¨c4øndom_°ú
()

	)

11 
	#Æt_¨c4øndom_addøndom
(
A
, 
B
Ë
	`¨c4øndom_addøndom
(A, B)

	)

12 
	#Æt_¨c4øndom_unif‹m
(
A
Ë
	`¨c4øndom_unif‹m
(A)

	)

13 
	#Æt_¨c4øndom_buf
(
A
, 
B
Ë
	`¨c4øndom_buf
(A, B)

	)

17 
Æt_¨c4øndom
();

18 
Æt_¨c4øndom_°ú
();

19 
Æt_¨c4øndom_addøndom
(*, );

20 
Æt_¨c4øndom_unif‹m
();

21 
Æt_¨c4øndom_buf
(*, 
size_t
);

25 
Æt_¨c4øndom_˛o£
();

	@src/altlog.c

6 
	~<c⁄fig.h
>

8 #ifde‡
WITH_ALTLOG


10 
	~"·pd.h
"

11 
	~"·pwho-upd©e.h
"

12 
	~"globÆs.h
"

13 
	~"Æéog.h
"

14 
	~"ß„_rw.h
"

16 #ifde‡
WITH_DMALLOC


17 
	~<dmÆloc.h
>

20 
	$Æéog_wrôe
(c⁄° *
°r
)

22 
Êock
 
lock
;

23 
ssize_t
 
À·
;

25 i‡(
Æéog_fd
 =-1 || 
°r
 =
NULL
 ||

26 (
À·
 = (
ssize_t
Ë
	`°æí
(
°r
)) <= (ssize_t) 0) {

29 
lock
.
l_whí˚
 = 
SEEK_SET
;

30 
lock
.
l_°¨t
 = (
off_t
) 0;

31 
lock
.
l_Àn
 = (
off_t
) 0;

32 
lock
.
l_pid
 = 
	`gëpid
();

33 
lock
.
l_ty≥
 = 
F_WRLCK
;

34 
	`f˙é
(
Æéog_fd
, 
F_SETLKW
, &
lock
Ë< 0 && 
î∫o
 =
EINTR
);

35 i‡(
	`l£ek
(
Æéog_fd
, (
off_t
Ë0, 
SEEK_END
) < (off_t) 0

36 #ifde‡
ESPIPE


37 && 
î∫o
 !
ESPIPE


42 (Ë
	`ß„_wrôe
(
Æéog_fd
, 
°r
, (
size_t
Ë
À·
, -1);

43 
lock
.
l_ty≥
 = 
F_UNLCK
;

44 
	`f˙é
(
Æéog_fd
, 
F_SETLK
, &
lock
Ë< 0 && 
î∫o
 =
EINTR
);

47 
	}
}

51 
	$Æéog_wrôex„r_°©s
(c⁄° 
u∂ﬂd
,

52 c⁄° * c⁄° 
fûíame
,

53 c⁄° 
off_t
 
size
,

54 c⁄° 
duøti⁄
)

60 c⁄° *
ho°_
 = *
ho°
 != 0 ? host : "-";

61 c⁄° *
accou¡_
 = *
accou¡
 != 0 ?áccount : "-";

62 *
Æloˇ_löe
;

63 
size_t
 
löe_size
;

65 
löe_size
 = 16U + 1U + 16U + 1U +

66 16U + 1U + 
	`°æí
(
accou¡_
Ë+ 1U + såÀn(
ho°_
) + 1U +

68 
	`°æí
(
fûíame
) + 1U + 1U;

69 i‡((
Æloˇ_löe
 = 
	`ALLOCA
(
löe_size
)Ë=
NULL
) {

72 i‡(!
	`SNCHECK
(
	`¢¥ötf
(
Æloˇ_löe
, 
löe_size
,

74 (Ë
	`time
(
NULL
),

75 (Ë
£ssi⁄_°¨t_time
,

76 (Ë
	`gëpid
(),

77 
accou¡_
, 
ho°_
,

78 
u∂ﬂd
 != 0 ? 'U' : 'D',

79 (Ë
size
,

80 (Ë(
duøti⁄
 + 0.5),

81 
fûíame
), 
löe_size
)) {

82 
	`Æéog_wrôe
(
Æloˇ_löe
);

85 
	`ALLOCA_FREE
(
Æloˇ_löe
);

88 
	}
}

90 
	#NO_URLENCODE
(
c
) ( \

91 ((
c
) >= 'a' && (c) <= 'z') || \

92 ((
c
) >= 'A' && (c) <= 'Z') || \

93 ((
c
) >= '0' && (c) <= '9') || \

94 (
c
) == '.' || (c) == '/' || \

95 (
c
) == '_' || (c) == '-' \

96 )

	)

97 
	#HEXD
(
c
Ë((cË< 10 ? '0' + (cË: 'A' - 10 + (c))

	)

99 *
	$uæícode
(c⁄° *
fûíame
)

101 c⁄° *
±r
 = 
fûíame
;

102 *
quŸed_fûíame
;

103 *
quŸed_fûíame_±r
;

104 
size_t
 
quŸed_fûíame_size
 = (size_t) 1U;

105 
√ed_quŸe
 = 0;

106 
c
;

108 *
±r
 != 0) {

109 i‡(
	`NO_URLENCODE
(*
±r
)) {

110 
quŸed_fûíame_size
++;

112 
quŸed_fûíame_size
 +(
size_t
) 3U;

113 
√ed_quŸe
 = 1;

115 
±r
++;

117 i‡(
√ed_quŸe
 == 0) {

118  (*Ë
fûíame
;

120 i‡((
quŸed_fûíame
 = 
	`mÆloc
(
quŸed_fûíame_size
)Ë=
NULL
) {

121  
NULL
;

123 
quŸed_fûíame_±r
 = 
quŸed_fûíame
;

124 
±r
 = 
fûíame
;

125 
c
 = *
±r
;

127 i‡(
	`NO_URLENCODE
(
c
)) {

128 i‡(
quŸed_fûíame_size
 <(
size_t
) 1U) {

129  
NULL
;

131 
quŸed_fûíame_size
--;

132 *
quŸed_fûíame_±r
++ = 
c
;

134 i‡(
quŸed_fûíame_size
 <(
size_t
) 3U) {

135  
NULL
;

137 
quŸed_fûíame_size
 -(
size_t
) 3U;

138 *
quŸed_fûíame_±r
++ = '%';

139 *
quŸed_fûíame_±r
++ = 
	`HEXD
(((Ë
c
) >> 4);

140 *
quŸed_fûíame_±r
++ = 
	`HEXD
(((Ë
c
) & 0xf);

142 
±r
++;

143 } (
c
 = *
±r
) != 0);

144 *
quŸed_fûíame_±r
 = 0;

146  
quŸed_fûíame
;

147 
	}
}

151 
	$Æéog_wrôex„r_˛f
(c⁄° 
u∂ﬂd
,

152 c⁄° * c⁄° 
fûíame
,

153 c⁄° 
off_t
 
size
)

155 
d©e
[ "13/Apr/1975:12:34:56 +0100"];

156 
tm
 *tm;

157 *
Æloˇ_löe
;

158 c⁄° *
ho°_
 = *
ho°
 != 0 ? host : "-";

159 c⁄° *
accou¡_
 = *
accou¡
 != 0 ?áccount : "-";

160 *
quŸed_fûíame
;

161 
time_t
 
now
;

162 
diff
;

163 
sign
;

164 
size_t
 
löe_size
;

166 i‡((
now
 = 
	`time
(
NULL
)Ë=(
time_t
) -1 ||

167 (
tm
 = 
	`loˇ…ime
(&
now
)Ë=
NULL
 ||

168 
tm
->
tm_m⁄
 > 11 ||Åm->tm_mon < 0) {

171 #ifde‡
HAVE_STRUCT_TM_TM_GMTOFF


172 
diff
 = -(
tm
->
tm_gmtoff
) / 60L;

173 #ñi‡
	`deföed
(
HAVE_SCALAR_TIMEZONE
)

174 
diff
 = -(
timez⁄e
) / 60L;

177 
tm
 
gmt
;

178 
tm
 *
t
;

179 
days
, 
hours
, 
möuãs
;

181 
gmt
 = *
	`gmtime
(&
now
);

182 
t
 = 
	`loˇ…ime
(&
now
);

183 
days
 = 
t
->
tm_yday
 - 
gmt
.tm_yday;

184 
hours
 = ((
days
 < -1 ? 24 : 1 < days ? -24 : days * 24)

185 + 
t
->
tm_hour
 - 
gmt
.tm_hour);

186 
möuãs
 = 
hours
 * 60 + 
t
->
tm_mö
 - 
gmt
.tm_min;

187 
diff
 = -
möuãs
;

190 i‡(
diff
 > 0L) {

191 
sign
 = '+';

193 
sign
 = '-';

194 
diff
 = -diff;

197 i‡(
	`SNCHECK
(
	`¢¥ötf
(
d©e
,  date,

199 
tm
->
tm_mday
, 
m⁄ths
[tm->
tm_m⁄
],Åm->
tm_yór
 + 1900,

200 
tm
->
tm_hour
,Åm->
tm_mö
,Åm->
tm_£c
,

201 
sign
, 
diff
 / 60L, dif‡% 60L),  
d©e
)) {

204 i‡((
quŸed_fûíame
 = 
	`uæícode
(
fûíame
)Ë=
NULL
) {

207 
löe_size
 = 
	`°æí
(
ho°_
Ë+ ( " - " - 1UË+ såÀn(
accou¡_
) +

208 ( " [" - 1UË+ ( 
d©e
 - 1U) + ( "] \"" - 1U) +

209 3U + ( " " - 1UË+ 
	`°æí
(
quŸed_fûíame
) +

211 i‡((
Æloˇ_löe
 = 
	`ALLOCA
(
löe_size
)Ë=
NULL
) {

214 i‡(!
	`SNCHECK
(
	`¢¥ötf
(
Æloˇ_löe
, 
löe_size
,

216 
ho°_
, 
accou¡_
, 
d©e
,

217 
u∂ﬂd
 =0 ? "GET" : "PUT", 
quŸed_fûíame
,

218 (Ë
size
), 
löe_size
)) {

219 
	`Æéog_wrôe
(
Æloˇ_löe
);

221 i‡(
quŸed_fûíame
 !
fûíame
) {

222 
	`‰ì
(
quŸed_fûíame
);

224 
	`ALLOCA_FREE
(
Æloˇ_löe
);

227 
	}
}

231 
	$Æéog_wrôex„r_x„æog
(c⁄° 
u∂ﬂd
,

232 c⁄° * c⁄° 
fûíame
,

233 c⁄° 
off_t
 
size
,

234 c⁄° 
duøti⁄
)

236 
d©e
[ "Mon Apr 13 12:34:56 1975"];

237 
tm
 *tm;

238 *
Æloˇ_löe
;

239 c⁄° *
ho°_
 = *
ho°
 != 0 ? host : "-";

240 c⁄° *
accou¡_
 = *
accou¡
 != 0 ?áccount : "-";

241 *
quŸed_fûíame
;

242 
size_t
 
fûíame_idx
;

243 
time_t
 
now
;

244 
size_t
 
löe_size
;

245 
size_t
 
fûíame_size
;

246 
c
;

248 i‡((
now
 = 
	`time
(
NULL
)Ë=(
time_t
) -1 ||

249 (
tm
 = 
	`loˇ…ime
(&
now
)Ë=
NULL
 ||

250 
tm
->
tm_m⁄
 > 11 ||Åm->tm_mon < 0 ||

251 
tm
->
tm_wday
 > 6 ||Åm->tm_wday < 0) {

254 i‡(
	`SNCHECK
(
	`¢¥ötf
(
d©e
,  date,

256 
wìk_days
[
tm
->
tm_wday
], 
m⁄ths
[tm->
tm_m⁄
],

257 
tm
->
tm_mday
,Åm->
tm_hour
,Åm->
tm_mö
,Åm->
tm_£c
,

258 
tm
->
tm_yór
 + 1900),  
d©e
)) {

261 i‡((
fûíame_idx
 = 
	`°æí
(
fûíame
)Ë<(
size_t
) 0U) {

264 
fûíame_size
 = 
fûíame_idx
 + (
size_t
) 1U;

265 i‡((
quŸed_fûíame
 = 
	`ALLOCA
(
fûíame_size
)Ë=
NULL
) {

269 
quŸed_fûíame
[
fûíame_idx
] = 0;

271 
fûíame_idx
--;

272 
c
 = 
fûíame
[
fûíame_idx
];

273 i‡(
	`is•a˚
((Ë
c
Ë|| 
	`ISCTRLCODE
(c)) {

274 
c
 = '_';

276 
quŸed_fûíame
[
fûíame_idx
] = 
c
;

277 } 
fûíame_idx
 > (
size_t
) 0U);

279 
löe_size
 = ( 
d©e
 - 1U) + ( " " - 1U) +

280 (
size_t
) 16U + ( " " - 1U) +

281 
	`°æí
(
ho°_
) + ( " " - 1U) +

282 (
size_t
) 20U + ( " " - 1U) +

283 (
fûíame_size
 - 1U) + ( " " - 1U) +

284 (
size_t
) 1U + ( " _ " - 1U) +

285 (
size_t
) 1U + ( " " - 1U) +

286 (
size_t
) 1U + ( " " - 1U) +

287 
	`°æí
(
accou¡_
Ë+ ( " fç 1 * c\n" - 1UË+ (
size_t
) 1U;

288 i‡((
Æloˇ_löe
 = 
	`ALLOCA
(
löe_size
)Ë=
NULL
) {

289 
	`ALLOCA_FREE
(
quŸed_fûíame
);

292 i‡(!
	`SNCHECK
(
	`¢¥ötf
(
Æloˇ_löe
, 
löe_size
,

294 
d©e
, (Ë(
duøti⁄
 + 0.5),

295 
ho°_
, (Ë
size
,

296 
quŸed_fûíame
,

297 
ty≥
 == 1 ? 'a' : 'b',

298 
u∂ﬂd
 != 0 ? 'i' : 'o',

299 
loggedö
 != 0 ? 'r' : 'a',

300 
accou¡_
), 
löe_size
)) {

301 
	`Æéog_wrôe
(
Æloˇ_löe
);

303 
	`ALLOCA_FREE
(
quŸed_fûíame
);

304 
	`ALLOCA_FREE
(
Æloˇ_löe
);

307 
	}
}

309 
	$Æéog_wrôex„r_w3c
(c⁄° 
u∂ﬂd
,

310 c⁄° * c⁄° 
fûíame
,

311 c⁄° 
off_t
 
size
,

312 c⁄° 
duøti⁄
)

319 
tm
 *tm;

320 
tm
 
gmt
;

321 c⁄° *
ho°_
 = *
ho°
 != 0 ? host : "-";

322 c⁄° *
accou¡_
 = *
accou¡
 != 0 ?áccount : "-";

323 *
Æloˇ_löe
;

324 *
quŸed_fûíame
;

325 
time_t
 
now
;

326 
size_t
 
löe_size
;

328 (Ë
duøti⁄
;

329 i‡((
now
 = 
	`time
(
NULL
)Ë=(
time_t
) -1 ||

330 (
tm
 = 
	`loˇ…ime
(&
now
)Ë=
NULL
 ||

331 
tm
->
tm_m⁄
 > 11 ||Åm->tm_mon < 0) {

334 
gmt
 = *
	`gmtime
(&
now
);

335 i‡((
quŸed_fûíame
 = 
	`uæícode
(
fûíame
)Ë=
NULL
) {

338 
löe_size
 = ( "13-04-1975 12:34:56 " - 1U) +

339 
	`°æí
(
ho°_
) + 1U + ( "[]created" - 1U) + 1U +

340 
	`°æí
(
quŸed_fûíame
) + 1U + ( "226" - 1U) +

341 
	`°æí
(
accou¡_
) + 1U + 42U + 1U + 1U;

343 i‡((
Æloˇ_löe
 = 
	`ALLOCA
(
löe_size
)Ë=
NULL
) {

346 i‡(!
	`SNCHECK
(
	`¢¥ötf
(
Æloˇ_löe
, 
löe_size
,

348 
gmt
.
tm_yór
 + 1900, gmt.
tm_m⁄
 + 1, gmt.
tm_mday
,

349 
gmt
.
tm_hour
, gmt.
tm_mö
, gmt.
tm_£c
,

350 
ho°_
, (
u∂ﬂd
 != 0 ? "created" : "sent"),

351 
quŸed_fûíame
,

352 
accou¡
, (Ë
size
), 
löe_size
)) {

353 
	`Æéog_wrôe
(
Æloˇ_löe
);

355 i‡(
quŸed_fûíame
 !
fûíame
) {

356 
	`‰ì
(
quŸed_fûíame
);

358 
	`ALLOCA_FREE
(
Æloˇ_löe
);

361 
	}
}

363 
	$Æéog_wrôe_w3c_hódî
()

365 
time_t
 
now
;

366 
tm
 *tm;

367 
tm
 
gmt
;

368 *
Æloˇ_löe
;

369 
size_t
 
löe_size
;

371 i‡((
now
 = 
	`time
(
NULL
)Ë=(
time_t
) -1 ||

372 (
tm
 = 
	`loˇ…ime
(&
now
)Ë=
NULL
 ||

373 
tm
->
tm_m⁄
 > 11 ||Åm->tm_mon < 0) {

376 
gmt
 = *
	`gmtime
(&
now
);

377 
löe_size
 =  "#Date: 001975-04-13 12:34:56\n";

378 i‡((
Æloˇ_löe
 = 
	`ALLOCA
(
löe_size
)Ë=
NULL
) {

382 
	`Æéog_wrôe
("#So·w¨e: Puª-FTPd " 
VERSION
 "\n");

383 
	`Æéog_wrôe
("#Version: 1.0\n");

385 i‡(!
	`SNCHECK
(
	`¢¥ötf
(
Æloˇ_löe
, 
löe_size
,

387 
gmt
.
tm_yór
 + 1900, gmt.
tm_m⁄
 + 1, gmt.
tm_mday
,

388 
gmt
.
tm_hour
, gmt.
tm_mö
, gmt.
tm_£c
),

389 
löe_size
)) {

390 
	`Æéog_wrôe
(
Æloˇ_löe
);

393 
	`Æéog_wrôe
("#Fields: dateÅime c-ip cs-method cs-uri-stem sc-status cs-username sc-bytes\n");

395 
	`ALLOCA_FREE
(
Æloˇ_löe
);

398 
	}
}

407 
	$Æéog_wrôex„r
(c⁄° 
u∂ﬂd
,

408 c⁄° * c⁄° 
fûíame
,

409 c⁄° 
off_t
 
size
,

410 c⁄° 
duøti⁄
)

412 
Æéog_f‹m©
) {

413 
ALTLOG_NONE
:

415 
ALTLOG_CLF
:

416  
	`Æéog_wrôex„r_˛f
(
u∂ﬂd
, 
fûíame
, 
size
);

417 
ALTLOG_STATS
:

418  
	`Æéog_wrôex„r_°©s
(
u∂ﬂd
, 
fûíame
, 
size
, 
duøti⁄
);

419 
ALTLOG_W3C
:

420  
	`Æéog_wrôex„r_w3c
(
u∂ﬂd
, 
fûíame
, 
size
, 
duøti⁄
);

421 
ALTLOG_XFERLOG
:

422  
	`Æéog_wrôex„r_x„æog
(
u∂ﬂd
, 
fûíame
, 
size
, 
duøti⁄
);

425 
	}
}

	@src/altlog.h

1 #i‚de‡
__ALTLOG_H__


2 
	#__ALTLOG_H__
 1

	)

3 #ifde‡
WITH_ALTLOG


5 
Æéog_wrôex„r
(c⁄° 
u∂ﬂd
,

6 c⁄° * c⁄° 
fûíame
,

7 c⁄° 
off_t
 
size
,

8 c⁄° 
duøti⁄
);

10 
Æéog_wrôe_w3c_hódî
();

	@src/bonjour.c

1 
	~<c⁄fig.h
>

3 #ifde‡
WITH_BONJOUR


4 
	~"·pd.h
"

5 
	~"b⁄jour.h
"

6 
	~<dns_sd.h
>

7 #ifde‡
WITH_DMALLOC


8 
	~<dmÆloc.h
>

11 
DNSSîvi˚Ref
 
	g£rvi˚_ªf
;

13 
	$ªg_ª∂y
(
DNSSîvi˚Ref
 
sdRef
, 
DNSSîvi˚Fœgs
 
Êags
,

14 
DNSSîvi˚Eº‹Ty≥
 
îr‹Code
,

15 c⁄° *
«me
,

16 c⁄° *
ªgty≥
,

17 c⁄° *
domaö
,

18 *
c⁄ãxt
)

20 (Ë
sdRef
;

21 (Ë
Êags
;

22 (Ë
îr‹Code
;

23 (Ë
«me
;

24 (Ë
ªgty≥
;

25 (Ë
domaö
;

26 (Ë
c⁄ãxt
;

27 
	}
}

29 
	$d‹egi°øti⁄
(c⁄° *
«me
, 
p‹t
)

31 
	`DNSSîvi˚Regi°î
(&
£rvi˚_ªf
, 0, 0, 
«me
, "_·p._t˝.", 
NULL
, NULL,

32 
p‹t
, 0, 
NULL
,

33 
ªg_ª∂y
,

34 
NULL
);

35 
	}
}

37 #ifde‡
__APPLE_CC__


38 
	$ª‰eshM™agî
()

40 
CFSåögRef
 
ob£rvedObje˘
 = 
	`CFSTR
("org.pureftpd.osx");

41 
CFNŸifiˇti⁄CíãrRef
 
˚¡î
 =

42 
	`CFNŸifiˇti⁄CíãrGëDi°ribuãdCíãr
();

43 
	`CFNŸifiˇti⁄CíãrPo°NŸifiˇti⁄
(
˚¡î
,

44 
	`CFSTR
("refreshStatus"),

45 
ob£rvedObje˘
,

46 
NULL
 ,

47 
TRUE
);

48 
	}
}

50 
	$ª‰eshM™agî
()

53 
	}
}

57 sig√d 
v6ªady
;

	@src/bonjour.h

1 #i‚de‡
__BONJOUR_H__


2 
	#__BONJOUR_H__
 1

	)

4 #ifde‡
WITH_BONJOUR


6 #ifde‡
__APPLE_CC__


7 
	~<C‹eFound©i⁄/C‹eFound©i⁄.h
>

10 
d‹egi°øti⁄
(c⁄° * 
«me
, 
p‹t
);

11 
ª‰eshM™agî
();

	@src/bsd-getopt_long.c

45 
	#IN_GETOPT_LONG_C
 1

	)

47 
	~<c⁄fig.h
>

48 
	~"·pd.h
"

50 #i‚de‡
HAVE_GETOPT_LONG


52 
	~"bsd-gë›t_l⁄g.h
"

54 #ifde‡
WITH_DMALLOC


55 
	~<dmÆloc.h
>

58 
	gpuª_›ãº
 = 1;

59 
	gpuª_›töd
 = 1;

60 
	gpuª_›t›t
 = '?';

61 
	gpuª_›åe£t
;

62 c⁄° *
	gpuª_›èrg
;

64 
	#PRINT_ERROR
 ((
puª_›ãº
Ë&& (*
›ti⁄s
 !':'))

	)

66 
	#FLAG_PERMUTE
 0x01

	)

67 
	#FLAG_ALLARGS
 0x02

	)

68 
	#FLAG_LONGONLY
 0x04

	)

71 
	#BADCH
 ()'?'

	)

72 
	#BADARG
 ((*
›ti⁄s
 =':'Ë? ()':' : ()'?')

	)

73 
	#INORDER
 ()1

	)

75 
	#EMSG
 ""

	)

77 
puª_gë›t_öã∫Æ
(, * const *, const *,

78 c⁄° 
puª_›ti⁄
 *, *, );

79 
puª_∑r£_l⁄g_›ti⁄s
(* const *, const *,

80 c⁄° 
puª_›ti⁄
 *, *, );

81 
puª_gcd
(, );

82 
puª_≥rmuã_¨gs
(, , , * const *);

84 c⁄° *
	gpuª_∂a˚
 = 
EMSG
;

87 
	gn⁄›t_°¨t
 = -1;

88 
	gn⁄›t_íd
 = -1;

91 c⁄° *
	gªˇrgch¨
 = "optionÑequiresánárgument -- %c\n";

92 c⁄° *
	gªˇrg°rög
 = "optionÑequiresánárgument -- %s\n";

93 c⁄° *
	gambig
 = "ambiguous option -- %.*s\n";

94 c⁄° *
	gnﬂrg
 = "option doesn'tÅakeánárgument -- %.*s\n";

95 c⁄° *
	gûl›tch¨
 = "unknown option -- %c\n";

96 c⁄° *
	gûl›t°rög
 = "unknown option -- %s\n";

101 
	$puª_gcd
(
a
, 
b
)

103 
c
;

105 
c
 = 
a
 % 
b
;

106 
c
 != 0) {

107 
a
 = 
b
;

108 
b
 = 
c
;

109 
c
 = 
a
 % 
b
;

111  
b
;

112 
	}
}

119 
	$puª_≥rmuã_¨gs
(
∑n⁄›t_°¨t
, 
∑n⁄›t_íd
,

120 
›t_íd
, * c⁄° *
«rgv
)

122 
c°¨t
, 
cy˛ñí
, 
i
, 
j
, 
ncy˛e
, 
¬⁄›ts
, 
n›ts
, 
pos
;

123 *
sw≠
;

128 
¬⁄›ts
 = 
∑n⁄›t_íd
 - 
∑n⁄›t_°¨t
;

129 
n›ts
 = 
›t_íd
 - 
∑n⁄›t_íd
;

130 
ncy˛e
 = 
	`puª_gcd
(
¬⁄›ts
, 
n›ts
);

131 
cy˛ñí
 = (
›t_íd
 - 
∑n⁄›t_°¨t
Ë/ 
ncy˛e
;

133 
i
 = 0; i < 
ncy˛e
; i++) {

134 
c°¨t
 = 
∑n⁄›t_íd
+
i
;

135 
pos
 = 
c°¨t
;

136 
j
 = 0; j < 
cy˛ñí
; j++) {

137 i‡(
pos
 >
∑n⁄›t_íd
)

138 
pos
 -
¬⁄›ts
;

140 
pos
 +
n›ts
;

141 
sw≠
 = 
«rgv
[
pos
];

143 ((**Ë
«rgv
)[
pos
] =Ç¨gv[
c°¨t
];

145 ((**)
«rgv
)[
c°¨t
] = 
sw≠
;

148 
	}
}

155 
	$puª_∑r£_l⁄g_›ti⁄s
(* c⁄° *
«rgv
, c⁄° *
›ti⁄s
,

156 c⁄° 
puª_›ti⁄
 *
l⁄g_›ti⁄s
,

157 *
idx
, 
sh‹t_too
)

159 c⁄° *
cuºít_¨gv
, *
has_equÆ
;

160 
size_t
 
cuºít_¨gv_Àn
;

161 
i
, 
m©ch
;

163 
cuºít_¨gv
 = 
puª_∂a˚
;

164 
m©ch
 = -1;

166 
puª_›töd
++;

168 i‡((
has_equÆ
 = 
	`°rchr
(
cuºít_¨gv
, '=')Ë!
NULL
) {

170 
cuºít_¨gv_Àn
 = 
has_equÆ
 - 
cuºít_¨gv
;

171 
has_equÆ
++;

173 
cuºít_¨gv_Àn
 = 
	`°æí
(
cuºít_¨gv
);

175 
i
 = 0; 
l⁄g_›ti⁄s
[i].
«me
; i++) {

177 i‡(
	`°∫cmp
(
cuºít_¨gv
, 
l⁄g_›ti⁄s
[
i
].
«me
,

178 
cuºít_¨gv_Àn
))

181 i‡(
	`°æí
(
l⁄g_›ti⁄s
[
i
].
«me
Ë=
cuºít_¨gv_Àn
) {

183 
m©ch
 = 
i
;

190 i‡(
sh‹t_too
 && 
cuºít_¨gv_Àn
 == 1)

193 i‡(
m©ch
 == -1)

194 
m©ch
 = 
i
;

197 i‡(
PRINT_ERROR
)

198 
	`Ârötf
(
°dîr
, 
ambig
, ()
cuºít_¨gv_Àn
,

199 
cuºít_¨gv
);

200 
puª_›t›t
 = 0;

201  
BADCH
;

204 i‡(
m©ch
 != -1) {

205 i‡(
l⁄g_›ti⁄s
[
m©ch
].
has_¨g
 =
no_¨gumít


206 && 
has_equÆ
) {

207 i‡(
PRINT_ERROR
)

208 
	`Ârötf
(
°dîr
, 
nﬂrg
, ()
cuºít_¨gv_Àn
,

209 
cuºít_¨gv
);

213 i‡(
l⁄g_›ti⁄s
[
m©ch
].
Êag
 =
NULL
)

214 
puª_›t›t
 = 
l⁄g_›ti⁄s
[
m©ch
].
vÆ
;

216 
puª_›t›t
 = 0;

217  
BADARG
;

219 i‡(
l⁄g_›ti⁄s
[
m©ch
].
has_¨g
 =
ªquúed_¨gumít
 ||

220 
l⁄g_›ti⁄s
[
m©ch
].
has_¨g
 =
›ti⁄Æ_¨gumít
) {

221 i‡(
has_equÆ
)

222 
puª_›èrg
 = 
has_equÆ
;

223 i‡(
l⁄g_›ti⁄s
[
m©ch
].
has_¨g
 ==

224 
ªquúed_¨gumít
) {

228 
puª_›èrg
 = 
«rgv
[
puª_›töd
++];

231 i‡((
l⁄g_›ti⁄s
[
m©ch
].
has_¨g
 =
ªquúed_¨gumít
)

232 && (
puª_›èrg
 =
NULL
)) {

237 i‡(
PRINT_ERROR
)

238 
	`Ârötf
(
°dîr
, 
ªˇrg°rög
,

239 
cuºít_¨gv
);

243 i‡(
l⁄g_›ti⁄s
[
m©ch
].
Êag
 =
NULL
)

244 
puª_›t›t
 = 
l⁄g_›ti⁄s
[
m©ch
].
vÆ
;

246 
puª_›t›t
 = 0;

247 --
puª_›töd
;

248  
BADARG
;

251 i‡(
sh‹t_too
) {

252 --
puª_›töd
;

255 i‡(
PRINT_ERROR
)

256 
	`Ârötf
(
°dîr
, 
ûl›t°rög
, 
cuºít_¨gv
);

257 
puª_›t›t
 = 0;

258  
BADCH
;

260 i‡(
idx
)

261 *
idx
 = 
m©ch
;

262 i‡(
l⁄g_›ti⁄s
[
m©ch
].
Êag
) {

263 *
l⁄g_›ti⁄s
[
m©ch
].
Êag
 =Ü⁄g_›ti⁄s[m©ch].
vÆ
;

266  
l⁄g_›ti⁄s
[
m©ch
].
vÆ
;

267 
	}
}

273 
	$puª_gë›t_öã∫Æ
(
«rgc
, * c⁄° *
«rgv
,

274 c⁄° *
›ti⁄s
,

275 c⁄° 
puª_›ti⁄
 *
l⁄g_›ti⁄s
,

276 *
idx
, 
Êags
)

278 *
ﬁi
;

279 
›tch¨
, 
sh‹t_too
;

280 
posixly_c‹ª˘
 = -1;

282 i‡(
›ti⁄s
 =
NULL
)

289 i‡(
puª_›töd
 == 0)

290 
puª_›töd
 = 
puª_›åe£t
 = 1;

296 i‡(
posixly_c‹ª˘
 =-1 || 
puª_›åe£t
)

297 
posixly_c‹ª˘
 = (
	`gëív
("POSIXLY_CORRECT"Ë!
NULL
);

298 i‡(*
›ti⁄s
 == '-')

299 
Êags
 |
FLAG_ALLARGS
;

300 i‡(
posixly_c‹ª˘
 || *
›ti⁄s
 == '+')

301 
Êags
 &~
FLAG_PERMUTE
;

302 i‡(*
›ti⁄s
 == '+' || *options == '-')

303 
›ti⁄s
++;

305 
puª_›èrg
 = 
NULL
;

306 i‡(
puª_›åe£t
)

307 
n⁄›t_°¨t
 = 
n⁄›t_íd
 = -1;

308 
°¨t
:

309 i‡(
puª_›åe£t
 || !*
puª_∂a˚
) {

310 
puª_›åe£t
 = 0;

311 i‡(
puª_›töd
 >
«rgc
) {

312 
puª_∂a˚
 = 
EMSG
;

313 i‡(
n⁄›t_íd
 != -1) {

315 
	`puª_≥rmuã_¨gs
(
n⁄›t_°¨t
, 
n⁄›t_íd
,

316 
puª_›töd
, 
«rgv
);

317 
puª_›töd
 -
n⁄›t_íd
 - 
n⁄›t_°¨t
;

319 i‡(
n⁄›t_°¨t
 != -1) {

324 
puª_›töd
 = 
n⁄›t_°¨t
;

326 
n⁄›t_°¨t
 = 
n⁄›t_íd
 = -1;

329 i‡(*(
puª_∂a˚
 = 
«rgv
[
puª_›töd
]) != '-' ||

330 (
puª_∂a˚
[1] ='\0' && 
	`°rchr
(
›ti⁄s
, '-'Ë=
NULL
)) {

331 
puª_∂a˚
 = 
EMSG
;

332 i‡(
Êags
 & 
FLAG_ALLARGS
) {

337 
puª_›èrg
 = 
«rgv
[
puª_›töd
++];

338  
INORDER
;

340 i‡(!(
Êags
 & 
FLAG_PERMUTE
)) {

348 i‡(
n⁄›t_°¨t
 == -1)

349 
n⁄›t_°¨t
 = 
puª_›töd
;

350 i‡(
n⁄›t_íd
 != -1) {

351 
	`puª_≥rmuã_¨gs
(
n⁄›t_°¨t
, 
n⁄›t_íd
,

352 
puª_›töd
, 
«rgv
);

353 
n⁄›t_°¨t
 = 
puª_›töd
 -

354 (
n⁄›t_íd
 - 
n⁄›t_°¨t
);

355 
n⁄›t_íd
 = -1;

357 
puª_›töd
++;

359 
°¨t
;

361 i‡(
n⁄›t_°¨t
 !-1 && 
n⁄›t_íd
 == -1)

362 
n⁄›t_íd
 = 
puª_›töd
;

369 i‡(
puª_∂a˚
[1] != '\0' && *++pure_place == '-' &&

370 (
puª_∂a˚
[1] ='\0' || 
l⁄g_›ti⁄s
 =
NULL
)) {

371 
puª_›töd
++;

372 
puª_∂a˚
 = 
EMSG
;

377 i‡(
n⁄›t_íd
 != -1) {

378 
	`puª_≥rmuã_¨gs
(
n⁄›t_°¨t
, 
n⁄›t_íd
,

379 
puª_›töd
, 
«rgv
);

380 
puª_›töd
 -
n⁄›t_íd
 - 
n⁄›t_°¨t
;

382 
n⁄›t_°¨t
 = 
n⁄›t_íd
 = -1;

393 i‡(
l⁄g_›ti⁄s
 !
NULL
 && 
puª_∂a˚
 !
«rgv
[
puª_›töd
] &&

394 (*
puª_∂a˚
 ='-' || (
Êags
 & 
FLAG_LONGONLY
))) {

395 
sh‹t_too
 = 0;

396 i‡(*
puª_∂a˚
 == '-')

397 
puª_∂a˚
++;

398 i‡(*
puª_∂a˚
 !':' && 
	`°rchr
(
›ti⁄s
, *puª_∂a˚Ë!
NULL
)

399 
sh‹t_too
 = 1;

401 
›tch¨
 = 
	`puª_∑r£_l⁄g_›ti⁄s
(
«rgv
, 
›ti⁄s
, 
l⁄g_›ti⁄s
,

402 
idx
, 
sh‹t_too
);

403 i‡(
›tch¨
 != -1) {

404 
puª_∂a˚
 = 
EMSG
;

405  
›tch¨
;

409 i‡((
›tch¨
 = (Ë*
puª_∂a˚
++) == ':' ||

410 (
›tch¨
 ='-' && *
puª_∂a˚
) != '\0' ||

411 (
ﬁi
 = 
	`°rchr
(
›ti⁄s
, 
›tch¨
)Ë=
NULL
) {

416 i‡(
›tch¨
 == '-')

419 i‡(!*
puª_∂a˚
)

420 ++
puª_›töd
;

421 i‡(
PRINT_ERROR
)

422 
	`Ârötf
(
°dîr
, 
ûl›tch¨
, 
›tch¨
);

423 
puª_›t›t
 = 
›tch¨
;

424  
BADCH
;

426 i‡(
l⁄g_›ti⁄s
 !
NULL
 && 
›tch¨
 ='W' && 
ﬁi
[1] == ';') {

428 i‡(*
puª_∂a˚
)

430 i‡(++
puª_›töd
 >
«rgc
) {

431 
puª_∂a˚
 = 
EMSG
;

432 i‡(
PRINT_ERROR
)

433 
	`Ârötf
(
°dîr
, 
ªˇrgch¨
, 
›tch¨
);

434 
puª_›t›t
 = 
›tch¨
;

435  
BADARG
;

437 
puª_∂a˚
 = 
«rgv
[
puª_›töd
];

438 
›tch¨
 = 
	`puª_∑r£_l⁄g_›ti⁄s
(
«rgv
, 
›ti⁄s
, 
l⁄g_›ti⁄s
,

439 
idx
, 0);

440 
puª_∂a˚
 = 
EMSG
;

441  
›tch¨
;

443 i‡(*++
ﬁi
 != ':') {

444 i‡(!*
puª_∂a˚
) {

445 ++
puª_›töd
;

448 
puª_›èrg
 = 
NULL
;

449 i‡(*
puª_∂a˚
) {

450 
puª_›èrg
 = 
puª_∂a˚
;

451 } i‡(
ﬁi
[1] != ':') {

452 i‡(++
puª_›töd
 >
«rgc
) {

453 
puª_∂a˚
 = 
EMSG
;

454 i‡(
PRINT_ERROR
)

455 
	`Ârötf
(
°dîr
, 
ªˇrgch¨
, 
›tch¨
);

456 
puª_›t›t
 = 
›tch¨
;

457  
BADARG
;

459 
puª_›èrg
 = 
«rgv
[
puª_›töd
];

462 
puª_∂a˚
 = 
EMSG
;

463 ++
puª_›töd
;

466  
›tch¨
;

467 
	}
}

473 
	$puª_gë›t
(
«rgc
, * c⁄° *
«rgv
, c⁄° *
›ti⁄s
)

484  
	`puª_gë›t_öã∫Æ
(
«rgc
, 
«rgv
, 
›ti⁄s
, 
NULL
, NULL, 0);

485 
	}
}

491 
	$puª_gë›t_l⁄g
(
«rgc
, * c⁄° *
«rgv
, c⁄° *
›ti⁄s
,

492 c⁄° 
puª_›ti⁄
 *
l⁄g_›ti⁄s
, *
idx
)

494  
	`puª_gë›t_öã∫Æ
(
«rgc
, 
«rgv
, 
›ti⁄s
, 
l⁄g_›ti⁄s
, 
idx
,

495 
FLAG_PERMUTE
);

496 
	}
}

502 
	$puª_gë›t_l⁄g_⁄ly
(
«rgc
, * c⁄° *
«rgv
,

503 c⁄° *
›ti⁄s
,

504 c⁄° 
puª_›ti⁄
 *
l⁄g_›ti⁄s
,

505 *
idx
)

507  
	`puª_gë›t_öã∫Æ
(
«rgc
, 
«rgv
, 
›ti⁄s
, 
l⁄g_›ti⁄s
, 
idx
,

508 
FLAG_PERMUTE
|
FLAG_LONGONLY
);

509 
	}
}

	@src/bsd-getopt_long.h

56 #i‚de‡
__BSD_GETOPT_LONG_H__


57 
	#__BSD_GETOPT_LONG_H__


	)

59 #i‚de‡
HAVE_GETOPT_LONG


64 #i‚de‡
no_¨gumít


65 
	#no_¨gumít
 0

	)

67 #i‚de‡
ªquúed_¨gumít


68 
	#ªquúed_¨gumít
 1

	)

70 #i‚de‡
›ti⁄Æ_¨gumít


71 
	#›ti⁄Æ_¨gumít
 2

	)

74 
	spuª_›ti⁄
 {

76 c⁄° *
	m«me
;

81 
	mhas_¨g
;

83 *
	mÊag
;

85 
	mvÆ
;

88 
puª_gë›t_l⁄g
(
«rgc
, * c⁄° *
«rgv
, c⁄° *
›ti⁄s
,

89 c⁄° 
puª_›ti⁄
 *
l⁄g_›ti⁄s
, *
idx
);

91 
puª_gë›t_l⁄g_⁄ly
(
«rgc
, * c⁄° *
«rgv
,

92 c⁄° *
›ti⁄s
,

93 c⁄° 
puª_›ti⁄
 *
l⁄g_›ti⁄s
,

94 *
idx
);

96 
puª_gë›t
(
«rgc
, * c⁄° *
«rgv
, c⁄° *
›ti⁄s
);

98 c⁄° *
puª_›èrg
;

99 
puª_›ãº
;

100 
puª_›töd
;

101 
puª_›t›t
;

102 
puª_›åe£t
;

106 #i‚de‡
IN_GETOPT_LONG_C


107 #unde‡
›ti⁄


108 
	#›ti⁄
 
puª_›ti⁄


	)

109 #unde‡
gë›t_l⁄g


110 
	#gë›t_l⁄g
(
A
, 
B
, 
C
, 
D
, 
E
Ë
	`puª_gë›t_l⁄g
(A, B, C, D, E)

	)

111 #unde‡
gë›t_l⁄g_⁄ly


112 
	#gë›t_l⁄g_⁄ly
(
A
, 
B
, 
C
, 
D
, 
E
Ë
	`puª_gë›t_l⁄g_⁄ly
(A, B, C, D, E)

	)

113 #unde‡
gë›t


114 
	#gë›t
(
A
, 
B
, 
C
Ë
	`puª_gë›t
(A, B, C)

	)

115 #unde‡
›èrg


116 
	#›èrg
 
puª_›èrg


	)

117 #unde‡
›ãº


118 
	#›ãº
 
puª_›ãº


	)

119 #unde‡
›töd


120 
	#›töd
 
puª_›töd


	)

121 #unde‡
›t›t


122 
	#›t›t
 
puª_›t›t


	)

123 #unde‡
›åe£t


124 
	#›åe£t
 
puª_›åe£t


	)

	@src/bsd-glob.c

57 
	~<c⁄fig.h
>

59 #i‚de‡
DISABLE_GLOBBING


60 
	~"·pd.h
"

61 #ifde‡
HAVE_DIRENT_H


62 
	~<dúít.h
>

64 #ifde‡
HAVE_SYS_NDIR_H


65 
	~<sys/ndú.h
>

67 #ifde‡
HAVE_NDIR_H


68 
	~<ndú.h
>

70 
	~"bsd-glob.h
"

72 #ifde‡
WITH_DMALLOC


73 
	~<dmÆloc.h
>

76 
	#DOLLAR
 '$'

	)

77 
	#DOT
 '.'

	)

78 
	#EOS
 '\0'

	)

79 
	#LBRACKET
 '['

	)

80 
	#NOT
 '!'

	)

81 
	#QUESTION
 '?'

	)

82 
	#QUOTE
 '\\'

	)

83 
	#RANGE
 '-'

	)

84 
	#RBRACKET
 ']'

	)

85 
	#SEP
 '/'

	)

86 
	#STAR
 '*'

	)

87 
	#UNDERSCORE
 '_'

	)

88 
	#LBRACE
 '{'

	)

89 
	#RBRACE
 '}'

	)

90 
	#SLASH
 '/'

	)

91 
	#COMMA
 ','

	)

93 
	#M_QUOTE
 0x8000

	)

94 
	#M_PROTECT
 0x4000

	)

95 
	#M_MASK
 0xffff

	)

96 
	#M_ASCII
 0x00ff

	)

98 
	tCh¨
;

100 
	#CHAR
(
c
Ë((
Ch¨
)((c)&
M_ASCII
))

	)

101 
	#META
(
c
Ë((
Ch¨
)((c)|
M_QUOTE
))

	)

102 
	#M_ALL
 
	`META
('*')

	)

103 
	#M_END
 
	`META
(']')

	)

104 
	#M_NOT
 
	`META
('!')

	)

105 
	#M_ONE
 
	`META
('?')

	)

106 
	#M_RNG
 
	`META
('-')

	)

107 
	#M_SET
 
	`META
('[')

	)

108 
	#ismëa
(
c
Ë(((c)&
M_QUOTE
Ë!0)

	)

110 
	#GLOB_LIMIT_MALLOC
 65536

	)

112 
	sglob_lim
 {

113 
size_t
 
	mglim_mÆloc
;

114 
size_t
 
	mglim_°©
;

115 
size_t
 
	mglim_ªaddú
;

118 
	sglob_∑th_°©
 {

119 *
	mgps_∑th
;

120 
°©
 *
	mgps_°©
;

123 
com∑ª
(const *, const *);

124 
com∑ª_gps
(const *, const *);

125 
g_Ctoc
(c⁄° 
Ch¨
 *, *, );

126 
g_l°©
(
Ch¨
 *, 
°©
 *, 
glob_t
 *);

127 
DIR
 *
g_›ídú
(
Ch¨
 *, 
glob_t
 *);

128 
Ch¨
 *
g_°rchr
(const Char *, );

129 
g_°©
(
Ch¨
 *, 
°©
 *, 
glob_t
 *);

130 
glob0
(c⁄° 
Ch¨
 *, 
glob_t
 *, 
glob_lim
 *);

131 
glob1
(
Ch¨
 *, Ch¨ *, 
glob_t
 *, 
glob_lim
 *, );

132 
glob2
(
Ch¨
 *, Char *, Char *, Char *, Char *, Char *,

133 
glob_t
 *, 
glob_lim
 *, );

134 
glob3
(
Ch¨
 *, Char *, Char *, Char *, Char *,

135 
Ch¨
 *, Ch¨ *, 
glob_t
 *, 
glob_lim
 *, );

136 
globexãnd
(c⁄° 
Ch¨
 *, 
glob_t
 *, 
glob_lim
 *,

137 
°©
 *);

138 
globexp1
(c⁄° 
Ch¨
 *, 
glob_t
 *, 
glob_lim
 *, );

139 
globexp2
(c⁄° 
Ch¨
 *, c⁄° Ch¨ *, 
glob_t
 *,

140 
glob_lim
 *, );

141 
m©ch
(
Ch¨
 *, Char *, Char *, );

144 
glob_
(c⁄° *
∑âîn
, 
Êags
, (*
îrfunc
)(const *, ),

145 
glob_t
 *
pglob
, 
maxfûes
, 
maxdïth
)

147 c⁄° *
∑äext
;

148 
c
;

149 
Ch¨
 *
bu‚ext
, *
bu„nd
, 
∑tbuf
[
MAXPATHLEN
];

150 
glob_lim
 
limô
 = { 0, 0, 0 };

152 i‡(
	`°æí
(
∑âîn
Ë>
PATH_MAX
) {

153  
GLOB_NOMATCH
;

155 
pglob
->
gl_maxdïth
 = 
maxdïth
;

156 
pglob
->
gl_maxfûes
 = 
maxfûes
;

157 
∑äext
 = (*Ë
∑âîn
;

158 i‡(!(
Êags
 & 
GLOB_APPEND
)) {

159 
pglob
->
gl_∑thc
 = 0;

160 
pglob
->
gl_∑thv
 = 
NULL
;

161 
pglob
->
gl_°©v
 = 
NULL
;

162 i‡(!(
Êags
 & 
GLOB_DOOFFS
)) {

163 
pglob
->
gl_offs
 = 0;

166 
pglob
->
gl_Êags
 = 
Êags
 & ~
GLOB_MAGCHAR
;

167 
pglob
->
gl_îrfunc
 = 
îrfunc
;

168 
pglob
->
gl_m©chc
 = 0;

170 i‡(
pglob
->
gl_offs
 < 0 ||Öglob->
gl_∑thc
 < 0 ||

171 
pglob
->
gl_offs
 >
INT_MAX
 ||Öglob->
gl_∑thc
 >= INT_MAX ||

172 
pglob
->
gl_∑thc
 >
INT_MAX
 -Öglob->
gl_offs
 - 1) {

173  
GLOB_NOSPACE
;

175 
bu‚ext
 = 
∑tbuf
;

176 
bu„nd
 = 
bu‚ext
 + 
MAXPATHLEN
 - 1;

177 i‡(
Êags
 & 
GLOB_NOESCAPE
) {

178 
bu‚ext
 < 
bu„nd
 && (
c
 = *
∑äext
++Ë!
EOS
) {

179 *
bu‚ext
++ = 
c
;

183 
bu‚ext
 < 
bu„nd
 && (
c
 = *
∑äext
++Ë!
EOS
) {

184 i‡(
c
 =
QUOTE
) {

185 i‡((
c
 = *
∑äext
++Ë=
EOS
) {

186 
c
 = 
QUOTE
;

187 --
∑äext
;

189 *
bu‚ext
++ = 
c
 | 
M_PROTECT
;

191 *
bu‚ext
++ = 
c
;

195 *
bu‚ext
 = 
EOS
;

197 i‡(
Êags
 & 
GLOB_BRACE
) {

198  
	`globexp1
(
∑tbuf
, 
pglob
, &
limô
, 0);

200  
	`glob0
(
∑tbuf
, 
pglob
, &
limô
);

202 
	}
}

205 
glob
(c⁄° *
∑âîn
, 
Êags
, (*
îrfunc
) (const *, ),

206 
glob_t
 * 
pglob
)

208  
	`glob_
(
∑âîn
, 
Êags
, 
îrfunc
, 
pglob
, () -1, 0);

209 
	}
}

212 
sglob
(*
∑âîn
, 
Êags
, (*
îrfunc
) (const *, ),

213 
glob_t
 * 
pglob
, 
maxfûes
, 
maxdïth
)

215 
	`sim∂ify
(
∑âîn
);

216  
	`glob_
(
∑âîn
, 
Êags
, 
îrfunc
, 
pglob
, 
maxfûes
, 
maxdïth
);

217 
	}
}

225 
	$globexp1
(c⁄° 
Ch¨
 *
∑âîn
, 
glob_t
 *
pglob
, 
glob_lim
 *
limôp
,

226 
ªcursi⁄
)

228 c⁄° 
Ch¨
* 
±r
 = 
∑âîn
;

230 i‡(
pglob
->
gl_maxdïth
 > 0 && 
ªcursi⁄
 >Öglob->gl_maxdepth) {

231 
î∫o
 = 0;

235 i‡(
∑âîn
[0] =
LBRACE
 &&Ö©ã∫[1] =
RBRACE
 &&Ö©ã∫[2] =
EOS
) {

236  
	`glob0
(
∑âîn
, 
pglob
, 
limôp
);

238 i‡((
±r
 = (c⁄° 
Ch¨
 *Ë
	`g_°rchr
’å, 
LBRACE
)Ë!
NULL
) {

239  
	`globexp2
(
±r
, 
∑âîn
, 
pglob
, 
limôp
, 
ªcursi⁄
 + 1);

241  
	`glob0
(
∑âîn
, 
pglob
, 
limôp
);

242 
	}
}

250 
	$globexp2
(c⁄° 
Ch¨
 *
±r
, c⁄° Ch¨ *
∑âîn
, 
glob_t
 *
pglob
,

251 
glob_lim
 *
limôp
, 
ªcursi⁄
)

253 
i
, 
rv
;

254 
Ch¨
 *
lm
, *
ls
;

255 c⁄° 
Ch¨
 *
≥
, *
pm
, *
∂
;

256 
Ch¨
 
∑tbuf
[
MAXPATHLEN
];

259 
lm
 = 
∑tbuf
, 
pm
 = 
∑âîn
;Öm !
±r
; *lm++ = *pm++)

261 *
lm
 = 
EOS
;

262 
ls
 = 
lm
;

265 
i
 = 0, 
≥
 = ++
±r
; *pe;Öe++) {

266 i‡(*
≥
 =
LBRACKET
) {

268 
pm
 = 
≥
++; *≥ !
RBRACKET
 && *≥ !
EOS
;Öe++)

270 i‡(*
≥
 =
EOS
) {

275 
≥
 = 
pm
;

277 } i‡(*
≥
 =
LBRACE
) {

278 
i
++;

279 } i‡(*
≥
 =
RBRACE
) {

280 i‡(
i
 == 0) {

283 
i
--;

288 i‡(
i
 !0 || *
≥
 =
EOS
) {

289  
	`glob0
(
∑tbuf
, 
pglob
, 
limôp
);

291 
i
 = 0, 
∂
 = 
pm
 = 
±r
;Öm <
≥
;Öm++) {

292 *
pm
) {

293 
LBRACKET
:

295 
∂
 = 
pm
++; *pm !
RBRACKET
 && *pm !
EOS
;Öm++)

297 i‡(*
pm
 =
EOS
) {

302 
pm
 = 
∂
;

306 
LBRACE
:

307 
i
++;

310 
RBRACE
:

311 i‡(
i
) {

312 
i
--;

316 
COMMA
:

317 i‡(
i
 && *
pm
 =
COMMA
) {

321 
lm
 = 
ls
; (
∂
 < 
pm
); *lm++ = *pl++)

328 
∂
 = 
≥
 + 1; (*
lm
++ = *∂++Ë!
EOS
; )

332 
rv
 = 
	`globexp1
(
∑tbuf
, 
pglob
, 
limôp
, 
ªcursi⁄
 + 1);

333 i‡(
rv
 &&Ñv !
GLOB_NOMATCH
) {

334  
rv
;

337 
∂
 = 
pm
 + 1;

346 
	}
}

356 
	$glob0
(c⁄° 
Ch¨
 *
∑âîn
, 
glob_t
 *
pglob
, 
glob_lim
 *
limôp
)

358 c⁄° 
Ch¨
 *
q∑äext
;

359 
c
, 
îr
, 
ﬁd∑thc
;

360 
Ch¨
 *
bu‚ext
, 
∑tbuf
[
MAXPATHLEN
];

362 
q∑äext
 = 
∑âîn
;

363 
ﬁd∑thc
 = 
pglob
->
gl_∑thc
;

364 
bu‚ext
 = 
∑tbuf
;

367 (
c
 = *
q∑äext
++Ë!
EOS
) {

368 
c
) {

369 
LBRACKET
:

370 
c
 = *
q∑äext
;

371 i‡(
c
 =
NOT
) {

372 ++
q∑äext
;

374 i‡(*
q∑äext
 =
EOS
 ||

375 
	`g_°rchr
(
q∑äext
 + 1, 
RBRACKET
Ë=
NULL
) {

376 *
bu‚ext
++ = 
LBRACKET
;

377 i‡(
c
 =
NOT
) {

378 --
q∑äext
;

382 *
bu‚ext
++ = 
M_SET
;

383 i‡(
c
 =
NOT
) {

384 *
bu‚ext
++ = 
M_NOT
;

386 
c
 = *
q∑äext
++;

388 *
bu‚ext
++ = 
	`CHAR
(
c
);

389 i‡(*
q∑äext
 =
RANGE
 &&

390 (
c
 = 
q∑äext
[1]Ë!
RBRACKET
) {

391 *
bu‚ext
++ = 
M_RNG
;

392 *
bu‚ext
++ = 
	`CHAR
(
c
);

393 
q∑äext
 += 2;

395 } (
c
 = *
q∑äext
++Ë!
RBRACKET
);

396 
pglob
->
gl_Êags
 |
GLOB_MAGCHAR
;

397 *
bu‚ext
++ = 
M_END
;

399 
QUESTION
:

400 
pglob
->
gl_Êags
 |
GLOB_MAGCHAR
;

401 *
bu‚ext
++ = 
M_ONE
;

403 
STAR
:

404 
pglob
->
gl_Êags
 |
GLOB_MAGCHAR
;

408 i‡(
bu‚ext
 =
∑tbuf
 || bu‚ext[-1] !
M_ALL
) {

409 *
bu‚ext
++ = 
M_ALL
;

413 *
bu‚ext
++ = 
	`CHAR
(
c
);

417 *
bu‚ext
 = 
EOS
;

419 i‡((
îr
 = 
	`glob1
(
∑tbuf
,Ö©buf+
MAXPATHLEN
 - 1, 
pglob
, 
limôp
, 1)) != 0) {

420  
îr
;

429 i‡(
pglob
->
gl_∑thc
 =
ﬁd∑thc
) {

430 i‡((
pglob
->
gl_Êags
 & 
GLOB_NOCHECK
) ||

431 ((
pglob
->
gl_Êags
 & 
GLOB_NOMAGIC
) &&

432 !(
pglob
->
gl_Êags
 & 
GLOB_MAGCHAR
))) {

433  
	`globexãnd
(
∑âîn
, 
pglob
, 
limôp
, 
NULL
);

435  
GLOB_NOMATCH
;

438 i‡(!(
pglob
->
gl_Êags
 & 
GLOB_NOSORT
)) {

439 i‡((
pglob
->
gl_Êags
 & 
GLOB_KEEPSTAT
)) {

441 
glob_∑th_°©
 *
∑th_°©
;

442 
i
;

443 
n
 = 
pglob
->
gl_∑thc
 - 
ﬁd∑thc
;

444 
o
 = 
pglob
->
gl_offs
 + 
ﬁd∑thc
;

446 i‡((
∑th_°©
 = 
	`ˇŒoc
(
n
, (*∑th_°©))Ë=
NULL
) {

447  
GLOB_NOSPACE
;

449 
i
 = 0; i < 
n
; i++) {

450 
∑th_°©
[
i
].
gps_∑th
 = 
pglob
->
gl_∑thv
[
o
 + i];

451 
∑th_°©
[
i
].
gps_°©
 = 
pglob
->
gl_°©v
[
o
 + i];

453 
	`qs‹t
(
∑th_°©
, 
n
, (*∑th_°©), 
com∑ª_gps
);

454 
i
 = 0; i < 
n
; i++) {

455 
pglob
->
gl_∑thv
[
o
 + 
i
] = 
∑th_°©
[i].
gps_∑th
;

456 
pglob
->
gl_°©v
[
o
 + 
i
] = 
∑th_°©
[i].
gps_°©
;

458 
	`‰ì
(
∑th_°©
);

460 
	`qs‹t
(
pglob
->
gl_∑thv
 +Öglob->
gl_offs
 + 
ﬁd∑thc
,

461 
pglob
->
gl_∑thc
 - 
ﬁd∑thc
, (*),

462 
com∑ª
);

466 
	}
}

469 
	$com∑ª
(c⁄° *
p
, c⁄° *
q
)

471  
	`°rcmp
(*(**)
p
, *(**)
q
);

472 
	}
}

475 
	$com∑ª_gps
(c⁄° *
_p
, c⁄° *
_q
)

477 c⁄° 
glob_∑th_°©
 *
p
 = (c⁄° glob_∑th_°© *)
_p
;

478 c⁄° 
glob_∑th_°©
 *
q
 = (c⁄° glob_∑th_°© *)
_q
;

480  
	`°rcmp
(
p
->
gps_∑th
, 
q
->gps_path);

481 
	}
}

484 
	$glob1
(
Ch¨
 *
∑âîn
, Ch¨ *
∑âîn_œ°
, 
glob_t
 *
pglob
, 
glob_lim
 *
limôp
,

485 
ªcursi⁄
)

487 
Ch¨
 
∑thbuf
[
MAXPATHLEN
];

490 i‡(*
∑âîn
 =
EOS
) {

493  
	`glob2
(
∑thbuf
,Ö©hbu‡+ 
MAXPATHLEN
 - 1,

494 
∑thbuf
,Ö©hbu‡+ 
MAXPATHLEN
 - 1,

495 
∑âîn
, 
∑âîn_œ°
, 
pglob
, 
limôp
, 
ªcursi⁄
);

496 
	}
}

504 
	$glob2
(
Ch¨
 *
∑thbuf
, Ch¨ *
∑thbuf_œ°
, Ch¨ *
∑thíd
, Ch¨ *
∑thíd_œ°
,

505 
Ch¨
 *
∑âîn
, Ch¨ *
∑âîn_œ°
, 
glob_t
 *
pglob
, 
glob_lim
 *
limôp
,

506 
ªcursi⁄
)

508 
°©
 
sb
;

509 
Ch¨
 *
p
, *
q
;

510 
™ymëa
;

516 
™ymëa
 = 0;;) {

517 i‡(*
∑âîn
 =
EOS
) {

518 *
∑thíd
 = 
EOS
;

519 i‡(
limôp
->
glim_°©
++ >
pglob
->
gl_maxfûes
) {

520 
î∫o
 = 0;

521 *
∑thíd
++ = 
SEP
;

522 *
∑thíd
 = 
EOS
;

523  
GLOB_NOSPACE
;

525 i‡(
	`g_l°©
(
∑thbuf
, &
sb
, 
pglob
)) {

528 i‡(((
pglob
->
gl_Êags
 & 
GLOB_MARK
) &&

529 
∑thíd
[-1] !
SEP
) &&

530 (
	`S_ISDIR
(
sb
.
°_mode
) ||

531 (
	`S_ISLNK
(
sb
.
°_mode
) &&

532 (
	`g_°©
(
∑thbuf
, &
sb
, 
pglob
) == 0) &&

533 
	`S_ISDIR
(
sb
.
°_mode
)))) {

534 i‡(
∑thíd
 + 1 > 
∑thíd_œ°
) {

537 *
∑thíd
++ = 
SEP
;

538 *
∑thíd
 = 
EOS
;

540 ++
pglob
->
gl_m©chc
;

541  
	`globexãnd
(
∑thbuf
, 
pglob
, 
limôp
, &
sb
);

545 
q
 = 
∑thíd
;

546 
p
 = 
∑âîn
;

547 *
p
 !
EOS
 && *∞!
SEP
) {

548 i‡(
	`ismëa
(*
p
)) {

549 
™ymëa
 = 1;

551 i‡(
q
 + 1 > 
∑thíd_œ°
) {

554 *
q
++ = *
p
++;

557 i‡(!
™ymëa
) {

558 
∑thíd
 = 
q
;

559 
∑âîn
 = 
p
;

560 *
∑âîn
 =
SEP
) {

561 i‡(
∑thíd
 + 1 > 
∑thíd_œ°
) {

564 *
∑thíd
++ = *
∑âîn
++;

568  
	`glob3
(
∑thbuf
, 
∑thbuf_œ°
, 
∑thíd
,

569 
∑thíd_œ°
, 
∑âîn
, 
p
, 
∑âîn_œ°
,

570 
pglob
, 
limôp
, 
ªcursi⁄
 + 1);

574 
	}
}

577 
	$glob3
(
Ch¨
 *
∑thbuf
, Ch¨ *
∑thbuf_œ°
, Ch¨ *
∑thíd
, Ch¨ *
∑thíd_œ°
,

578 
Ch¨
 *
∑âîn
, Ch¨ *
ª°∑âîn
, Ch¨ *
ª°∑âîn_œ°
, 
glob_t
 *
pglob
,

579 
glob_lim
 *
limôp
, 
ªcursi⁄
)

581 
dúít
 *
dp
;

582 
DIR
 *
dúp
;

583 
îr
;

584 
buf
[
MAXPATHLEN
];

592 
dúít
 *(*
ªaddúfunc
)(*);

594 i‡(
∑thíd
 > 
∑thíd_œ°
) {

597 *
∑thíd
 = 
EOS
;

598 
î∫o
 = 0;

600 i‡(
ªcursi⁄
 >
pglob
->
gl_maxdïth
) {

601  
GLOB_NOSPACE
;

603 i‡((
dúp
 = 
	`g_›ídú
(
∑thbuf
, 
pglob
)Ë=
NULL
) {

605 i‡(
pglob
->
gl_îrfunc
) {

606 i‡(
	`g_Ctoc
(
∑thbuf
, 
buf
, (buf))) {

607  
GLOB_ABORTED
;

609 i‡(
pglob
->
	`gl_îrfunc
(
buf
, 
î∫o
) ||

610 
pglob
->
gl_Êags
 & 
GLOB_ERR
) {

611  
GLOB_ABORTED
;

617 
îr
 = 0;

620 i‡(
pglob
->
gl_Êags
 & 
GLOB_ALTDIRFUNC
) {

621 
ªaddúfunc
 = 
pglob
->
gl_ªaddú
;

623 
ªaddúfunc
 = (
dúít
 *(*)(*))
ªaddú
;

625 (
dp
 = (*
ªaddúfunc
)(
dúp
))) {

626 *
sc
;

627 
Ch¨
 *
dc
;

629 i‡(
limôp
->
glim_ªaddú
++ >
pglob
->
gl_maxfûes
) {

630 
î∫o
 = 0;

631 *
∑thíd
++ = 
SEP
;

632 *
∑thíd
 = 
EOS
;

633 
îr
 = 
GLOB_NOSPACE
;

638 i‡(
dp
->
d_«me
[0] =
DOT
 && *
∑âîn
 != DOT) {

641 
dc
 = 
∑thíd
;

642 
sc
 = (*Ë
dp
->
d_«me
;

643 
dc
 < 
∑thíd_œ°
 && (*dc++ = *
sc
++Ë!
EOS
)

645 i‡(
dc
 >
∑thíd_œ°
) {

646 *
dc
 = 
EOS
;

647 
îr
 = 1;

651 i‡(!
	`m©ch
(
∑thíd
, 
∑âîn
, 
ª°∑âîn
, 
pglob
->
gl_maxdïth
)) {

652 *
∑thíd
 = 
EOS
;

655 
îr
 = 
	`glob2
(
∑thbuf
, 
∑thbuf_œ°
, --
dc
, 
∑thíd_œ°
,

656 
ª°∑âîn
, 
ª°∑âîn_œ°
, 
pglob
, 
limôp
, 
ªcursi⁄
);

657 i‡(
îr
) {

662 i‡(
pglob
->
gl_Êags
 & 
GLOB_ALTDIRFUNC
) {

663 (*
pglob
->
gl_˛o£dú
)(
dúp
);

665 
	`˛o£dú
(
dúp
);

667  
îr
;

668 
	}
}

685 
	$globexãnd
(c⁄° 
Ch¨
 *
∑th
, 
glob_t
 *
pglob
, 
glob_lim
 *
limôp
,

686 
°©
 *
sb
)

688 **
∑thv
;

689 
ssize_t
 
i
;

690 
size_t
 
√wn
, 
Àn
;

691 *
c›y
 = 
NULL
;

692 c⁄° 
Ch¨
 *
p
;

693 
°©
 **
°©v
;

695 
√wn
 = 2 + 
pglob
->
gl_∑thc
 +Öglob->
gl_offs
;

696 i‡(
pglob
->
gl_offs
 >
INT_MAX
 ||

697 
pglob
->
gl_∑thc
 >
INT_MAX
 ||

698 
√wn
 >
INT_MAX
 ||

699 
SIZE_MAX
 / (*
∑thv
Ë<
√wn
 ||

700 
SIZE_MAX
 / (*
°©v
Ë<
√wn
) {

701 
no•a˚
:

702 
i
 = 
pglob
->
gl_offs
; i < (
ssize_t
)(
√wn
 - 2); i++) {

703 i‡(
pglob
->
gl_∑thv
 &&Öglob->gl_∑thv[
i
]) {

704 
	`‰ì
(
pglob
->
gl_∑thv
[
i
]);

706 i‡((
pglob
->
gl_Êags
 & 
GLOB_KEEPSTAT
) != 0 &&

707 
pglob
->
gl_∑thv
 &&Öglob->gl_∑thv[
i
]) {

708 
	`‰ì
(
pglob
->
gl_°©v
[
i
]);

711 i‡(
pglob
->
gl_∑thv
) {

712 
	`‰ì
(
pglob
->
gl_∑thv
);

713 
pglob
->
gl_∑thv
 = 
NULL
;

715 i‡(
pglob
->
gl_°©v
) {

716 
	`‰ì
(
pglob
->
gl_°©v
);

717 
pglob
->
gl_°©v
 = 
NULL
;

719  
GLOB_NOSPACE
;

722 
∑thv
 = 
	`ªÆloc
(
pglob
->
gl_∑thv
, 
√wn
 * (*pathv));

723 i‡(
∑thv
 =
NULL
) {

724 
no•a˚
;

726 i‡(
pglob
->
gl_∑thv
 =
NULL
 &&Öglob->
gl_offs
 > 0) {

728 
∑thv
 +
pglob
->
gl_offs
;

729 
i
 = 
pglob
->
gl_offs
; --i >= 0; ) {

730 *--
∑thv
 = 
NULL
;

733 
pglob
->
gl_∑thv
 = 
∑thv
;

735 i‡((
pglob
->
gl_Êags
 & 
GLOB_KEEPSTAT
) != 0) {

736 
°©v
 = 
	`ªÆloc
(
pglob
->
gl_°©v
, 
√wn
 * (*statv));

737 i‡(
°©v
 =
NULL
) {

738 
no•a˚
;

740 i‡(
pglob
->
gl_°©v
 =
NULL
 &&Öglob->
gl_offs
 > 0) {

742 
°©v
 +
pglob
->
gl_offs
;

743 
i
 = 
pglob
->
gl_offs
; --i >= 0; ) {

744 *--
°©v
 = 
NULL
;

747 
pglob
->
gl_°©v
 = 
°©v
;

748 i‡(
sb
 =
NULL
) {

749 
°©v
[
pglob
->
gl_offs
 +Öglob->
gl_∑thc
] = 
NULL
;

751 
limôp
->
glim_mÆloc
 +(**
°©v
);

752 i‡(
limôp
->
glim_mÆloc
 >
GLOB_LIMIT_MALLOC
) {

753 
î∫o
 = 0;

754  
GLOB_NOSPACE
;

756 i‡((
°©v
[
pglob
->
gl_offs
 +Öglob->
gl_∑thc
] =

757 
	`mÆloc
((**
°©v
))Ë=
NULL
) {

758 
c›y_îr‹
;

760 
	`mem˝y
(
°©v
[
pglob
->
gl_offs
 +Öglob->
gl_∑thc
], 
sb
,

761 (*
sb
));

763 
°©v
[
pglob
->
gl_offs
 +Öglob->
gl_∑thc
 + 1] = 
NULL
;

766 
p
 = 
∑th
; *p++;)

768 
Àn
 = (
size_t
)(
p
 - 
∑th
);

769 
limôp
->
glim_mÆloc
 +
Àn
;

770 i‡((
c›y
 = 
	`mÆloc
(
Àn
)Ë!
NULL
) {

771 i‡(
	`g_Ctoc
(
∑th
, 
c›y
, 
Àn
)) {

772 
	`‰ì
(
c›y
);

773  
GLOB_NOSPACE
;

775 
∑thv
[
pglob
->
gl_offs
 +Öglob->
gl_∑thc
++] = 
c›y
;

777 
∑thv
[
pglob
->
gl_offs
 +Öglob->
gl_∑thc
] = 
NULL
;

779 i‡((
√wn
 * (*
∑thv
)Ë+ 
limôp
->
glim_mÆloc
 > 
GLOB_LIMIT_MALLOC
) {

780 
î∫o
 = 0;

781  
GLOB_NOSPACE
;

783 
c›y_îr‹
:

784  
c›y
 =
NULL
 ? 
GLOB_NOSPACE
 : 0;

785 
	}
}

792 
	$m©ch
(
Ch¨
 *
«me
, Ch¨ *
∑t
, Ch¨ *
∑ãnd
, 
ªcur
)

794 
ok
, 
√g©e_ønge
;

795 
Ch¨
 
c
, 
k
;

797 i‡(
ªcur
-- == 0) {

798  
GLOB_NOSPACE
;

800 
∑t
 < 
∑ãnd
) {

801 
c
 = *
∑t
++;

802 
c
 & 
M_MASK
) {

803 
M_ALL
:

804 
∑t
 < 
∑ãnd
 && (*∑à& 
M_MASK
Ë=
M_ALL
) {

805 
∑t
++;

807 i‡(
∑t
 =
∑ãnd
) {

811 i‡(
	`m©ch
(
«me
, 
∑t
, 
∑ãnd
, 
ªcur
)) {

814 } *
«me
++ !
EOS
);

816 
M_ONE
:

817 i‡(*
«me
++ =
EOS
) {

821 
M_SET
:

822 
ok
 = 0;

823 i‡((
k
 = *
«me
++Ë=
EOS
) {

826 i‡((
√g©e_ønge
 = ((*
∑t
 & 
M_MASK
Ë=
M_NOT
)Ë!
EOS
) {

827 ++
∑t
;

829 ((
c
 = *
∑t
++Ë& 
M_MASK
Ë!
M_END
) {

830 i‡((*
∑t
 & 
M_MASK
Ë=
M_RNG
) {

831 i‡(
c
 <
k
 && k <
∑t
[1]) {

832 
ok
 = 1;

834 
∑t
 += 2;

835 } i‡(
c
 =
k
) {

836 
ok
 = 1;

839 i‡(
ok
 =
√g©e_ønge
) {

844 i‡(*
«me
++ !
c
) {

850  *
«me
 =
EOS
;

851 
	}
}

855 
	$glob‰ì
(
glob_t
 *
pglob
)

857 
i
;

858 **
µ
;

860 i‡(
pglob
->
gl_∑thv
 !
NULL
) {

861 
µ
 = 
pglob
->
gl_∑thv
 +Öglob->
gl_offs
;

862 
i
 = 
pglob
->
gl_∑thc
; i--; ++
µ
) {

863 i‡(*
µ
) {

864 
	`‰ì
(*
µ
);

867 
	`‰ì
(
pglob
->
gl_∑thv
);

868 
pglob
->
gl_∑thv
 = 
NULL
;

870 i‡(
pglob
->
gl_°©v
 !
NULL
) {

871 
i
 = 0; i < 
pglob
->
gl_∑thc
; i++) {

872 i‡(
pglob
->
gl_°©v
[
i
] !
NULL
) {

873 
	`‰ì
(
pglob
->
gl_°©v
[
i
]);

876 
	`‰ì
(
pglob
->
gl_°©v
);

877 
pglob
->
gl_°©v
 = 
NULL
;

879 
	}
}

881 
DIR
 *

882 
	$g_›ídú
(
Ch¨
 *
°r
, 
glob_t
 *
pglob
)

884 
buf
[
MAXPATHLEN
];

886 i‡(!*
°r
) {

887 
buf
[0] = '.';

888 
buf
[1] = 0;

890 i‡(
	`g_Ctoc
(
°r
, 
buf
, (buf))) {

891  
NULL
;

895 i‡(
pglob
->
gl_Êags
 & 
GLOB_ALTDIRFUNC
) {

896  (*
pglob
->
gl_›ídú
)(
buf
);

899  
	`›ídú
(
buf
);

900 
	}
}

903 
	$g_l°©
(
Ch¨
 *
‚
, 
°©
 *
sb
, 
glob_t
 *
pglob
)

905 
buf
[
MAXPATHLEN
];

907 i‡(
	`g_Ctoc
(
‚
, 
buf
, (buf))) {

910 i‡(
pglob
->
gl_Êags
 & 
GLOB_ALTDIRFUNC
) {

911  (*
pglob
->
gl_l°©
)(
buf
, 
sb
);

913  
	`l°©
(
buf
, 
sb
);

914 
	}
}

917 
	$g_°©
(
Ch¨
 *
‚
, 
°©
 *
sb
, 
glob_t
 *
pglob
)

919 
buf
[
MAXPATHLEN
];

921 i‡(
	`g_Ctoc
(
‚
, 
buf
, (buf))) {

924 i‡(
pglob
->
gl_Êags
 & 
GLOB_ALTDIRFUNC
) {

925  (*
pglob
->
gl_°©
)(
buf
, 
sb
);

927  
	`°©
(
buf
, 
sb
);

928 
	}
}

930 
Ch¨
 *

931 
	$g_°rchr
(c⁄° 
Ch¨
 *
°r
, 
ch
)

934 i‡(*
°r
 =
ch
) {

935  (
Ch¨
 *)
°r
;

937 } *
°r
++);

938  
NULL
;

939 
	}
}

942 
	$g_Ctoc
(c⁄° 
Ch¨
 *
°r
, *
buf
, 
Àn
)

944 
Àn
--) {

945 i‡((*
buf
++ = *
°r
++Ë=
EOS
) {

950 
	}
}

953 sig√d 
v6ªady
;

	@src/bsd-glob.h

34 #i‚de‡
__BSD_GLOB_H__


35 
	#__BSD_GLOB_H__
 1

	)

37 
	g°©
;

39 
	mgl_maxfûes
;

40 
	mgl_maxdïth
;

41 
	mgl_∑thc
;

42 
	mgl_m©chc
;

43 
	mgl_offs
;

44 
	mgl_Êags
;

45 **
	mgl_∑thv
;

46 
°©
 **
	mgl_°©v
;

48 (*
	mgl_îrfunc
)(const *, );

55 (*
	mgl_˛o£dú
)(*);

56 
	mdúít
 *(*
	mgl_ªaddú
)(*);

57 *(*
	mgl_›ídú
)(const *);

58 (*
	mgl_l°©
)(c⁄° *, 
	m°©
 *);

59 (*
	mgl_°©
)(c⁄° *, 
	m°©
 *);

60 } 
	tglob_t
;

62 
	#GLOB_APPEND
 0x0001

	)

63 
	#GLOB_DOOFFS
 0x0002

	)

64 
	#GLOB_ERR
 0x0004

	)

65 
	#GLOB_MARK
 0x0008

	)

66 
	#GLOB_NOCHECK
 0x0010

	)

67 
	#GLOB_NOSORT
 0x0020

	)

68 
	#GLOB_NOESCAPE
 0x1000

	)

70 
	#GLOB_NOSPACE
 (-1Ë

	)

71 
	#GLOB_ABORTED
 (-2Ë

	)

72 
	#GLOB_NOMATCH
 (-3Ë

	)

73 
	#GLOB_NOSYS
 (-4Ë

	)

75 
	#GLOB_ALTDIRFUNC
 0x0040

	)

76 
	#GLOB_BRACE
 0x0080

	)

77 
	#GLOB_MAGCHAR
 0x0100

	)

78 
	#GLOB_NOMAGIC
 0x0200

	)

79 
	#GLOB_QUOTE
 0x0400

	)

80 
	#GLOB_TILDE
 0x0800

	)

81 
	#GLOB_LIMIT
 0x2000

	)

82 
	#GLOB_KEEPSTAT
 0x4000

	)

83 
	#GLOB_ABEND
 
GLOB_ABORTED


	)

85 #ifde‡
DISABLE_GLOBBING


86 
	#glob
(
A
, 
B
, 
C
, 
D
Ë(
GLOB_NOSYS
)

	)

87 
	#sglob
(
A
, 
B
, 
C
, 
D
, 
E
, 
F
Ë(
GLOB_NOSYS
)

	)

88 
	#glob‰ì
(
A
Ë(Ë0

	)

90 #i‚de‡
USELESS_FOR_PUREFTPD


91 
glob
(c⁄° *, , (*)(c⁄° *, ), 
glob_t
 *);

93 
	`sglob
(*, , (*)(const *, ),

94 
glob_t
 *, , );

95 
	`glob‰ì
(
glob_t
 *);

98 
	#GLOB_PERIOD
 0

	)

	@src/bsd-realpath.c

49 
	~<c⁄fig.h
>

50 
	#FAKECHROOT_EXCEPTION
 1

	)

52 
	~"·pd.h
"

53 
	~"bsd-ªÆ∑th.h
"

54 #i‡!
deföed
(
HAVE_REALPATH
Ë|| deföed(
USE_BUILTIN_REALPATH
)

56 #ifde‡
WITH_DMALLOC


57 
	~<dmÆloc.h
>

60 #i‚de‡
MAXSYMLINKS


61 
	#MAXSYMLINKS
 5

	)

63 #i‡
MAXSYMLINKS
 > 
UINT_MAX


64 #unde‡
MAXSYMLINKS


65 
	#MAXSYMLINKS
 
UINT_MAX


	)

68 #i‚de‡
HAVE_STRLCPY


74 
size_t
 
	$°æ˝y
(*
d°
, c⁄° * c⁄° 
§c
, c⁄° 
size_t
 
siz
)

76 *
d
 = 
d°
;

77 c⁄° *
s
 = 
§c
;

78 
size_t
 
n
 = 
siz
;

81 i‡(
n
 != 0 && --n != 0) {

83 i‡((*
d
++ = *
s
++) == 0) {

86 } --
n
 != 0);

90 i‡(
n
 == 0) {

91 i‡(
siz
 != 0) {

92 *
d
 = '\0';

94 *
s
++) {

97  
s
 - 
§c
 - 1;

98 
	}
}

101 #i‚de‡
HAVE_STRLCAT


109 
size_t
 
	$°æˇt
(*
d°
, c⁄° * c⁄° 
§c
, c⁄° 
size_t
 
siz
)

111 *
d
 = 
d°
;

112 c⁄° *
s
 = 
§c
;

113 
size_t
 
n
 = 
siz
;

114 
size_t
 
dÀn
;

117 
n
-- !0 && *
d
 != '\0') {

118 
d
++;

120 
dÀn
 = 
d
 - 
d°
;

121 
n
 = 
siz
 - 
dÀn
;

122 i‡(
n
 == 0) {

123  
dÀn
 + 
	`°æí
(
s
);

125 *
s
 != '\0') {

126 i‡(
n
 != 1) {

127 *
d
++ = *
s
;

128 
n
--;

130 
s
++;

132 *
d
 = '\0';

134  
dÀn
 + (
s
 - 
§c
);

135 
	}
}

143 *
	$bsd_ªÆ∑th
(c⁄° *
∑th
, 
ªsﬁved
[
MAXPATHLEN
])

145 
°©
 
sb
;

146 *
p
, *
q
, *
s
;

147 
size_t
 
À·_Àn
, 
ªsﬁved_Àn
;

148 
symlöks
;

149 
£ºno
, 
¶í
;

150 
À·
[
MAXPATHLEN
], 
√xt_tokí
[MAXPATHLEN], 
symlök
[MAXPATHLEN];

152 
£ºno
 = 
î∫o
;

153 
symlöks
 = 0;

154 i‡(
∑th
[0] == '/') {

155 
ªsﬁved
[0] = '/';

156 
ªsﬁved
[1] = '\0';

157 i‡(
∑th
[1] == '\0') {

158  
ªsﬁved
;

160 
ªsﬁved_Àn
 = 1;

161 
À·_Àn
 = 
	`°æ˝y
(
À·
, 
∑th
 + 1, Üeft);

163 i‡(
	`gëcwd
(
ªsﬁved
, 
MAXPATHLEN
Ë=
NULL
) {

164 
	`°æ˝y
(
ªsﬁved
, ".", 
MAXPATHLEN
);

165  
NULL
;

167 
ªsﬁved_Àn
 = 
	`°æí
(
ªsﬁved
);

168 
À·_Àn
 = 
	`°æ˝y
(
À·
, 
∑th
, Üeft);

170 i‡(
À·_Àn
 > 
À·
 || 
ªsﬁved_Àn
 >
MAXPATHLEN
) {

171 
î∫o
 = 
ENAMETOOLONG
;

172  
NULL
;

178 
À·_Àn
 != 0) {

183 
p
 = 
	`°rchr
(
À·
, '/');

184 
s
 = 
p
 ?Ö : 
À·
 + 
À·_Àn
;

185 i‡((
size_t
Ë(
s
 - 
À·
Ë> 
√xt_tokí
) {

186 
î∫o
 = 
ENAMETOOLONG
;

187  
NULL
;

189 
	`mem˝y
(
√xt_tokí
, 
À·
, 
s
 -Üeft);

190 
√xt_tokí
[
s
 - 
À·
] = '\0';

191 
À·_Àn
 -
s
 - 
À·
;

192 i‡(
p
 !
NULL
) {

193 
	`memmove
(
À·
, 
s
 + 1, 
À·_Àn
 + 1);

195 i‡(
ªsﬁved
[
ªsﬁved_Àn
 - 1] != '/') {

196 i‡(
ªsﬁved_Àn
 + 1 >
MAXPATHLEN
) {

197 
î∫o
 = 
ENAMETOOLONG
;

198  
NULL
;

200 
ªsﬁved
[
ªsﬁved_Àn
++] = '/';

201 
ªsﬁved
[
ªsﬁved_Àn
] = '\0';

203 i‡(
√xt_tokí
[0] ='\0' || 
	`°rcmp
(next_token, ".") == 0) {

205 } i‡(
	`°rcmp
(
√xt_tokí
, "..") == 0) {

210 i‡(
ªsﬁved_Àn
 > 1) {

211 
ªsﬁved
[
ªsﬁved_Àn
 - 1] = '\0';

212 
q
 = 
	`°ºchr
(
ªsﬁved
, '/') + 1;

213 *
q
 = '\0';

214 
ªsﬁved_Àn
 = 
q
 - 
ªsﬁved
;

224 
ªsﬁved_Àn
 = 
	`°æˇt
(
ªsﬁved
, 
√xt_tokí
, 
MAXPATHLEN
);

225 i‡(
ªsﬁved_Àn
 >
MAXPATHLEN
) {

226 
î∫o
 = 
ENAMETOOLONG
;

227  
NULL
;

229 i‡(
	`l°©
(
ªsﬁved
, &
sb
) != 0) {

230 i‡(
î∫o
 =
ENOENT
 && 
p
 =
NULL
) {

231 
î∫o
 = 
£ºno
;

232  
ªsﬁved
;

234  
NULL
;

236 i‡(
	`S_ISLNK
(
sb
.
°_mode
)) {

237 i‡(
symlöks
++ > 
MAXSYMLINKS
) {

238 
î∫o
 = 
ELOOP
;

239  
NULL
;

241 
¶í
 = 
	`ªadlök
(
ªsﬁved
, 
symlök
, ( symlink) - 1);

242 i‡(
¶í
 < 0) {

243  
NULL
;

245 
symlök
[
¶í
] = '\0';

246 i‡(
symlök
[0] == '/') {

247 
ªsﬁved
[1] = 0;

248 
ªsﬁved_Àn
 = 1;

249 } i‡(
ªsﬁved_Àn
 > 1) {

251 
ªsﬁved
[
ªsﬁved_Àn
 - 1] = '\0';

252 
q
 = 
	`°ºchr
(
ªsﬁved
, '/') + 1;

253 *
q
 = '\0';

254 
ªsﬁved_Àn
 = 
q
 - 
ªsﬁved
;

262 i‡(
p
 !
NULL
) {

263 i‡(
symlök
[
¶í
 - 1] != '/') {

264 i‡((
size_t
Ë
¶í
 >( 
symlök
) - 1U) {

265 
î∫o
 = 
ENAMETOOLONG
;

266  
NULL
;

268 
symlök
[
¶í
] = '/';

269 
symlök
[
¶í
 + 1] = 0;

271 
À·_Àn
 = 
	`°æˇt
(
symlök
, 
À·
, Üeft);

272 i‡(
À·_Àn
 > 
À·
) {

273 
î∫o
 = 
ENAMETOOLONG
;

274  
NULL
;

277 
À·_Àn
 = 
	`°æ˝y
(
À·
, 
symlök
, Üeft);

285 i‡(
ªsﬁved_Àn
 > 1 && 
ªsﬁved
[resolved_len - 1] == '/') {

286 
ªsﬁved
[
ªsﬁved_Àn
 - 1] = '\0';

288  
ªsﬁved
;

289 
	}
}

	@src/bsd-realpath.h

1 #i‚de‡
__FAKEREALPATH_H__


2 
	#__FAKEREALPATH_H__
 1

	)

4 #i‡
deföed
(
__svr4__
Ë&& deföed(
__sun__
)

5 #unde‡
USE_BUILTIN_REALPATH


6 
	#USE_BUILTIN_REALPATH
 1

	)

8 #i‡
deföed
(
__©heos__
)

9 #unde‡
USE_BUILTIN_REALPATH


10 
	#USE_BUILTIN_REALPATH
 1

	)

12 #i‡
deföed
(
WIN32
Ë|| deföed(
_WIN32
Ë|| deföed(
__WIN32__
Ë|| deföed(
__CYGWIN__
)

13 #unde‡
USE_BUILTIN_REALPATH


14 
	#USE_BUILTIN_REALPATH
 1

	)

17 #i‡!
deföed
(
HAVE_REALPATH
Ë|| deföed(
USE_BUILTIN_REALPATH
)

18 *
bsd_ªÆ∑th
(c⁄° *
∑th
, 
ªsﬁved
[
MAXPATHLEN
]);

19 
	#ªÆ∑th
(
A
, 
B
Ë
	`bsd_ªÆ∑th
(A, B)

	)

	@src/caps.c

1 
	~<c⁄fig.h
>

3 #ifde‡
USE_CAPABILITIES


6 
	#STATFS_ALREADY_DEFINED
 1

	)

8 
	~"·pd.h
"

9 
	~"mesßges.h
"

10 
	~"ˇps_p.h
"

12 #ifde‡
WITH_DMALLOC


13 
	~<dmÆloc.h
>

16 
	$≠∂y_ˇps
(
ˇp_vÆue_t
 * c⁄° 
nˇps
,

17 c⁄° 
size_t
 
nˇps_size
)

19 #i‚de‡
NON_ROOT_FTP


20 
ˇp_t
 
ˇps
;

22 i‡(
	`gëeuid
(Ë!(
uid_t
Ë0U || 
nˇps_size
 <(
size_t
) 0U) {

25 i‡((
ˇps
 = 
	`ˇp_öô
()Ë=(
ˇp_t
) 0 ||

26 
	`ˇp_˛ór
(
ˇps
) == -1 ||

27 
	`ˇp_£t_Êag
(
ˇps
, 
CAP_PERMITTED
, 
nˇps_size
, 
nˇps
, 
CAP_SET
) == -1 ||

28 
	`ˇp_£t_Êag
(
ˇps
, 
CAP_EFFECTIVE
, 
nˇps_size
, 
nˇps
, 
CAP_SET
) == -1 ||

29 
	`ˇp_£t_¥oc
(
ˇps
) == -1 ||

30 
	`ˇp_‰ì
(
ˇps
) == -1) {

31 
	`dõ
(421, 
LOG_ERR
, 
MSG_CAPABILITIES
 " : %s" , 
	`°ªº‹
(
î∫o
));

34 (Ë
nˇps
;

35 (Ë
nˇps_size
;

37 
	}
}

39 
	$dr›_logö_ˇps
()

41 
	`≠∂y_ˇps
(
ˇp_kìp_logö
,

42 (
ˇp_kìp_logö
Ë/ (
ˇp_vÆue_t
));

43 
	}
}

45 
	$£t_öôül_ˇps
()

47 
	`≠∂y_ˇps
(
ˇp_kìp_°¨tup
,

48 (
ˇp_kìp_°¨tup
Ë/ (
ˇp_vÆue_t
));

49 
	}
}

51 sig√d 
v6ªady
;

	@src/caps.h

1 #i‚de‡
__CAPS_H__


2 
	#__CAPS_H__
 1

	)

4 
dr›_logö_ˇps
();

5 
£t_öôül_ˇps
();

	@src/caps_p.h

1 #i‚de‡
__CAPS_P_H__


2 
	#__CAPS_P_H__
 1

	)

4 #ifde‡
USE_CAPABILITIES


5 #ifde‡
HAVE_SYS_CAPABILITY_H


6 
	~<sys/ˇ∑bûôy.h
>

9 
ˇp_vÆue_t
 
	gˇp_kìp_°¨tup
[] = {

10 #i‡
deföed
(
USE_PAM
Ë&& deföed(
CAP_AUDIT_WRITE
)

11 
CAP_AUDIT_WRITE
,

13 
CAP_SETGID
,

14 
CAP_SETUID
,

15 
CAP_CHOWN
,

16 
CAP_NET_BIND_SERVICE
,

17 
CAP_SYS_CHROOT
,

18 
CAP_SYS_NICE
,

19 
CAP_DAC_READ_SEARCH


22 
ˇp_vÆue_t
 
	gˇp_kìp_logö
[] = {

23 #ifde‡
WITHOUT_PRIVSEP


24 
CAP_SETUID
,

25 
CAP_NET_BIND_SERVICE


	@src/crypto-md5.c

26 
	~<c⁄fig.h
>

28 #i‡
deföed
(
WITH_LDAP
Ë|| deföed(
WITH_MYSQL
Ë|| deföed(
WITH_PGSQL
Ë&& !deföed(
USE_SYSTEM_CRYPT_MD5
)

30 
	~"·pd.h
"

31 
	~"¸y±o.h
"

32 
	~"¸y±o-md5.h
"

34 #ifde‡
WITH_DMALLOC


35 
	~<dmÆloc.h
>

41 
	#S11
 7

	)

42 
	#S12
 12

	)

43 
	#S13
 17

	)

44 
	#S14
 22

	)

45 
	#S21
 5

	)

46 
	#S22
 9

	)

47 
	#S23
 14

	)

48 
	#S24
 20

	)

49 
	#S31
 4

	)

50 
	#S32
 11

	)

51 
	#S33
 16

	)

52 
	#S34
 23

	)

53 
	#S41
 6

	)

54 
	#S42
 10

	)

55 
	#S43
 15

	)

56 
	#S44
 21

	)

58 
MD5Tønsf‹m
(
¸y±o_uöt4
[4], const [64]);

60 #i‚de‡
WORDS_BIGENDIAN


61 
	#Encode
 
MD5_mem˝y


	)

62 
	#Decode
 
MD5_mem˝y


	)

64 
Encode
(*, c⁄° 
¸y±o_uöt4
 *, );

65 
Decode
(
¸y±o_uöt4
 *, const *, );

68 
	#MD5_mem˝y
 
mem˝y


	)

69 
	#MD5_mem£t
 
mem£t


	)

71 
	gPADDING
[64] = {

79 
	#F
(
x
, 
y
, 
z
Ë(((xË& (y)Ë| ((~xË& (z)))

	)

80 
	#G
(
x
, 
y
, 
z
Ë(((xË& (z)Ë| ((yË& (~z)))

	)

81 
	#H
(
x
, 
y
, 
z
Ë((xË^ (yË^ (z))

	)

82 
	#I
(
x
, 
y
, 
z
Ë((yË^ ((xË| (~z)))

	)

86 
	#ROTATE_LEFT
(
x
, 
n
Ë(((xË<< (n)Ë| ((xË>> (32-“))))

	)

91 
	#FF
(
a
, 
b
, 
c
, 
d
, 
x
, 
s
, 
ac
) { \

92 (
a
Ë+
	`F
 ((
b
), (
c
), (
d
)Ë+ (
x
Ë+ (
¸y±o_uöt4
)(
ac
); \

93 (
a
Ë
	`ROTATE_LEFT
 (◊), (
s
)); \

94 (
a
Ë+(
b
); \

95 }

	)

96 
	#GG
(
a
, 
b
, 
c
, 
d
, 
x
, 
s
, 
ac
) { \

97 (
a
Ë+
	`G
 ((
b
), (
c
), (
d
)Ë+ (
x
Ë+ (
¸y±o_uöt4
)(
ac
); \

98 (
a
Ë
	`ROTATE_LEFT
 (◊), (
s
)); \

99 (
a
Ë+(
b
); \

100 }

	)

101 
	#HH
(
a
, 
b
, 
c
, 
d
, 
x
, 
s
, 
ac
) { \

102 (
a
Ë+
	`H
 ((
b
), (
c
), (
d
)Ë+ (
x
Ë+ (
¸y±o_uöt4
)(
ac
); \

103 (
a
Ë
	`ROTATE_LEFT
 (◊), (
s
)); \

104 (
a
Ë+(
b
); \

105 }

	)

106 
	#II
(
a
, 
b
, 
c
, 
d
, 
x
, 
s
, 
ac
) { \

107 (
a
Ë+
	`I
 ((
b
), (
c
), (
d
)Ë+ (
x
Ë+ (
¸y±o_uöt4
)(
ac
); \

108 (
a
Ë
	`ROTATE_LEFT
 (◊), (
s
)); \

109 (
a
Ë+(
b
); \

110 }

	)

114 
	$MD5Inô
(
MD5_CTX
 * 
c⁄ãxt
)

116 
c⁄ãxt
->
cou¡
[0] = context->count[1] = 0;

119 
c⁄ãxt
->
°©e
[0] = 0x67452301;

120 
c⁄ãxt
->
°©e
[1] = 0xefcdab89;

121 
c⁄ãxt
->
°©e
[2] = 0x98badcfe;

122 
c⁄ãxt
->
°©e
[3] = 0x10325476;

123 
	}
}

129 
	$MD5Upd©e
(
MD5_CTX
 * 
c⁄ãxt
, c⁄° *
öput
,

130 
öputLí
)

132 
i
, 
ödex
, 
∑πLí
;

135 
ödex
 = (Ë((
c⁄ãxt
->
cou¡
[0] >> 3) & 0x3F);

138 i‡((
c⁄ãxt
->
cou¡
[0] +((
¸y±o_uöt4
Ë
öputLí
 << 3))

139 < ((
¸y±o_uöt4
Ë
öputLí
 << 3))

140 
c⁄ãxt
->
cou¡
[1]++;

141 
c⁄ãxt
->
cou¡
[1] +((
¸y±o_uöt4
Ë
öputLí
 >> 29);

143 
∑πLí
 = 64 - 
ödex
;

147 i‡(
öputLí
 >
∑πLí
) {

148 
MD5_mem˝y


149 ((*Ë&
c⁄ãxt
->
buf„r
[
ödex
], (c⁄° *Ë
öput
,

150 
∑πLí
);

151 
	`MD5Tønsf‹m
(
c⁄ãxt
->
°©e
, c⁄ãxt->
buf„r
);

153 
i
 = 
∑πLí
; i + 63 < 
öputLí
; i += 64)

154 
	`MD5Tønsf‹m
(
c⁄ãxt
->
°©e
, &
öput
[
i
]);

156 
ödex
 = 0;

158 
i
 = 0;

161 
MD5_mem˝y


162 ((*Ë&
c⁄ãxt
->
buf„r
[
ödex
], (c⁄° *Ë&
öput
[
i
],

163 
öputLí
 - 
i
);

164 
	}
}

169 
	$MD5FöÆ
(
dige°
[16], 
MD5_CTX
 * 
c⁄ãxt
)

171 
bôs
[8];

172 
ödex
, 
∑dLí
;

175 
	`Encode
(
bôs
, 
c⁄ãxt
->
cou¡
, 8);

179 
ödex
 = (Ë((
c⁄ãxt
->
cou¡
[0] >> 3) & 0x3f);

180 
∑dLí
 = (
ödex
 < 56) ? (56 - index) : (120 - index);

181 
	`MD5Upd©e
(
c⁄ãxt
, 
PADDING
, 
∑dLí
);

184 
	`MD5Upd©e
(
c⁄ãxt
, 
bôs
, 8);

186 i‡(
dige°
 !
NULL
) {

188 
	`Encode
(
dige°
, 
c⁄ãxt
->
°©e
, 16);

192 
	`MD5_mem£t
((*Ë
c⁄ãxt
, 0,  (*context));

194 
	}
}

198 
	$MD5Tønsf‹m
(
¸y±o_uöt4
 
°©e
[4],

199 c⁄° 
block
[64])

201 
¸y±o_uöt4
 
a
 = 
°©e
[0], 
b
 = sèã[1], 
c
 = sèã[2], 
d
 =

202 
°©e
[3], 
x
[16];

204 
	`Decode
(
x
, 
block
, 64);

207 
	`FF
(
a
, 
b
, 
c
, 
d
, 
x
[0], 
S11
, 0xd76aa478);

208 
	`FF
(
d
, 
a
, 
b
, 
c
, 
x
[1], 
S12
, 0xe8c7b756);

209 
	`FF
(
c
, 
d
, 
a
, 
b
, 
x
[2], 
S13
, 0x242070db);

210 
	`FF
(
b
, 
c
, 
d
, 
a
, 
x
[3], 
S14
, 0xc1bdceee);

211 
	`FF
(
a
, 
b
, 
c
, 
d
, 
x
[4], 
S11
, 0xf57c0faf);

212 
	`FF
(
d
, 
a
, 
b
, 
c
, 
x
[5], 
S12
, 0x4787c62a);

213 
	`FF
(
c
, 
d
, 
a
, 
b
, 
x
[6], 
S13
, 0xa8304613);

214 
	`FF
(
b
, 
c
, 
d
, 
a
, 
x
[7], 
S14
, 0xfd469501);

215 
	`FF
(
a
, 
b
, 
c
, 
d
, 
x
[8], 
S11
, 0x698098d8);

216 
	`FF
(
d
, 
a
, 
b
, 
c
, 
x
[9], 
S12
, 0x8b44f7af);

217 
	`FF
(
c
, 
d
, 
a
, 
b
, 
x
[10], 
S13
, 0xffff5bb1);

218 
	`FF
(
b
, 
c
, 
d
, 
a
, 
x
[11], 
S14
, 0x895cd7be);

219 
	`FF
(
a
, 
b
, 
c
, 
d
, 
x
[12], 
S11
, 0x6b901122);

220 
	`FF
(
d
, 
a
, 
b
, 
c
, 
x
[13], 
S12
, 0xfd987193);

221 
	`FF
(
c
, 
d
, 
a
, 
b
, 
x
[14], 
S13
, 0xa679438e);

222 
	`FF
(
b
, 
c
, 
d
, 
a
, 
x
[15], 
S14
, 0x49b40821);

225 
	`GG
(
a
, 
b
, 
c
, 
d
, 
x
[1], 
S21
, 0xf61e2562);

226 
	`GG
(
d
, 
a
, 
b
, 
c
, 
x
[6], 
S22
, 0xc040b340);

227 
	`GG
(
c
, 
d
, 
a
, 
b
, 
x
[11], 
S23
, 0x265e5a51);

228 
	`GG
(
b
, 
c
, 
d
, 
a
, 
x
[0], 
S24
, 0xe9b6c7aa);

229 
	`GG
(
a
, 
b
, 
c
, 
d
, 
x
[5], 
S21
, 0xd62f105d);

230 
	`GG
(
d
, 
a
, 
b
, 
c
, 
x
[10], 
S22
, 0x2441453);

231 
	`GG
(
c
, 
d
, 
a
, 
b
, 
x
[15], 
S23
, 0xd8a1e681);

232 
	`GG
(
b
, 
c
, 
d
, 
a
, 
x
[4], 
S24
, 0xe7d3fbc8);

233 
	`GG
(
a
, 
b
, 
c
, 
d
, 
x
[9], 
S21
, 0x21e1cde6);

234 
	`GG
(
d
, 
a
, 
b
, 
c
, 
x
[14], 
S22
, 0xc33707d6);

235 
	`GG
(
c
, 
d
, 
a
, 
b
, 
x
[3], 
S23
, 0xf4d50d87);

236 
	`GG
(
b
, 
c
, 
d
, 
a
, 
x
[8], 
S24
, 0x455a14ed);

237 
	`GG
(
a
, 
b
, 
c
, 
d
, 
x
[13], 
S21
, 0xa9e3e905);

238 
	`GG
(
d
, 
a
, 
b
, 
c
, 
x
[2], 
S22
, 0xfcefa3f8);

239 
	`GG
(
c
, 
d
, 
a
, 
b
, 
x
[7], 
S23
, 0x676f02d9);

240 
	`GG
(
b
, 
c
, 
d
, 
a
, 
x
[12], 
S24
, 0x8d2a4c8a);

243 
	`HH
(
a
, 
b
, 
c
, 
d
, 
x
[5], 
S31
, 0xfffa3942);

244 
	`HH
(
d
, 
a
, 
b
, 
c
, 
x
[8], 
S32
, 0x8771f681);

245 
	`HH
(
c
, 
d
, 
a
, 
b
, 
x
[11], 
S33
, 0x6d9d6122);

246 
	`HH
(
b
, 
c
, 
d
, 
a
, 
x
[14], 
S34
, 0xfde5380c);

247 
	`HH
(
a
, 
b
, 
c
, 
d
, 
x
[1], 
S31
, 0xa4beea44);

248 
	`HH
(
d
, 
a
, 
b
, 
c
, 
x
[4], 
S32
, 0x4bdecfa9);

249 
	`HH
(
c
, 
d
, 
a
, 
b
, 
x
[7], 
S33
, 0xf6bb4b60);

250 
	`HH
(
b
, 
c
, 
d
, 
a
, 
x
[10], 
S34
, 0xbebfbc70);

251 
	`HH
(
a
, 
b
, 
c
, 
d
, 
x
[13], 
S31
, 0x289b7ec6);

252 
	`HH
(
d
, 
a
, 
b
, 
c
, 
x
[0], 
S32
, 0xeaa127fa);

253 
	`HH
(
c
, 
d
, 
a
, 
b
, 
x
[3], 
S33
, 0xd4ef3085);

254 
	`HH
(
b
, 
c
, 
d
, 
a
, 
x
[6], 
S34
, 0x4881d05);

255 
	`HH
(
a
, 
b
, 
c
, 
d
, 
x
[9], 
S31
, 0xd9d4d039);

256 
	`HH
(
d
, 
a
, 
b
, 
c
, 
x
[12], 
S32
, 0xe6db99e5);

257 
	`HH
(
c
, 
d
, 
a
, 
b
, 
x
[15], 
S33
, 0x1fa27cf8);

258 
	`HH
(
b
, 
c
, 
d
, 
a
, 
x
[2], 
S34
, 0xc4ac5665);

261 
	`II
(
a
, 
b
, 
c
, 
d
, 
x
[0], 
S41
, 0xf4292244);

262 
	`II
(
d
, 
a
, 
b
, 
c
, 
x
[7], 
S42
, 0x432aff97);

263 
	`II
(
c
, 
d
, 
a
, 
b
, 
x
[14], 
S43
, 0xab9423a7);

264 
	`II
(
b
, 
c
, 
d
, 
a
, 
x
[5], 
S44
, 0xfc93a039);

265 
	`II
(
a
, 
b
, 
c
, 
d
, 
x
[12], 
S41
, 0x655b59c3);

266 
	`II
(
d
, 
a
, 
b
, 
c
, 
x
[3], 
S42
, 0x8f0ccc92);

267 
	`II
(
c
, 
d
, 
a
, 
b
, 
x
[10], 
S43
, 0xffeff47d);

268 
	`II
(
b
, 
c
, 
d
, 
a
, 
x
[1], 
S44
, 0x85845dd1);

269 
	`II
(
a
, 
b
, 
c
, 
d
, 
x
[8], 
S41
, 0x6fa87e4f);

270 
	`II
(
d
, 
a
, 
b
, 
c
, 
x
[15], 
S42
, 0xfe2ce6e0);

271 
	`II
(
c
, 
d
, 
a
, 
b
, 
x
[6], 
S43
, 0xa3014314);

272 
	`II
(
b
, 
c
, 
d
, 
a
, 
x
[13], 
S44
, 0x4e0811a1);

273 
	`II
(
a
, 
b
, 
c
, 
d
, 
x
[4], 
S41
, 0xf7537e82);

274 
	`II
(
d
, 
a
, 
b
, 
c
, 
x
[11], 
S42
, 0xbd3af235);

275 
	`II
(
c
, 
d
, 
a
, 
b
, 
x
[2], 
S43
, 0x2ad7d2bb);

276 
	`II
(
b
, 
c
, 
d
, 
a
, 
x
[9], 
S44
, 0xeb86d391);

278 
°©e
[0] +
a
;

279 
°©e
[1] +
b
;

280 
°©e
[2] +
c
;

281 
°©e
[3] +
d
;

285 
	`MD5_mem£t
((*Ë
x
, 0,  x);

286 
	}
}

288 #ifde‡
WORDS_BIGENDIAN


293 
	$Encode
(*
ouçut
, c⁄° 
¸y±o_uöt4
 * 
öput
,

294 
Àn
)

296 
i
, 
j
;

298 
i
 = 0, 
j
 = 0; j < 
Àn
; i++, j += 4) {

299 
ouçut
[
j
] = (Ë(
öput
[
i
] & 0xff);

300 
ouçut
[
j
 + 1] = (Ë((
öput
[
i
] >> 8) & 0xff);

301 
ouçut
[
j
 + 2] = (Ë((
öput
[
i
] >> 16) & 0xff);

302 
ouçut
[
j
 + 3] = (Ë((
öput
[
i
] >> 24) & 0xff);

304 
	}
}

309 
	$Decode
(
¸y±o_uöt4
 * 
ouçut
, c⁄° *
öput
,

310 
Àn
)

312 
i
, 
j
;

314 
i
 = 0, 
j
 = 0; j < 
Àn
; i++, j += 4)

315 
ouçut
[
i
] =

316 ((
¸y±o_uöt4
Ë
öput
[
j
]) | (((crypto_uint4) input[j + 1]) <<

317 8Ë| (((
¸y±o_uöt4
)

318 
öput
[
j
 +

320 (((
¸y±o_uöt4
Ë
öput
[
j
 + 3]) << 24);

321 
	}
}

326 sig√d 
v6ªady
;

	@src/crypto-md5.h

24 #i‚de‡
__CRYPTO_MD5_H__


25 
	#__CRYPTO_MD5_H__
 1

	)

28 
	sMD5_CTX
 {

29 
¸y±o_uöt4
 
	m°©e
[4];

30 
¸y±o_uöt4
 
	mcou¡
[2];

31 
	mbuf„r
[64];

32 } 
	tMD5_CTX
;

34 
MD5Inô
(
MD5_CTX
 * 
c⁄ãxt
);

35 
MD5Upd©e
(
MD5_CTX
 * 
c⁄ãxt
, c⁄° * 
d©a
,

36 
Àn
);

37 
MD5FöÆ
(
dige°
[16], 
MD5_CTX
 *
c⁄ãxt
);

	@src/crypto-sha1.c

15 
	~<c⁄fig.h
>

17 #i‡(
deföed
(
WITH_LDAP
Ë|| deföed(
WITH_MYSQL
Ë|| deföed(
WITH_PGSQL
)Ë&& !deföed(
USE_SYSTEM_CRYPT_SHA1
)

19 
	~"·pd.h
"

20 
	~"¸y±o.h
"

21 
	~"¸y±o-sha1.h
"

23 #ifde‡
WITH_DMALLOC


24 
	~<dmÆloc.h
>

29 
	#SHA1HANDSOFF


	)

31 
	#rﬁ
(
vÆue
, 
bôs
Ë(((vÆueË<< (bôs)Ë| ((vÆueË>> (32 - (bôs))))

	)

35 #i‚de‡
WORDS_BIGENDIAN


36 
	#blk0
(
i
Ë(
block
->
l
[i] = (
	`rﬁ
(block->l[i],24)&0xFF00FF00) \

37 |(
	`rﬁ
(
block
->
l
[
i
],8)&0x00FF00FF))

	)

39 
	#blk0
(
i
Ë
block
->
l
[i]

	)

41 
	#blk
(
i
Ë(
block
->
l
[i&15] = 
	`rﬁ
(block->l[(i+13)&15]^block->l[(i+8)&15] \

42 ^
block
->
l
[(
i
+2)&15]^block->l[i&15],1))

	)

45 
	#R0
(
v
,
w
,
x
,
y
,
z
,
i
Ëz+=((w&(x^y))^y)+
	`blk0
(i)+0x5A827999+
	`rﬁ
(v,5);wÙﬁ(w,30);

	)

46 
	#R1
(
v
,
w
,
x
,
y
,
z
,
i
Ëz+=((w&(x^y))^y)+
	`blk
(i)+0x5A827999+
	`rﬁ
(v,5);wÙﬁ(w,30);

	)

47 
	#R2
(
v
,
w
,
x
,
y
,
z
,
i
Ëz+=(w^x^y)+
	`blk
(i)+0x6ED9EBA1+
	`rﬁ
(v,5);wÙﬁ(w,30);

	)

48 
	#R3
(
v
,
w
,
x
,
y
,
z
,
i
Ëz+=(((w|x)&y)|(w&x))+
	`blk
(i)+0x8F1BBCDC+
	`rﬁ
(v,5);wÙﬁ(w,30);

	)

49 
	#R4
(
v
,
w
,
x
,
y
,
z
,
i
Ëz+=(w^x^y)+
	`blk
(i)+0xCA62C1D6+
	`rﬁ
(v,5);wÙﬁ(w,30);

	)

54 
	$SHA1Tønsf‹m
(
¸y±o_uöt4
 
°©e
[5],

55 c⁄° 
buf„r
[64])

57 
¸y±o_uöt4
 
a
, 
b
, 
c
, 
d
, 
e
;

59 
c
[64];

60 
l
[16];

61 } 
	tCHAR64LONG16
;

62 
CHAR64LONG16
 *
block
;

63 #ifde‡
SHA1HANDSOFF


64 
CHAR64LONG16
 
w‹k•a˚
;

66 
block
 = &
w‹k•a˚
;

67 
	`mem˝y
(
block
, 
buf„r
, 64);

69 
block
 = (
CHAR64LONG16
 *Ë
buf„r
;

72 
a
 = 
°©e
[0];

73 
b
 = 
°©e
[1];

74 
c
 = 
°©e
[2];

75 
d
 = 
°©e
[3];

76 
e
 = 
°©e
[4];

78 
	`R0
(
a
, 
b
, 
c
, 
d
, 
e
, 0);

79 
	`R0
(
e
, 
a
, 
b
, 
c
, 
d
, 1);

80 
	`R0
(
d
, 
e
, 
a
, 
b
, 
c
, 2);

81 
	`R0
(
c
, 
d
, 
e
, 
a
, 
b
, 3);

82 
	`R0
(
b
, 
c
, 
d
, 
e
, 
a
, 4);

83 
	`R0
(
a
, 
b
, 
c
, 
d
, 
e
, 5);

84 
	`R0
(
e
, 
a
, 
b
, 
c
, 
d
, 6);

85 
	`R0
(
d
, 
e
, 
a
, 
b
, 
c
, 7);

86 
	`R0
(
c
, 
d
, 
e
, 
a
, 
b
, 8);

87 
	`R0
(
b
, 
c
, 
d
, 
e
, 
a
, 9);

88 
	`R0
(
a
, 
b
, 
c
, 
d
, 
e
, 10);

89 
	`R0
(
e
, 
a
, 
b
, 
c
, 
d
, 11);

90 
	`R0
(
d
, 
e
, 
a
, 
b
, 
c
, 12);

91 
	`R0
(
c
, 
d
, 
e
, 
a
, 
b
, 13);

92 
	`R0
(
b
, 
c
, 
d
, 
e
, 
a
, 14);

93 
	`R0
(
a
, 
b
, 
c
, 
d
, 
e
, 15);

94 
	`R1
(
e
, 
a
, 
b
, 
c
, 
d
, 16);

95 
	`R1
(
d
, 
e
, 
a
, 
b
, 
c
, 17);

96 
	`R1
(
c
, 
d
, 
e
, 
a
, 
b
, 18);

97 
	`R1
(
b
, 
c
, 
d
, 
e
, 
a
, 19);

98 
	`R2
(
a
, 
b
, 
c
, 
d
, 
e
, 20);

99 
	`R2
(
e
, 
a
, 
b
, 
c
, 
d
, 21);

100 
	`R2
(
d
, 
e
, 
a
, 
b
, 
c
, 22);

101 
	`R2
(
c
, 
d
, 
e
, 
a
, 
b
, 23);

102 
	`R2
(
b
, 
c
, 
d
, 
e
, 
a
, 24);

103 
	`R2
(
a
, 
b
, 
c
, 
d
, 
e
, 25);

104 
	`R2
(
e
, 
a
, 
b
, 
c
, 
d
, 26);

105 
	`R2
(
d
, 
e
, 
a
, 
b
, 
c
, 27);

106 
	`R2
(
c
, 
d
, 
e
, 
a
, 
b
, 28);

107 
	`R2
(
b
, 
c
, 
d
, 
e
, 
a
, 29);

108 
	`R2
(
a
, 
b
, 
c
, 
d
, 
e
, 30);

109 
	`R2
(
e
, 
a
, 
b
, 
c
, 
d
, 31);

110 
	`R2
(
d
, 
e
, 
a
, 
b
, 
c
, 32);

111 
	`R2
(
c
, 
d
, 
e
, 
a
, 
b
, 33);

112 
	`R2
(
b
, 
c
, 
d
, 
e
, 
a
, 34);

113 
	`R2
(
a
, 
b
, 
c
, 
d
, 
e
, 35);

114 
	`R2
(
e
, 
a
, 
b
, 
c
, 
d
, 36);

115 
	`R2
(
d
, 
e
, 
a
, 
b
, 
c
, 37);

116 
	`R2
(
c
, 
d
, 
e
, 
a
, 
b
, 38);

117 
	`R2
(
b
, 
c
, 
d
, 
e
, 
a
, 39);

118 
	`R3
(
a
, 
b
, 
c
, 
d
, 
e
, 40);

119 
	`R3
(
e
, 
a
, 
b
, 
c
, 
d
, 41);

120 
	`R3
(
d
, 
e
, 
a
, 
b
, 
c
, 42);

121 
	`R3
(
c
, 
d
, 
e
, 
a
, 
b
, 43);

122 
	`R3
(
b
, 
c
, 
d
, 
e
, 
a
, 44);

123 
	`R3
(
a
, 
b
, 
c
, 
d
, 
e
, 45);

124 
	`R3
(
e
, 
a
, 
b
, 
c
, 
d
, 46);

125 
	`R3
(
d
, 
e
, 
a
, 
b
, 
c
, 47);

126 
	`R3
(
c
, 
d
, 
e
, 
a
, 
b
, 48);

127 
	`R3
(
b
, 
c
, 
d
, 
e
, 
a
, 49);

128 
	`R3
(
a
, 
b
, 
c
, 
d
, 
e
, 50);

129 
	`R3
(
e
, 
a
, 
b
, 
c
, 
d
, 51);

130 
	`R3
(
d
, 
e
, 
a
, 
b
, 
c
, 52);

131 
	`R3
(
c
, 
d
, 
e
, 
a
, 
b
, 53);

132 
	`R3
(
b
, 
c
, 
d
, 
e
, 
a
, 54);

133 
	`R3
(
a
, 
b
, 
c
, 
d
, 
e
, 55);

134 
	`R3
(
e
, 
a
, 
b
, 
c
, 
d
, 56);

135 
	`R3
(
d
, 
e
, 
a
, 
b
, 
c
, 57);

136 
	`R3
(
c
, 
d
, 
e
, 
a
, 
b
, 58);

137 
	`R3
(
b
, 
c
, 
d
, 
e
, 
a
, 59);

138 
	`R4
(
a
, 
b
, 
c
, 
d
, 
e
, 60);

139 
	`R4
(
e
, 
a
, 
b
, 
c
, 
d
, 61);

140 
	`R4
(
d
, 
e
, 
a
, 
b
, 
c
, 62);

141 
	`R4
(
c
, 
d
, 
e
, 
a
, 
b
, 63);

142 
	`R4
(
b
, 
c
, 
d
, 
e
, 
a
, 64);

143 
	`R4
(
a
, 
b
, 
c
, 
d
, 
e
, 65);

144 
	`R4
(
e
, 
a
, 
b
, 
c
, 
d
, 66);

145 
	`R4
(
d
, 
e
, 
a
, 
b
, 
c
, 67);

146 
	`R4
(
c
, 
d
, 
e
, 
a
, 
b
, 68);

147 
	`R4
(
b
, 
c
, 
d
, 
e
, 
a
, 69);

148 
	`R4
(
a
, 
b
, 
c
, 
d
, 
e
, 70);

149 
	`R4
(
e
, 
a
, 
b
, 
c
, 
d
, 71);

150 
	`R4
(
d
, 
e
, 
a
, 
b
, 
c
, 72);

151 
	`R4
(
c
, 
d
, 
e
, 
a
, 
b
, 73);

152 
	`R4
(
b
, 
c
, 
d
, 
e
, 
a
, 74);

153 
	`R4
(
a
, 
b
, 
c
, 
d
, 
e
, 75);

154 
	`R4
(
e
, 
a
, 
b
, 
c
, 
d
, 76);

155 
	`R4
(
d
, 
e
, 
a
, 
b
, 
c
, 77);

156 
	`R4
(
c
, 
d
, 
e
, 
a
, 
b
, 78);

157 
	`R4
(
b
, 
c
, 
d
, 
e
, 
a
, 79);

159 
°©e
[0] +
a
;

160 
°©e
[1] +
b
;

161 
°©e
[2] +
c
;

162 
°©e
[3] +
d
;

163 
°©e
[4] +
e
;

165 
a
 = 
b
 = 
c
 = 
d
 = 
e
 = 0;

166 
	}
}

171 
	$SHA1Inô
(
SHA1_CTX
 * 
c⁄ãxt
)

174 
c⁄ãxt
->
°©e
[0] = 0x67452301;

175 
c⁄ãxt
->
°©e
[1] = 0xEFCDAB89;

176 
c⁄ãxt
->
°©e
[2] = 0x98BADCFE;

177 
c⁄ãxt
->
°©e
[3] = 0x10325476;

178 
c⁄ãxt
->
°©e
[4] = 0xC3D2E1F0;

179 
c⁄ãxt
->
cou¡
[0] = context->count[1] = 0;

180 
	}
}

185 
	$SHA1Upd©e
(
SHA1_CTX
 * 
c⁄ãxt
, c⁄° *
d©a
,

186 
Àn
)

188 
i
;

189 
j
;

191 
j
 = 
c⁄ãxt
->
cou¡
[0];

192 i‡((
c⁄ãxt
->
cou¡
[0] +
Àn
 << 3Ë< 
j
)

193 
c⁄ãxt
->
cou¡
[1] +(
Àn
 >> 29) + 1;

194 
j
 = (j >> 3) & 63;

195 i‡((
j
 + 
Àn
) > 63) {

196 
	`mem˝y
(&
c⁄ãxt
->
buf„r
[
j
], 
d©a
, (
i
 = 64 - j));

197 
	`SHA1Tønsf‹m
(
c⁄ãxt
->
°©e
, c⁄ãxt->
buf„r
);

198 ; 
i
 + 63 < 
Àn
; i += 64) {

199 
	`SHA1Tønsf‹m
(
c⁄ãxt
->
°©e
, &
d©a
[
i
]);

201 
j
 = 0;

203 
i
 = 0;

204 
	`mem˝y
(&
c⁄ãxt
->
buf„r
[
j
], &
d©a
[
i
], 
Àn
 - i);

205 
	}
}

210 
	$SHA1FöÆ
(
dige°
[20], 
SHA1_CTX
 * 
c⁄ãxt
)

212 
i
;

213 
föÆcou¡
[8];

215 
i
 = 0; i < 8; i++) {

216 
föÆcou¡
[
i
] = (Ë((
c⁄ãxt
->
cou¡
[(i >= 4 ? 0 : 1)]

217 >> ((3 - (
i
 & 3)) * 8)) & 255);

219 
	`SHA1Upd©e
(
c⁄ãxt
, (const *) "\200", 1);

220 (
c⁄ãxt
->
cou¡
[0] & 504) != 448) {

221 
	`SHA1Upd©e
(
c⁄ãxt
, (const *) "\0", 1);

223 
	`SHA1Upd©e
(
c⁄ãxt
, 
föÆcou¡
, 8);

225 i‡(
dige°
 !
NULL
) {

226 
i
 = 0; i < 20; i++) {

227 
dige°
[
i
] = ()

228 ((
c⁄ãxt
->
°©e
[
i
 >> 2] >> ((3 - (i & 3)) * 8)) & 255);

233 
i
 = 0;

234 
	`mem£t
(
c⁄ãxt
->
buf„r
, 0, 64);

235 
	`mem£t
(
c⁄ãxt
->
°©e
, 0, 20);

236 
	`mem£t
(
c⁄ãxt
->
cou¡
, 0, 8);

237 
	`mem£t
(&
föÆcou¡
, 0, 8);

238 #ifde‡
SHA1HANDSOFF


239 
	`SHA1Tønsf‹m
(
c⁄ãxt
->
°©e
, c⁄ãxt->
buf„r
);

242 
	}
}

245 sig√d 
v6ªady
;

	@src/crypto-sha1.h

7 #i‚de‡
__SHA1_H__


8 
	#__SHA1_H__
 1

	)

11 
¸y±o_uöt4
 
	m°©e
[5];

12 
¸y±o_uöt4
 
	mcou¡
[2];

13 
	mbuf„r
[64];

14 } 
	tSHA1_CTX
;

16 
SHA1Inô
(
SHA1_CTX
 * 
c⁄ãxt
);

17 
SHA1Upd©e
(
SHA1_CTX
 * 
c⁄ãxt
, c⁄° * 
d©a
,

18 
Àn
);

19 
SHA1FöÆ
(
dige°
[20], 
SHA1_CTX
 * 
c⁄ãxt
);

	@src/crypto.c

1 
	~<c⁄fig.h
>

3 #i‡
deföed
(
WITH_LDAP
Ë|| deföed(
WITH_MYSQL
Ë|| deföed(
WITH_PGSQL
)

5 
	~"·pd.h
"

6 
	~"¸y±o.h
"

7 #i‚de‡
USE_SYSTEM_CRYPT_SHA1


8 
	~"¸y±o-sha1.h
"

10 
	~<sha1.h
>

12 #i‚de‡
USE_SYSTEM_CRYPT_MD5


13 
	~"¸y±o-md5.h
"

15 
	~<md5.h
>

18 #ifde‡
WITH_DMALLOC


19 
	~<dmÆloc.h
>

24 *
	$hexify
(* c⁄° 
ªsu…
, c⁄° *
dige°
,

25 c⁄° 
size_t
 
size_ªsu…
, size_à
size_dige°
)

27 c⁄° * c⁄° 
hexch¨s
 = "0123456789abcdef";

28 *
ªsu…_≤t
 = 
ªsu…
;

35 i‡(
size_dige°
 < (
size_t
) 2U ||

36 
size_ªsu…
 <(
size_dige°
 * (
size_t
) 2U)) {

37  
NULL
;

40 *
ªsu…_≤t
++ = 
hexch¨s
[(*
dige°
 >> 4) & 0xf];

41 *
ªsu…_≤t
++ = 
hexch¨s
[*
dige°
 & 0xf];

42 
dige°
++;

43 
size_dige°
--;

44 } 
size_dige°
 > (
size_t
) 0U);

45 *
ªsu…_≤t
 = 0;

47  
ªsu…
;

48 
	}
}

52 *
	$ba£64ify
(* c⁄° 
ªsu…
, c⁄° *
dige°
,

53 c⁄° 
size_t
 
size_ªsu…
, size_à
size_dige°
)

55 c⁄° * c⁄° 
b64ch¨s
 =

57 *
ªsu…_≤t
 = 
ªsu…
;

59 i‡(
size_ªsu…
 < (((
size_dige°
 + 2U) / 3U) * 4U + 1U)) {

60  
NULL
;

62 
size_dige°
 > (
size_t
) 2U) {

63 c⁄° 
t0
 = (Ë*
dige°
++;

64 c⁄° 
t1
 = (Ë*
dige°
++;

65 c⁄° 
t2
 = (Ë*
dige°
++;

67 *
ªsu…_≤t
++ = 
b64ch¨s
[(
t0
 >> 2) & 63];

68 *
ªsu…_≤t
++ = 
b64ch¨s
[((
t0
 << 4Ë& 48Ë| ((
t1
 >> 4) & 15)];

69 *
ªsu…_≤t
++ = 
b64ch¨s
[((
t1
 << 2Ë& 60Ë| ((
t2
 >> 6) & 3)];

70 *
ªsu…_≤t
++ = 
b64ch¨s
[
t2
 & 63];

71 
size_dige°
 -(
size_t
) 3U;

73 i‡(
size_dige°
 > (
size_t
) 0U) {

74 c⁄° 
t0
 = (Ë
dige°
[0];

76 *
ªsu…_≤t
++ = 
b64ch¨s
[(
t0
 >> 2) & 63];

77 i‡(
size_dige°
 == 1U) {

78 *
ªsu…_≤t
++ = 
b64ch¨s
[((
t0
 << 4) & 48)];

79 *
ªsu…_≤t
++ = '=';

81 c⁄° 
t1
 = (Ë
dige°
[1];

83 *
ªsu…_≤t
++ = 
b64ch¨s
[((
t0
 << 4Ë& 48Ë| ((
t1
 >> 4) & 15)];

84 *
ªsu…_≤t
++ = 
b64ch¨s
[((
t1
 << 2) & 60)];

86 *
ªsu…_≤t
++ = '=';

88 *
ªsu…_≤t
 = 0;

90  
ªsu…
;

91 
	}
}

95 *
	$deba£64ify
(* c⁄° 
ªsu…
, c⁄° *
ícoded
,

96 c⁄° 
size_t
 
size_ªsu…
, size_à
size_ícoded
,

97 
size_t
 *
size_decoded
)

99 c⁄° 
ªv64ch¨s
[] = {

109 
size_t
 
ch
 = 
size_ícoded
;

110 *
ªsu…_≤t
 = 
ªsu…
;

111 
exåa
 = 0;

113 i‡(
size_ªsu…
 < (((
size_ícoded
 + 3U) / 4U) * 3U + 1U)) {

114  
NULL
;

116 
ch
 > (
size_t
) 0U) {

117 i‡(
ícoded
[--
ch
] > 'z') {

118  
NULL
;

121 
size_ícoded
 > (
size_t
) 3U) {

122 c⁄° 
t1
 = 
ªv64ch¨s
[
ícoded
[1]];

123 c⁄° 
t2
 = 
ªv64ch¨s
[
ícoded
[2]];

124 c⁄° 
t3
 = 
ªv64ch¨s
[
ícoded
[3]];

129 *
ªsu…_≤t
++ = (Ë((
ªv64ch¨s
[
ícoded
[0]] << 2Ë| ((
t1
 & 48) >> 4));

130 *
ªsu…_≤t
++ = (Ë(((
t1
 & 15Ë<< 4Ë| ((
t2
 & 60) >> 2));

131 *
ªsu…_≤t
++ = (Ë(((
t2
 & 3Ë<< 6Ë| 
t3
);

132 i‡(
t3
 == 255U) {

133 i‡(
t2
 == 255U) {

134 
exåa
 = 2;

136 
exåa
 = 1;

140 
ícoded
 += 4;

141 
size_ícoded
 -(
size_t
) 4U;

143 *
size_decoded
 = (
size_t
Ë(
ªsu…_≤t
 - 
ªsu…
Ë- 
exåa
;

144 *
ªsu…_≤t
 = 0;

146  
ªsu…
;

147 
	}
}

151 *
	$¸y±o_hash_sha1
(c⁄° *
°rög
, c⁄° 
hex
)

153 
SHA1_CTX
 
˘x
;

154 
dige°
[20];

155 
ªsu…
[41];

157 
	`SHA1Inô
(&
˘x
);

158 i‡(
°rög
 !
NULL
 && *string != 0) {

159 
	`SHA1Upd©e
(&
˘x
, (c⁄° *Ë
°rög
,

160 (Ë
	`°æí
(
°rög
));

162 
	`SHA1FöÆ
(
dige°
, &
˘x
);

164 i‡(
hex
 == 0) {

165  
	`ba£64ify
(
ªsu…
, 
dige°
, Ñesult,  digest);

167  
	`hexify
(
ªsu…
, 
dige°
, Ñesult,  digest);

168 
	}
}

173 *
	$¸y±o_hash_md5
(c⁄° *
°rög
, c⁄° 
hex
)

175 
MD5_CTX
 
˘x
;

176 
dige°
[16];

177 
ªsu…
[33];

179 
	`MD5Inô
(&
˘x
);

180 i‡(
°rög
 !
NULL
 && *string != 0) {

181 
	`MD5Upd©e
(&
˘x
, (c⁄° *Ë
°rög
,

182 (Ë
	`°æí
(
°rög
));

184 
	`MD5FöÆ
(
dige°
, &
˘x
);

186 i‡(
hex
 == 0) {

187  
	`ba£64ify
(
ªsu…
, 
dige°
, Ñesult,  digest);

189  
	`hexify
(
ªsu…
, 
dige°
, Ñesult,  digest);

190 
	}
}

195 *
	$¸y±o_hash_ssha1
(c⁄° *
°rög
, c⁄° *
°‹ed
)

197 
SHA1_CTX
 
˘x
;

198 c⁄° *
ß…
;

199 
dige°
[20];

200 
size_t
 
decoded_Àn
;

201 *
hash_™d_ß…
;

202 
size_t
 
sizeof_hash_™d_ß…
;

203 
decoded
[512];

205 i‡(
	`deba£64ify
(
decoded
, (c⁄° *Ë
°‹ed
,

206  
decoded
, 
	`°æí
(
°‹ed
), &
decoded_Àn
Ë=
NULL
) {

207  
NULL
;

209 i‡(
decoded_Àn
 <  
dige°
) {

210  
NULL
;

212 
ß…
 = 
decoded
 +  
dige°
;

213 
decoded_Àn
 - 
dige°
;

214 
	`SHA1Inô
(&
˘x
);

215 i‡(
°rög
 !
NULL
 && *string != 0) {

216 
	`SHA1Upd©e
(&
˘x
, (c⁄° *Ë
°rög
,

217 (Ë
	`°æí
(
°rög
));

219 i‡(
decoded_Àn
 > (
size_t
) 0U) {

220 
	`SHA1Upd©e
(&
˘x
, (c⁄° *Ë
ß…
, 
decoded_Àn
);

222 
	`SHA1FöÆ
(
dige°
, &
˘x
);

223 
sizeof_hash_™d_ß…
 =  
dige°
 + 
decoded_Àn
;

224 i‡((
hash_™d_ß…
 = 
	`ALLOCA
(
sizeof_hash_™d_ß…
)Ë=
NULL
) {

225  
NULL
;

227 
	`mem˝y
(
hash_™d_ß…
, 
dige°
,  digest);

228 
	`mem˝y
(
hash_™d_ß…
 +  
dige°
, 
ß…
, 
decoded_Àn
);

229 i‡(
	`ba£64ify
(
decoded
, (c⁄° *Ë
hash_™d_ß…
,

230  
decoded
, 
sizeof_hash_™d_ß…
Ë=
NULL
) {

231 
	`ALLOCA_FREE
(
hash_™d_ß…
);

232  
NULL
;

234 
	`ALLOCA_FREE
(
hash_™d_ß…
);

236  
decoded
;

237 
	}
}

241 *
	$¸y±o_hash_smd5
(c⁄° *
°rög
, c⁄° *
°‹ed
)

243 
MD5_CTX
 
˘x
;

244 c⁄° *
ß…
;

245 
dige°
[20];

246 
size_t
 
decoded_Àn
;

247 *
hash_™d_ß…
;

248 
size_t
 
sizeof_hash_™d_ß…
;

249 
decoded
[512];

251 i‡(
	`deba£64ify
(
decoded
, (c⁄° *Ë
°‹ed
,

252  
decoded
, 
	`°æí
(
°‹ed
), &
decoded_Àn
Ë=
NULL
) {

253  
NULL
;

255 i‡(
decoded_Àn
 <  
dige°
) {

256  
NULL
;

258 
ß…
 = 
decoded
 +  
dige°
;

259 
decoded_Àn
 - 
dige°
;

260 
	`MD5Inô
(&
˘x
);

261 i‡(
°rög
 !
NULL
 && *string != 0) {

262 
	`MD5Upd©e
(&
˘x
, (c⁄° *Ë
°rög
,

263 (Ë
	`°æí
(
°rög
));

265 i‡(
decoded_Àn
 > (
size_t
) 0U) {

266 
	`MD5Upd©e
(&
˘x
, (c⁄° *Ë
ß…
, 
decoded_Àn
);

268 
	`MD5FöÆ
(
dige°
, &
˘x
);

269 
sizeof_hash_™d_ß…
 =  
dige°
 + 
decoded_Àn
;

270 i‡((
hash_™d_ß…
 = 
	`ALLOCA
(
sizeof_hash_™d_ß…
)Ë=
NULL
) {

271  
NULL
;

273 
	`mem˝y
(
hash_™d_ß…
, 
dige°
,  digest);

274 
	`mem˝y
(
hash_™d_ß…
 +  
dige°
, 
ß…
, 
decoded_Àn
);

275 i‡(
	`ba£64ify
(
decoded
, (c⁄° *Ë
hash_™d_ß…
,

276  
decoded
, 
sizeof_hash_™d_ß…
Ë=
NULL
) {

277 
	`ALLOCA_FREE
(
hash_™d_ß…
);

278  
NULL
;

280 
	`ALLOCA_FREE
(
hash_™d_ß…
);

282  
decoded
;

283 
	}
}

286 sig√d 
v6ªady
;

	@src/crypto.h

1 #i‚de‡
__CRYPTO_H__


2 
	#__CRYPTO_H__
 1

	)

4 #i‡
SIZEOF_SHORT
 == 4

5 
	t¸y±o_öt4
;

6 
	t¸y±o_uöt4
;

7 #ñi‡
SIZEOF_INT
 == 4

8 
	t¸y±o_öt4
;

9 
	t¸y±o_uöt4
;

10 #ñi‡
SIZEOF_LONG
 == 4

11 
	t¸y±o_öt4
;

12 
	t¸y±o_uöt4
;

13 #ñi‡
SIZEOF_SHORT
 > 4

14 
	t¸y±o_öt4
;

15 
	t¸y±o_uöt4
;

16 #ñi‡
SIZEOF_INT
 > 4

17 
	t¸y±o_öt4
;

18 
	t¸y±o_uöt4
;

19 #ñi‡
SIZEOF_LONG
 > 4

20 
	t¸y±o_öt4
;

21 
	t¸y±o_uöt4
;

23 #îr‹ 
PÀa£
 
ªp‹t
 
your
 
¨chôe˘uª
 
™d
 
OS
 
ty≥
 
to
 
j
 
©
 
puª·pd
 
dŸ
 
‹g


26 *
¸y±o_hash_sha1
(c⁄° *
°rög
, c⁄° 
hex
);

27 *
¸y±o_hash_ssha1
(c⁄° *
°rög
, c⁄° *
°‹ed
);

28 *
¸y±o_hash_md5
(c⁄° *
°rög
, c⁄° 
hex
);

29 *
¸y±o_hash_smd5
(c⁄° *
°rög
, c⁄° *
°‹ed
);

	@src/daemons.c

1 
	~<c⁄fig.h
>

3 #i‡!
deföed
(
NO_INETD
Ë|| deföed(
IN_PURE_MRTGINFO
)

4 
	~"·pd.h
"

6 #ifde‡
WITH_DMALLOC


7 
	~<dmÆloc.h
>

10 
	#TCP_STATE_CNX
 1UL

	)

12 
	$cou¡
(
ö_p‹t_t
 
£rvî_p‹t
, c⁄° * c⁄° 
fûe
)

14 
f
;

15 
r
;

16 
c
;

17 
b
 = 0;

18 
e
 = 0;

19 
d
 = 0U;

20 
buf
[2049];

22 i‡((
f
 = 
	`›í
(
fûe
, 
O_RDONLY
)) == -1) {

25 
buf
[2048] = 0;

28 (
r
 = (Ë
	`ªad
(
f
, 
buf
 + 
e
, (
size_t
) (2048U -É)))

29 < (
ssize_t
Ë0 && 
î∫o
 =
EINTR
);

30 i‡(
r
 <(
ssize_t
) 0) {

33 
e
 +
r
;

39 
c
 = 
b
;

40 
c
 < 
e
 && 
buf
[c] != '\n') {

41 
c
++;

43 
c
 < 
e
) {

44 
buf
[
c
++] = 0;

45 
b
 < 
c
 && 
buf
[b] != ':' && buf[b] != '\n') {

46 
b
++;

48 i‡(
b
 < 
c
 && 
buf
[b] == ':') {

49 
b
++;

50 
b
 < 
e
 && 
buf
[b] != ':') {

51 
b
++;

53 
b
++;

54 i‡(
	`°πoul
(
buf
 + 
b
, 
NULL
, 16) ==

55 (Ë
£rvî_p‹t
) {

56 
b
 < 
e
 && 
buf
[b] != ':') {

57 
b
++;

59 i‡(
buf
[
b
] == ':') {

60 
b
++;

61 
b
 < 
e
 && 
buf
[b] != ' ') {

62 
b
++;

64 i‡(
buf
[
b
] == ' ') {

65 
b
++;

66 i‡(
	`°πoul
(
buf
 + 
b
, 
NULL
, 16Ë=
TCP_STATE_CNX
) {

67 
d
++;

73 
b
 = 
c
;

74 
c
 < 
e
 && 
buf
[c] != '\n') {

75 
c
++;

78 i‡(
e
 > 
b
) {

79 (Ë
	`memmove
(
buf
, bu‡+ 
b
, (
size_t
Ë(
e
 - b));

81 
e
 -
b
;

82 
b
 = 0;

84 
	`˛o£
(
f
);

86  
d
;

87 
	}
}

89 
	$d´m⁄s
(c⁄° 
ö_p‹t_t
 
£rvî_p‹t
)

91 
nb˙x
;

93 
nb˙x
 = 
	`cou¡
(
£rvî_p‹t
, "/proc/net/tcp");

94 
nb˙x
 +
	`cou¡
(
£rvî_p‹t
, "/proc/net/tcp6");

96  
nb˙x
;

97 
	}
}

99 sig√d 
v6ªady
;

	@src/diraliases.c

40 
	~<c⁄fig.h
>

42 #ifde‡
WITH_DIRALIASES


44 
	~"·pd.h
"

45 
	~"mesßges.h
"

46 
	~"dúÆü£s.h
"

48 #ifde‡
WITH_DMALLOC


49 
	~<dmÆloc.h
>

52 
DúAlüs
 *
	ghód
, *
	gèû
;

53 sig√d 
	gÆü£s_up
;

57 
	$öô_Æü£s
()

59 
FILE
 *
Â
;

60 
Æüs
[
MAXALIASLEN
 + 1U];

61 
dú
[
MAXPATHLEN
 + 1U];

63 i‡((
Â
 = 
	`f›í
(
ALIASES_FILE
, "r")Ë=
NULL
) {

66 
	`fgës
(
Æüs
, álüs, 
Â
Ë!
NULL
) {

67 i‡(*
Æüs
 == '#' || *alias == '\n' || *alias == 0) {

71 * c⁄° 
z
 = 
Æüs
 + 
	`°æí
(alias) - 1U;

73 i‡(*
z
 != '\n') {

74 
bad
;

76 *
z
 = 0;

79 i‡(
	`fgës
(
dú
,  dú, 
Â
Ë=
NULL
 || *dir == 0) {

80 
bad
;

83 * c⁄° 
z
 = 
dú
 + 
	`°æí
(dir) - 1U;

85 i‡(*
z
 == '\n') {

86 *
z
 = 0;

89 } *
dú
 == '#' || *dir == 0);

90 i‡(
hód
 =
NULL
) {

91 i‡((
hód
 = 
èû
 = 
	`mÆloc
( *hód)Ë=
NULL
 ||

92 (
èû
->
Æüs
 = 
	`°rdup
◊lüs)Ë=
NULL
 ||

93 (
èû
->
dú
 = 
	`°rdup
(dú)Ë=
NULL
) {

94 
	`dõ_mem
();

96 
èû
->
√xt
 = 
NULL
;

98 
DúAlüs
 *
cuº
;

100 i‡((
cuº
 = 
	`mÆloc
( *cuº)Ë=
NULL
 ||

101 (
cuº
->
Æüs
 = 
	`°rdup
◊lüs)Ë=
NULL
 ||

102 (
cuº
->
dú
 = 
	`°rdup
(dú)Ë=
NULL
) {

103 
	`dõ_mem
();

105 
èû
->
√xt
 = 
cuº
;

106 
èû
 = 
cuº
;

109 
	`f˛o£
(
Â
);

110 
Æü£s_up
++;

114 
bad
:

115 
	`logfûe
(
LOG_ERR
, 
MSG_ALIASES_BROKEN_FILE
 " [" 
ALIASES_FILE
 "]");

118 
	}
}

121 *
	$lookup_Æüs
(c⁄° *
Æüs
)

123 c⁄° 
DúAlüs
 *
cuº
 = 
hód
;

125 i‡(
Æü£s_up
 == 0) {

126  
NULL
;

128 
cuº
 !
NULL
) {

129 i‡(
	`°rcmp
(
cuº
->
Æüs
,álias) == 0) {

130  
cuº
->
dú
;

132 
cuº
 = cuº->
√xt
;

134  
NULL
;

135 
	}
}

138 
	$¥öt_Æü£s
()

140 c⁄° 
DúAlüs
 *
cuº
 = 
hód
;

142 i‡(
Æü£s_up
 == 0) {

143 
	`addª∂y_nof‹m©
(502, 
MSG_CONF_ERR
);

147 
	`addª∂y_nof‹m©
(214, 
MSG_ALIASES_LIST
);

148 
cuº
 !
NULL
) {

149 
löe
[
MAXALIASLEN
 + 
MAXPATHLEN
 + 3U];

151 
	`¢¥ötf
(
löe
, Üöe, " %†%s", 
cuº
->
Æüs
, cuº->
dú
);

152 
	`addª∂y_nof‹m©
(0, 
löe
);

153 
cuº
 = cuº->
√xt
;

155 
	`addª∂y_nof‹m©
(214, " ");

156 
	}
}

	@src/diraliases.h

1 #i‚de‡
__DIRALIASES_H__


2 
	#__DIRALIASES_H__
 1

	)

4 #ifde‡
WITH_DIRALIASES


6 #i‚de‡
ALIASES_FILE


7 
	#ALIASES_FILE
 
CONFDIR
 "/puª·pd-dú-Æü£s"

	)

9 #i‚de‡
MAXALIASLEN


10 
	#MAXALIASLEN
 256U

	)

13 
	sDúAlüs_
 {

14 *
	mÆüs
;

15 *
	mdú
;

16 
DúAlüs_
 *
	m√xt
;

17 } 
	tDúAlüs
;

19 
öô_Æü£s
();

20 *
lookup_Æüs
(c⁄° *
Æüs
);

21 
¥öt_Æü£s
();

	@src/dynamic.c

1 
	~<c⁄fig.h
>

3 #i‚de‡
NO_STANDALONE


5 
	~"·pd.h
"

6 
	~"dy«mic.h
"

7 
	~"·pwho-upd©e.h
"

8 
	~"globÆs.h
"

10 #ifde‡
WITH_DMALLOC


11 
	~<dmÆloc.h
>

14 
IPTøck
 *
	gùåack_li°
;

16 
	$ùåack_dñëe_pid
(c⁄° 
pid_t
 
pid
)

18 
c
 = 0U;

20 i‡(
ùåack_li°
 =
NULL
) {

24 i‡(
ùåack_li°
[
c
].
pid
 ==Öid) {

25 
ùåack_li°
[
c
].
pid
 = (
pid_t
) 0;

28 
c
++;

29 } 
c
 < 
maxu£rs
);

30 
	}
}

32 
	$ùåack_‰ì
()

34 
	`‰ì
(
ùåack_li°
);

35 
ùåack_li°
 = 
NULL
;

36 
	}
}

38 
	gùåack_föd_ù_‹_shi·


39 (c⁄° 
sockaddr_°‹age
 * c⁄° 
	gù
)

41 
	gc
 = 0U;

44 i‡(
	gùåack_li°
[
c
].
	gpid
 !(
pid_t
) 0 &&

45 
STORAGE_FAMILY
(
ùåack_li°
[
c
].
ù
) != STORAGE_FAMILY(*ip)) {

46 i‡(
STORAGE_FAMILY
(
ùåack_li°
[
c
].
ù
Ë=
AF_INET
 &&

47 
STORAGE_SIN_ADDR
(
ùåack_li°
[
c
].
ù
) == STORAGE_SIN_ADDR(*ip)) {

48  
c
;

49 } i‡(
STORAGE_FAMILY
(
ùåack_li°
[
c
].
ù
Ë=
AF_INET6
 &&

50 
IN6_ARE_ADDR_EQUAL


51 (&
STORAGE_SIN_ADDR6_NF
(
ùåack_li°
[
c
].
ù
),

52 &
STORAGE_SIN_ADDR6_NF
(*
ù
))) {

53  
	gc
;

56 
	gc
++;

57 } 
	gc
 < 
	gmaxu£rs
);

58 
	gc
--;

59 i‡(
	gc
 != 0U) {

60 
memmove
(&(
ùåack_li°
[0]), &(iptrack_list[1]),

61 ( 
ùåack_li°
[0]Ë* 
c
);

63  
	gc
;

66 
	$ùåack_gë
(c⁄° 
sockaddr_°‹age
 * c⁄° 
ù
)

68 
c
 = 0U;

69 
nb
 = 0U;

71 i‡(
ùåack_li°
 =
NULL
) {

75 i‡(
ùåack_li°
[
c
].
pid
 !(
pid_t
) 0 &&

76 
	`STORAGE_FAMILY
(
ùåack_li°
[
c
].
ù
) == STORAGE_FAMILY(*ip)) {

77 i‡(
	`STORAGE_FAMILY
(
ùåack_li°
[
c
].
ù
Ë=
AF_INET
 &&

78 
	`STORAGE_SIN_ADDR
(
ùåack_li°
[
c
].
ù
) == STORAGE_SIN_ADDR(*ip)) {

79 
nb
++;

80 } i‡(
	`STORAGE_FAMILY
(
ùåack_li°
[
c
].
ù
Ë=
AF_INET6
 &&

81 
IN6_ARE_ADDR_EQUAL


82 (&
	`STORAGE_SIN_ADDR6_NF
(
ùåack_li°
[
c
].
ù
),

83 &
	`STORAGE_SIN_ADDR6_NF
(*
ù
))) {

84 
nb
++;

87 
c
++;

88 } 
c
 < 
maxu£rs
);

90  
nb
;

91 
	}
}

93 
	$ùåack_add
(c⁄° 
sockaddr_°‹age
 * c⁄° 
ù
,

94 c⁄° 
pid_t
 
pid
)

96 
c
 = 0U;

98 i‡(
ùåack_li°
 =
NULL
) {

99 
ci
 = 0U;

101 i‡((
ùåack_li°
 = 
	`mÆloc
(
maxu£rs
 *  *ùåack_li°)Ë=
NULL
) {

105 
ùåack_li°
[
ci
].
pid
 = (
pid_t
) 0;

106 
ci
++;

107 } 
ci
 < 
maxu£rs
);

110 i‡(
ùåack_li°
[
c
].
pid
 =(
pid_t
) 0U) {

111 
f‹˚
:

112 
ùåack_li°
[
c
].
pid
 =Öid;

113 
ùåack_li°
[
c
].
ù
 = *ip;

116 
c
++;

117 } 
c
 < 
maxu£rs
);

118 
c
 = 
	`ùåack_föd_ù_‹_shi·
(
ù
);

119 
f‹˚
;

120 
	}
}

123 sig√d 
v6ªady
;

	@src/dynamic.h

1 #i‚de‡
__DYNAMIC_H__


2 
	#__DYNAMIC_H__
 1

	)

4 #i‚de‡
NO_STANDALONE


6 
	sIPTøck_
 {

7 
sockaddr_°‹age
 
	mù
;

8 
pid_t
 
	mpid
;

9 } 
	tIPTøck
;

11 
ùåack_dñëe_pid
(c⁄° 
pid_t
 
pid
);

12 
ùåack_gë
(c⁄° 
sockaddr_°‹age
 * c⁄° 
ù
);

13 
ùåack_‰ì
();

14 
ùåack_add
(c⁄° 
sockaddr_°‹age
 * c⁄° 
ù
,

15 c⁄° 
pid_t
 
pid
);

	@src/fakechroot.c

1 
	~<c⁄fig.h
>

3 
	#FAKECHROOT_FUNCS_DEFINITION
 1

	)

5 #ifde‡
WITH_VIRTUAL_CHROOT


7 
	~"·pd.h
"

9 #ifde‡
WITH_DMALLOC


10 
	~<dmÆloc.h
>

13 
	gcurdú
[
MAXPATHLEN
];

14 *
	gchroŸ_ba£
;

15 
size_t
 
	gchroŸ_Àn
;

17 
	$ÁkechroŸ
(c⁄° *
∑th
)

19 *
z
;

21 i‡(
∑th
 =
NULL
 || *path == 0) {

22 #ifde‡
EINVAL


23 
î∫o
 = 
EINVAL
;

27 
	`‰ì
(
chroŸ_ba£
);

28 
chroŸ_ba£
 = 
NULL
;

29 i‡(
∑th
[0] == '/' &&Öath[1] == 0) {

32 i‡((
chroŸ_ba£
 = 
	`°rdup
(
∑th
)Ë=
NULL
) {

35 
	`sim∂ify
(
chroŸ_ba£
);

36 
z
 = 
chroŸ_ba£
;

37 *
z
 != 0) {

38 
z
++;

41 
z
--;

42 i‡(
z
 =
chroŸ_ba£
 || *z != '/') {

45 *
z
 = 0;

47 i‡((
chroŸ_Àn
 = 
	`°æí
(
chroŸ_ba£
)Ë> 
curdú
) {

48 #ifde‡
ENAMETOOLONG


49 
î∫o
 = 
ENAMETOOLONG
;

55 
	}
}

57 *
	$Ákegëcwd
(*
dú
, 
size_t
 
size
)

59 *
curdúchr
;

60 
size_t
 
s
;

62 i‡(
chroŸ_ba£
 =
NULL
) {

63  
	`gëcwd
(
dú
, 
size
);

65 i‡(
	`°∫cmp
(
curdú
, 
chroŸ_ba£
, 
chroŸ_Àn
) != 0) {

66 
	`ab‹t
();

68 
curdúchr
 = 
curdú
 + 
chroŸ_Àn
;

69 
s
 = 
	`°æí
(
curdúchr
);

70 i‡(
s
 <(
size_t
) 0U) {

71 #ifde‡
EFAULT


72 
î∫o
 = 
EFAULT
;

74  
NULL
;

77 *
•
 = 
curdúchr
 + 
s
 - 1U;

79 
•
 !
curdúchr
 && *sp == '/') {

80 *
•
 = 0;

81 
s
--;

84 
s
++;

85 i‡(
s
 > 
size
 || s < (
size_t
) 2U) {

86 #ifde‡
ENAMETOOLONG


87 
î∫o
 = 
ENAMETOOLONG
;

89  
NULL
;

91 
	`mem˝y
(
dú
, 
curdúchr
, 
s
);

93  
curdúchr
;

94 
	}
}

96 
	$Ákexœã
(*
curdútmp
, 
size_t
 
sizeof_curdútmp
, c⁄° *
dú
)

98 *
¶
;

99 
size_t
 
curdúÀn
;

101 i‡((
curdúÀn
 = 
	`°æí
(
curdú
)Ë>
sizeof_curdútmp
) {

104 
	`mem˝y
(
curdútmp
, 
curdú
, 
curdúÀn
 + (
size_t
) 1U);

105 
	`sim∂ify
(
curdútmp
);

106 
lo›
:

107 i‡(
dú
[0] == '.' && dir[1] == '.' &&

108 (
dú
[2] == 0 || dir[2] == '/')) {

109 i‡((
¶
 = 
	`°ºchr
(
curdútmp
, '/')Ë!
NULL
) {

110 *
¶
 = 0;

112 *
curdútmp
 = 0;

114 i‡(
	`°∫cmp
(
curdútmp
, 
chroŸ_ba£
, 
chroŸ_Àn
) != 0 ||

115 
curdútmp
[
chroŸ_Àn
] != '/') {

116 
	`¢¥ötf
(
curdútmp
, 
sizeof_curdútmp
, "%s/", 
chroŸ_ba£
);

118 i‡(
dú
[0] == '.' && dir[1] == '.' && dir[2] == '/') {

119 
dú
 += 3;

120 
lo›
;

122 } i‡(*
dú
 == '/') {

123 
	`¢¥ötf
(
curdútmp
, 
sizeof_curdútmp
, "%s/", 
chroŸ_ba£
);

124 
dú
++;

125 
lo›
;

126 } i‡(*
dú
 != 0) {

127 
size_t
 
dúÀn
;

128 
size_t
 
curdútm∂í
;

130 i‡((
dú
[0] == '.' && dir[1] == '.' &&

131 (
dú
[2] == 0 || dir[2] == '/')) ||

132 
	`°r°r
(
dú
, "/../"Ë!
NULL
) {

133 
≥rm
:

134 #ifde‡
EPERM


135 
î∫o
 = 
EPERM
;

139 
dúÀn
 = 
	`°æí
(
dú
Ë+ (
size_t
) 1U;

140 i‡(
dúÀn
 >(
size_t
) 4U &&

141 (
dú
[
dúÀn
 - 2U] == '.' && dir[dirlen - 3U] == '.' &&

142 
dú
[
dúÀn
 - 4U] == '/')) {

143 
≥rm
;

145 
curdútm∂í
 = 
	`°æí
(
curdútmp
);

146 i‡(
curdútm∂í
 + 
dúÀn
 >
sizeof_curdútmp
) {

147 #ifde‡
ENAMETOOLONG


148 
î∫o
 = 
ENAMETOOLONG
;

152 
curdútmp
[
curdútm∂í
] = '/';

153 
	`mem˝y
(
curdútmp
 + 
curdútm∂í
 + 1U, 
dú
, 
dúÀn
);

155 
	`sim∂ify
(
curdútmp
);

158 
	}
}

160 
	$Ákechdú
(c⁄° *
dú
)

162 
curdútmp
[
MAXPATHLEN
];

163 
size_t
 
curdútm∂í
;

165 i‡(
chroŸ_ba£
 =
NULL
) {

166  
	`chdú
(
dú
);

168 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
dú
) != 0) {

171 i‡(
	`chdú
(
curdútmp
) != 0) {

174 i‡((
curdútm∂í
 = 
	`°æí
(
curdútmp
)Ë> 
curdú
) {

177 
	`mem˝y
(
curdú
, 
curdútmp
, 
curdútm∂í
 + (
size_t
) 1U);

180 
	}
}

182 
	$Áke°©
(c⁄° *
fûe
, 
°©
 *
°
)

184 
curdútmp
[
MAXPATHLEN
];

186 i‡(
chroŸ_ba£
 =
NULL
) {

187  
	`°©
(
fûe
, 
°
);

189 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
fûe
) != 0) {

192  
	`°©
(
curdútmp
, 
°
);

193 
	}
}

195 
	$Ákñ°©
(c⁄° *
fûe
, 
°©
 *
°
)

197 
curdútmp
[
MAXPATHLEN
];

199 i‡(
chroŸ_ba£
 =
NULL
) {

200  
	`l°©
(
fûe
, 
°
);

202 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
fûe
) != 0) {

205  
	`l°©
(
curdútmp
, 
°
);

206 
	}
}

208 
FILE
 *
	$Ákef›í
(c⁄° *
fûe
, c⁄° *
mode
)

210 
curdútmp
[
MAXPATHLEN
];

212 i‡(
chroŸ_ba£
 =
NULL
) {

213  
	`f›í
(
fûe
, 
mode
);

215 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
fûe
) != 0) {

216  
NULL
;

218  
	`f›í
(
curdútmp
, 
mode
);

219 
	}
}

221 
	$Ákóc˚ss
(c⁄° *
fûe
, 
mode_t
 
mode
)

223 
curdútmp
[
MAXPATHLEN
];

225 i‡(
chroŸ_ba£
 =
NULL
) {

226  
	`ac˚ss
(
fûe
, 
mode
);

228 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
fûe
) != 0) {

231  
	`ac˚ss
(
curdútmp
, 
mode
);

232 
	}
}

234 
	$Ákeu∆ök
(c⁄° *
fûe
)

236 
curdútmp
[
MAXPATHLEN
];

238 i‡(
chroŸ_ba£
 =
NULL
) {

239  
	`u∆ök
(
fûe
);

241 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
fûe
) != 0) {

244  
	`u∆ök
(
curdútmp
);

245 
	}
}

247 
DIR
 *
	$Áke›ídú
(c⁄° *
fûe
)

249 
curdútmp
[
MAXPATHLEN
];

251 i‡(
chroŸ_ba£
 =
NULL
) {

252  
	`›ídú
(
fûe
);

254 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
fûe
) != 0) {

255  
NULL
;

257  
	`›ídú
(
curdútmp
);

258 
	}
}

260 
	$Ákechmod
(c⁄° *
fûe
, 
mode_t
 
mode
)

262 
curdútmp
[
MAXPATHLEN
];

264 i‡(
chroŸ_ba£
 =
NULL
) {

265  
	`chmod
(
fûe
, 
mode
);

267 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
fûe
) != 0) {

270  
	`chmod
(
curdútmp
, 
mode
);

271 
	}
}

273 
	$Ákemkdú
(c⁄° *
fûe
, 
mode_t
 
mode
)

275 
curdútmp
[
MAXPATHLEN
];

277 i‡(
chroŸ_ba£
 =
NULL
) {

278  
	`mkdú
(
fûe
, 
mode
);

280 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
fûe
) != 0) {

283  
	`mkdú
(
curdútmp
, 
mode
);

284 
	}
}

286 
	$Ákîmdú
(c⁄° *
fûe
)

288 
curdútmp
[
MAXPATHLEN
];

290 i‡(
chroŸ_ba£
 =
NULL
) {

291  
	`rmdú
(
fûe
);

293 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
fûe
) != 0) {

296  
	`rmdú
(
curdútmp
);

297 
	}
}

299 #ifde‡
HAVE_UTIME


300 
	$Ákeutime
(c⁄° *
fûe
, 
utimbuf
 *
buf
)

302 
curdútmp
[
MAXPATHLEN
];

304 i‡(
chroŸ_ba£
 =
NULL
) {

305  
	`utime
(
fûe
, 
buf
);

307 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
fûe
) != 0) {

310  
	`utime
(
curdútmp
, 
buf
);

311 
	}
}

314 #ifde‡
HAVE_UTIMES


315 
	$Ákeutimes
(c⁄° *
fûe
, 
timevÆ
 *
buf
)

317 
curdútmp
[
MAXPATHLEN
];

319 i‡(
chroŸ_ba£
 =
NULL
) {

320  
	`utimes
(
fûe
, 
buf
);

322 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
fûe
) != 0) {

325  
	`utimes
(
curdútmp
, 
buf
);

326 
	}
}

329 
	$Ákechown
(c⁄° *
fûe
, 
uid_t
 
uid
, 
gid_t
 
gid
)

331 
curdútmp
[
MAXPATHLEN
];

333 i‡(
chroŸ_ba£
 =
NULL
) {

334  
	`chown
(
fûe
, 
uid
, 
gid
);

336 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
fûe
) != 0) {

339  
	`chown
(
fûe
, 
uid
, 
gid
);

340 
	}
}

342 #ifde‡
HAVE_MKFIFO


343 
	$Ákemkfifo
(c⁄° *
fûe
, 
mode_t
 
mode
)

345 
curdútmp
[
MAXPATHLEN
];

347 i‡(
chroŸ_ba£
 =
NULL
) {

348  
	`mkfifo
(
fûe
, 
mode
);

350 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
fûe
) != 0) {

353  
	`mkfifo
(
fûe
, 
mode
);

354 
	}
}

357 #ifde‡
HAVE_MKNOD


358 
	$Ákemknod
(c⁄° *
fûe
, 
mode_t
 
mode
, 
dev_t
 
dev
)

360 
curdútmp
[
MAXPATHLEN
];

362 i‡(
chroŸ_ba£
 =
NULL
) {

363  
	`mknod
(
fûe
, 
mode
, 
dev
);

365 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
fûe
) != 0) {

368  
	`mknod
(
fûe
, 
mode
, 
dev
);

369 
	}
}

372 
	$Ákñök
(c⁄° *
ﬁd∑th
, c⁄° *
√w∑th
)

374 
curdútmp
[
MAXPATHLEN
];

375 
curdútmp2
[
MAXPATHLEN
];

377 i‡(
chroŸ_ba£
 =
NULL
) {

378  
	`lök
(
ﬁd∑th
, 
√w∑th
);

380 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
ﬁd∑th
) != 0 ||

381 
	`Ákexœã
(
curdútmp2
,  curdútmp2, 
√w∑th
) != 0) {

384  
	`lök
(
curdútmp
, 
curdútmp2
);

385 
	}
}

387 
	$Ákesymlök
(c⁄° *
ﬁd∑th
, c⁄° *
√w∑th
)

389 
curdútmp
[
MAXPATHLEN
];

390 
curdútmp2
[
MAXPATHLEN
];

392 i‡(
chroŸ_ba£
 =
NULL
) {

393  
	`symlök
(
ﬁd∑th
, 
√w∑th
);

395 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
ﬁd∑th
) != 0 ||

396 
	`Ákexœã
(
curdútmp2
,  curdútmp2, 
√w∑th
) != 0) {

399  
	`symlök
(
curdútmp
, 
curdútmp2
);

400 
	}
}

402 
	$Ákîódlök
(c⁄° *
fûe
, *
buf
, 
size_t
 
bufsiz
)

404 
curdútmp
[
MAXPATHLEN
];

406 i‡(
chroŸ_ba£
 =
NULL
) {

407  
	`ªadlök
(
fûe
, 
buf
, 
bufsiz
);

409 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
fûe
) != 0) {

412  
	`ªadlök
(
fûe
, 
buf
, 
bufsiz
);

413 
	}
}

415 
	$Ákîíame
(c⁄° *
ﬁd∑th
, c⁄° *
√w∑th
)

417 
curdútmp
[
MAXPATHLEN
];

418 
curdútmp2
[
MAXPATHLEN
];

420 i‡(
chroŸ_ba£
 =
NULL
) {

421  
	`ª«me
(
ﬁd∑th
, 
√w∑th
);

423 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
ﬁd∑th
) != 0 ||

424 
	`Ákexœã
(
curdútmp2
,  curdútmp2, 
√w∑th
) != 0) {

427  
	`ª«me
(
curdútmp
, 
curdútmp2
);

428 
	}
}

435 #i‡
SIZEOF_MODE_T
 <= 0

436 
	#VA_ARG_MODE_T
 

	)

437 #ñi‡
SIZEOF_MODE_T
 <
SIZEOF_INT


438 
	#VA_ARG_MODE_T
 

	)

439 #ñi‡
SIZEOF_MODE_T
 <
SIZEOF_LONG


440 
	#VA_ARG_MODE_T
 

	)

441 #ñi‡
SIZEOF_MODE_T
 <
SIZEOF_LONG_LONG


442 
	#VA_ARG_MODE_T
 

	)

444 
	#VA_ARG_MODE_T
 
mode_t


	)

447 
	$Áke›í
(c⁄° *
fûe
, 
Êags
, ...)

449 
va_li°
 
va
;

450 
mode_t
 
mode
;

451 
curdútmp
[
MAXPATHLEN
];

453 
	`va_°¨t
(
va
, 
Êags
);

454 i‡(
chroŸ_ba£
 =
NULL
) {

455 i‡((
Êags
 & 
O_CREAT
) != 0) {

456 
mode
 = 
	`va_¨g
(
va
, 
VA_ARG_MODE_T
);

457 
	`va_íd
(
va
);

458  
	`›í
(
fûe
, 
Êags
, 
mode
);

460 
	`va_íd
(
va
);

461  
	`›í
(
fûe
, 
Êags
);

463 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
fûe
) != 0) {

464 
	`va_íd
(
va
);

467 i‡((
Êags
 & 
O_CREAT
) != 0) {

468 
mode
 = 
	`va_¨g
(
va
, 
VA_ARG_MODE_T
);

469 
	`va_íd
(
va
);

470  
	`›í
(
curdútmp
, 
Êags
, 
mode
);

472 
	`va_íd
(
va
);

474  
	`›í
(
curdútmp
, 
Êags
);

475 
	}
}

477 *
	$ÁkîóÕ©h
(c⁄° *
fûe
, *
ªsﬁved_∑th
)

479 
curdútmp
[
MAXPATHLEN
];

481 i‡(
chroŸ_ba£
 =
NULL
) {

482  
	`ªÆ∑th
(
fûe
, 
ªsﬁved_∑th
);

484 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
fûe
) != 0) {

485  
NULL
;

487  
	`ªÆ∑th
(
curdútmp
, 
ªsﬁved_∑th
);

488 
	}
}

490 #i‡
STATFS_TYPE
 == 1

491 
	$Áke°©vfs64
(c⁄° *
∑th
, 
STATFS_STRUCT
 *
°r
)

492 #ñi‡
STATFS_TYPE
 == 2

493 
	$Áke°©vfs
(c⁄° *
∑th
, 
STATFS_STRUCT
 *
°r
)

494 #ñi‡
STATFS_TYPE
 == 3

495 
	$Áke°©fs
(c⁄° *
∑th
, 
STATFS_STRUCT
 *
°r
)

497 #i‡
STATFS_TYPE
 > 0

499 
curdútmp
[
MAXPATHLEN
];

501 i‡(
chroŸ_ba£
 =
NULL
) {

502  
	`STATFS
(
∑th
, 
°r
);

504 i‡(
	`Ákexœã
(
curdútmp
,  curdútmp, 
∑th
) != 0) {

507  
	`STATFS
(
curdútmp
, 
°r
);

508 
	}
}

511 sig√d 
v6ªady
;

	@src/fakechroot.h

1 #i‚de‡
HAVE_FAKECHROOT_H


2 
	#HAVE_FAKECHROOT_H
 1

	)

4 #i‡
deföed
(
WITH_VIRTUAL_CHROOT
Ë&& deföed(
INCLUDE_IO_WRAPPERS
)

5 #i‡!
deföed
(
FAKECHROOT_FUNCS_DEFINITION
Ë&& !deföed(
FAKECHROOT_EXCEPTION
)

6 
ÁkechroŸ
(c⁄° *
∑th
);

7 #ifde‡
chroŸ


8 #unde‡
chroŸ


10 
	#chroŸ
(
A
Ë
	`ÁkechroŸ
(A)

	)

12 *
Ákegëcwd
(*
dú
, 
size_t
 
size
);

13 #ifde‡
gëcwd


14 #unde‡
gëcwd


16 
	#gëcwd
(
A
, 
B
Ë
	`Ákegëcwd
(A, B)

	)

18 
Ákechdú
(c⁄° *
dú
);

19 #ifde‡
chdú


20 #unde‡
chdú


22 
	#chdú
(
A
Ë
	`Ákechdú
(A)

	)

24 
Áke°©
(c⁄° *
fûe
, 
°©
 *
°
);

25 #ifde‡
°©


26 #unde‡
°©


28 
	#°©
(
A
, 
B
Ë
	`Áke°©
(A, B)

	)

30 
Ákñ°©
(c⁄° *
fûe
, 
°©
 *
°
);

31 #ifde‡
l°©


32 #unde‡
l°©


34 
	#l°©
(
A
, 
B
Ë
	`Ákñ°©
(A, B)

	)

36 
FILE
 *
Ákef›í
(c⁄° *
fûe
, c⁄° *
mode
);

37 #ifde‡
f›í


38 #unde‡
f›í


40 
	#f›í
(
A
, 
B
Ë
	`Ákef›í
(A, B)

	)

42 
Ákóc˚ss
(c⁄° *
fûe
, 
mode_t
 
mode
);

43 #ifde‡
ac˚ss


44 #unde‡
ac˚ss


46 
	#ac˚ss
(
A
, 
B
Ë
	`Ákóc˚ss
(A, B)

	)

48 
Ákeu∆ök
(c⁄° *
fûe
);

49 #ifde‡
u∆ök


50 #unde‡
u∆ök


52 
	#u∆ök
(
A
Ë
	`Ákeu∆ök
(A)

	)

54 
DIR
 *
Áke›ídú
(c⁄° *
fûe
);

55 #ifde‡
›ídú


56 #unde‡
›ídú


58 
	#›ídú
(
A
Ë
	`Áke›ídú
(A)

	)

60 
Ákechmod
(c⁄° *
fûe
, 
mode_t
 
mode
);

61 #ifde‡
chmod


62 #unde‡
chmod


64 
	#chmod
(
A
, 
B
Ë
	`Ákechmod
(A, B)

	)

66 
Ákemkdú
(c⁄° *
fûe
, 
mode_t
 
mode
);

67 #ifde‡
mkdú


68 #unde‡
mkdú


70 
	#mkdú
(
A
, 
B
Ë
	`Ákemkdú
(A, B)

	)

72 
Ákîmdú
(c⁄° *
fûe
);

73 #ifde‡
rmdú


74 #unde‡
rmdú


76 
	#rmdú
(
A
Ë
	`Ákîmdú
(A)

	)

78 #ifde‡
HAVE_UTIME


79 
Ákeutime
(c⁄° *
fûe
, 
utimbuf
 *
buf
);

80 #ifde‡
utime


81 #unde‡
utime


83 
	#utime
(
A
, 
B
Ë
	`Ákeutime
(A, B)

	)

86 #ifde‡
HAVE_UTIMES


87 
Ákeutimes
(c⁄° *
fûe
, 
timevÆ
 *
buf
);

88 #ifde‡
utimes


89 #unde‡
utimes


91 
	#utimes
(
A
, 
B
Ë
	`Ákeutimes
(A, B)

	)

94 
Ákechown
(c⁄° *
fûe
, 
uid_t
 
uid
, 
gid_t
 
gid
);

95 #ifde‡
chown


96 #unde‡
chown


98 
	#chown
(
A
, 
B
, 
C
Ë
	`Ákechown
(A, B, C)

	)

100 #ifde‡
HAVE_MKFIFO


101 
Ákemkfifo
(c⁄° *
fûe
, 
mode_t
 
mode
);

102 #ifde‡
mkfifo


103 #unde‡
mkfifo


105 
	#mkfifo
(
A
, 
B
Ë
	`Ákemkfifo
(A, B)

	)

108 #ifde‡
HAVE_MKNOD


109 
Ákemknod
(c⁄° *
fûe
, 
mode_t
 
mode
, 
dev_t
 
dev
);

110 #ifde‡
mknod


111 #unde‡
mknod


113 
	#mknod
(
A
, 
B
, 
C
Ë
	`Ákemknod
(A, B, C)

	)

116 
Ákñök
(c⁄° *
ﬁd∑th
, c⁄° *
√w∑th
);

117 #ifde‡
lök


118 #unde‡
lök


120 
	#lök
(
A
, 
B
Ë
	`Ákñök
(A, B)

	)

122 
Ákesymlök
(c⁄° *
ﬁd∑th
, c⁄° *
√w∑th
);

123 #ifde‡
symlök


124 #unde‡
symlök


126 
	#symlök
(
A
, 
B
Ë
	`Ákesymlök
(A, B)

	)

128 
Ákîódlök
(c⁄° *
fûe
, *
buf
, 
size_t
 
bufsiz
);

129 #ifde‡
ªadlök


130 #unde‡
ªadlök


132 
	#ªadlök
(
A
, 
B
, 
C
Ë
	`Ákîódlök
(A, B, C)

	)

134 
Ákîíame
(c⁄° *
ﬁd∑th
, c⁄° *
√w∑th
);

135 #ifde‡
ª«me


136 #unde‡
ª«me


138 
	#ª«me
(
A
, 
B
Ë
	`Ákîíame
(A, B)

	)

140 
Áke›í
(c⁄° *
fûe
, 
Êags
, ...);

141 #ifde‡
›í


142 #unde‡
›í


144 
	#›í
 
Áke›í


	)

146 *
ÁkîóÕ©h
(c⁄° *
fûe
, *
ªsﬁved_∑th
);

147 #ifde‡
ªÆ∑th


148 #unde‡
ªÆ∑th


150 
	#ªÆ∑th
 
ÁkîóÕ©h


	)

152 #i‡
STATFS_TYPE
 == 1

153 
Áke°©vfs64
(c⁄° *
∑th
, 
STATFS_STRUCT
 *
°r
);

154 #ifde‡
°©vfs64


155 #unde‡
°©vfs64


157 
	#°©vfs64
(
A
, 
B
Ë
	`Áke°©vfs64
(A, B)

	)

158 #ñi‡
STATFS_TYPE
 == 2

159 
Áke°©vfs
(c⁄° *
∑th
, 
STATFS_STRUCT
 *
°r
);

160 #ifde‡
°©vfs


161 #unde‡
°©vfs


163 
	#°©vfs
(
A
, 
B
Ë
	`Áke°©vfs
(A, B)

	)

164 #ñi‡
STATFS_TYPE
 == 3

165 
Áke°©fs
(c⁄° *
∑th
, 
STATFS_STRUCT
 *
°r
);

166 #ifde‡
°©fs


167 #unde‡
°©fs


169 
	#°©fs
(
A
, 
B
Ë
	`Áke°©fs
(A, B)

	)

	@src/fakesnprintf.c

29 
	~<c⁄fig.h
>

31 
	~"·pd.h
"

33 #ifde‡
WITH_DMALLOC


34 
	~<dmÆloc.h
>

37 #i‡!
deföed
(
HAVE_SNPRINTF
Ë|| !deföed(
HAVE_VSNPRINTF
)

46 
	$Áke¢¥ötf_add°r
(**
°r
, 
size_t
 *
size
, c⁄° *
≤t
,

47 
size_t
 
maxÀn
, size_à
∑dÀn
,

48 
zîo
, 
möu•ad
)

50 
size_t
 
maxÀnc
;

53 
maxÀnc
 = 
	`°æí
(
≤t
);

54 i‡(
maxÀn
 > 0U && maxÀ¿< 
maxÀnc
) {

55 
maxÀnc
 = 
maxÀn
;

57 i‡(
∑dÀn
 > 0U && 
möu•ad
 =0U &&ÖadÀ¿> 
maxÀnc
) {

58 
size_t
 
maxÀ≈
 = 
∑dÀn
 - 
maxÀnc
;

60 i‡(
maxÀ≈
 > *
size
) {

61 
maxÀ≈
 = *
size
;

63 i‡(
maxÀ≈
 > 0U) {

64 
	`mem£t
(*
°r
, 
zîo
 !0 ? '0' : ' ', 
maxÀ≈
);

65 (*
size
Ë-
maxÀ≈
;

66 (*
°r
Ë+
maxÀ≈
;

69 i‡(
maxÀnc
 > *
size
) {

70 
maxÀnc
 = *
size
;

72 i‡(
maxÀnc
 > 0U) {

73 
	`mem˝y
(*
°r
, 
≤t
, 
maxÀnc
);

74 (*
size
Ë-
maxÀnc
;

75 (*
°r
Ë+
maxÀnc
;

77 i‡(
∑dÀn
 > 0U && 
möu•ad
 > 0U &&ÖadÀ¿> 
maxÀnc
) {

78 
size_t
 
maxÀ≈
 = 
∑dÀn
 - 
maxÀnc
;

80 i‡(
maxÀ≈
 > *
size
) {

81 
maxÀ≈
 = *
size
;

83 i‡(
maxÀ≈
 > 0U) {

84 
	`mem£t
(*
°r
, ' ', 
maxÀ≈
);

85 (*
size
Ë-
maxÀ≈
;

86 (*
°r
Ë+
maxÀ≈
;

89 
	}
}

91 
	$Áke¢¥ötf_v¢¥ötf
(* c⁄° 
°r_
, c⁄° 
size_t
 
size_
,

92 c⁄° *
f‹m©
, 
va_li°
 
va
)

94 *
°r
;

95 
size_t
 
size
;

96 
size_t
 
maxÀn
;

97 
size_t
 
∑dÀn
;

98 
l⁄gs
;

99 
zîo
;

100 
möu•ad
;

101 
hasmaxÀn
;

102 
∂ussign
;

104 
°r
 = 
°r_
;

105 
size
 = 
size_
;

106 
°r_
[
size_
 - 1U] = 1;

107 
size
 > 0U && *
f‹m©
 != 0) {

108 i‡(*
f‹m©
 != '%') {

109 *
°r
++ = *
f‹m©
++;

110 
size
--;

113 
l⁄gs
 = 0U;

114 
zîo
 = 0U;

115 
möu•ad
 = 0U;

116 
maxÀn
 = 0U;

117 
∑dÀn
 = 0U;

118 
hasmaxÀn
 = 0U;

119 
∂ussign
 = 0U;

122 
bªakpoöt_√xt•ecül_öc
:

123 
f‹m©
++;

124 
bªakpoöt_√xt•ecül_noöc
:

125 *
f‹m©
) {

127 
bªakpoöt_íd
;

129 *
°r
++ = '%';

130 
size
--;

131 
bªakpoöt_√xt
;

133 
vÆ
;

135 
vÆ
 = 
	`va_¨g
(
va
, );

136 *
°r
++ = (Ë
vÆ
;

137 
size
--;

138 
bªakpoöt_√xt
;

141 
l⁄gs
++;

142 
bªakpoöt_√xt•ecül_öc
;

144 
zîo
++;

145 
bªakpoöt_√xt•ecül_öc
;

147 
f‹m©
++;

148 
hasmaxÀn
 = 1U;

149 (Ë*
f‹m©
 >= '0' &&

150 (Ë*
f‹m©
 <= '9') {

151 
maxÀn
 *= 10U;

152 
maxÀn
 +(*
f‹m©
 - '0');

153 
f‹m©
++;

155 
bªakpoöt_√xt•ecül_noöc
;

159 
∑dÀn
 *= 10U;

160 
∑dÀn
 +*
f‹m©
 - '0';

161 
f‹m©
++;

162 } (Ë*
f‹m©
 >= '0' &&

163 (Ë*
f‹m©
 <= '9');

164 
bªakpoöt_√xt•ecül_noöc
;

166 
möu•ad
++;

167 
f‹m©
++;

168 
bªakpoöt_√xt•ecül_noöc
;

170 
∂ussign
++;

171 
f‹m©
++;

172 
bªakpoöt_√xt•ecül_noöc
;

174 c⁄° *
≤t
;

176 
≤t
 = 
	`va_¨g
(
va
, const *);

177 i‡(
≤t
 =
NULL
) {

178 
≤t
 = "<NULL>";

180 
	`Áke¢¥ötf_add°r
(&
°r
, &
size
, 
≤t
, 
maxÀn
, 
∑dÀn
,

181 
zîo
, 
möu•ad
);

182 
bªakpoöt_√xt
;

185 
vÆ
;

186 
vÆs
[256];

187 *
vÆ•¡
 = 
vÆs
 +  vals;

188 c⁄° *
basics
;

189 
ba£
;

191 
l⁄gs
) {

193 
vÆ
 = 
	`va_¨g
(
va
, );

196 
vÆ
 = (Ë
	`va_¨g
(
va
, );

199 
vÆ
 = (Ë
	`va_¨g
(
va
, );

201 
basics
 = "0123456789abcdef";

202 *
f‹m©
) {

204 
ba£
 = 8U;

207 
basics
 = "0123456789ABCDEF";

209 
ba£
 = 16U;

212 
ba£
 = 10U;

214 *--
vÆ•¡
 = 0;

216 *--
vÆ•¡
 = 
basics
[
vÆ
 % 
ba£
];

217 
vÆ
 /
ba£
;

218 } 
vÆ•¡
 !&
vÆs
[0] && 
vÆ
 > 0ULL);

219 
	`Áke¢¥ötf_add°r
(&
°r
, &
size
, 
vÆ•¡
, 
maxÀn
, 
∑dÀn
,

220 
zîo
, 
möu•ad
);

221 
bªakpoöt_√xt
;

224 
vÆ
;

225 
möussign
 = 0U;

226 
vÆs
[256];

227 *
vÆ•¡
 = 
vÆs
 +  vals;

229 
l⁄gs
) {

231 
vÆ
 = 
	`va_¨g
(
va
, );

234 
vÆ
 = (Ë
	`va_¨g
(
va
, );

237 
vÆ
 = (Ë
	`va_¨g
(
va
, );

239 i‡(
vÆ
 < 0LL) {

240 
möussign
++;

241 
vÆ
 = -val;

243 *--
vÆ•¡
 = 0;

245 *--
vÆ•¡
 = "0123456789"[
vÆ
 % 10LL];

246 
vÆ
 /= 10LL;

247 } 
vÆ•¡
 !&
vÆs
[1] && 
vÆ
 > 0LL);

248 i‡(
möussign
 != 0) {

249 *--
vÆ•¡
 = '-';

250 } i‡(
∂ussign
 != 0) {

251 *--
vÆ•¡
 = '+';

253 
	`Áke¢¥ötf_add°r
(&
°r
, &
size
, 
vÆ•¡
, 
maxÀn
, 
∑dÀn
,

254 
zîo
, 
möu•ad
);

255 
bªakpoöt_√xt
;

258 
n‰ac
 = 6U;

259 
vÆ
;

260 
vÆi
;

261 
möussign
 = 0U;

262 
vÆs
[512];

263 *
vÆ•¡
 = 
vÆs
 +  vals / 2U;

264 *
vÆ¶e·
;

266 i‡(
l⁄gs
 != 0) {

267 
vÆ
 = 
	`va_¨g
(
va
, );

269 
vÆ
 = 
	`va_¨g
(
va
, );

271 i‡(
vÆ
 < 0.0L) {

272 
möussign
++;

273 
vÆ
 = -val;

275 
vÆi
 = (Ë
vÆ
;

277 *--
vÆ•¡
 = '0' + 
vÆi
 % 10ULL;

278 
vÆi
 /= 10ULL;

279 } 
vÆ•¡
 !&
vÆs
[1] && 
vÆi
 > 0ULL);

280 i‡(
möussign
 != 0) {

281 *--
vÆ•¡
 = '-';

282 } i‡(
∂ussign
 != 0) {

283 *--
vÆ•¡
 = '+';

285 
vÆ¶e·
 = 
vÆ•¡
;

286 
vÆ•¡
 = 
vÆs
 +  vals / 2U;

287 i‡(
maxÀn
 > ( 
vÆs
 / 2U) - 3U) {

288 
n‰ac
 = ( 
vÆs
 / 2U) - 3U;

289 } i‡(
hasmaxÀn
 != 0U) {

290 
n‰ac
 = 
maxÀn
;

292 i‡(
n‰ac
 > 0U) {

293 *
vÆ•¡
++ = '.';

295 
n‰ac
 > 0U) {

296 
n‰ac
--;

297 
vÆ
 *= 10.0L;

298 *
vÆ•¡
++ = '0' + (((Ë
vÆ
) % 10U);

300 *
vÆ•¡
 = 0;

301 
	`Áke¢¥ötf_add°r
(&
°r
, &
size
, 
vÆ¶e·
,  
vÆs
,

302 
∑dÀn
, 
zîo
, 
möu•ad
);

303 
bªakpoöt_√xt
;

307 
bªakpoöt_√xt
:

308 
f‹m©
++;

310 
bªakpoöt_íd
:

311 i‡(
°r_
[
size_
 - 1U] != 1) {

312 
°r_
[
size_
 - 1U] = 0;

313  (Ë
size_
;

315 *
°r
 = 0;

317  (Ë(
size_
 - 
size
);

318 
	}
}

320 
	$Áke¢¥ötf_¢¥ötf
(* c⁄° 
°r
, c⁄° 
size_t
 
size
,

321 c⁄° * c⁄° 
f‹m©
, ...)

323 
ªt
;

324 
va_li°
 
va
;

326 
	`va_°¨t
(
va
, 
f‹m©
);

327 
ªt
 = 
	`Áke¢¥ötf_v¢¥ötf
(
°r
, 
size
, 
f‹m©
, 
va
);

328 
	`va_íd
(
va
);

330  
ªt
;

331 
	}
}

	@src/fakesnprintf.h

1 #i‚de‡
__FAKESNPRINTF_H__


2 
	#__FAKESNPRINTF_H__
 1

	)

4 #i‡!
deföed
(
HAVE_SNPRINTF
Ë|| !deföed(
HAVE_VSNPRINTF
)

6 
Áke¢¥ötf_v¢¥ötf
(* c⁄° 
°r_
, c⁄° 
size_t
 
size_
,

7 c⁄° *
f‹m©
, 
va_li°
 
va
);

9 
Áke¢¥ötf_¢¥ötf
(* c⁄° 
°r
, c⁄° 
size_t
 
size
,

10 c⁄° * c⁄° 
f‹m©
, ...);

12 
	#¢¥ötf
 
Áke¢¥ötf_¢¥ötf


	)

13 
	#v¢¥ötf
 
Áke¢¥ötf_v¢¥ötf


	)

15 #ifde‡
CONF_SNPRINTF_TYPE


16 #unde‡
CONF_SNPRINTF_TYPE


18 
	#CONF_SNPRINTF_TYPE
 4

	)

	@src/ftp_parser.c

1 
	~<c⁄fig.h
>

3 
	~"·pd.h
"

4 
	~"dy«mic.h
"

5 
	~"·pwho-upd©e.h
"

6 
	~"globÆs.h
"

7 
	~"mesßges.h
"

8 #ifde‡
WITH_DIRALIASES


9 
	~"dúÆü£s.h
"

11 #ifde‡
WITH_TLS


12 
	~"és.h
"

15 #ifde‡
WITH_DMALLOC


16 
	~<dmÆloc.h
>

19 
	$™tiidÀ
()

21 i‡(
no›idÀ
 =(
time_t
) -1) {

22 
no›idÀ
 = 
	`time
(
NULL
);

24 i‡((
	`time
(
NULL
Ë- 
no›idÀ
Ë> (
time_t
Ë
idÀtime_no›
) {

25 
	`dõ
(421, 
LOG_INFO
, 
MSG_TIMEOUT_NOOP
, (Ë
idÀtime_no›
);

28 
	}
}

36 
	$øndomdñay
()

38 
	`u¶ìp
(
	`ønd
() % 15000UL);

39 
	}
}

60 
size_t
 
	gsˇ¬ed
;

61 
size_t
 
	gªadnbd
;

63 #ifde‡
WITH_TLS


64 
	$Êush_cmd
()

66 
sˇ¬ed
 = 
ªadnbd
 = (
size_t
) 0U;

67 
	}
}

70 
	$sfgës
()

72 
pﬁlfd
 
pfd
;

73 
pﬁÃë
;

74 
ssize_t
 
ªadnb
;

75 sig√d 
£í_r
 = 0;

77 i‡(
sˇ¬ed
 > (
size_t
) 0U) {

78 
ªadnbd
 -
sˇ¬ed
;

79 
	`memmove
(
cmd
, cmd + 
sˇ¬ed
, 
ªadnbd
);

80 
sˇ¬ed
 = (
size_t
) 0U;

82 
pfd
.
fd
 = 
˛õ¡fd
;

83 #ifde‡
__APPLE_CC__


84 
pfd
.
evíts
 = 
POLLIN
 | 
POLLERR
 | 
POLLHUP
;

86 
pfd
.
evíts
 = 
POLLIN
 | 
POLLPRI
 | 
POLLERR
 | 
POLLHUP
;

88 
sˇ¬ed
 < 
cmdsize
) {

89 i‡(
sˇ¬ed
 >
ªadnbd
) {

90 
pfd
.
ªvíts
 = 0;

91 (
pﬁÃë
 = 
	`pﬁl
(&
pfd
, 1U, 
idÀtime
 * 1000UL)) < 0 &&

92 
î∫o
 =
EINTR
);

93 i‡(
pﬁÃë
 == 0) {

96 i‡(
pﬁÃë
 <= 0 ||

97 (
pfd
.
ªvíts
 & (
POLLERR
 | 
POLLHUP
 | 
POLLNVAL
)) != 0) {

100 i‡((
pfd
.
ªvíts
 & (
POLLIN
 | 
POLLPRI
)) == 0) {

103 i‡(
ªadnbd
 >
cmdsize
) {

106 #ifde‡
WITH_TLS


107 i‡(
és_˙x
 !
NULL
) {

108 (
ªadnb
 = 
SSL_ªad


109 (
és_˙x
, 
cmd
 + 
ªadnbd
, 
cmdsize
 -Ñeadnbd))

110 < (
ssize_t
Ë0 && 
î∫o
 =
EINTR
);

114 (
ªadnb
 = 
	`ªad
(
˛õ¡fd
, 
cmd
 + 
ªadnbd
,

115 
cmdsize
 - 
ªadnbd
)Ë< (
ssize_t
) 0 &&

116 
î∫o
 =
EINTR
);

118 i‡(
ªadnb
 <(
ssize_t
) 0) {

121 
ªadnbd
 +
ªadnb
;

122 i‡(
ªadnbd
 > 
cmdsize
) {

126 #ifde‡
RFC_CONFORMANT_LINES


127 i‡(
£í_r
 != 0) {

129 i‡(
cmd
[
sˇ¬ed
] == '\n') {

130 #i‚de‡
RFC_CONFORMANT_LINES


131 i‡(
£í_r
 != 0) {

133 
cmd
[
sˇ¬ed
 - 1U] = 0;

134 #i‚de‡
RFC_CONFORMANT_LINES


136 
cmd
[
sˇ¬ed
] = 0;

139 i‡(++
sˇ¬ed
 >
ªadnbd
) {

140 
sˇ¬ed
 = 
ªadnbd
 = (
size_t
) 0U;

144 
£í_r
 = 0;

145 #ifde‡
RFC_CONFORMANT_LINES


148 i‡(
	`ISCTRLCODE
(
cmd
[
sˇ¬ed
])) {

149 i‡(
cmd
[
sˇ¬ed
] == '\r') {

150 
£í_r
 = 1;

152 #ifde‡
RFC_CONFORMANT_PARSER


153 i‡(
cmd
[
sˇ¬ed
] == 0) {

154 
cmd
[
sˇ¬ed
] = '\n';

158 
cmd
[
sˇ¬ed
] = '_';

161 
sˇ¬ed
++;

163 
	`dõ
(421, 
LOG_WARNING
, 
MSG_LINE_TOO_LONG
);

166 
	}
}

170 #ifde‡
MINIMAL


171 
	#ªvóÀxåa•c
(
X
Ë(X)

	)

173 *
	$ªvóÀxåa•c
(* c⁄° 
s_
)

175 *
s
 = (*Ë
s_
;

176 *
¢
;

178 i‡(
s
 =
NULL
) {

179  
s_
;

181 
	`sim∂ify
(
s_
);

182 *
s
 !0U && 
	`is•a˚
(*s)) {

183 *
s
++ = '_';

185 i‡(*
s
 == 0U) {

186  
s_
;

188 
¢
 = 
s
;

190 
¢
++;

191 } *
¢
 != 0U);

193 
¢
--;

194 i‡(!
	`is•a˚
(*
¢
)) {

197 *
¢
 = '_';

198 } 
¢
 !
s
);

200  
s_
;

201 
	}
}

204 #ifde‡
WITH_RFC2640


205 *
	$ch¨£t_˛õ¡2fs
(c⁄° * c⁄° 
°rög
)

207 *
ouçut
 = 
NULL
, *
ouçut_
;

208 
size_t
 
öÀn
, 
ouéí
, 
ouéí_
;

210 
öÀn
 = 
	`°æí
(
°rög
);

211 
ouéí_
 = 
ouéí
 = 
öÀn
 * (
size_t
) 4U + (size_t) 1U;

212 i‡(
ouéí
 <
öÀn
 ||

213 (
ouçut_
 = 
ouçut
 = 
	`ˇŒoc
(
ouéí
, (
size_t
Ë1U)Ë=
NULL
) {

214 
	`dõ_mem
();

216 i‡(
utf8
 > 0 && 
	`°rˇ£cmp
(
ch¨£t_fs
, "utf-8") != 0) {

217 i‡(
	`ic⁄v
(
ic⁄v_fd_utf82fs
, (**Ë&
°rög
,

218 &
öÀn
, &
ouçut_
, &
ouéí_
Ë=(
size_t
) -1) {

219 
	`°∫˝y
(
ouçut
, 
°rög
, 
ouéí
);

221 } i‡(
utf8
 <0 && 
	`°rˇ£cmp
(
ch¨£t_fs
, 
ch¨£t_˛õ¡
) != 0) {

222 i‡(
	`ic⁄v
(
ic⁄v_fd_˛õ¡2fs
, (**Ë&
°rög
,

223 &
öÀn
, &
ouçut_
, &
ouéí_
Ë=(
size_t
) -1) {

224 
	`°∫˝y
(
ouçut
, 
°rög
, 
ouéí
);

227 
	`°∫˝y
(
ouçut
, 
°rög
, 
ouéí
);

229 
ouçut
[
ouéí
 - 1] = 0;

231  
ouçut
;

232 
	}
}

235 #i‚de‡
MINIMAL


236 
	$∑r£_fûe_time_ch™ge
(*
¨g
)

238 *
«me
;

240 i‡((
«me
 = 
	`°rchr
(
¨g
, ' ')Ë=
NULL
) {

241 
	`addª∂y_nof‹m©
(501, 
MSG_MISSING_ARG
);

244 *
«me
 == ' ') {

245 
«me
++;

247 i‡(*
«me
 == 0) {

248 
	`addª∂y_nof‹m©
(501, 
MSG_MISSING_ARG
);

251 
	`doutime
(
«me
, 
¨g
);

252 
	}
}

255 
	$∑r£r
()

257 *
¨g
;

258 #i‚de‡
MINIMAL


259 *
sôórg
;

261 #ifde‡
WITH_RFC2640


262 *
«rg
 = 
NULL
;

264 
size_t
 
n
;

266 #ifde‡
IMPLICIT_TLS


267 (Ë
	`és_öô_√w_£ssi⁄
();

268 
d©a_¥Ÿe˘i⁄_Àvñ
 = 
CPL_PRIVATE
;

271 
x„rfd
 = -1;

272 i‡(
°©e_√eds_upd©e
 != 0) {

273 
°©e_√eds_upd©e
 = 0;

274 
	`£çro˚s¢ame
("pure-ftpd (IDLE)");

275 #ifde‡
FTPWHO


276 i‡(
shm_d©a_cur
 !
NULL
) {

277 
	`·pwho_lock
();

278 
shm_d©a_cur
->
°©e
 = 
FTPWHO_STATE_IDLE
;

279 *
shm_d©a_cur
->
fûíame
 = 0;

280 
	`·pwho_u∆ock
();

284 
	`d‹ïly
();

285 
	`Æ¨m
(
idÀtime
 * 2);

286 
	`sfgës
()) {

288 #ifde‡
BORING_MODE


289 
	`dõ
(421, 
LOG_INFO
, 
MSG_TIMEOUT
);

291 
	`dõ
(421, 
LOG_INFO
, 
MSG_TIMEOUT_PARSER
);

296 #ifde‡
DEBUG


297 i‡(
debug
 != 0) {

298 
	`addª∂y
(0, "%s", 
cmd
);

301 
n
 = (
size_t
) 0U;

302 (
	`ißÕha
((Ë
cmd
[
n
]) || cmd[n] == '@') &&

303 
n
 < 
cmdsize
) {

304 
cmd
[
n
] = (Ë
	`tﬁowî
(() cmd[n]);

305 
n
++;

307 i‡(
n
 >
cmdsize
) {

308 
	`dõ
(421, 
LOG_WARNING
, 
MSG_LINE_TOO_LONG
);

310 i‡(
n
 =(
size_t
) 0U) {

311 
n›
:

312 
	`addª∂y_nof‹m©
(500, "?");

315 #ifde‡
SKIP_COMMAND_TRAILING_SPACES


316 
	`is•a˚
((Ë
cmd
[
n
]Ë&&Ç < 
cmdsize
) {

317 
cmd
[
n
++] = 0;

319 
¨g
 = 
cmd
 + 
n
;

320 
cmd
[
n
] !0 &&Ç < 
cmdsize
) {

321 
n
++;

323 
n
--;

324 
	`is•a˚
((Ë
cmd
[
n
])) {

325 
cmd
[
n
--] = 0;

328 i‡(
cmd
[
n
] == 0) {

329 
¨g
 = 
cmd
 + 
n
;

330 } i‡(
	`is•a˚
((Ë
cmd
[
n
])) {

331 
cmd
[
n
] = 0;

332 
¨g
 = 
cmd
 + 
n
 + 1;

334 
n›
;

337 i‡(
loggög
 != 0) {

338 #ifde‡
DEBUG


339 
	`logfûe
(
LOG_DEBUG
, 
MSG_DEBUG_COMMAND
 " [%s] [%s]",

340 
cmd
, 
¨g
);

342 
	`logfûe
(
LOG_DEBUG
, 
MSG_DEBUG_COMMAND
 " [%s] [%s]",

343 
cmd
, 
	`°rcmp
(cmd, "∑ss"Ë? 
¨g
 : "<*>");

346 #ifde‡
WITH_RFC2640


347 
«rg
 = 
	`ch¨£t_˛õ¡2fs
(
¨g
);

348 
¨g
 = 
«rg
;

357 #i‚de‡
MINIMAL


358 i‡(!
	`°rcmp
(
cmd
, "noop")) {

359 
	`™tiidÀ
();

360 
	`d⁄o›
();

361 
wayout
;

364 i‡(!
	`°rcmp
(
cmd
, "user")) {

365 #ifde‡
WITH_TLS


366 i‡(
íf‹˚_és_auth
 > 1 && 
és_˙x
 =
NULL
) {

367 
	`dõ
(421, 
LOG_WARNING
, 
MSG_TLS_NEEDED
);

370 
	`dou£r
(
¨g
);

371 } i‡(!
	`°rcmp
(
cmd
, "acct")) {

372 
	`addª∂y
(202, 
MSG_WHOAREYOU
);

373 } i‡(!
	`°rcmp
(
cmd
, "pass")) {

374 i‡(
gue°
 == 0) {

375 
	`øndomdñay
();

377 
	`d›ass
(
¨g
);

378 } i‡(!
	`°rcmp
(
cmd
, "quit")) {

379 
	`addª∂y
(221, 
MSG_GOODBYE
,

380 (Ë((
u∂ﬂded
 + 1023ULL) / 1024ULL),

381 (Ë((
dow∆ﬂded
 + 1023ULL) / 1024ULL));

383 } i‡(!
	`°rcmp
(
cmd
, "syst")) {

384 
	`™tiidÀ
();

385 
	`addª∂y_nof‹m©
(215, "UNIX Type: L8");

386 
wayout
;

387 #ifde‡
WITH_TLS


388 } i‡(
íf‹˚_és_auth
 > 0 &&

389 !
	`°rcmp
(
cmd
, "auth"Ë&& !
	`°rˇ£cmp
(
¨g
, "tls")) {

390 
	`addª∂y_nof‹m©
(234, "AUTH TLS OK.");

391 
	`d‹ïly
();

392 i‡(
és_˙x
 =
NULL
) {

393 
	`Êush_cmd
();

394 (Ë
	`és_öô_√w_£ssi⁄
();

396 
wayout
;

397 } i‡(!
	`°rcmp
(
cmd
, "pbsz")) {

398 
	`addª∂y_nof‹m©
(
és_˙x
 =
NULL
 ? 503 : 200, "PBSZ=0");

399 } i‡(!
	`°rcmp
(
cmd
, "prot")) {

400 i‡(
és_˙x
 =
NULL
) {

401 
	`addª∂y_nof‹m©
(503, 
MSG_PROT_BEFORE_PBSZ
);

402 
wayout
;

404 *
¨g
) {

406 
	`addª∂y_nof‹m©
(503, 
MSG_MISSING_ARG
);

407 
d©a_¥Ÿe˘i⁄_Àvñ
 = 
CPL_NONE
;

410 i‡(
¨g
[1] == 0) {

411 
	`addª∂y
(200, 
MSG_PROT_OK
, "clear");

412 
d©a_¥Ÿe˘i⁄_Àvñ
 = 
CPL_CLEAR
;

417 i‡(
¨g
[1] == 0) {

418 
	`addª∂y
(200, 
MSG_PROT_UNKNOWN_LEVEL
, 
¨g
, "private");

419 
d©a_¥Ÿe˘i⁄_Àvñ
 = 
CPL_PRIVATE
;

423 i‡(
¨g
[1] == 0) {

424 
	`addª∂y
(200, 
MSG_PROT_OK
, "private");

425 
d©a_¥Ÿe˘i⁄_Àvñ
 = 
CPL_PRIVATE
;

429 
	`addª∂y_nof‹m©
(534, "FallbackÅo [C]");

430 
d©a_¥Ÿe˘i⁄_Àvñ
 = 
CPL_CLEAR
;

434 } i‡(!
	`°rcmp
(
cmd
, "auth") || !strcmp(cmd, "adat")) {

435 
	`addª∂y_nof‹m©
(500, 
MSG_AUTH_UNIMPLEMENTED
);

436 } i‡(!
	`°rcmp
(
cmd
, "type")) {

437 
	`™tiidÀ
();

438 
	`dŸy≥
(
¨g
);

439 
wayout
;

440 } i‡(!
	`°rcmp
(
cmd
, "mode")) {

441 
	`™tiidÀ
();

442 
	`domode
(
¨g
);

443 
wayout
;

444 #i‚de‡
MINIMAL


445 } i‡(!
	`°rcmp
(
cmd
, "feat")) {

446 
	`do„©
();

447 
wayout
;

448 } i‡(!
	`°rcmp
(
cmd
, "opts")) {

449 
	`do›ts
(
¨g
);

450 
wayout
;

452 } i‡(!
	`°rcmp
(
cmd
, "stru")) {

453 
	`do°ru
(
¨g
);

454 
wayout
;

455 #i‚de‡
MINIMAL


456 } i‡(!
	`°rcmp
(
cmd
, "help")) {

457 
hñp_sôe
;

459 #ifde‡
DEBUG


460 } i‡(!
	`°rcmp
(
cmd
, "xdbg")) {

461 
debug
++;

462 
	`addª∂y
(200, 
MSG_XDBG_OK
, 
debug
);

463 
wayout
;

465 } i‡(
loggedö
 == 0) {

467 
	`addª∂y_nof‹m©
(530, 
MSG_NOT_LOGGED_IN
);

468 
wayout
;

470 i‡(!
	`°rcmp
(
cmd
, "cwd") || !strcmp(cmd, "xcwd")) {

471 
	`™tiidÀ
();

472 
	`docwd
(
¨g
);

473 
wayout
;

474 } i‡(!
	`°rcmp
(
cmd
, "port")) {

475 
	`d›‹t
(
¨g
);

476 #i‚de‡
MINIMAL


477 } i‡(!
	`°rcmp
(
cmd
, "eprt")) {

478 
	`d€¥t
(
¨g
);

479 } i‡(!
	`°rcmp
(
cmd
, "esta") &&

480 
dißŒow_∑ssive
 == 0 &&

481 
	`STORAGE_FAMILY
(
f‹˚_∑ssive_ù
) == 0) {

482 
	`d€°a
();

483 } i‡(!
	`°rcmp
(
cmd
, "estp")) {

484 
	`d€°p
();

486 } i‡(
dißŒow_∑ssive
 == 0 &&

487 (!
	`°rcmp
(
cmd
, "pasv") || !strcmp(cmd, "p@sw"))) {

488 
	`d›asv
(0);

489 } i‡(
dißŒow_∑ssive
 == 0 &&

490 (!
	`°rcmp
(
cmd
, "epsv") &&

491 (
brokí_˛õ¡_com∑t
 == 0 ||

492 
	`STORAGE_FAMILY
(
˘æc⁄n
Ë=
AF_INET6
))) {

493 i‡(!
	`°rˇ£cmp
(
¨g
, "all")) {

494 
ïsv_Æl
 = 1;

495 
	`addª∂y_nof‹m©
(220, 
MSG_ACTIVE_DISABLED
);

496 } i‡(!
	`°rcmp
(
¨g
, "2"Ë&& !
v6ªady
) {

497 
	`addª∂y_nof‹m©
(522, 
MSG_ONLY_IPV4
);

499 
	`d›asv
(1);

501 #i‚de‡
MINIMAL


502 } i‡(
dißŒow_∑ssive
 =0 && !
	`°rcmp
(
cmd
, "spsv")) {

503 
	`d›asv
(2);

504 } i‡(!
	`°rcmp
(
cmd
, "allo")) {

505 i‡(*
¨g
 == 0) {

506 
	`addª∂y_nof‹m©
(501, 
MSG_STAT_FAILURE
);

508 c⁄° 
off_t
 
size
 = (off_tË
	`°πouŒ
(
¨g
, 
NULL
, 10);

510 i‡(
size
 < (
off_t
) 0) {

511 
	`addª∂y_nof‹m©
(501, 
MSG_STAT_FAILURE
);

513 
	`dﬂŒo
(
size
);

517 } i‡(!
	`°rcmp
(
cmd
, "pwd") || !strcmp(cmd, "xpwd")) {

518 #ifde‡
WITH_RFC2640


519 *
nwd
;

521 
	`™tiidÀ
();

522 #ifde‡
WITH_RFC2640


523 
nwd
 = 
	`ch¨£t_fs2˛õ¡
(
wd
);

524 
	`addª∂y
(257, "\"%s\" " 
MSG_IS_YOUR_CURRENT_LOCATION
, 
nwd
);

525 
	`‰ì
(
nwd
);

527 
	`addª∂y
(257, "\"%s\" " 
MSG_IS_YOUR_CURRENT_LOCATION
, 
wd
);

529 
wayout
;

530 } i‡(!
	`°rcmp
(
cmd
, "cdup") || !strcmp(cmd, "xcup")) {

531 
	`docwd
("..");

532 } i‡(!
	`°rcmp
(
cmd
, "retr")) {

533 i‡(*
¨g
 != 0) {

534 #ifde‡
WITH_TLS


535 i‡(
íf‹˚_és_auth
 == 3 &&

536 
d©a_¥Ÿe˘i⁄_Àvñ
 !
CPL_PRIVATE
) {

537 
	`addª∂y_nof‹m©
(521, 
MSG_PROT_PRIVATE_NEEDED
);

542 
	`d‹ër
(
¨g
);

545 
	`addª∂y_nof‹m©
(501, 
MSG_NO_FILE_NAME
);

547 } i‡(!
	`°rcmp
(
cmd
, "rest")) {

548 
	`™tiidÀ
();

549 i‡(*
¨g
 != 0) {

550 
	`d‹e°
(
¨g
);

552 
	`addª∂y_nof‹m©
(501, 
MSG_NO_RESTART_POINT
);

553 
ª°¨èt
 = (
off_t
) 0;

555 
wayout
;

556 } i‡(!
	`°rcmp
(
cmd
, "dele")) {

557 i‡(*
¨g
 != 0) {

558 
	`dodñe
(
¨g
);

560 
	`addª∂y_nof‹m©
(501, 
MSG_NO_FILE_NAME
);

562 } i‡(!
	`°rcmp
(
cmd
, "stor")) {

563 
¨g
 = 
	`ªvóÀxåa•c
(arg);

564 i‡(*
¨g
 != 0) {

565 #ifde‡
WITH_TLS


566 i‡(
íf‹˚_és_auth
 == 3 &&

567 
d©a_¥Ÿe˘i⁄_Àvñ
 !
CPL_PRIVATE
) {

568 
	`addª∂y_nof‹m©
(521, 
MSG_PROT_PRIVATE_NEEDED
);

572 
	`do°‹
(
¨g
, 0, 
aut‹íame
);

575 
	`addª∂y_nof‹m©
(501, 
MSG_NO_FILE_NAME
);

577 } i‡(!
	`°rcmp
(
cmd
, "appe")) {

578 
¨g
 = 
	`ªvóÀxåa•c
(arg);

579 i‡(*
¨g
 != 0) {

580 #ifde‡
WITH_TLS


581 i‡(
íf‹˚_és_auth
 == 3 &&

582 
d©a_¥Ÿe˘i⁄_Àvñ
 !
CPL_PRIVATE
) {

583 
	`addª∂y_nof‹m©
(521, 
MSG_PROT_PRIVATE_NEEDED
);

587 
	`do°‹
(
¨g
, 1, 0);

590 
	`addª∂y_nof‹m©
(501, 
MSG_NO_FILE_NAME
);

592 #i‚de‡
MINIMAL


593 } i‡(!
	`°rcmp
(
cmd
, "stou")) {

594 #ifde‡
WITH_TLS


595 i‡(
íf‹˚_és_auth
 == 3 &&

596 
d©a_¥Ÿe˘i⁄_Àvñ
 !
CPL_PRIVATE
) {

597 
	`addª∂y_nof‹m©
(521, 
MSG_PROT_PRIVATE_NEEDED
);

601 
	`do°ou
();

604 #i‚de‡
DISABLE_MKD_RMD


605 } i‡(!
	`°rcmp
(
cmd
, "mkd") || !strcmp(cmd, "xmkd")) {

606 
¨g
 = 
	`ªvóÀxåa•c
(arg);

607 i‡(*
¨g
 != 0) {

608 
	`domkd
(
¨g
);

610 
	`addª∂y_nof‹m©
(501, 
MSG_NO_DIRECTORY_NAME
);

612 } i‡(!
	`°rcmp
(
cmd
, "rmd") || !strcmp(cmd, "xrmd")) {

613 i‡(*
¨g
 != 0) {

614 
	`d‹md
(
¨g
);

616 
	`addª∂y_nof‹m©
(550, 
MSG_NO_DIRECTORY_NAME
);

619 #i‚de‡
MINIMAL


620 } i‡(!
	`°rcmp
(
cmd
, "stat")) {

621 i‡(*
¨g
 != 0) {

622 
modîn_li°ögs
 = 0;

623 
	`d⁄li°
(
¨g
, 1, 1, 1, 1);

625 
	`addª∂y_nof‹m©
(211, "http://www.pureftpd.org/");

628 } i‡(!
	`°rcmp
(
cmd
, "list")) {

629 #i‚de‡
MINIMAL


630 
modîn_li°ögs
 = 0;

632 #ifde‡
WITH_TLS


633 i‡(
íf‹˚_és_auth
 == 3 &&

634 
d©a_¥Ÿe˘i⁄_Àvñ
 !
CPL_PRIVATE
) {

635 
	`addª∂y_nof‹m©
(521, 
MSG_PROT_PRIVATE_NEEDED
);

639 
	`d⁄li°
(
¨g
, 0, 1, 0, 1);

641 } i‡(!
	`°rcmp
(
cmd
, "nlst")) {

642 #i‚de‡
MINIMAL


643 
modîn_li°ögs
 = 0;

645 #ifde‡
WITH_TLS


646 i‡(
íf‹˚_és_auth
 == 3 &&

647 
d©a_¥Ÿe˘i⁄_Àvñ
 !
CPL_PRIVATE
) {

648 
	`addª∂y_nof‹m©
(521, 
MSG_PROT_PRIVATE_NEEDED
);

652 
	`d⁄li°
(
¨g
, 0, 0, 0, 
brokí_˛õ¡_com∑t
);

654 #i‚de‡
MINIMAL


655 } i‡(!
	`°rcmp
(
cmd
, "mfmt")) {

656 
	`∑r£_fûe_time_ch™ge
(
¨g
);

657 } i‡(!
	`°rcmp
(
cmd
, "mlst")) {

658 #ifde‡
WITH_TLS


659 i‡(
íf‹˚_és_auth
 == 3 &&

660 
d©a_¥Ÿe˘i⁄_Àvñ
 !
CPL_PRIVATE
) {

661 
	`addª∂y_nof‹m©
(521, 
MSG_PROT_PRIVATE_NEEDED
);

665 
	`doml°
(*
¨g
 != 0 ?árg : ".");

667 } i‡(!
	`°rcmp
(
cmd
, "mlsd")) {

668 
modîn_li°ögs
 = 1;

669 #ifde‡
WITH_TLS


670 i‡(
íf‹˚_és_auth
 == 3 &&

671 
d©a_¥Ÿe˘i⁄_Àvñ
 !
CPL_PRIVATE
) {

672 
	`addª∂y_nof‹m©
(521, 
MSG_PROT_PRIVATE_NEEDED
);

676 
	`d⁄li°
(
¨g
, 0, 1, 1, 0);

679 } i‡(!
	`°rcmp
(
cmd
, "abor")) {

680 
	`addª∂y_nof‹m©
(226, 
MSG_ABOR_SUCCESS
);

681 #i‚de‡
MINIMAL


682 } i‡(!
	`°rcmp
(
cmd
, "site")) {

683 i‡((
sôórg
 = 
¨g
Ë!
NULL
) {

684 *
sôórg
 !0 && !
	`is•a˚
(() *sitearg)) {

685 
sôórg
++;

687 i‡(*
sôórg
 != 0) {

688 *
sôórg
++ = 0;

691 i‡(!
	`°rˇ£cmp
(
¨g
, "idle")) {

692 i‡(
sôórg
 =
NULL
 || *sitearg == 0) {

693 
	`addª∂y_nof‹m©
(501, "SITE IDLE: " 
MSG_MISSING_ARG
);

695 
i
 = 0;

697 
i
 = 
	`°πoul
(
sôórg
, &sitearg, 10);

698 i‡(
sôórg
 && *sitearg)

699 
	`addª∂y
(501, 
MSG_GARBAGE_FOUND
 " : %s", 
sôórg
);

700 i‡(
i
 > 
MAX_SITE_IDLE
)

701 
	`addª∂y_nof‹m©
(501, 
MSG_VALUE_TOO_LARGE
);

703 
idÀtime
 = 
i
;

704 
	`addª∂y
(200, 
MSG_IDLE_TIME
, 
idÀtime
);

705 
idÀtime_no›
 = (Ë
idÀtime
 * 2.0;

708 } i‡(!
	`°rˇ£cmp
(
¨g
, "time")) {

709 
	`dosôëime
();

710 } i‡(!
	`°rˇ£cmp
(
¨g
, "help")) {

711 
hñp_sôe
:

713 
	`addª∂y_nof‹m©
(214, 
MSG_SITE_HELP
 
CRLF


714 #ifde‡
WITH_DIRALIASES


715 " ALIAS" 
CRLF


717 " CHMOD" 
CRLF
 " IDLE" CRLF " UTIME");

718 
	`addª∂y_nof‹m©
(214, "Pure-FTPd - http://pureftpd.org/");

719 } i‡(!
	`°rˇ£cmp
(
¨g
, "chmod")) {

720 *
sôórg2
;

721 
mode_t
 
mode
;

723 
∑r£chmod
:

724 i‡(
sôórg
 =
NULL
 || *sitearg == 0) {

725 
	`addª∂y_nof‹m©
(501, 
MSG_MISSING_ARG
);

726 
chmod_wayout
;

728 
sôórg2
 = 
sôórg
;

729 *
sôórg2
 !0 && !
	`is•a˚
(() *sitearg2)) {

730 
sôórg2
++;

732 *
sôórg2
 !0 && 
	`is•a˚
(() *sitearg2)) {

733 
sôórg2
++;

735 i‡(*
sôórg2
 == 0) {

736 
	`addª∂y_nof‹m©
(550, 
MSG_NO_FILE_NAME
);

737 
chmod_wayout
;

739 
mode
 = (
mode_t
Ë
	`°πoul
(
sôórg
, 
NULL
, 8);

740 i‡(
mode
 > (
mode_t
) 07777) {

741 
	`addª∂y_nof‹m©
(501, 
MSG_BAD_CHMOD
);

742 
chmod_wayout
;

744 
	`dochmod
(
sôórg2
, 
mode
);

745 
chmod_wayout
:

747 } i‡(!
	`°rˇ£cmp
(
¨g
, "utime")) {

748 *
sôórg2
;

750 i‡(
sôórg
 =
NULL
 || *sitearg == 0) {

751 
	`addª∂y_nof‹m©
(501, 
MSG_NO_FILE_NAME
);

752 
utime_wayout
;

754 i‡((
sôórg2
 = 
	`°ºchr
(
sôórg
, ' ')Ë=
NULL
 ||

755 
sôórg2
 =
sôórg
) {

756 
	`addª∂y_nof‹m©
(501, 
MSG_MISSING_ARG
);

757 
utime_wayout
;

759 i‡(
	`°rˇ£cmp
(
sôórg2
, " UTC") != 0) {

760 
	`∑r£_fûe_time_ch™ge
(
sôórg
);

761 
utime_wayout
;

763 *
sôórg2
-- = 0;

764 i‡((
sôórg2
 = 
	`°ºchr
(
sôórg
, ' ')Ë=
NULL
 ||

765 
sôórg2
 =
sôórg
) {

766 
utime_no_¨g
:

767 
	`addª∂y_nof‹m©
(501, 
MSG_MISSING_ARG
);

768 
utime_wayout
;

770 *
sôórg2
-- = 0;

771 i‡((
sôórg2
 = 
	`°ºchr
(
sôórg
, ' ')Ë=
NULL
 ||

772 
sôórg2
 =
sôórg
) {

773 
utime_no_¨g
;

775 *
sôórg2
-- = 0;

776 i‡((
sôórg2
 = 
	`°ºchr
(
sôórg
, ' ')Ë=
NULL
 ||

777 
sôórg2
 =
sôórg
) {

778 
utime_no_¨g
;

780 *
sôórg2
++ = 0;

781 i‡(*
sôórg2
 == 0) {

782 
utime_no_¨g
;

784 
	`doutime
(
sôórg
, 
sôórg2
);

785 
utime_wayout
:

787 #ifde‡
WITH_DIRALIASES


788 } i‡(!
	`°rˇ£cmp
(
¨g
, "alias")) {

789 i‡(
sôórg
 =
NULL
 || *sitearg == 0) {

790 
	`¥öt_Æü£s
();

792 c⁄° *
Æüs
;

794 i‡((
Æüs
 = 
	`lookup_Æüs
(
sôórg
)Ë!
NULL
) {

795 
	`addª∂y
(214, 
MSG_ALIASES_ALIAS
, 
sôórg
, 
Æüs
);

797 
	`addª∂y
(502, 
MSG_ALIASES_UNKNOWN
, 
sôórg
);

801 } i‡(*
¨g
 != 0) {

802 
	`addª∂y
(500, "SITE %†" 
MSG_UNKNOWN_EXTENSION
, 
¨g
);

804 
	`addª∂y_nof‹m©
(500, "SITE: " 
MSG_MISSING_ARG
);

807 } i‡(!
	`°rcmp
(
cmd
, "mdtm")) {

808 
	`domdtm
(
¨g
);

809 } i‡(!
	`°rcmp
(
cmd
, "size")) {

810 
	`dosize
(
¨g
);

811 #i‚de‡
MINIMAL


812 } i‡(!
	`°rcmp
(
cmd
, "chmod")) {

813 
sôórg
 = 
¨g
;

814 
∑r£chmod
;

816 } i‡(!
	`°rcmp
(
cmd
, "rnfr")) {

817 i‡(*
¨g
 != 0) {

818 
	`d‹n‰
(
¨g
);

820 
	`addª∂y_nof‹m©
(550, 
MSG_NO_FILE_NAME
);

822 } i‡(!
	`°rcmp
(
cmd
, "rnto")) {

823 
¨g
 = 
	`ªvóÀxåa•c
(arg);

824 i‡(*
¨g
 != 0) {

825 
	`d‹¡o
(
¨g
);

827 
	`addª∂y_nof‹m©
(550, 
MSG_NO_FILE_NAME
);

830 
	`addª∂y_nof‹m©
(500, 
MSG_UNKNOWN_COMMAND
);

833 
no›idÀ
 = (
time_t
) -1;

834 
wayout
:

835 #ifde‡
WITH_RFC2640


836 
	`‰ì
(
«rg
);

837 
«rg
 = 
NULL
;

839 #ifde‡
THROTTLING


840 i‡(
thrŸéög_dñay
 != 0UL) {

841 
	`u¶ìp2
(
thrŸéög_dñay
);

847 
	}
}

	@src/ftpd.c

1 
	~<c⁄fig.h
>

3 
	#DEFINE_GLOBALS


	)

4 
	~"mesßges.h
"

5 
	~"·pd_p.h
"

6 
	~"dy«mic.h
"

7 
	~"·pwho-upd©e.h
"

8 
	~"·pwho-ªad.h
"

9 
	~"globÆs.h
"

10 
	~"ˇps.h
"

11 
	~"Æt_¨c4øndom.h
"

12 #i‡
deföed
(
WITH_UPLOAD_SCRIPT
)

13 
	~"u∂ﬂd-pùe.h
"

15 #ifde‡
WITH_ALTLOG


16 
	~"Æéog.h
"

18 #ifde‡
QUOTAS


19 
	~"quŸas.h
"

21 #ifde‡
WITH_DIRALIASES


22 
	~"dúÆü£s.h
"

24 
	~"·pd.h
"

25 
	~"bsd-glob.h
"

26 
	~"gëlﬂdavg.h
"

27 
	~"ß„_rw.h
"

28 #i‚de‡
WITHOUT_PRIVSEP


29 
	~"¥iv£p.h
"

31 #ifde‡
WITH_TLS


32 
	~"és.h
"

34 #ifde‡
WITH_BONJOUR


35 
	~"b⁄jour.h
"

38 #ifde‡
WITH_DMALLOC


39 
	~<dmÆloc.h
>

42 
	$dißbÀsig«ls
()

44 
sig£t_t
 
sigs
;

46 
	`sigfûl£t
(&
sigs
);

47 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
sigs
, &
ﬁd_sigmask
) < 0) {

48 
	`_EXIT
(
EXIT_FAILURE
);

50 
	}
}

52 
	$íabÀsig«ls
()

54 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁd_sigmask
, 
NULL
) < 0) {

55 
	`_EXIT
(
EXIT_FAILURE
);

57 
	}
}

59 
	$u¶ìp2
(c⁄° 
mi¸o£c
)

61 
	`dißbÀsig«ls
();

62 
	`u¶ìp
(
mi¸o£c
);

63 
	`íabÀsig«ls
();

64 
	}
}

66 #ifde‡
WITH_TLS


67 
ssize_t
 
	$£cuª_ß„_wrôe
(* c⁄° 
és_fd
, c⁄° *
buf_
, 
size_t
 
cou¡
)

69 
ssize_t
 
wrôãn
;

70 c⁄° *
buf
 = (c⁄° *Ë
buf_
;

72 
cou¡
 > (
size_t
) 0U) {

74 i‡((
wrôãn
 = 
	`SSL_wrôe
(
és_fd
, 
buf
, 
cou¡
)Ë<(
ssize_t
) 0) {

75 i‡(
	`SSL_gë_îr‹
(
és_fd
, 
wrôãn
Ë!
SSL_ERROR_NONE
) {

76  (
ssize_t
) -1;

82 
buf
 +
wrôãn
;

83 
cou¡
 -
wrôãn
;

85  (
ssize_t
Ë(
buf
 - (c⁄° *Ë
buf_
);

86 
	}
}

89 
ssize_t
 
	$ß„_n⁄block_wrôe
(c⁄° 
fd
, * c⁄° 
és_fd
,

90 c⁄° *
buf_
, 
size_t
 
cou¡
)

92 
ssize_t
 
wrôãn
;

93 c⁄° *
buf
 = (c⁄° *Ë
buf_
;

94 
pﬁlfd
 
pfd
;

96 
cou¡
 > (
size_t
) 0U) {

98 i‡(
és_fd
 =
NULL
) {

99 
wrôãn
 = 
	`wrôe
(
fd
, 
buf
, 
cou¡
);

101 #ifde‡
WITH_TLS


102 
wrôãn
 = 
	`SSL_wrôe
(
és_fd
, 
buf
, 
cou¡
);

103 i‡(
	`SSL_gë_îr‹
(
és_fd
, 
wrôãn
Ë=
SSL_ERROR_WANT_WRITE
) {

104 
î∫o
 = 
EAGAIN
;

107 
	`ab‹t
();

110 i‡(
wrôãn
 > (
ssize_t
) 0) {

113 i‡(
î∫o
 =
EAGAIN
 ||Éºnÿ=
EWOULDBLOCK
) {

114 
pfd
.
fd
 = fd;

115 
pfd
.
evíts
 = 
POLLOUT
 | 
POLLERR
 | 
POLLHUP
;

116 
pfd
.
ªvíts
 = 0;

117 i‡(
	`pﬁl
(&
pfd
, 1U, 
idÀtime
 * 1000UL) <= 0 ||

118 (
pfd
.
ªvíts
 & (
POLLERR
 | 
POLLHUP
)) != 0 ||

119 (
pfd
.
ªvíts
 & 
POLLOUT
) == 0) {

120 
î∫o
 = 
EPIPE
;

123 } i‡(
î∫o
 !
EINTR
) {

127 
buf
 +
wrôãn
;

128 
cou¡
 -
wrôãn
;

131 
	}
}

133 
	$ovîœp˝y
(*
d
, c⁄° *
s
)

135 *
s
 != 0) {

136 *
d
++ = *
s
++;

138 *
d
 = 0;

139 
	}
}

141 
	$ß„_fd_£t
(c⁄° 
fd
, 
fd_£t
 * c⁄° 
fds
)

143 i‡(
fd
 == -1) {

146 
	`FD_SET
(
fd
, 
fds
);

147 
	}
}

149 
	$ß„_fd_is£t
(c⁄° 
fd
, c⁄° 
fd_£t
 * c⁄° 
fds
)

151 i‡(
fd
 == -1) {

154  
	`FD_ISSET
(
fd
, 
fds
);

155 
	}
}

157 
	$öô_tz
()

159 
°buf
[10];

160 
tm
 *tm;

161 
time_t
 
now
 = 
	`time
(
NULL
);

163 #ifde‡
HAVE_TZSET


164 
	`tz£t
();

166 #ifde‡
HAVE_PUTENV


167 i‡((
tm
 = 
	`loˇ…ime
(&
now
)Ë!
NULL
 &&

168 
	`°r·ime
(
°buf
,  stbuf, "%z", 
tm
Ë=(
size_t
) 5U) {

169 
	`¢¥ötf
(
deÁu…_tz_f‹_puãnv
,  default_tz_for_putenv,

170 "TZ=UTC%c%c%c:%c%c", (*
°buf
 == '-' ? '+' : '-'),

171 
°buf
[1], stbuf[2], stbuf[3], stbuf[4]);

173 
	`puãnv
(
deÁu…_tz_f‹_puãnv
);

175 (Ë
	`loˇ…ime
(&
now
);

176 (Ë
	`gmtime
(&
now
);

179 
	}
}

181 
	$sim∂ify
(*
subdú
)

183 *
a
;

185 i‡(
subdú
 =
NULL
 || *subdir == 0) {

188 (
a
 = 
	`°r°r
(
subdú
, "//")Ë!
NULL
) {

189 
	`ovîœp˝y
(
a
,á + 1);

191 (
a
 = 
	`°r°r
(
subdú
, "/./")Ë!
NULL
) {

192 
	`ovîœp˝y
(
a
,á + 2);

194 
	`°∫cmp
(
subdú
, "../", 3) == 0) {

195 
subdú
 += 3;

197 
a
 = 
	`°r°r
(
subdú
, "/../");

198 i‡(
a
 !
NULL
) {

199 i‡(
a
 =
subdú
) {

200 
	`°∫cmp
(
subdú
, "/../", 4) == 0) {

201 
	`ovîœp˝y
(
subdú
, subdir + 3);

203 
a
 = 
	`°r°r
(
subdú
, "/../");

205 
a
 !
NULL
) {

206 *
√xtcomp⁄ít
 = 
a
 + 4;

207 i‡(
a
 !
subdú
 && *a == '/') {

208 
a
--;

210 
a
 !
subdú
 && *a != '/') {

211 
a
--;

213 i‡(*
a
 == '/') {

214 
a
++;

216 
	`ovîœp˝y
(
a
, 
√xtcomp⁄ít
);

217 
a
 = 
	`°r°r
(
subdú
, "/../");

220 
a
 = 
subdú
;

221 i‡(*
a
 == '.') {

222 
a
++;

223 i‡(*
a
 == 0) {

226 i‡(*
a
 == '/') {

227 *
a
 == '/') {

228 
a
++;

230 
	`ovîœp˝y
(
subdú
, 
a
);

233 i‡(*
a
 == 0) {

236 
a
 = 
subdú
 + 
	`°æí
(subdúË- (
size_t
) 1U;

237 i‡(*
a
 !'.' ||á =
subdú
) {

240 
a
--;

241 i‡(*
a
 ='/' ||á =
subdú
) {

242 
a
[1] = 0;

245 i‡(*
a
 !'.' ||á =
subdú
) {

248 
a
--;

249 i‡(*
a
 != '/') {

252 *
a
 = 0;

253 i‡((
a
 = 
	`°ºchr
(
subdú
, '/')Ë=
NULL
) {

254 *
subdú
 = '/';

255 
subdú
[1] = 0;

258 
a
[1] = 0;

259 
	}
}

261 
	$check¥öèbÀ
(c⁄° *
s
)

263 
ªt
 = 0;

264 
c
;

266 (
c
 = (Ë*
s
) != 0U) {

267 i‡(
	`ISCTRLCODE
(
c
)) {

268 
ªt
--;

271 
s
++;

274  
ªt
;

275 
	}
}

277 *
	$skù_ã ë_c⁄åﬁs
(c⁄° *
°r
)

279 i‡(
°r
 =
NULL
) {

280  
NULL
;

282 *
°r
 != 0 && () *str >= 240U) {

283 
°r
++;

285  (*Ë
°r
;

286 
	}
}

288 
	$_EXIT
(c⁄° 
°©us
)

290 
	`dñëe_©omic_fûe
();

291 #ifde‡
FTPWHO


292 
	`·pwho_exô
();

294 
	`_exô
(
°©us
);

295 
	}
}

297 
	gª∂ybuf
[
MAX_SERVER_REPLY_LEN
 * 4U];

298 *
	gª∂ybuf_pos
 = 
ª∂ybuf
;

299 
size_t
 
	gª∂ybuf_À·
;

301 
	$˛õ¡_öô_ª∂y_buf
()

303 
ª∂ybuf_pos
 = 
ª∂ybuf
;

304 
ª∂ybuf_À·
 =  
ª∂ybuf
 - 1U;

305 
	}
}

307 
	$˛õ¡_fÊush
()

309 i‡(
ª∂ybuf_pos
 =
ª∂ybuf
) {

312 
	`ß„_wrôe
(
˛õ¡fd
, 
ª∂ybuf
, (
size_t
Ë(
ª∂ybuf_pos
 -Ñeplybuf), -1);

313 
	`˛õ¡_öô_ª∂y_buf
();

314 
	}
}

316 
	$˛õ¡_¥ötf
(c⁄° * c⁄° 
f‹m©
, ...)

318 
va_li°
 
va
;

319 
buf
[
MAX_SERVER_REPLY_LEN
];

320 
size_t
 
Àn
;

321 
vÀn
;

323 
	`va_°¨t
(
va
, 
f‹m©
);

324 
vÀn
 = 
	`v¢¥ötf
(
buf
,  buf, 
f‹m©
, 
va
);

325 i‡(
vÀn
 < 0 || (
size_t
ËvÀ¿> 
buf
) {

326 
buf
[
MAX_SERVER_REPLY_LEN
 - 1] = 0;

327 
Àn
 = 
	`°æí
(
buf
);

329 
Àn
 = (
size_t
Ë
vÀn
;

331 i‡(
Àn
 >
ª∂ybuf_À·
) {

332 
	`˛õ¡_fÊush
();

334 i‡(
Àn
 > 
ª∂ybuf_À·
) {

335 
	`ab‹t
();

337 
	`mem˝y
(
ª∂ybuf_pos
, 
buf
, 
Àn
);

338 
ª∂ybuf_pos
 +
Àn
;

339 
ª∂ybuf_À·
 -
Àn
;

341 
	`va_íd
(
va
);

342 
	}
}

344 
	$dõ
(c⁄° 
îr
, c⁄° 
¥i‹ôy
, c⁄° * c⁄° 
f‹m©
, ...)

346 
va_li°
 
va
;

347 
löe
[
MAX_SYSLOG_LINE
];

349 
	`dißbÀsig«ls
();

350 
	`va_°¨t
(
va
, 
f‹m©
);

351 
	`v¢¥ötf
(
löe
, Üöe, 
f‹m©
, 
va
);

352 
	`va_íd
(
va
);

353 #ifde‡
WITH_TLS


354 i‡(
és_˙x
 !
NULL
) {

355 
buf
[
MAX_SERVER_REPLY_LEN
];

356 
	`¢¥ötf
(
buf
,  buf, "%d %s\r\n", 
îr
, 
löe
);

357 
	`SSL_wrôe
(
és_˙x
, 
buf
, 
	`°æí
(buf));

361 
	`˛õ¡_¥ötf
("%d %s\r\n", 
îr
, 
löe
);

362 
	`˛õ¡_fÊush
();

364 
	`logfûe
(
¥i‹ôy
, "%s", 
löe
);

365 
	`_EXIT
(-
¥i‹ôy
 - 1);

366 
	}
}

368 
	$dõ_mem
()

370 
	`dõ
(421, 
LOG_ERR
, 
MSG_OUT_OF_MEMORY
);

371 
	}
}

373 
RETSIGTYPE
 
	$sigÆ¨m
(
sig
)

375 (Ë
sig
;

376 
	`dißbÀsig«ls
();

377 
	`dõ
(421, 
LOG_INFO
, 
MSG_TIMEOUT
);

378 
	}
}

380 #i‚de‡
NO_STANDALONE


381 
RETSIGTYPE
 
	$sigchûd
(
sig
)

383 c⁄° 
ﬁdî∫o
 = 
î∫o
;

384 
pid_t
 
pid
;

386 (Ë
sig
;

387 #ifde‡
HAVE_WAITPID


388 (
pid
 = 
	`waôpid
((
pid_t
Ë-1, 
NULL
, 
WNOHANG
)) > (pid_t) 0) {

389 i‡(
nb_chûdªn
 > 0U) {

390 
nb_chûdªn
--;

392 #ifde‡
FTPWHO


393 
	`·pwho_u∆öksbfûe
(
pid
);

395 
	`ùåack_dñëe_pid
(
pid
);

398 (
pid
 = 
	`waô3
(
NULL
, 
WNOHANG
, NULL)Ë> (
pid_t
) 0) {

399 i‡(
nb_chûdªn
 > 0U) {

400 
nb_chûdªn
--;

402 #ifde‡
FTPWHO


403 
	`·pwho_u∆öksbfûe
(
pid
);

405 
	`ùåack_dñëe_pid
(
pid
);

408 
î∫o
 = 
ﬁdî∫o
;

409 
	}
}

412 
RETSIGTYPE
 
	$sigãrm_˛õ¡
(
sig
)

414 (Ë
sig
;

416 
	`dißbÀsig«ls
();

417 
	`_EXIT
(
EXIT_SUCCESS
);

418 
	}
}

420 #i‚de‡
NO_STANDALONE


421 
RETSIGTYPE
 
	$sigãrm
(
sig
)

423 c⁄° 
ﬁdî∫o
 = 
î∫o
;

424 (Ë
sig
;

426 
°›_£rvî
 = 1;

427 i‡(
li°ífd
 != -1) {

428 
	`shutdown
(
li°ífd
, 2);

429 (Ë
	`˛o£
(
li°ífd
);

431 i‡(
li°ífd6
 != -1) {

432 
	`shutdown
(
li°ífd6
, 2);

433 (Ë
	`˛o£
(
li°ífd6
);

435 
î∫o
 = 
ﬁdî∫o
;

436 
	}
}

438 
	$£t_˛€xec_Êag
(c⁄° 
fd
)

440 
	`f˙é
(
fd
, 
F_SETFD
, 
FD_CLOEXEC
);

441 
	}
}

444 
	$˛óørgs
(
¨gc
, **
¨gv
)

446 #i‚de‡
NO_PROCNAME_CHANGE


447 #i‡
	`deföed
(
__löux__
Ë&& !deföed(
HAVE_SETPROCTITLE
)

448 
i
;

449 *
fú°
 = 
NULL
;

450 *
√xt
 = 
NULL
;

452 
i
 = 0; i < 
¨gc
; i++) {

453 i‡(
fú°
 =
NULL
) {

454 
fú°
 = 
¨gv
[
i
];

456 i‡(
√xt
 =
NULL
 || 
¨gv
[
i
] ==Çext + 1) {

457 
√xt
 = 
¨gv
[
i
] + 
	`°æí
(argv[i]);

460 
i
 = 0; 
ívú⁄
[i] !
NULL
; i++) {

461 i‡(
fú°
 =
NULL
) {

462 
fú°
 = 
¨gv
[
i
];

464 i‡(
√xt
 =
NULL
 || 
¨gv
[
i
] ==Çext + 1) {

465 
√xt
 = 
¨gv
[
i
] + 
	`°æí
(argv[i]);

468 i‡(
fú°
 =
NULL
 || 
√xt
 == NULL) {

471 
¨gv_…h
 = 
√xt
 - 
fú°
;

472 
¨gv0
 = 
¨gv
;

473 i‡(
ívú⁄
 !
NULL
) {

474 **
√w_ívú⁄
;

475 
ív_nb
 = 0U;

477 
ívú⁄
[
ív_nb
] !
NULL
) {

478 
ív_nb
++;

480 i‡((
√w_ívú⁄
 = 
	`mÆloc
((1U + 
ív_nb
Ë*  (*))Ë=
NULL
) {

481 
	`ab‹t
();

483 
√w_ívú⁄
[
ív_nb
] = 
NULL
;

484 
ív_nb
 > 0U) {

485 
ív_nb
--;

486 
√w_ívú⁄
[
ív_nb
] = 
	`°rdup
(
ívú⁄
[env_nb]);

488 
ívú⁄
 = 
√w_ívú⁄
;

491 (Ë
¨gc
;

492 (Ë
¨gv
;

495 
	}
}

497 
	$£çro˚s¢ame
(c⁄° * c⁄° 
tôÀ
)

499 #i‚de‡
NO_PROCNAME_CHANGE


500 #ifde‡
HAVE_SETPROCTITLE


501 
	`£çro˘ôÀ
("-%s", 
tôÀ
);

502 #ñi‡
	`deföed
(
__löux__
)

503 i‡(
¨gv0
 !
NULL
 && 
¨gv_…h
 > 
	`°æí
(
tôÀ
) - 2) {

504 
	`mem£t
(
¨gv0
[0], 0, 
¨gv_…h
);

505 
	`°∫˝y
(
¨gv0
[0], 
tôÀ
, 
¨gv_…h
 - 2);

506 
¨gv0
[1] = 
NULL
;

508 #ñi‡
	`deföed
(
__hpux__
)

509 
p°un
 
p°
;

511 
p°
.
p°_comm™d
 = 
tôÀ
;

512 
	`p°©
(
PSTAT_SETCMD
, 
p°
, 
	`°æí
(
tôÀ
), 0, 0);

515 (Ë
tôÀ
;

516 
	}
}

523 
	$checkvÆidaddr
(c⁄° 
sockaddr_°‹age
 * c⁄° 
addr
)

525 i‡(
addr
 =
NULL
) {

529 #ifde‡
__APPLE_CC__


532 i‡(
	`STORAGE_FAMILY
(*
addr
Ë=
AF_INET6
) {

533 i‡(
	`IN6_IS_ADDR_MULTICAST
(&
	`STORAGE_SIN_ADDR6_NF
(*
addr
)) ||

534 
	`IN6_IS_ADDR_UNSPECIFIED
(&
	`STORAGE_SIN_ADDR6_NF
(*
addr
))) {

538 } i‡(
	`STORAGE_FAMILY
(*
addr
Ë=
AF_INET
) {

539 i‡(
	`¡ohl
(
	`STORAGE_SIN_ADDR
(*
addr
)Ë=
INADDR_ANY
 ||

540 
	`¡ohl
(
	`STORAGE_SIN_ADDR
(*
addr
)Ë=
INADDR_NONE
 ||

541 
	`¡ohl
(
	`STORAGE_SIN_ADDR
(*
addr
)Ë=
INADDR_BROADCAST
 ||

542 
	`IN_MULTICAST
(
	`¡ohl
(
	`STORAGE_SIN_ADDR
(*
addr
))) ||

543 
	`IN_BADCLASS
(
	`¡ohl
(
	`STORAGE_SIN_ADDR
(*
addr
)))) {

549 
	}
}

553 
	$fourösix
(
sockaddr_°‹age
 *
v6
)

555 
sockaddr_°‹age
 
v4
;

557 i‡(
v6ªady
 =0 || 
	`STORAGE_FAMILY
(*
v6
Ë!
AF_INET6
 ||

558 
	`IN6_IS_ADDR_V4MAPPED
(&
	`STORAGE_SIN_ADDR6_NF
(*
v6
)) == 0) {

561 
	`mem£t
(&
v4
, 0,  v4);

562 
	`STORAGE_FAMILY
(
v4
Ë
AF_INET
;

563 
	`mem˝y
(&
	`STORAGE_SIN_ADDR
(
v4
),

564 (*Ë&
	`STORAGE_SIN_ADDR6
(*
v6
) + 12,

565  
	`STORAGE_SIN_ADDR
(
v4
));

566 
	`STORAGE_PORT
(
v4
Ë
	`STORAGE_PORT6
(*
v6
);

567 
	`SET_STORAGE_LEN
(
v4
, (
sockaddr_ö
));

568 *
v6
 = 
v4
;

569 
	}
}

573 
	$addrcmp
(c⁄° 
sockaddr_°‹age
 * c⁄° 
s1
,

574 c⁄° 
sockaddr_°‹age
 * c⁄° 
s2
)

576 i‡(
	`STORAGE_FAMILY
(*
s1
Ë=
AF_INET6
) {

577 i‡(
	`STORAGE_FAMILY
(*
s2
Ë!
AF_INET6
) {

580 i‡(
	`IN6_ARE_ADDR_EQUAL
(&
	`STORAGE_SIN_ADDR6_NF
(*
s1
), &STORAGE_SIN_ADDR6_NF(*
s2
))) {

585 } i‡(
	`STORAGE_FAMILY
(*
s1
Ë=
AF_INET
) {

586 i‡(
	`STORAGE_FAMILY
(*
s2
Ë!
AF_INET
) {

589 i‡(
	`STORAGE_SIN_ADDR
(*
s1
Ë=STORAGE_SIN_ADDR(*
s2
)) {

596 
	}
}

598 
	$gíîic_©⁄
(c⁄° *
§c
, 
sockaddr_°‹age
 *
a
)

600 i‡(
	`öë_±⁄
(
AF_INET6
, 
§c
, &
	`STORAGE_SIN_ADDR6
(*
a
)) > 0) {

601 
	`STORAGE_FAMILY
(*
a
Ë
AF_INET6
;

604 i‡(
	`öë_±⁄
(
AF_INET
, 
§c
, &
	`STORAGE_SIN_ADDR
(*
a
)) > 0) {

605 
	`STORAGE_FAMILY
(*
a
Ë
AF_INET
;

608 
	`mem£t
(
a
, 0,  *a);

611 
	}
}

613 
	$logfûe
(c⁄° 
¸ô
, c⁄° *
f‹m©
, ...)

615 #i‡
	`deföed
(
NON_ROOT_FTP
)

616 (Ë
¸ô
;

617 (Ë
f‹m©
;

619 c⁄° *
urgícy
;

620 
va_li°
 
va
;

621 
löe
[
MAX_SYSLOG_LINE
];

623 i‡(
no_sy¶og
 != 0) {

626 
	`va_°¨t
(
va
, 
f‹m©
);

627 
	`v¢¥ötf
(
löe
, Üöe, 
f‹m©
, 
va
);

628 
	`va_íd
(
va
);

629 
¸ô
) {

630 
LOG_INFO
:

631 
urgícy
 = "[INFO] ";

633 
LOG_WARNING
:

634 
urgícy
 = "[WARNING] ";

636 
LOG_ERR
:

637 
urgícy
 = "[ERROR] ";

639 
LOG_NOTICE
:

640 
urgícy
 = "[NOTICE] ";

642 
LOG_DEBUG
:

643 
urgícy
 = "[DEBUG] ";

646 
urgícy
 = "";

648 #ifde‡
SAVE_DESCRIPTORS


649 
	`›ílog
("puª-·pd", 
log_pid
, 
sy¶og_Ácûôy
);

651 
	`sy¶og
(
¸ô
, "(%s@%s) %s%s",

652 ((
loggedö
 !0 && *
accou¡
 != 0) ?áccount : "?"),

653 (*
ho°
 != 0 ? host : "?"),

654 
urgícy
, 
löe
);

655 #ifde‡
SAVE_DESCRIPTORS


656 
	`˛o£log
();

659 
	}
}

661 #i‚de‡
NO_STANDALONE


667 
	$›í_max
()

669 
z
;

671 i‡((
z
 = (Ë
	`sysc⁄f
(
_SC_OPEN_MAX
)) < 0L) {

672 
	`≥º‹
("_SC_OPEN_MAX");

673 
	`_EXIT
(
EXIT_FAILURE
);

675  (Ë
z
;

676 
	}
}

680 #ifde‡
WITH_RFC2640


681 *
	$ch¨£t_fs2˛õ¡
(c⁄° *
°rög
)

683 *
ouçut
 = 
NULL
, *
ouçut_
;

684 
size_t
 
öÀn
, 
ouéí
, 
ouéí_
;

686 
öÀn
 = 
	`°æí
(
°rög
);

687 
ouéí_
 = 
ouéí
 = 
öÀn
 * (
size_t
) 4U + (size_t) 1U;

688 i‡(
ouéí
 <
öÀn
 ||

689 (
ouçut_
 = 
ouçut
 = 
	`ˇŒoc
(
ouéí
, (
size_t
Ë1U)Ë=
NULL
) {

690 
	`dõ_mem
();

692 i‡(
utf8
 > 0 && 
	`°rˇ£cmp
(
ch¨£t_fs
, "utf-8") != 0) {

693 i‡(
	`ic⁄v
(
ic⁄v_fd_fs2utf8
, (**Ë&
°rög
, &
öÀn
,

694 &
ouçut_
, &
ouéí_
Ë=(
size_t
) -1) {

695 
	`°∫˝y
(
ouçut
, 
°rög
, 
	`°æí
(string));

697 } i‡(
utf8
 <0 && 
	`°rˇ£cmp
(
ch¨£t_˛õ¡
, 
ch¨£t_fs
) != 0) {

698 i‡(
	`ic⁄v
(
ic⁄v_fd_fs2˛õ¡
,

699 (**Ë&
°rög
, &
öÀn
,

700 &
ouçut_
, &
ouéí_
Ë=(
size_t
) -1) {

701 
	`°∫˝y
(
ouçut
, 
°rög
, 
	`°æí
(string));

704 
	`°∫˝y
(
ouçut
, 
°rög
, 
ouéí
);

706 
ouçut
[
ouéí
 - 1U] = 0;

708  
ouçut
;

709 
	}
}

712 
	$addª∂y_√wlöe
(c⁄° * c⁄° 
°r
, c⁄° 
size_t
 
size
)

714 
ª∂y
 *
√wlöe
;

716 i‡((
√wlöe
 = (
ª∂y
 *Ë
	`mÆloc
(
	`off£tof
(ª∂y, 
löe
) +

717 
size
)Ë=
NULL
) {

718 
	`dõ_mem
();

720 i‡(
fú°ª∂y
 =
NULL
) {

721 
fú°ª∂y
 = 
√wlöe
;

723 
œ°ª∂y
->
√xt
 = 
√wlöe
;

725 
√wlöe
->
√xt
 = 
NULL
;

726 
œ°ª∂y
 = 
√wlöe
;

727 
	`mem˝y
(
√wlöe
->
löe
, 
°r
, 
size
);

728 
	}
}

730 
	$addª∂y_nof‹m©
(c⁄° 
code
, c⁄° * c⁄° 
löe
)

732 i‡(
code
 != 0) {

733 
ª∂ycode
 = 
code
;

735 
	`addª∂y_√wlöe
(
löe
, 
	`°æí
÷öeË+ (
size_t
) 1U);

736 
	}
}

738 
	$addª∂y
(c⁄° 
code
, c⁄° * c⁄° 
löe
, ...)

740 *
a
;

741 *
b
;

742 
va_li°
 
≠
;

743 
œ°
;

744 
buf
[
MAX_SERVER_REPLY_LEN
];

746 i‡(
code
 != 0) {

747 
ª∂ycode
 = 
code
;

749 
	`va_°¨t
(
≠
, 
löe
);

750 
	`v¢¥ötf
(
buf
,  buf, 
löe
, 
≠
);

751 
	`va_íd
(
≠
);

752 
œ°
 = 0;

753 
a
 = 
buf
;

755 
b
 = 
	`°rchr
(
a
, '\n');

756 i‡(
b
 !
NULL
) {

757 *
b
 = 0;

759 
b
 = 
a
;

760 *
b
 != 0) {

761 
b
++;

763 
œ°
++;

765 
	`addª∂y_√wlöe
(
a
, (
size_t
Ë(
b
 -á) + (size_t) 1U);

766 i‡(
œ°
 != 0) {

769 
a
 = 
b
 + 1;

771 
	}
}

773 
	$d‹ïly
()

775 
ª∂y
 *
sˇ¬edíåy
;

776 
ª∂y
 *
√xã¡ry
;

778 i‡((
sˇ¬edíåy
 = 
fú°ª∂y
Ë=
NULL
) {

782 
√xã¡ry
 = 
sˇ¬edíåy
->
√xt
;

783 #ifde‡
WITH_TLS


784 i‡(
és_˙x
 !
NULL
) {

785 
buf
[
MAX_SERVER_REPLY_LEN
];

787 
	`¢¥ötf
(
buf
,  buf, "%3d%c%s\r\n", 
ª∂ycode
,

788 
√xã¡ry
 =
NULL
 ? ' ' : '-', 
sˇ¬edíåy
->
löe
);

789 
	`SSL_wrôe
(
és_˙x
, 
buf
, 
	`°æí
(buf));

793 
	`˛õ¡_¥ötf
("%3d%c%s\r\n", 
ª∂ycode
,

794 
√xã¡ry
 =
NULL
 ? ' ' : '-',

795 
sˇ¬edíåy
->
löe
);

797 i‡(
loggög
 > 1) {

798 
	`logfûe
(
LOG_DEBUG
, "%3d%c%s", 
ª∂ycode
,

799 
√xã¡ry
 =
NULL
 ? ' ' : '-', 
sˇ¬edíåy
->
löe
);

801 } (
sˇ¬edíåy
 = 
√xã¡ry
Ë!
NULL
);

802 
	`˛õ¡_fÊush
();

803 
sˇ¬edíåy
 = 
fú°ª∂y
;

805 
√xã¡ry
 = 
sˇ¬edíåy
->
√xt
;

806 
	`‰ì
(
sˇ¬edíåy
);

807 } (
sˇ¬edíåy
 = 
√xã¡ry
Ë!
NULL
);

808 
fú°ª∂y
 = 
œ°ª∂y
 = 
NULL
;

809 
	}
}

815 
	$check«meßnôy
(c⁄° *
«me
, 
dŸ_ok
)

817 c⁄° *
«mï¡
;

819 #ifde‡
PARANOID_FILE_NAMES


820 c⁄° *
vÆidch¨s
 =

826 i‡(
«me
 =
NULL
 || *name == 0) {

830 i‡(
«me
[0] == '.' && (name[1] == 0 || (name[1] == '.' &&Çame[2] == 0))) {

833 
«mï¡
 = 
«me
;

834 #ifde‡
PARANOID_FILE_NAMES


836 i‡(
	`°æí
(
«mï¡
Ë!
	`°r•n
“amï¡, 
vÆidch¨s
)) {

840 #ifde‡
QUOTAS


841 i‡(
	`hasquŸa
() == 0) {

842 i‡(
	`°r°r
(
«mï¡
, 
QUOTA_FILE
Ë!
NULL
) {

845 #i‚de‡
ALLOW_DELETION_OF_TEMPORARY_FILES


846 i‡(
	`°r°r
(
«mï¡
, 
PUREFTPD_TMPFILE_PREFIX
) ==Çamepnt) {

852 *
«mï¡
 != 0) {

853 #i‚de‡
ALLOW_EVERYTHING_IN_FILE_NAMES


854 i‡(
	`ISCTRLCODE
(*
«mï¡
) || *namepnt == '\\') {

858 i‡(
dŸ_ok
 == 0) {

859 i‡(*
«mï¡
 == '/') {

860 
«mï¡
++;

861 } i‡(
«mï¡
 !
«me
) {

862 
«mï¡
++;

865 i‡(
«mï¡
[0] == 0) {

868 i‡(
«mï¡
[0] == '.') {

869 i‡(
«mï¡
[1] == 0) {

872 i‡(
«mï¡
[1] == '.') {

873 i‡(
«mï¡
[2] == 0) {

876 i‡(
«mï¡
[2] != '/') {

879 } i‡(
«mï¡
[1] != '/') {

883 i‡(
«mï¡
 !
«me
) {

887 
«mï¡
++;

890 
	}
}

892 
	$do_ùv6_p‹t
(*
p
, 
dñim
)

894 *
deb
;

895 
sockaddr_°‹age
 
a
;

897 
deb
 = 
p
;

898 *
p
 && 
	`°rchr
("0123456789abcdefABCDEF:", *pË!
NULL
) {

899 
p
++;

901 i‡(*
p
 !
dñim
 || 
	`©oi
(p + 1) == 0) {

902 
n›e
:

903 (Ë
	`˛o£
(
d©afd
);

904 
d©afd
 = -1;

905 
	`addª∂y_nof‹m©
(501, 
MSG_SYNTAX_ERROR_IP
);

908 *
p
++ = 0;

909 i‡(
	`gíîic_©⁄
(
deb
, &
a
) != 0) {

910 
n›e
;

912 
	`d›‹t2
(
a
, (Ë
	`©oi
(
p
));

913 
	}
}

915 #i‚de‡
MINIMAL


916 
	$d€°a
()

918 
sockaddr_°‹age
 
d©ac⁄n
;

919 
sockÀn_t
 
socksize
;

920 
hbuf
[
NI_MAXHOST
];

921 
pbuf
[
NI_MAXSERV
];

923 i‡(
∑ssive
 !0 || 
d©afd
 == -1) {

924 
	`addª∂y_nof‹m©
(520, 
MSG_ACTIVE_DISABLED
);

927 i‡(
x„rfd
 == -1) {

928 
	`›íd©a
();

929 i‡(
x„rfd
 == -1) {

930 
	`addª∂y_nof‹m©
(425, 
MSG_CANT_CREATE_DATA_SOCKET
);

934 
socksize
 = (
sockÀn_t
Ë 
d©ac⁄n
;

935 i‡(
	`gësock«me
(
x„rfd
, (
sockaddr
 *Ë&
d©ac⁄n
, &
socksize
) < 0 ||

936 
	`gë«meöfo
((
sockaddr
 *Ë&
d©ac⁄n
, 
	`STORAGE_LEN
(dataconn),

937 
hbuf
,  hbuf, 
pbuf
, Öbuf,

938 
NI_NUMERICHOST
 | 
NI_NUMERICSERV
) != 0) {

939 
	`addª∂y_nof‹m©
(425, 
MSG_GETSOCKNAME_DATA
);

940 
	`˛o£d©a
();

943 
	`addª∂y
(225, "Connected from (|%c|%s|%s|)",

944 
	`STORAGE_FAMILY
(
d©ac⁄n
Ë=
AF_INET6
 ? '2' : '1', 
hbuf
, 
pbuf
);

945 
	}
}

947 
	$d€°p
()

949 
sockaddr_°‹age
 
d©ac⁄n
;

950 
sockÀn_t
 
socksize
;

951 
hbuf
[
NI_MAXHOST
];

952 
pbuf
[
NI_MAXSERV
];

954 i‡(
∑ssive
 =0 || 
d©afd
 == -1) {

955 
	`addª∂y_nof‹m©
(520, 
MSG_CANT_PASSIVE
);

958 i‡(
x„rfd
 == -1) {

959 
	`›íd©a
();

960 i‡(
x„rfd
 == -1) {

961 
	`addª∂y_nof‹m©
(425, 
MSG_CANT_CREATE_DATA_SOCKET
);

965 
socksize
 = (
sockÀn_t
Ë 
d©ac⁄n
;

966 i‡(
	`gë≥î«me
(
x„rfd
, (
sockaddr
 *Ë&
d©ac⁄n
, &
socksize
) < 0 ||

967 
	`gë«meöfo
((
sockaddr
 *Ë&
d©ac⁄n
, 
	`STORAGE_LEN
(dataconn),

968 
hbuf
,  hbuf, 
pbuf
, Öbuf,

969 
NI_NUMERICHOST
 | 
NI_NUMERICSERV
) != 0) {

970 
	`addª∂y_nof‹m©
(425, 
MSG_GETSOCKNAME_DATA
);

971 
	`˛o£d©a
();

974 
	`addª∂y
(225, "ConnectedÅo (|%c|%s|%s|)",

975 
	`STORAGE_FAMILY
(
d©ac⁄n
Ë=
AF_INET6
 ? '2' : '1', 
hbuf
, 
pbuf
);

976 
	}
}

979 
	$d€¥t
(*
p
)

981 
dñim
;

982 
Ámûy
;

984 
dñim
 = *
p
++;

985 
Ámûy
 = 
	`©oi
(
p
);

986 
	`isdigô
((Ë*
p
)) {

987 
p
++;

989 i‡(*
p
 =
dñim
) {

990 
p
++;

992 
	`addª∂y_nof‹m©
(501, 
MSG_SYNTAX_ERROR_IP
);

995 i‡(
Ámûy
 =2 && 
v6ªady
) {

996 
	`do_ùv6_p‹t
(
p
, 
dñim
);

999 i‡(
Ámûy
 != 1) {

1000 i‡(
v6ªady
) {

1001 
	`addª∂y_nof‹m©
(522, 
MSG_ONLY_IPV4V6
);

1003 
	`addª∂y_nof‹m©
(522, 
MSG_ONLY_IPV4
);

1009 
a1
, 
a2
, 
a3
, 
a4
, 
p‹t
 = 0U;

1013 i‡((
	`ssˇnf
(
p
, "%u,%u,%u,%u", &
a1
, &
a2
, &
a3
, &
a4
) != 4 &&

1014 
	`ssˇnf
(
p
, "%u.%u.%u.%u", &
a1
, &
a2
, &
a3
, &
a4
) != 4) ||

1015 
a1
 > 255U || 
a2
 > 255U || 
a3
 > 255U || 
a4
 > 255U ||

1016 (
a1
 | 
a2
 | 
a3
 | 
a4
) == 0U) {

1017 
	`addª∂y_nof‹m©
(501, 
MSG_SYNTAX_ERROR_IP
);

1020 *
p
 && 
	`°rchr
("0123456789.,", *p)) {

1021 
p
++;

1023 i‡(*
p
 =
dñim
) {

1024 
p‹t
 = (Ë
	`©oi
(++
p
);

1025 *
p
 && 
	`isdigô
(() *p)) {

1026 
p
++;

1029 i‡(*
p
 !
dñim
 || 
p‹t
 > 65535U ||Öort <= 0U) {

1030 
	`addª∂y_nof‹m©
(501, 
MSG_SYNTAX_ERROR_IP
);

1033 
sockaddr_°‹age
 
a
;

1035 
	`mem£t
(&
a
, 0, á);

1036 
	`STORAGE_FAMILY
(
a
Ë
AF_INET
;

1037 
	`STORAGE_SIN_ADDR
(
a
) =

1038 
	`ht⁄l
((
a1
 << 24Ë| (
a2
 << 16Ë| (
a3
 << 8Ë| 
a4
);

1039 
	`SET_STORAGE_LEN
(
a
, (
sockaddr_ö
));

1040 
	`d›‹t2
(
a
, 
p‹t
);

1043 
	}
}

1045 
	$°rù˘æ
(* c⁄° 
buf
, 
size_t
 
Àn
)

1047 i‡(
Àn
 <(
size_t
) 0U) {

1051 
Àn
--;

1052 i‡(
	`ISCTRLCODE
(
buf
[
Àn
]) &&

1053 
buf
[
Àn
] != 0 && buf[len] != '\n') {

1054 
buf
[
Àn
] = '_';

1056 } 
Àn
 !(
size_t
) 0U);

1057 
	}
}

1059 #i‚de‡
MINIMAL


1066 
	$dob™√r
(c⁄° 
ty≥
)

1068 
buf„r
[512];

1069 
FILE
 *
msg
;

1070 
size_t
 
buÊí
;

1071 
nblöes
 = 
BANNER_MAXLINES
;

1073 
ty≥
) {

1075 i‡((
msg
 = 
	`f›í
(".b™√r", "r")Ë=
NULL


1076 #ifde‡
WITH_WELCOME_MSG


1077 && (
msg
 = 
	`f›í
("wñcome.msg", "r")Ë=
NULL


1084 i‡((
msg
 = 
	`f›í
(".mesßge", "r")Ë=
NULL
) {

1092 
	`fgës
(
buf„r
,  buf„r, 
msg
Ë!
NULL
 && 
nblöes
 > 0U) {

1093 
nblöes
--;

1094 i‡((
buÊí
 = 
	`°æí
(
buf„r
)Ë> (
size_t
) 0U) {

1095 
buÊí
--;

1096 
buf„r
[
buÊí
] == '\n' || buffer[buflen] == '\r') {

1097 
buf„r
[
buÊí
] = 0;

1098 i‡(
buÊí
 =(
size_t
) 0U) {

1101 
buÊí
--;

1103 
	`°rù˘æ
(
buf„r
, 
buÊí
);

1105 
	`addª∂y_nof‹m©
(0, 
buf„r
);

1107 (Ë
	`f˛o£
(
msg
);

1108 
	}
}

1112 #i‚de‡
MINIMAL


1114 
	$modînf‹m©
(c⁄° *
fûe
, *
èrgë
, 
size_t
 
èrgë_size
,

1115 c⁄° * c⁄° 
¥efix
)

1117 
lök_èrgë
[
MAXPATHLEN
 + 1U];

1118 c⁄° *
·
;

1119 c⁄° *
·x
 = "";

1120 
tm
 *
t
;

1121 
°©
 
°
;

1122 
ªt
 = 0;

1124 i‡(
	`l°©
(
fûe
, &
°
Ë!0 || !(
t
 = 
	`gmtime
((
time_t
 *Ë&°.
°_mtime
))) {

1127 #i‡!
	`deföed
(
MINIMAL
Ë&& !deföed(
ALWAYS_SHOW_SYMLINKS_AS_SYMLINKS
)

1129 #i‚de‡
ALWAYS_SHOW_RESOLVED_SYMLINKS


1130 
brokí_˛õ¡_com∑t
 != 0 &&

1132 
	`S_ISLNK
(
°
.
°_mode
)) {

1133 
°©
 
°s
;

1135 i‡(
	`°©
(
fûe
, &
°s
Ë=0 && !
	`S_ISLNK
(°s.
°_mode
)) {

1136 
°
 = 
°s
;

1140 i‡(
	`S_ISREG
(
°
.
°_mode
)) {

1141 
·
 = "file";

1142 } i‡(
	`S_ISDIR
(
°
.
°_mode
)) {

1143 
ªt
 = 1;

1144 
·
 = "dir";

1145 i‡(*
fûe
 == '.') {

1146 i‡(
fûe
[1] == '.' && file[2] == 0) {

1147 
·
 = "pdir";

1148 } i‡(
fûe
[1] == 0) {

1149 
·
 = "cdir";

1151 } i‡(*
fûe
 == '/' && file[1] == 0) {

1152 
·
 = "pdir";

1154 } i‡(
	`S_ISLNK
(
°
.
°_mode
)) {

1155 
ssize_t
 
sx
;

1157 
·
 = "OS.unix=symlink";

1158 i‡((
sx
 = 
	`ªadlök
(
fûe
, 
lök_èrgë
, Üink_target - 1U)) > 0) {

1159 
lök_èrgë
[
sx
] = 0;

1160 i‡(
	`°Ωbrk
(
lök_èrgë
, "\r\n;"Ë=
NULL
) {

1161 
·x
 = 
lök_èrgë
;

1162 
·
 = "OS.unix=slink:";

1166 
·
 = "unknown";

1168 i‡(
gue°
 != 0) {

1169 i‡(
	`SNCHECK
(
	`¢¥ötf
(
èrgë
, 
èrgë_size
,

1171 
¥efix
,

1172 
·
, 
·x
,

1173 
ªt
 ? 'd' : 'e',

1174 (Ë
°
.
°_size
,

1175 
t
->
tm_yór
 + 1900,Å->
tm_m⁄
 + 1,Å->
tm_mday
,

1176 
t
->
tm_hour
,Å->
tm_mö
,Å->
tm_£c
,

1177 (Ë
°
.
°_mode
 & 07777,

1178 (Ë
°
.
°_dev
,

1179 (Ë
°
.
°_öo
,

1180 
fûe
), 
èrgë_size
)) {

1181 
	`_EXIT
(
EXIT_FAILURE
);

1184 i‡(
	`SNCHECK
(
	`¢¥ötf
(
èrgë
, 
èrgë_size
,

1186 
¥efix
,

1187 
·
,

1188 
ªt
 ? 'd' : 'e',

1189 (Ë
°
.
°_size
,

1190 
t
->
tm_yór
 + 1900,Å->
tm_m⁄
 + 1,Å->
tm_mday
,

1191 
t
->
tm_hour
,Å->
tm_mö
,Å->
tm_£c
,

1192 (Ë
°
.
°_mode
 & 07777,

1193 (Ë
°
.
°_uid
,

1194 (Ë
°
.
°_gid
,

1195 (Ë
°
.
°_dev
,

1196 (Ë
°
.
°_öo
,

1197 
fûe
), 
èrgë_size
)) {

1198 
	`_EXIT
(
EXIT_FAILURE
);

1201  
ªt
;

1202 
	}
}

1204 
	#MLST_BEGIN
 "Begö" 
CRLF


	)

1206 
	$doml°
(c⁄° * c⁄° 
fûe
)

1208 
löe
[
MAXPATHLEN
 + 256U] = 
MLST_BEGIN
;

1210 i‡(
	`modînf‹m©
(
fûe
, 
löe
 + ( 
MLST_BEGIN
 - 1U),

1211  
löe
 - ( 
MLST_BEGIN
 - 1U), " ") >= 0) {

1212 
	`addª∂y_nof‹m©
(0, 
löe
);

1213 
	`addª∂y_nof‹m©
(250, "End.");

1215 
	`addª∂y_nof‹m©
(550, 
MSG_STAT_FAILURE2
);

1217 
	}
}

1219 
	$d⁄o›
()

1221 #ifde‡
BORING_MODE


1222 
	`addª∂y_nof‹m©
(200, "dc.w $4E71");

1224 
	`addª∂y_nof‹m©
(200, 
MSG_SLEEPING
);

1226 
	}
}

1228 
	$dﬂŒo
(c⁄° 
off_t
 
size
)

1230 
ªt
 = -1;

1231 #ifde‡
QUOTAS


1232 
QuŸa
 
quŸa
;

1235 i‡(
size
 <= 0) {

1236 
ªt
 = 0;

1237 } i‡(
	`ul_check_‰ì_•a˚
(
wd
, (Ë
size
) != 0) {

1238 
ªt
 = 0;

1240 #ifde‡
QUOTAS


1241 i‡(
	`quŸa_upd©e
(&
quŸa
, 0LL, 0LL, 
NULL
) == 0) {

1242 i‡(
quŸa
.
fûes
 >
u£r_quŸa_fûes
 ||

1243 
quŸa
.
size
 >
u£r_quŸa_size
 ||

1244 (Ë
size
 > 
u£r_quŸa_size
 - 
quŸa
.size) {

1245 
ªt
 = -1;

1249 i‡(
ªt
 == 0) {

1250 #ifde‡
DISABLE_HUMOR


1251 
	`addª∂y_nof‹m©
(200, "OK");

1253 
	`addª∂y_nof‹m©
(200, "A L'HUILE");

1256 
	`addª∂y_nof‹m©
(552, 
MSG_NO_DISK_SPACE
);

1258 
	}
}

1262 
	$dosôëime
()

1264 
tmp
[64];

1265 c⁄° 
tm
 *tm;

1266 
time_t
 
now
;

1268 i‡((
now
 = 
	`time
(
NULL
)Ë=(
time_t
Ë-1 || (
tm
 = 
	`loˇ…ime
(&now)) == NULL) {

1269 
	`addª∂y_nof‹m©
(451, "time()");

1272 
	`°r·ime
(
tmp
, Åmp, "%Y-%m-%d %H:%M:%S", 
tm
);

1273 
	`addª∂y_nof‹m©
(211, 
tmp
);

1274 
	}
}

1276 
	$doöôsupgroups
(c⁄° *
u£r
, c⁄° 
uid_t
 
uid
, c⁄° 
gid_t
 
gid
)

1278 #i‚de‡
NON_ROOT_FTP


1279 #ifde‡
HAVE_SETGROUPS


1280 i‡(
	`£tgroups
(1U, &
gid
) != 0) {

1284 (Ë
gid
;

1286 #ifde‡
HAVE_INITGROUPS


1287 i‡(
u£r
 =
NULL
) {

1288 c⁄° 
∑sswd
 * c⁄° 
Õwd
 = 
	`gëpwuid
(
uid
);

1290 i‡(
Õwd
 !
NULL
 &&Üpwd->
pw_«me
 != NULL) {

1291 
u£r
 = 
Õwd
->
pw_«me
;

1296 
	`öôgroups
(
u£r
, 
gid
);

1298 (Ë
u£r
;

1299 (Ë
uid
;

1302 (Ë
u£r
;

1303 (Ë
uid
;

1304 (Ë
gid
;

1307 
	}
}

1309 
	$dou£r
(c⁄° *
u£∫ame
)

1311 
∑sswd
 *
pw
 = 
NULL
;

1313 i‡(
loggedö
) {

1314 i‡(
u£∫ame
) {

1315 i‡(!
gue°
) {

1316 
	`addª∂y_nof‹m©
(530, 
MSG_ALREADY_LOGGED
);

1317 } i‡(
brokí_˛õ¡_com∑t
 != 0) {

1318 
	`addª∂y_nof‹m©
(331, 
MSG_ANY_PASSWORD
);

1320 
	`addª∂y_nof‹m©
(230, 
MSG_ANONYMOUS_LOGGED
);

1321 
dŸ_ªad_ok
 = 
dŸ_ªad_™⁄_ok
;

1322 
dŸ_wrôe_ok
 = 0;

1327 i‡(
™⁄_⁄ly
 <0 && 
u£∫ame
 !
NULL
 && *username != 0 &&

1328 (
™⁄_⁄ly
 < 0 || (
	`°rˇ£cmp
(
u£∫ame
, "ftp") &&

1329 
	`°rˇ£cmp
(
u£∫ame
, "anonymous")))) {

1330 
	`°∫˝y
(
accou¡
, 
u£∫ame
, (account) - 1);

1331 
accou¡
[◊ccou¡Ë- (
size_t
) 1U] = 0;

1332 
	`addª∂y
(331, 
MSG_USER_OK
, 
accou¡
);

1333 
loggedö
 = 0;

1334 } i‡(
™⁄_⁄ly
 < 0) {

1335 i‡(
brokí_˛õ¡_com∑t
 != 0) {

1336 
	`addª∂y
(331, 
MSG_USER_OK
, 
u£∫ame
);

1339 
	`dõ
(530, 
LOG_DEBUG
, 
MSG_NO_ANONYMOUS_LOGIN
);

1342 #ifde‡
WITH_VIRTUAL_HOSTS


1343 
«me
[
MAXPATHLEN
];

1344 
hbuf
[
NI_MAXHOST
];

1346 i‡(
chroŸed
 != 0) {

1347 
	`dõ
(421, 
LOG_DEBUG
, 
MSG_CANT_DO_TWICE
);

1350 #ifde‡
PER_USER_LIMITS


1351 i‡(
≥r_™⁄_max
 > 0U && 
	`·pwho_ªad_cou¡
("ftp") >=Öer_anon_max) {

1352 
	`addª∂y
(421, 
MSG_PERUSER_MAX
, (Ë
≥r_™⁄_max
);

1353 
	`d‹ïly
();

1354 
	`_EXIT
(1);

1358 #ifde‡
NON_ROOT_FTP


1360 
∑sswd
 
pw_
;

1361 
s
[
MAXPATHLEN
 + 1U];

1363 i‡(
	`gëcwd
(
s
,  s - (
size_t
Ë1UË=
NULL
) {

1364 
ˇ¡£c
:

1365 
	`dõ
(421, 
LOG_ERR
, 
MSG_UNABLE_SECURE_ANON
);

1367 
pw_
.
pw_uid
 = 
	`gëeuid
();

1368 
pw_
.
pw_gid
 = 
	`gëegid
();

1369 
pw_
.
pw_dú
 = (*Ë
NON_ROOT_ANON_DIR
;

1370 i‡(
home_dúe˘‹y
 !
NULL
) {

1371 
pw_
.
pw_dú
 = (*Ë
home_dúe˘‹y
;

1373 i‡(
	`gëív
("FTP_ANON_DIR"Ë!
NULL
) {

1374 
pw_
.
pw_dú
 = 
	`gëív
("FTP_ANON_DIR");

1376 i‡(
pw_
.
pw_dú
 =
NULL
) {

1377 
pw_
.
pw_dú
 = 
	`°rdup
(
s
);

1379 
pw
 = &
pw_
;

1382 i‡((
pw
 = 
	`gëpw«m
("·p")Ë=
NULL
 ||

1383 
pw
->
pw_uid
 =0 ||Öw->
pw_gid
 == 0 ||

1384 
	`doöôsupgroups
("·p", (
uid_t
Ë-1, 
pw
->
pw_gid
) != 0 ||

1385 
	`£tgid
(
pw
->
pw_gid
Ë|| 
	`£ãgid
(pw->pw_gid)) {

1386 
ˇ¡£c
:

1387 
	`dõ
(421, 
LOG_ERR
, 
MSG_UNABLE_SECURE_ANON
);

1390 #ifde‡
WITH_VIRTUAL_HOSTS


1391 i‡(
	`gë«meöfo
((
sockaddr
 *Ë&
˘æc⁄n
, 
	`STORAGE_LEN
(ctrlconn),

1392 
hbuf
,  hbuf, 
NULL
,

1393 (
size_t
Ë0U, 
NI_NUMERICHOST
) != 0

1394 || 
	`SNCHECK
(
	`¢¥ötf
(
«me
, Çame, 
VHOST_PATH
 "/%s", 
hbuf
),

1395  
«me
)) {

1396 
	`_EXIT
(
EXIT_FAILURE
);

1398 i‡(
	`chdú
(
«me
) != 0)

1401 *
hd
;

1402 
size_t
 
rd_Àn
;

1404 i‡(
pw
->
pw_dú
 =
NULL
 || *pw->pw_dir != '/') {

1405 
ˇ¡£c
;

1407 i‡((
hd
 = 
	`°r°r
(
pw
->
pw_dú
, "/./")Ë!
NULL
) {

1408 
rd_Àn
 = (
size_t
Ë(
hd
 - 
pw
->
pw_dú
) +  "/";

1409 i‡((
roŸ_dúe˘‹y
 = 
	`mÆloc
(
rd_Àn
)Ë=
NULL
) {

1410 
ˇ¡£c
;

1412 
	`mem˝y
(
roŸ_dúe˘‹y
, 
pw
->
pw_dú
, 
rd_Àn
);

1413 
roŸ_dúe˘‹y
[
rd_Àn
 - (
size_t
) 1U] = 0;

1414 
hd
 += 2;

1416 
rd_Àn
 = 
	`°æí
(
pw
->
pw_dú
) +  "/";

1417 i‡((
roŸ_dúe˘‹y
 = 
	`mÆloc
(
rd_Àn
)Ë=
NULL
) {

1418 
ˇ¡£c
;

1420 
	`¢¥ötf
(
roŸ_dúe˘‹y
, 
rd_Àn
, "%s/", 
pw
->
pw_dú
);

1421 
hd
 = (*) "/";

1423 i‡(
	`chdú
(
roŸ_dúe˘‹y
Ë|| 
	`chroŸ
‘oŸ_dúe˘‹yË|| chdú(
hd
)) {

1424 
	`dõ
(421, 
LOG_ERR
, 
MSG_CANT_CHANGE_DIR
 " [%s]",

1425 
roŸ_dúe˘‹y
, 
hd
);

1426 
ˇ¡£c
;

1428 
	`logfûe
(
LOG_INFO
, 
MSG_ANONYMOUS_LOGGED
);

1430 #ifde‡
WITH_VIRTUAL_HOSTS


1432 c⁄° 
size_t
 
rd_Àn
 = 
	`°æí
(
hbuf
) +  ":/";

1434 i‡((
roŸ_dúe˘‹y
 = 
	`mÆloc
(
rd_Àn
)Ë=
NULL
 ||

1435 
	`chdú
(
«me
Ë|| 
	`chroŸ
(name) || chdir("/") ||

1436 
	`SNCHECK
(
	`¢¥ötf
(
roŸ_dúe˘‹y
, 
rd_Àn
, "%s:/", 
hbuf
),

1437 
rd_Àn
)) {

1438 
ˇ¡£c
;

1440 
	`logfûe
(
LOG_INFO
, 
MSG_ANONYMOUS_LOGGED_VIRTUAL
 ": %s", 
hbuf
);

1443 i‡(
pw
 =
NULL
) {

1444 
ˇ¡£c
;

1446 
chroŸed
 = 1;

1447 
authªsu…
.
uid
 = 
pw
->
pw_uid
;

1448 
authªsu…
.
gid
 = 
pw
->
pw_gid
;

1449 i‡((
authªsu…
.
dú
 = 
	`°rdup
(
pw
->
pw_dú
)Ë=
NULL
) {

1450 
	`dõ_mem
();

1453 #ifde‡
THROTTLING


1454 i‡(
thrŸéög
 != 0) {

1455 
	`addª∂y_nof‹m©
(0, 
MSG_BANDWIDTH_RESTRICTED
);

1456 (Ë
	`ni˚
(
NICE_VALUE
);

1458 
thrŸéög_dñay
 = 
thrŸéög_b™dwidth_ul
 =

1459 
thrŸéög_b™dwidth_dl
 = 0UL;

1463 #i‚de‡
NON_ROOT_FTP


1464 i‡(
authªsu…
.
uid
 > (
uid_t
) 0) {

1465 #i‚de‡
WITHOUT_PRIVSEP


1466 i‡(
	`£tuid
(
authªsu…
.
uid
Ë!0 || 
	`£ãuid
(authresult.uid) != 0) {

1467 
ˇ¡£c
;

1470 i‡(
	`£ãuid
(
authªsu…
.
uid
) != 0) {

1471 
ˇ¡£c
;

1473 #ifde‡
USE_CAPABILITIES


1474 
	`dr›_logö_ˇps
();

1480 #i‚de‡
MINIMAL


1481 
	`dob™√r
(0);

1484 i‡(
brokí_˛õ¡_com∑t
 != 0) {

1485 
	`addª∂y_nof‹m©
(331, 
MSG_ANONYMOUS_ANY_PASSWORD
);

1487 
	`addª∂y_nof‹m©
(230, 
MSG_ANONYMOUS_LOGGED
);

1489 
dŸ_wrôe_ok
 = 0;

1490 
dŸ_ªad_ok
 = 
dŸ_ªad_™⁄_ok
;

1491 
	`°∫˝y
(
accou¡
, "·p", áccou¡ - (
size_t
) 1U);

1492 
accou¡
[(áccount) - 1U] = 0;

1493 #ifde‡
FTPWHO


1494 i‡(
shm_d©a_cur
 !
NULL
) {

1495 
	`·pwho_lock
();

1496 
	`°∫˝y
(
shm_d©a_cur
->
accou¡
,áccount,

1497  
shm_d©a_cur
->
accou¡
 - (
size_t
) 1U);

1498 
shm_d©a_cur
->
accou¡
[ shm_data_cur->account - 1U] = 0;

1499 
	`·pwho_u∆ock
();

1500 
°©e_√eds_upd©e
 = 1;

1503 
loggedö
 = 
gue°
 = 1;

1504 #ifde‡
QUOTAS


1505 
u£r_quŸa_size
 = 
u£r_quŸa_fûes
 = 
ULONG_LONG_MAX
;

1508 i‡(
	`gëcwd
(
wd
,  wd - (
size_t
Ë1UË=
NULL
) {

1509 
wd
[0] = '/';

1510 
wd
[1] = 0;

1512 #ifde‡
WITH_BONJOUR


1513 
	`ª‰eshM™agî
();

1515 
	}
}

1517 
AuthResu…
 
	$pw_check
(c⁄° *
accou¡
, c⁄° *
∑ssw‹d
,

1518 c⁄° 
sockaddr_°‹age
 * c⁄° 
ß
,

1519 c⁄° 
sockaddr_°‹age
 * c⁄° 
≥î
)

1521 
Authítiˇti⁄s
 *
auth_sˇn
 = 
fú°_authítiˇti⁄s
;

1522 
AuthResu…
 
ªsu…
;

1524 
ªsu…
.
auth_ok
 = -1;

1525 
auth_sˇn
 !
NULL
) {

1526 #ifde‡
THROTTLING


1527 
ªsu…
.
thrŸéög_b™dwidth_ul
 =Åhrottling_bandwidth_ul;

1528 
ªsu…
.
thrŸéög_b™dwidth_dl
 =Åhrottling_bandwidth_dl;

1529 
ªsu…
.
thrŸéög_ul_ch™ged
 =Ñesu….
thrŸéög_dl_ch™ged
 = 0;

1531 #ifde‡
QUOTAS


1532 
ªsu…
.
u£r_quŸa_size
 = user_quota_size;

1533 
ªsu…
.
u£r_quŸa_fûes
 = user_quota_files;

1534 
ªsu…
.
quŸa_size_ch™ged
 =Ñesu….
quŸa_fûes_ch™ged
 = 0;

1536 #ifde‡
RATIOS


1537 
ªsu…
.
øtio_u∂ﬂd
 =Ñatio_upload;

1538 
ªsu…
.
øtio_dow∆ﬂd
 =Ñatio_download;

1539 
ªsu…
.
øtio_ul_ch™ged
 =Ñesu….
øtio_dl_ch™ged
 = 0;

1541 #ifde‡
PER_USER_LIMITS


1542 
ªsu…
.
≥r_u£r_max
 =Öer_user_max;

1544 
ªsu…
.
backíd_d©a
 = 
NULL
;

1545 
auth_sˇn
->
auth
->
	`check
(&
ªsu…
, 
accou¡
, 
∑ssw‹d
, 
ß
, 
≥î
);

1546 i‡(
ªsu…
.
auth_ok
 < 0) {

1548 } i‡(
ªsu…
.
auth_ok
 > 0) {

1549 #ifde‡
THROTTLING


1550 i‡((
ªsu…
.
thrŸéög_ul_ch™ged
 |

1551 
ªsu…
.
thrŸéög_dl_ch™ged
) != 0) {

1552 i‡(
ªsu…
.
thrŸéög_ul_ch™ged
 != 0 &&

1553 
ªsu…
.
thrŸéög_b™dwidth_ul
 > 0UL) {

1554 
thrŸéög_b™dwidth_ul
 = 
ªsu…
.throttling_bandwidth_ul;

1556 i‡(
ªsu…
.
thrŸéög_dl_ch™ged
 != 0 &&

1557 
ªsu…
.
thrŸéög_b™dwidth_dl
 > 0UL) {

1558 
thrŸéög_b™dwidth_dl
 = 
ªsu…
.throttling_bandwidth_dl;

1560 
thrŸéög_dñay
 = 1000000 /

1561 (
thrŸéög_b™dwidth_dl
 | 
thrŸéög_b™dwidth_ul
);

1562 
thrŸéög
 = 2;

1565 #ifde‡
QUOTAS


1566 i‡(
ªsu…
.
quŸa_size_ch™ged
 != 0) {

1567 
u£r_quŸa_size
 = 
ªsu…
.user_quota_size;

1569 i‡(
ªsu…
.
quŸa_fûes_ch™ged
 != 0) {

1570 
u£r_quŸa_fûes
 = 
ªsu…
.user_quota_files;

1573 #ifde‡
RATIOS


1574 i‡(
ªsu…
.
øtio_ul_ch™ged
 != 0) {

1575 
øtio_u∂ﬂd
 = 
ªsu…
.ratio_upload;

1576 
øtio_f‹_n⁄_™⁄
 = 1;

1578 i‡(
ªsu…
.
øtio_dl_ch™ged
 != 0) {

1579 
øtio_dow∆ﬂd
 = 
ªsu…
.ratio_download;

1582 #ifde‡
PER_USER_LIMITS


1583 
≥r_u£r_max
 = 
ªsu…
.per_user_max;

1586 #ifde‡
NON_ROOT_FTP


1587 
ªsu…
.
uid
 = 
	`gëeuid
();

1588 
ªsu…
.
gid
 = 
	`gëegid
();

1591  
ªsu…
;

1593 
auth_sˇn
 =áuth_sˇn->
√xt
;

1596  
ªsu…
;

1597 
	}
}

1604 
	$check_åu°edgroup
(c⁄° 
uid_t
 
uid
, c⁄° 
gid_t
 
gid
)

1606 
GETGROUPS_T
 *
Æloˇ_suµgroups
;

1607 
n
;

1608 
n2
;

1609 
ªsu…
 = 0;

1611 i‡(
uid
 =(
uid_t
) 0) {

1614 i‡(
u£rchroŸ
 == 2) {

1617 i‡(
gid
 =
chroŸ_åu°edgid
) {

1620 #ifde‡
HAVE_GETGROUPS


1621 i‡((
n
 = 
	`gëgroups
(0, 
NULL
)) <= 0) {

1624 i‡((
Æloˇ_suµgroups
 =

1625 
	`ALLOCA
(
n
 * ( *
Æloˇ_suµgroups
))Ë=
NULL
) {

1626 
	`dõ_mem
();

1628 
n2
 = 
	`gëgroups
(
n
, 
Æloˇ_suµgroups
);

1630 i‡(
n2
 < 
n
) {

1631 
n
 = 
n2
;

1633 
ªsu…
 = 0;

1634 
n
 != 0) {

1635 
n
--;

1636 i‡(
Æloˇ_suµgroups
[
n
] =(
GETGROUPS_T
Ë
chroŸ_åu°edgid
) {

1637 
ªsu…
 = 1;

1641 
	`ALLOCA_FREE
(
Æloˇ_suµgroups
);

1644  
ªsu…
;

1645 
	}
}

1651 
	$¸óã_home_™d_chdú
(c⁄° * c⁄° 
home
)

1653 *
∑thcomp
;

1654 *
z
;

1655 
size_t
 
Àn
;

1656 c⁄° 
dñim
 = '/';

1658 i‡(
home
 =
NULL
 || *home != '/') {

1661 i‡(
	`chdú
(
home
) == 0) {

1664 i‡(
¸óã_home
 == 0) {

1667 
Àn
 = 
	`°æí
(
home
Ë+ (
size_t
) 1U;

1668 i‡(
Àn
 < (
size_t
Ë2U || *
home
 !
dñim
) {

1671 i‡((
∑thcomp
 = 
	`ALLOCA
(
Àn
)Ë=
NULL
) {

1674 
	`mem˝y
(
∑thcomp
, 
home
, 
Àn
);

1675 
z
 = 
∑thcomp
;

1677 
z
++;

1678 i‡(*
z
 == 0) {

1681 i‡(*
z
 =
dñim
) {

1682 *
z
 = 0;

1683 i‡(
z
[1] == 0) {

1686 (Ë
	`mkdú
(
∑thcomp
, (
mode_t
) 0755);

1687 *
z
 = 
dñim
;

1690 
	`ALLOCA_FREE
(
∑thcomp
);

1691 (Ë
	`mkdú
(
home
, (
mode_t
) 0700);

1692 i‡(
	`chdú
(
home
) != 0) {

1695 i‡(
	`chmod
(
home
, (
mode_t
Ë0777 & ~
u_mask_d
) < 0 ||

1696 
	`chown
(
home
, 
authªsu…
.
uid
,áuthªsu….
gid
) < 0) {

1700  
	`chdú
(
home
);

1701 
	}
}

1703 
	$øndom¶ìp
(
t
) {

1704 
	`u¶ìp2
((Ë(
	`zønd
(Ë% 
PASSWD_FAILURE_DELAY
));

1705 
	`u¶ìp2
(
t
 * 
PASSWD_FAILURE_DELAY
);

1706 
	}
}

1708 
	$d›ass
(*
∑ssw‹d
)

1710 
èµög
;

1711 *
hd
;

1712 #i‡!
	`deföed
(
MINIMAL
Ë&& deföed(
HAVE_GETGROUPS
Ë&& deföed(
DISPLAY_GROUPS
)

1713 
gid_t
 *
groups
 = 
NULL
;

1714 
ngroups
;

1715 #i‡
	`deföed
(
NGROUPS_MAX
) && NGROUPS_MAX > 0

1716 
ngroups_max
 = 
NGROUPS_MAX
;

1718 
ngroups_max
 = 1;

1721 #ifde‡
WITH_RFC2640


1722 *
nwd
 = 
NULL
;

1725 i‡(
loggedö
 != 0) {

1726 i‡(
gue°
 != 0) {

1727 
	`addª∂y_nof‹m©
(230, 
MSG_NO_PASSWORD_NEEDED
);

1728 #ifde‡
LOG_ANON_EMAIL


1729 
	`¢¥ötf
(
accou¡
, áccou¡, "·p: <%s> ", 
∑ssw‹d
);

1732 
	`addª∂y_nof‹m©
(530, 
MSG_CANT_DO_TWICE
);

1736 i‡(*
accou¡
 == 0) {

1737 
	`addª∂y_nof‹m©
(530, 
MSG_WHOAREYOU
);

1740 
authªsu…
 = 
	`pw_check
(
accou¡
, 
∑ssw‹d
, &
˘æc⁄n
, &
≥î
);

1743 vﬁ©ûê*
∑ssw‹d_
 = (vﬁ©ûê*Ë
∑ssw‹d
;

1745 *
∑ssw‹d_
 != 0) {

1746 *
∑ssw‹d_
++ = 0;

1749 i‡(
authªsu…
.
auth_ok
 != 1) {

1750 
èµög
++;

1751 
	`øndom¶ìp
(
èµög
);

1752 
	`addª∂y_nof‹m©
(530, 
MSG_AUTH_FAILED
);

1753 
	`d‹ïly
();

1754 i‡(
èµög
 > 
MAX_PASSWD_TRIES
) {

1755 
	`logfûe
(
LOG_ERR
, 
MSG_AUTH_TOOMANY
);

1756 
	`_EXIT
(
EXIT_FAILURE
);

1758 
	`logfûe
(
LOG_WARNING
, 
MSG_AUTH_FAILED_LOG
, 
accou¡
);

1761 i‡(
authªsu…
.
uid
 < 
u£ruid
) {

1762 
	`logfûe
(
LOG_WARNING
, 
MSG_ACCOUNT_DISABLED
, 
accou¡
);

1763 
	`øndom¶ìp
(
èµög
);

1764 i‡(
èµög
 >
MAX_PASSWD_TRIES
) {

1765 
	`addª∂y_nof‹m©
(530, 
MSG_AUTH_FAILED
);

1766 
	`d‹ïly
();

1767 
	`_EXIT
(
EXIT_FAILURE
);

1769 
	`addª∂y_nof‹m©
(530, 
MSG_NOTRUST
);

1770 
	`d‹ïly
();

1774 #ifde‡
PER_USER_LIMITS


1775 i‡(
≥r_u£r_max
 > 0U && 
	`·pwho_ªad_cou¡
(
accou¡
) >=Öer_user_max) {

1776 
	`addª∂y
(421, 
MSG_PERUSER_MAX
, (Ë
≥r_u£r_max
);

1777 
	`d‹ïly
();

1778 
	`_EXIT
(1);

1783 (Ë
	`gë«me
(
authªsu…
.
uid
);

1784 (Ë
	`gëgroup
(
authªsu…
.
gid
);

1787 #i‡
	`deföed
(
WITH_LDAP
Ë|| deföed(
WITH_MYSQL
Ë|| deföed(
WITH_PGSQL
Ë|| deföed(
WITH_PUREDB
Ë|| deföed(
WITH_EXTAUTH
)

1788 
	`doöôsupgroups
(
NULL
, 
authªsu…
.
uid
,áuthªsu….
gid
) != 0

1790 
	`doöôsupgroups
(
accou¡
, (
uid_t
Ë-1, 
authªsu…
.
gid
) != 0

1793 #i‡
	`deföed
(
WIN32
Ë|| deföed(
_WIN32
Ë|| deföed(
__WIN32__
Ë|| deföed(
__CYGWIN__
)

1796 
	`dõ
(421, 
LOG_WARNING
, 
MSG_NOTRUST
);

1801 i‡((
roŸ_dúe˘‹y
 = 
	`°rdup
(
authªsu…
.
dú
)Ë=
NULL
) {

1802 
	`dõ_mem
();

1804 
hd
 = 
	`°r°r
(
roŸ_dúe˘‹y
, "/./");

1805 i‡(
hd
 !
NULL
) {

1806 i‡(
chroŸed
 != 0) {

1807 
	`dõ
(421, 
LOG_DEBUG
, 
MSG_CANT_DO_TWICE
);

1809 i‡(
	`¸óã_home_™d_chdú
(
roŸ_dúe˘‹y
)) {

1810 
	`dõ
(421, 
LOG_ERR
, 
MSG_NO_HOMEDIR
);

1812 *++
hd
 = 0;

1813 
hd
++;

1814 i‡(
	`chroŸ
(
roŸ_dúe˘‹y
Ë|| 
	`chdú
(
hd
)) {

1815 
	`dõ
(421, 
LOG_ERR
, 
MSG_NO_HOMEDIR
);

1817 
chroŸed
 = 1;

1818 #ifde‡
RATIOS


1819 i‡(
øtio_f‹_n⁄_™⁄
 == 0) {

1820 
øtio_u∂ﬂd
 = 
øtio_dow∆ﬂd
 = 0U;

1822 i‡(
	`check_åu°edgroup
(
authªsu…
.
uid
,áuthªsu….
gid
) != 0) {

1823 
dŸ_wrôe_ok
 = 
dŸ_ªad_ok
 = 1;

1824 
øtio_u∂ﬂd
 = 
øtio_dow∆ﬂd
 = 0U;

1825 
kì∑Œfûes
 = 0;

1829 (Ë
	`‰ì
(
roŸ_dúe˘‹y
);

1830 
roŸ_dúe˘‹y
 = (*) "/";

1831 i‡(
	`¸óã_home_™d_chdú
(
authªsu…
.
dú
)) {

1832 
	`dõ
(421, 
LOG_ERR
, 
MSG_NO_HOMEDIR
);

1835 i‡(
	`gëcwd
(
wd
,  wd - (
size_t
Ë1UË=
NULL
) {

1836 
wd
[0] = '/';

1837 
wd
[1] = 0;

1839 #i‚de‡
NON_ROOT_FTP


1840 i‡(
	`£tgid
(
authªsu…
.
gid
Ë|| 
	`£ãgid
(authresult.gid)) {

1841 
	`_EXIT
(
EXIT_FAILURE
);

1844 i‡(
	`check_åu°edgroup
(
authªsu…
.
uid
,áuthªsu….
gid
) != 0) {

1845 
u£rchroŸ
 = 0;

1846 
dŸ_wrôe_ok
 = 
dŸ_ªad_ok
 = 1;

1847 
kì∑Œfûes
 = 0;

1848 #ifde‡
RATIOS


1849 
øtio_u∂ﬂd
 = 
øtio_dow∆ﬂd
 = 0U;

1851 #ifde‡
QUOTAS


1852 
u£r_quŸa_fûes
 = 
u£r_quŸa_size
 = 
ULONG_LONG_MAX
;

1855 #ifde‡
QUOTAS


1856 i‡(
	`hasquŸa
() == 0) {

1857 
u£rchroŸ
 = 1;

1860 i‡(
loggedö
 == 0) {

1861 
ˇndow∆ﬂd
 = 1;

1863 #ifde‡
THROTTLING


1864 i‡((
thrŸéög
 =2Ë|| (
gue°
 != 0 &&Åhrottling == 1)) {

1865 
	`addª∂y_nof‹m©
(0, 
MSG_BANDWIDTH_RESTRICTED
);

1866 (Ë
	`ni˚
(
NICE_VALUE
);

1868 
thrŸéög_dñay
 = 
thrŸéög_b™dwidth_dl
 =

1869 
thrŸéög_b™dwidth_ul
 = 0UL;

1872 #i‡!
	`deföed
(
MINIMAL
Ë&& deföed(
HAVE_GETGROUPS
Ë&& deföed(
DISPLAY_GROUPS
)

1873 #ifde‡
SAFE_GETGROUPS_0


1874 
ngroups
 = 
	`gëgroups
(0, 
NULL
);

1875 i‡(
ngroups
 > 
ngroups_max
) {

1876 
ngroups_max
 = 
ngroups
;

1878 #ñi‡
	`deföed
(
_SC_NGROUPS_MAX
)

1880 
ngroups
 = (Ë
	`sysc⁄f
(
_SC_NGROUPS_MAX
);

1881 i‡(
ngroups
 > 
ngroups_max
) {

1882 
ngroups_max
 = 
ngroups
;

1885 i‡((
groups
 = 
	`mÆloc
((
GETGROUPS_T
Ë* 
ngroups_max
)Ë=
NULL
) {

1886 
	`dõ_mem
();

1888 
ngroups
 = 
	`gëgroups
(
ngroups_max
, 
groups
);

1889 i‡(
gue°
 =0 && 
ngroups
 > 0) {

1890 
ª∂y
[80 + 
MAX_USER_LENGTH
];

1891 c⁄° *
q
;

1892 
size_t
 
p
;

1894 i‡(
	`SNCHECK
(
	`¢¥ötf
(
ª∂y
, Ñeply,

1895 
MSG_USER_GROUP_ACCESS
 ": ", 
accou¡
),

1896  
ª∂y
)) {

1897 
	`_EXIT
(
EXIT_FAILURE
);

1899 
p
 = 
	`°æí
(
ª∂y
);

1901 
ngroups
--;

1902 i‡((
ngroups
 !0 && 
groups
[ngroups] == groups[0]) ||

1903 (
q
 = 
	`gëgroup
(
groups
[
ngroups
])Ë=
NULL
) {

1906 i‡(
p
 + 
	`°æí
(
q
) > 75) {

1907 
ª∂y
[
p
] = 0;

1908 
	`addª∂y
(0, "%s", 
ª∂y
);

1909 *
ª∂y
 = 0;

1910 
p
 = (
size_t
) 0U;

1912 
ª∂y
[
p
++] = ' ';

1913 *
q
 !0 && 
p
 <  
ª∂y
 - (
size_t
) 1U) {

1914 
ª∂y
[
p
++] = *
q
++;

1916 } 
ngroups
 > 0);

1917 
ª∂y
[
p
] = 0;

1918 
	`addª∂y
(0, "%s", 
ª∂y
);

1920 
	`‰ì
(
groups
);

1922 i‡(
gue°
 =0 && 
Ælowfxp
 == 1) {

1923 
	`addª∂y_nof‹m©
(0, 
MSG_FXP_SUPPORT
);

1925 #ifde‡
RATIOS


1926 i‡(
øtio_f‹_n⁄_™⁄
 !0 && 
øtio_u∂ﬂd
 > 0) {

1927 
	`addª∂y
(0, 
MSG_RATIO
, 
øtio_u∂ﬂd
, 
øtio_dow∆ﬂd
);

1930 i‡(
u£rchroŸ
 !0 && 
chroŸed
 == 0) {

1931 i‡(
	`chdú
(
wd
Ë|| 
	`chroŸ
(wd)) {

1932 
	`dõ
(421, 
LOG_ERR
, 
MSG_CHROOT_FAILED
);

1934 
chroŸed
 = 1;

1935 #ifde‡
RATIOS


1936 i‡(
øtio_f‹_n⁄_™⁄
 == 0) {

1937 
øtio_u∂ﬂd
 = 
øtio_dow∆ﬂd
 = 0U;

1941 c⁄° 
size_t
 
rd_Àn
 = 
	`°æí
(
wd
) +  "/";

1943 i‡((
roŸ_dúe˘‹y
 = 
	`mÆloc
(
rd_Àn
)Ë=
NULL
) {

1944 
	`dõ_mem
();

1946 
	`¢¥ötf
(
roŸ_dúe˘‹y
, 
rd_Àn
, "%s/", 
wd
);

1948 
wd
[0] = '/';

1949 
wd
[1] = 0;

1950 i‡(
	`chdú
(
wd
)) {

1951 
	`_EXIT
(
EXIT_FAILURE
);

1953 #ifde‡
WITH_RFC2640


1954 
nwd
 = 
	`ch¨£t_fs2˛õ¡
(
wd
);

1955 
	`addª∂y
(230, 
MSG_CURRENT_RESTRICTED_DIR_IS
, 
nwd
);

1956 
	`‰ì
(
nwd
);

1958 
	`addª∂y
(230, 
MSG_CURRENT_RESTRICTED_DIR_IS
, 
wd
);

1961 #ifde‡
WITH_RFC2640


1962 
nwd
 = 
	`ch¨£t_fs2˛õ¡
(
wd
);

1963 
	`addª∂y
(230, 
MSG_CURRENT_DIR_IS
, 
nwd
);

1964 
	`‰ì
(
nwd
);

1966 
	`addª∂y
(230, 
MSG_CURRENT_DIR_IS
, 
wd
);

1970 #i‚de‡
NON_ROOT_FTP


1971 
	`dißbÀsig«ls
();

1972 #i‚de‡
WITHOUT_PRIVSEP


1973 i‡(
	`£tuid
(
authªsu…
.
uid
Ë!0 || 
	`£ãuid
(authresult.uid) != 0) {

1974 
	`_EXIT
(
EXIT_FAILURE
);

1977 i‡(
	`£ãuid
(
authªsu…
.
uid
) != 0) {

1978 
	`_EXIT
(
EXIT_FAILURE
);

1980 #ifde‡
USE_CAPABILITIES


1981 
	`dr›_logö_ˇps
();

1984 
	`íabÀsig«ls
();

1986 
	`logfûe
(
LOG_INFO
, 
MSG_IS_NOW_LOGGED_IN
, 
accou¡
);

1987 #ifde‡
FTPWHO


1988 i‡(
shm_d©a_cur
 !
NULL
) {

1989 
	`·pwho_lock
();

1990 
	`°∫˝y
(
shm_d©a_cur
->
accou¡
,áccount,

1991  
shm_d©a_cur
->
accou¡
 - (
size_t
) 1U);

1992 
shm_d©a_cur
->
accou¡
[ shm_data_cur->account - 1U] = 0;

1993 
	`·pwho_u∆ock
();

1994 
°©e_√eds_upd©e
 = 1;

1997 
loggedö
 = 1;

1998 i‡(
	`gëcwd
(
wd
,  wd - (
size_t
Ë1UË=
NULL
) {

1999 
wd
[0] = '/';

2000 
wd
[1] = 0;

2002 #i‚de‡
MINIMAL


2003 
	`dob™√r
(0);

2005 #ifde‡
QUOTAS


2006 
	`di•œyquŸa
(
NULL
);

2008 #ifde‡
WITH_BONJOUR


2009 
	`ª‰eshM™agî
();

2011 
	}
}

2013 
	$docwd
(c⁄° *
dú
)

2015 c⁄° *
whîe
;

2016 
buf„r
[
MAXPATHLEN
 + 256U];

2017 #ifde‡
WITH_RFC2640


2018 *
nwd
 = 
NULL
;

2021 i‡(
loggedö
 == 0) {

2022 
kaboom
;

2029 
whîe
 = 
dú
;

2030 i‡(
dú
 =
NULL
 || *dir == 0) {

2031 
dú
 = "~";

2033 i‡(*
dú
 == '~') {

2034 c⁄° 
∑sswd
 *
pw
;

2036 i‡(
dú
[1] == 0) {

2037 
	`°∫˝y
(
buf„r
, 
chroŸed
 !0 ? "/" : 
authªsu…
.
dú
,

2038  
buf„r
);

2039 
buf„r
[ buf„∏- (
size_t
) 1U] = 0;

2040 
whîe
 = 
buf„r
;

2042 *
buÂ¡
 = 
buf„r
;

2043 
size_t
 
s
 =  
buf„r
;

2044 c⁄° *
dúsˇn
 = 
dú
 + 1;

2046 *
dúsˇn
 != 0 && *dirscan != '/') {

2047 i‡(--
s
 <= 0) {

2048 
kaboom
;

2050 *
buÂ¡
++ = *
dúsˇn
++;

2052 *
buÂ¡
 = 0;

2053 i‡(*
buf„r
 == 0) {

2054 
	`¢¥ötf
(
buf„r
,  buffer, "%s%s",

2055 
chroŸed
 !0 ? "/" : 
authªsu…
.
dú
, 
dúsˇn
);

2056 
whîe
 = 
buf„r
;

2057 } i‡(
authªsu…
.
¶ow_tûde_ex∑nsi⁄
 == 0) {

2058 i‡(
chroŸed
 !0 || 
gue°
 != 0 ||

2059 (
pw
 = 
	`gëpw«m
(
buf„r
)Ë=
NULL
 ||Öw->
pw_dú
 == NULL) {

2062 
	`¢¥ötf
(
buf„r
,  buf„r, "%s%s", 
pw
->
pw_dú
, 
dúsˇn
);

2063 
whîe
 = 
buf„r
;

2068 i‡(
	`check«meßnôy
(
whîe
, 
dŸ_ªad_ok
) != 0) {

2069 
	`addª∂y
(553, 
MSG_SANITY_FILE_FAILURE
, 
whîe
);

2072 i‡(
	`chdú
(
whîe
) != 0) {

2074 #ifde‡
WITH_DIRALIASES


2075 c⁄° 
ªÆ_î∫o
 = 
î∫o
;

2076 c⁄° *
whîe_Æüs
;

2078 i‡((
whîe_Æüs
 = 
	`lookup_Æüs
(
whîe
)Ë=
NULL
 ||

2079 
	`chdú
(
whîe_Æüs
) != 0) {

2080 
î∫o
 = 
ªÆ_î∫o
;

2082 
chdú_suc˚ss
;

2086 i‡(
	`SNCHECK
(
	`¢¥ötf
(
buf„r
,  buffer,

2087 
MSG_CANT_CHANGE_DIR
 ": %s",

2088 
dú
, 
	`°ªº‹
(
î∫o
)),  
buf„r
)) {

2089 
	`_EXIT
(
EXIT_FAILURE
);

2091 
	`logfûe
(
LOG_INFO
, "%s", 
buf„r
);

2092 
	`addª∂y
(550, "%s", 
buf„r
);

2094 #i‚de‡
MINIMAL


2095 #i‚de‡
NO_DIRSCAN_DELAY


2096 i‡(
cwd_Áûuªs
 >
MAX_DIRSCAN_TRIES
) {

2097 
	`_EXIT
(
EXIT_FAILURE
);

2099 
	`u¶ìp2
(
cwd_Áûuªs
 * 
DIRSCAN_FAILURE_DELAY
);

2100 
cwd_Áûuªs
++;

2107 #ifde‡
WITH_DIRALIASES


2108 
chdú_suc˚ss
:

2111 #i‚de‡
MINIMAL


2112 
cwd_Áûuªs
 = 0UL;

2113 
	`dob™√r
(1);

2115 i‡(
	`gëcwd
(
wd
,  wd - (
size_t
Ë1UË=
NULL
) {

2116 i‡(*
dú
 == '/') {

2117 i‡(
	`SNCHECK
(
	`¢¥ötf
(
wd
,  wd, "%s", 
dú
),  wd)) {

2118 
	`_EXIT
(
EXIT_FAILURE
);

2121 c⁄° 
size_t
 
dú_Àn
 = 
	`°æí
(
dú
);

2122 c⁄° 
size_t
 
wd_Àn
 = 
	`°æí
(
wd
);

2123 i‡( 
wd
 < 
dú_Àn
 +  "/" - 1U + 
wd_Àn
 + 1U) {

2124 
kaboom
:

2125 
	`dõ
(421, 
LOG_ERR
, 
MSG_PATH_TOO_LONG
);

2127 
	`°rˇt
(°rˇt(
wd
, "/"), 
dú
);

2130 #ifde‡
WITH_RFC2640


2131 
nwd
 = 
	`ch¨£t_fs2˛õ¡
(
wd
);

2132 
	`addª∂y
(250, 
MSG_CURRENT_DIR_IS
, 
nwd
);

2133 
	`‰ì
(
nwd
);

2135 
	`addª∂y
(250, 
MSG_CURRENT_DIR_IS
, 
wd
);

2137 
	}
}

2139 
	$zønd
()

2141  (Ë
	`Æt_¨c4øndom
();

2142 
	}
}

2144 
	$kì∑live
(c⁄° 
fd
, 
kìp
)

2146 #ifde‡
SO_KEEPALIVE


2148 
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_KEEPALIVE
, (*Ë&
kìp
,  keep);

2151 
	}
}

2157 
	$d›asv
(
psvty≥
)

2159 
sockaddr_°‹age
 
d©ac⁄n
;

2160 
a
 = 0U;

2161 
p
;

2162 
⁄
;

2163 
fú°p‹ârõd
;

2165 i‡(
loggedö
 == 0) {

2166 
	`addª∂y_nof‹m©
(530, 
MSG_NOT_LOGGED_IN
);

2169 i‡(
d©afd
 != -1) {

2170 (Ë
	`˛o£
(
d©afd
);

2171 
d©afd
 = -1;

2173 
	`fourösix
(&
˘æc⁄n
);

2174 i‡(
	`STORAGE_FAMILY
(
˘æc⁄n
Ë=
AF_INET6
 && 
psvty≥
 == 0) {

2175 
	`addª∂y_nof‹m©
(425, 
MSG_CANT_PASV
);

2178 
fú°p‹ârõd
 = 
fú°p‹t
 + 
	`zønd
(Ë% (
œ°p‹t
 - firstport + 1);

2179 
p
 = 
fú°p‹ârõd
;

2180 
d©afd
 = 
	`sockë
(
	`STORAGE_FAMILY
(
˘æc⁄n
), 
SOCK_STREAM
, 
IPPROTO_TCP
);

2181 i‡(
d©afd
 == -1) {

2182 
	`îr‹
(425, 
MSG_CANT_PASSIVE
);

2185 
⁄
 = 1;

2186 i‡(
	`£tsock›t
(
d©afd
, 
SOL_SOCKET
, 
SO_REUSEADDR
,

2187 (*Ë&
⁄
,  on) < 0) {

2188 
	`îr‹
(421, "setsockopt");

2191 
d©ac⁄n
 = 
˘æc⁄n
;

2193 i‡(
	`STORAGE_FAMILY
(
d©ac⁄n
Ë=
AF_INET6
) {

2194 
	`STORAGE_PORT6
(
d©ac⁄n
Ë
	`ht⁄s
(
p
);

2196 
	`STORAGE_PORT
(
d©ac⁄n
Ë
	`ht⁄s
(
p
);

2198 i‡(
	`böd
(
d©afd
, (
sockaddr
 *Ë&
d©ac⁄n
,

2199 
	`STORAGE_LEN
(
d©ac⁄n
)) == 0) {

2202 
p
--;

2203 i‡(
p
 < 
fú°p‹t
) {

2204 
p
 = 
œ°p‹t
;

2206 i‡(
p
 =
fú°p‹ârõd
) {

2207 (Ë
	`˛o£
(
d©afd
);

2208 
d©afd
 = -1;

2209 
	`addª∂y_nof‹m©
(425, 
MSG_PORTS_BUSY
);

2213 
	`Æ¨m
(
idÀtime
);

2214 i‡(
	`li°í
(
d©afd
, 
DEFAULT_BACKLOG_DATA
) < 0) {

2215 (Ë
	`˛o£
(
d©afd
);

2216 
d©afd
 = -1;

2217 
	`îr‹
(425, 
MSG_GETSOCKNAME_DATA
);

2220 
psvty≥
) {

2222 i‡(
	`STORAGE_FAMILY
(
f‹˚_∑ssive_ù
) == 0) {

2223 
a
 = 
	`¡ohl
(
	`STORAGE_SIN_ADDR
(
d©ac⁄n
));

2224 } i‡(
	`STORAGE_FAMILY
(
f‹˚_∑ssive_ù
Ë=
AF_INET6
) {

2225 (Ë
	`˛o£
(
d©afd
);

2226 
d©afd
 = -1;

2227 
	`addª∂y_nof‹m©
(425, 
MSG_NO_EPSV
);

2229 } i‡(
	`STORAGE_FAMILY
(
f‹˚_∑ssive_ù
Ë=
AF_INET
) {

2230 
a
 = 
	`¡ohl
(
	`STORAGE_SIN_ADDR
(
f‹˚_∑ssive_ù
));

2232 
	`_EXIT
(
EXIT_FAILURE
);

2239 
	`addª∂y
(227, "Entering Passive Mode (%lu,%lu,%lu,%lu,%u,%u)",

2240 (
a
 >> 24) & 255, (a >> 16) & 255, (a >> 8) & 255,á & 255,

2241 (
p
 >> 8) & 255,Ö & 255);

2244 
	`addª∂y
(229, "Exãnded PassivêmodêOK (|||%u|)", 
p
);

2247 
	`addª∂y
(227, "%u", 
p
);

2250 
	`_EXIT
(
EXIT_FAILURE
);

2252 
∑ssive
 = 1;

2253 
	}
}

2255 
	$d›‹t
(c⁄° *
¨g
)

2257 
a1
, 
a2
, 
a3
, 
a4
, 
p1
, 
p2
;

2258 
sockaddr_°‹age
 
a
;

2260 i‡(
	`ssˇnf
(
¨g
, "%u,%u,%u,%u,%u,%u",

2261 &
a1
, &
a2
, &
a3
, &
a4
, &
p1
, &
p2
) != 6 ||

2262 
a1
 > 255 || 
a2
 > 255 || 
a3
 > 255 || 
a4
 > 255 ||

2263 
p1
 > 255 || 
p2
 > 255 || (
a1
|
a2
|
a3
|
a4
) == 0 ||

2264 (
p1
 | 
p2
) == 0) {

2265 
	`addª∂y_nof‹m©
(501, 
MSG_SYNTAX_ERROR_IP
);

2268 
	`mem£t
(&
a
, 0, á);

2269 
	`STORAGE_FAMILY
(
a
Ë
AF_INET
;

2270 
	`STORAGE_SIN_ADDR
(
a
) =

2271 
	`ht⁄l
((
a1
 << 24Ë| (
a2
 << 16Ë| (
a3
 << 8Ë| 
a4
);

2272 
	`SET_STORAGE_LEN
(
a
, (
sockaddr_ö
));

2273 
	`d›‹t2
(
a
, (
p1
 << 8Ë| 
p2
);

2274 
	}
}

2276 #ifde‡
WITHOUT_PRIVSEP


2278 
	$d›‹t3
(c⁄° 
¥Ÿocﬁ
)

2280 
sockaddr_°‹age
 
d©ac⁄n
;

2282 #i‚de‡
NON_ROOT_FTP


2283 c⁄° 
ö_p‹t_t
 
p‹éi°
[] = 
FTP_ACTIVE_SOURCE_PORTS
;

2284 c⁄° 
ö_p‹t_t
 *
p‹éi°≤t
 = 
p‹éi°
;

2286 c⁄° 
ö_p‹t_t
 
p‹éi°
[] = { 0U };

2287 c⁄° 
ö_p‹t_t
 *
p‹éi°≤t
 = 
p‹éi°
;

2289 
⁄
;

2291 #i‚de‡
NON_ROOT_FTP


2292 
	`dißbÀsig«ls
();

2293 
	`£ãuid
((
uid_t
) 0);

2295 i‡((
d©afd
 = 
	`sockë
(
¥Ÿocﬁ
, 
SOCK_STREAM
, 
IPPROTO_TCP
)) == -1) {

2296 
d©a_sockë_îr‹
:

2297 #i‚de‡
NON_ROOT_FTP


2298 i‡(
	`£ãuid
(
authªsu…
.
uid
) != 0) {

2299 
	`_EXIT
(
EXIT_FAILURE
);

2301 
	`íabÀsig«ls
();

2303 (Ë
	`˛o£
(
d©afd
);

2304 
d©afd
 = -1;

2305 
	`îr‹
(425, 
MSG_CANT_CREATE_DATA_SOCKET
);

2309 
⁄
 = 1;

2310 #ifde‡
SO_REUSEPORT


2311 (Ë
	`£tsock›t
(
d©afd
, 
SOL_SOCKET
, 
SO_REUSEPORT
,

2312 (*Ë&
⁄
,  on);

2314 (Ë
	`£tsock›t
(
d©afd
, 
SOL_SOCKET
, 
SO_REUSEADDR
,

2315 (*Ë&
⁄
,  on);

2317 
	`mem˝y
(&
d©ac⁄n
, &
˘æc⁄n
,  dataconn);

2319 i‡(
	`STORAGE_FAMILY
(
d©ac⁄n
Ë=
AF_INET6
) {

2320 
	`STORAGE_PORT6
(
d©ac⁄n
Ë
	`ht⁄s
(*
p‹éi°≤t
);

2322 
	`STORAGE_PORT
(
d©ac⁄n
Ë
	`ht⁄s
(*
p‹éi°≤t
);

2324 i‡(
	`böd
(
d©afd
, (
sockaddr
 *Ë&
d©ac⁄n
,

2325 
	`STORAGE_LEN
(
d©ac⁄n
)) == 0) {

2328 #ifde‡
USE_ONLY_FIXED_DATA_PORT


2329 (Ë
	`¶ìp
(1U);

2331 i‡(*
p‹éi°≤t
 =(
ö_p‹t_t
) 0U) {

2332 
d©a_sockë_îr‹
;

2334 
p‹éi°≤t
++;

2337 #i‚de‡
NON_ROOT_FTP


2338 i‡(
	`£ãuid
(
authªsu…
.
uid
) != 0) {

2339 
	`_EXIT
(
EXIT_FAILURE
);

2341 
	`íabÀsig«ls
();

2345 
	}
}

2351 
	$d›‹t3
(c⁄° 
¥Ÿocﬁ
)

2353 i‡((
d©afd
 = 
	`¥iv£p_bödª•‹t
(
¥Ÿocﬁ
, 
˘æc⁄n
)) == -1) {

2354 
	`îr‹
(425, 
MSG_CANT_CREATE_DATA_SOCKET
);

2359 
	}
}

2363 
	$d›‹t2
(
sockaddr_°‹age
 
a
, 
p
)

2365 i‡(
loggedö
 == 0) {

2366 
	`addª∂y_nof‹m©
(530, 
MSG_NOT_LOGGED_IN
);

2369 i‡(
ïsv_Æl
 != 0) {

2370 
	`addª∂y_nof‹m©
(501, 
MSG_ACTIVE_DISABLED
);

2373 i‡(
d©afd
 != -1) {

2374 (Ë
	`˛o£
(
d©afd
);

2375 
d©afd
 = -1;

2377 i‡(
p
 < 1024U) {

2378 
	`addª∂y_nof‹m©
(501, 
MSG_BAD_PORT
);

2381 i‡(
	`d›‹t3
(
	`STORAGE_FAMILY
(
a
Ë=
AF_INET6
 ? 
PF_INET6
 : 
PF_INET
) != 0) {

2384 
≥îd©≠‹t
 = (
ö_p‹t_t
Ë
p
;

2385 i‡(
	`addrcmp
(&
a
, &
≥î
) != 0) {

2386 
hbuf
[
NI_MAXHOST
];

2387 
≥îbuf
[
NI_MAXHOST
];

2389 i‡(
	`gë«meöfo
((
sockaddr
 *Ë&
a
, 
	`STORAGE_LEN
(a),

2390 
hbuf
,  hbuf, 
NULL
,

2391 (
size_t
Ë0U, 
NI_NUMERICHOST
) != 0 ||

2392 
	`gë«meöfo
((
sockaddr
 *Ë&
≥î
, 
	`STORAGE_LEN
(peer),

2393 
≥îbuf
, Öìrbuf, 
NULL
,

2394 (
size_t
Ë0U, 
NI_NUMERICHOST
) != 0) {

2395 
hu
;

2397 i‡(
Ælowfxp
 =0 || (Ælowfx∞=1 && 
gue°
 != 0)) {

2398 
hu
:

2399 (Ë
	`˛o£
(
d©afd
);

2400 
d©afd
 = -1;

2401 
	`addª∂y
(500, 
MSG_NO_FXP
, 
hbuf
, 
≥îbuf
);

2404 
	`addª∂y
(0, 
MSG_FXP
, 
≥îbuf
, 
hbuf
);

2405 
	`mem˝y
(&
≥î
, &
a
, á);

2408 
∑ssive
 = 0;

2410 
	`addª∂y_nof‹m©
(200, 
MSG_PORT_SUCCESSFUL
);

2412 
	}
}

2414 
	$˛o£d©a
()

2416 vﬁ©ûê
tmp_x„rfd
 = 
x„rfd
;

2418 #ifde‡
WITH_TLS


2419 
	`és_˛o£_£ssi⁄
(&
és_d©a_˙x
);

2420 
és_d©a_˙x
 = 
NULL
;

2422 
x„rfd
 = -1;

2423 (Ë
	`˛o£
(
tmp_x„rfd
);

2424 
	}
}

2426 
	$›íd©a
()

2428 
sockaddr_°‹age
 
d©ac⁄n
;

2429 
fd
;

2430 
sockÀn_t
 
socksize
;

2432 i‡(
x„rfd
 != -1) {

2433 
	`˛o£d©a
();

2435 i‡(
d©afd
 == -1) {

2436 
	`addª∂y_nof‹m©
(425, 
MSG_NO_DATA_CONN
);

2439 i‡(
∑ssive
 != 0) {

2440 
pﬁlfd
 
pfds
[2];

2441 
pﬁlfd
 *
pfd
;

2442 
pﬁÃë
;

2444 
pfd
 = &
pfds
[0];

2445 
pfd
->
fd
 = 
˛õ¡fd
;

2446 
pfd
->
evíts
 = 
POLLERR
 | 
POLLHUP
;

2447 
pfd
->
ªvíts
 = 0;

2449 
pfd
 = &
pfds
[1];

2450 
pfd
->
fd
 = 
d©afd
;

2451 
pfd
->
evíts
 = 
POLLIN
 | 
POLLERR
 | 
POLLHUP
;

2452 
pfd
->
ªvíts
 = 0;

2454 
	`Æ¨m
(
idÀtime
);

2456 
pfds
[0].
ªvíts
 =Öfds[1].revents = 0;

2457 
pﬁÃë
 = 
	`pﬁl
(
pfds
, Öfd†/ Öfds[0], 
idÀtime
 * 1000UL);

2458 i‡(
pﬁÃë
 <= 0) {

2459 
	`dõ
(421, 
LOG_INFO
, 
MSG_TIMEOUT_DATA
, (Ë
idÀtime
);

2461 i‡((
pfds
[0].
ªvíts
 & (
POLLERR
 | 
POLLHUP
 | 
POLLNVAL
)) != 0 ||

2462 (
pfds
[1].
ªvíts
 & (
POLLERR
 | 
POLLHUP
 | 
POLLNVAL
)) != 0) {

2463 
	`dõ
(221, 
LOG_INFO
, 
MSG_LOGOUT
);

2465 i‡((
pfds
[1].
ªvíts
 & 
POLLIN
) == 0) {

2468 
socksize
 = (
sockÀn_t
Ë(
d©ac⁄n
);

2469 
	`mem£t
(&
d©ac⁄n
, 0,  dataconn);

2470 i‡((
fd
 = 
	`ac˚±
(
d©afd
, (
sockaddr
 *Ë&
d©ac⁄n
,

2471 &
socksize
)) == -1) {

2472 
n›e
:

2473 (Ë
	`˛o£
(
d©afd
);

2474 
d©afd
 = -1;

2475 
	`îr‹
(421, 
MSG_ACCEPT_FAILED
);

2478 i‡(
	`STORAGE_FAMILY
(
d©ac⁄n
Ë!
AF_INET


2479 && 
	`STORAGE_FAMILY
(
d©ac⁄n
Ë!
AF_INET6
) {

2480 (Ë
	`˛o£
(
fd
);

2481 
n›e
;

2483 
	`fourösix
(&
d©ac⁄n
);

2484 i‡(
	`addrcmp
(&
≥î
, &
d©ac⁄n
) == 0) {

2487 i‡(
Ælowfxp
 =0 || (Ælowfx∞=1 && 
gue°
 != 0)) {

2488 
	`shutdown
(
fd
, 2);

2489 (Ë
	`˛o£
(
fd
);

2494 
	`addª∂y_nof‹m©
(150, 
MSG_ACCEPT_SUCCESS
);

2496 
sockaddr_°‹age
 
≥î2
;

2497 
åõs
 = 1UL + 
idÀtime
 / 2UL;

2499 
≥î2
 = 
≥î
;

2500 i‡(
	`STORAGE_FAMILY
(
≥î
Ë=
AF_INET6
) {

2501 
	`STORAGE_PORT6
(
≥î2
Ë
	`ht⁄s
(
≥îd©≠‹t
);

2503 
	`STORAGE_PORT
(
≥î2
Ë
	`ht⁄s
(
≥îd©≠‹t
);

2505 
agaö
:

2506 i‡(
	`c⁄√˘
(
d©afd
, (
sockaddr
 *Ë&
≥î2
,

2507 
	`STORAGE_LEN
(
≥î2
)) != 0) {

2508 i‡((
î∫o
 =
EAGAIN
 ||Éºnÿ=
EINTR


2509 #ifde‡
EADDRINUSE


2510 || 
î∫o
 =
EADDRINUSE


2512 Ë&& 
åõs
 > 0UL) {

2513 
åõs
--;

2514 
	`u¶ìp2
(1000000UL);

2515 
agaö
;

2517 
	`addª∂y
(425, 
MSG_CNX_PORT_FAILED
 ": %s",

2518 
≥îd©≠‹t
, 
	`°ªº‹
(
î∫o
));

2519 (Ë
	`˛o£
(
d©afd
);

2520 
d©afd
 = -1;

2523 
fd
 = 
d©afd
;

2524 
d©afd
 = -1;

2525 
	`addª∂y
(150, 
MSG_CNX_PORT
, 
≥îd©≠‹t
);

2529 
foddî
;

2530 #ifde‡
IPTOS_THROUGHPUT


2531 
foddî
 = 
IPTOS_THROUGHPUT
;

2532 
	`£tsock›t
(
fd
, 
SOL_IP
, 
IP_TOS
, (*Ë&
foddî
,  fodder);

2534 #i‚de‡
NO_KEEPALIVE


2535 
	`kì∑live
(
fd
, 1);

2538 
x„rfd
 = 
fd
;

2539 
	`Æ¨m
(
MAX_SESSION_XFER_IDLE
);

2540 
	}
}

2542 #i‚de‡
MINIMAL


2543 
	$dochmod
(*
«me
, 
mode_t
 
mode
)

2545 
dev_t
 
roŸ_°_dev
;

2546 
öo_t
 
roŸ_°_öo
;

2547 
°©
 
°2
;

2548 
fd
 = -1;

2550 i‡(
nochmod
 !0 && 
authªsu…
.
uid
 !(
uid_t
) 0) {

2551 
	`addª∂y
(550, 
MSG_CHMOD_FAILED
, 
«me
);

2554 #i‚de‡
ANON_CAN_CHANGE_PERMS


2555 i‡(
gue°
 != 0) {

2556 
	`addª∂y_nof‹m©
(550, 
MSG_ANON_CANT_CHANGE_PERMS
);

2560 i‡(
«me
 =
NULL
 || *name == 0) {

2561 
	`addª∂y_nof‹m©
(501, 
MSG_NO_FILE_NAME
);

2564 i‡(
	`check«meßnôy
(
«me
, 
dŸ_wrôe_ok
) != 0) {

2565 
	`addª∂y
(553, 
MSG_SANITY_FILE_FAILURE
, 
«me
);

2568 
fd
 = 
	`›í
(
«me
, 
O_RDONLY
);

2569 i‡(
fd
 == -1) {

2570 
Áûuª
;

2572 i‡((
roŸ_°_dev
 | 
roŸ_°_öo
) == 0) {

2573 
°©
 
°
;

2575 i‡(
	`°©
("/", &
°
) != 0) {

2576 
Áûuª
;

2578 
roŸ_°_dev
 = 
°
.
°_dev
;

2579 
roŸ_°_öo
 = 
°
.
°_öo
;

2581 i‡(
	`f°©
(
fd
, &
°2
) != 0) {

2582 
Áûuª
;

2584 #ifde‡
QUOTAS


2585 i‡(
	`hasquŸa
(Ë=0 && 
	`S_ISDIR
(
°2
.
°_mode
)) {

2586 
mode
 |= 0500;

2589 i‡(
°2
.
°_öo
 =
roŸ_°_öo
 && st2.
°_dev
 =
roŸ_°_dev
) {

2590 
mode
 |= 0700;

2591 } i‡(
be_cu°omî_¥oof
 != 0) {

2592 
mode
 |(
	`S_ISDIR
(
°2
.
°_mode
) ? 0700 : 0600);

2594 i‡(
	`fchmod
(
fd
, 
mode
Ë< 0 && 
	`chmod
(
«me
, mode) < 0) {

2595 
Áûuª
:

2596 i‡(
fd
 != -1) {

2597 (Ë
	`˛o£
(
fd
);

2599 
	`addª∂y
(550, 
MSG_CHMOD_FAILED
 ": %s", 
«me
, 
	`°ªº‹
(
î∫o
));

2602 (Ë
	`˛o£
(
fd
);

2603 
	`addª∂y
(200, 
MSG_CHMOD_SUCCESS
, 
«me
);

2604 
	}
}

2606 
	$doutime
(*
«me
, c⁄° * c⁄° 
w™ãd_time
)

2608 
tm
Åm;

2609 
time_t
 
ts
;

2610 
utimbuf
 
tb
;

2612 #i‚de‡
ANON_CAN_CHANGE_UTIME


2613 i‡(
gue°
 != 0) {

2614 
	`addª∂y_nof‹m©
(550, 
MSG_ANON_CANT_CHANGE_PERMS
);

2618 i‡(
«me
 =
NULL
 || *name == 0) {

2619 
	`addª∂y_nof‹m©
(501, 
MSG_NO_FILE_NAME
);

2622 i‡(
	`check«meßnôy
(
«me
, 
dŸ_wrôe_ok
) != 0) {

2623 
	`addª∂y
(553, 
MSG_SANITY_FILE_FAILURE
, 
«me
);

2626 
	`mem£t
(&
tm
, 0, Åm);

2627 
	`ssˇnf
(
w™ãd_time
, "%4d%2d%2d%2d%2d%2d", &
tm
.
tm_yór
, &tm.
tm_m⁄
,

2628 &
tm
.
tm_mday
, &tm.
tm_hour
, &tm.
tm_mö
, &tm.
tm_£c
);

2629 
tm
.
tm_m⁄
--;

2630 
tm
.
tm_yór
 -= 1900;

2631 #ifde‡
USE_LOCAL_TIME_FOR_SITE_UTIME


2632 
ts
 = 
	`mktime
(&
tm
);

2634 #ifde‡
HAVE_TIMEGM


2635 
ts
 = 
	`timegm
(&
tm
);

2636 #ñi‡
	`deföed
(
HAVE_PUTENV
)

2638 
	`puãnv
("TZ=UTC+00:00");

2639 #ifde‡
HAVE_TZSET


2640 
	`tz£t
();

2642 
ts
 = 
	`mktime
(&
tm
);

2643 
	`puãnv
(
deÁu…_tz_f‹_puãnv
);

2644 
	`tz£t
();

2647 
ts
 = 
	`mktime
(&
tm
);

2650 i‡(
tm
.
tm_m⁄
 < 0 ||Åm.
tm_yór
 <0 || 
ts
 =(
time_t
) -1) {

2651 
	`addª∂y_nof‹m©
(501, 
MSG_TIMESTAMP_FAILURE
);

2654 
tb
.
a˘ime
 =Åb.
modtime
 = 
ts
;

2655 i‡(
	`utime
(
«me
, &
tb
) < 0) {

2656 
	`addª∂y
(550, "utime(%s): %s", 
«me
, 
	`°ªº‹
(
î∫o
));

2658 
	`addª∂y_nof‹m©
(213, "UTIME OK");

2660 
	}
}

2663 
	$dodñe
(*
«me
)

2665 #i‚de‡
ANON_CAN_DELETE


2666 i‡(
gue°
 != 0) {

2667 
	`addª∂y_nof‹m©
(550, 
MSG_ANON_CANT_DELETE
);

2671 i‡(
«me
 =
NULL
 || *name == 0) {

2672 
	`addª∂y_nof‹m©
(501, 
MSG_NO_FILE_NAME
);

2675 i‡(
	`check«meßnôy
(
«me
, 
dŸ_wrôe_ok
) != 0) {

2676 
	`addª∂y
(553, 
MSG_SANITY_FILE_FAILURE
, 
«me
);

2679 i‡(
kì∑Œfûes
 != 0) {

2680 #ifde‡
EPERM


2681 
î∫o
 = 
EPERM
;

2683 
î∫o
 = 1;

2685 
díõd
;

2702 #ifde‡
QUOTAS


2704 *
p
;

2705 
°©
 
°
;

2706 
°©
 
°2
;

2707 
size_t
 
dúÀn
 = (size_t) 0U;

2708 
qtfûe
[
MAXPATHLEN
 + 1];

2710 i‡((
p
 = 
	`°ºchr
(
«me
, '/')Ë!
NULL
) {

2711 i‡((
dúÀn
 = 
p
 - 
«me
 + (
size_t
Ë1UË> 
qtfûe
) {

2712 
díõd
;

2714 
	`mem˝y
(
qtfûe
, 
«me
, 
dúÀn
);

2716 i‡(
	`SNCHECK
(
	`¢¥ötf
(
qtfûe
 + 
dúÀn
,  qtfile - dirlen,

2717 
PUREFTPD_TMPFILE_PREFIX
 "rename.%lu.%x",

2718 (Ë
	`gëpid
(), 
	`zønd
()),

2719  
qtfûe
)) {

2720 
díõd
;

2722 i‡(
	`l°©
(
«me
, &
°
) != 0) {

2723 
díõd
;

2725 i‡(!
	`S_ISREG
(
°
.
°_mode
)

2726 #i‚de‡
NEVER_DELETE_SYMLINKS


2727 && !
	`S_ISLNK
(
°
.
°_mode
)

2730 #ifde‡
EINVAL


2731 
î∫o
 = 
EINVAL
;

2733 
díõd
;

2735 i‡(
	`ª«me
(
«me
, 
qtfûe
) != 0) {

2736 
díõd
;

2738 i‡(
	`l°©
(
qtfûe
, &
°2
) != 0 ||

2739 
°
.
°_dev
 !
°2
.st_dev ||

2740 
°
.
°_öo
 !
°2
.st_ino ||

2741 
°
.
°_size
 !
°2
.st_size) {

2742 #ifde‡
EINVAL


2743 
î∫o
 = 
EINVAL
;

2745 
díõd
;

2747 i‡(
	`u∆ök
(
qtfûe
) < 0) {

2753 (Ë
	`ª«me
(
qtfûe
, 
«me
);

2754 
díõd
;

2757 
QuŸa
 
quŸa
;

2759 i‡(
	`quŸa_upd©e
(&
quŸa
, -1LL,

2760 -((Ë
°
.
°_size
), 
NULL
) == 0) {

2761 
	`di•œyquŸa
(&
quŸa
);

2766 i‡(
	`u∆ök
(
«me
) < 0) {

2767 
díõd
;

2770 
	`addª∂y
(250, 
MSG_DELE_SUCCESS
, "", "", "", 
«me
);

2771 
	`logfûe
(
LOG_NOTICE
, 
MSG_DELE_SUCCESS
, 
roŸ_dúe˘‹y
,

2772 *
«me
 ='/' ? "" : 
wd
,

2773 (*
«me
 !'/' && (!*
wd
 || wd[
	`°æí
(wd) - 1] != '/'))

2774 ? "/" : "", 
«me
);

2777 
díõd
:

2778 
	`addª∂y
(550, 
MSG_DELE_FAILED
 ": %s", 
«me
, 
	`°ªº‹
(
î∫o
));

2779 
	}
}

2781 
	$gë_u£c_time
()

2783 
timevÆ
 
tv
;

2784 
timez⁄e
 
tz
;

2786 i‡(
	`gëtimeofday
(&
tv
, &
tz
) < 0) {

2789  (Ë
tv
.
tv_£c
 + ((Ëtv.
tv_u£c
) / 1000000.0;

2790 
	}
}

2792 
	$di•œyøã
(c⁄° *
w‹d
, 
off_t
 
size
,

2793 c⁄° 
°¨ãd
,

2794 c⁄° * c⁄° 
«me
, 
up
)

2796 
íded
;

2797 
t
;

2798 
•ìd
;

2799 
•ìd°rög
[64];

2801 
íded
 = 
	`gë_u£c_time
();

2803 
t
 = 
íded
 - 
°¨ãd
;

2804 i‡(
t
 > 0.0 && 
size
 > (
off_t
) 0) {

2805 
•ìd
 = 
size
 / 
t
;

2807 
•ìd
 = 0.0;

2809 i‡(
•ìd
 > 524288.0) {

2810 
	`addª∂y
(0, 
MSG_TRANSFER_RATE_M
, 
t
, 
•ìd
 / 1048576.0);

2811 } i‡(
•ìd
 > 512.0) {

2812 
	`addª∂y
(0, 
MSG_TRANSFER_RATE_K
, 
t
, 
•ìd
 / 1024.0);

2813 } i‡(
•ìd
 > 0.1) {

2814 
	`addª∂y
(0, 
MSG_TRANSFER_RATE_B
, 
t
, 
•ìd
);

2816 i‡(!
	`SNCHECK
(
	`¢¥ötf
(
•ìd°rög
,  speedstring,

2818 (Ë
size
, 
•ìd
 / 1024.0),

2819  
•ìd°rög
)) {

2820 
	`logfûe
(
LOG_NOTICE
, "%s%s%s%†%†%s", 
roŸ_dúe˘‹y
,

2821 *
«me
 ='/' ? "" : 
wd
,

2822 (*
«me
 !'/' && (!*
wd
 || wd[
	`°æí
(wd) - 1] != '/'))

2823 ? "/" : "", 
«me
, 
w‹d
, 
•ìd°rög
);

2826 #i‡
	`deföed
(
WITH_UPLOAD_SCRIPT
Ë|| deföed(
WITH_ALTLOG
)

2828 #ifde‡
WITH_ALTLOG


2829 
Æéog_f‹m©
 !
ALTLOG_NONE


2831 #i‡
	`deföed
(
WITH_UPLOAD_SCRIPT
Ë&& deföed(
WITH_ALTLOG
)

2834 #i‡(
	`deföed
(
WITH_UPLOAD_SCRIPT
))

2835 (
do_u∂ﬂd_s¸ùt
 !0 && 
up
 != 0)

2839 *
Æloˇ_fûíame_ªÆ
;

2840 c⁄° 
size_t
 
sizeof_fûíame_ªÆ
 = 
MAXPATHLEN
 + 
VHOST_PREFIX_MAX_LEN
;

2841 *
ªsﬁved_∑th
;

2842 c⁄° 
size_t
 
sizeof_ªsﬁved_∑th
 = 
MAXPATHLEN
 + 1U;

2844 i‡((
ªsﬁved_∑th
 = 
	`mÆloc
(
sizeof_ªsﬁved_∑th
)Ë=
NULL
) {

2847 
ªsﬁved_∑th
[
sizeof_ªsﬁved_∑th
 - 1U] = 0;

2848 i‡(
	`ªÆ∑th
(
«me
, 
ªsﬁved_∑th
Ë=
NULL
) {

2849 (Ë
	`u∆ök
(
«me
);

2850 
	`‰ì
(
ªsﬁved_∑th
);

2851 
	`logfûe
(
LOG_ERR
, "realpath() failure : [%s] => [%s]",

2852 
«me
, 
	`°ªº‹
(
î∫o
));

2855 i‡(
ªsﬁved_∑th
[
sizeof_ªsﬁved_∑th
 - 1U] != 0) {

2857 *
ªsﬁved_∑th
++ = 0;

2860 i‡((
Æloˇ_fûíame_ªÆ
 = 
	`ALLOCA
(
sizeof_fûíame_ªÆ
)Ë=
NULL
) {

2861 
	`‰ì
(
ªsﬁved_∑th
);

2864 #ifde‡
WITH_VIRTUAL_CHROOT


2865 i‡(
	`SNCHECK
(
	`¢¥ötf
(
Æloˇ_fûíame_ªÆ
, 
sizeof_fûíame_ªÆ
,

2866 "\001%s", 
ªsﬁved_∑th
), 
sizeof_fûíame_ªÆ
)) {

2867 
Ω_Áûuª
;

2870 i‡(
	`SNCHECK
(
	`¢¥ötf
(
Æloˇ_fûíame_ªÆ
, 
sizeof_fûíame_ªÆ
,

2871 "\001%s%s", 
roŸ_dúe˘‹y
,

2872 (*
ªsﬁved_∑th
 == '/' ?Ñesolved_path + 1 :

2873 
ªsﬁved_∑th
)), 
sizeof_fûíame_ªÆ
)) {

2874 
Ω_Áûuª
;

2877 #ifde‡
WITH_ALTLOG


2878 (Ë
	`Æéog_wrôex„r
(
up
, 
Æloˇ_fûíame_ªÆ
 + 1, 
size
, 
t
);

2880 #i‡
	`deföed
(
WITH_UPLOAD_SCRIPT
)

2881 i‡(
do_u∂ﬂd_s¸ùt
 !0 && 
up
 != 0) {

2882 
	`u∂ﬂd_pùe_push
(
accou¡
, 
Æloˇ_fûíame_ªÆ
);

2885 
Ω_Áûuª
:

2886 
	`‰ì
(
ªsﬁved_∑th
);

2887 
	`ALLOCA_FREE
(
Æloˇ_fûíame_ªÆ
);

2890 (Ë
up
;

2892 
	}
}

2894 
	$di•œy›íÁûuª
(c⁄° * c⁄° 
«me
)

2896 
buf„r
[
MAXPATHLEN
 + 42U];

2897 c⁄° 
e
 = 
î∫o
;

2899 i‡(
	`SNCHECK
(
	`¢¥ötf
(
buf„r
,  buf„r, 
MSG_OPEN_FAILURE
, 
«me
),

2900  
buf„r
)) {

2901 
	`_EXIT
(
EXIT_FAILURE
);

2903 
î∫o
 = 
e
;

2904 
	`îr‹
(550, 
buf„r
);

2905 
	}
}

2907 
	$dlh™dÀr_thrŸée
(
DLH™dÀr
 * c⁄° 
dlh™dÀr
,

2908 c⁄° 
off_t
 
dow∆ﬂded
, c⁄° 
ts_°¨t
,

2909 *
ªquúed_¶ìp
)

2911 
ts_now
;

2912 
ñ≠£d
;

2913 
off_t
 
would_be_dow∆ﬂded
;

2914 
w™ãd_ts
;

2915 
off_t
 
¥evious_chunk_size
;

2917 i‡(
dlh™dÀr
->
b™dwidth
 <0UL || 
dow∆ﬂded
 <(
off_t
) 0) {

2918 *
ªquúed_¶ìp
 = 0.0;

2921 i‡((
ts_now
 = 
	`gë_u£c_time
()) <= 0.0) {

2922 
ts_now
 = 
ts_°¨t
;

2924 i‡(
ts_°¨t
 > 
ts_now
) {

2925 
ts_now
 = 
ts_°¨t
;

2927 
ñ≠£d
 = 
ts_now
 - 
ts_°¨t
;

2928 
would_be_dow∆ﬂded
 = 
dlh™dÀr
->
tŸÆ_dow∆ﬂded
 + dlh™dÀr->
chunk_size
;

2929 i‡(
dlh™dÀr
->
b™dwidth
 > 0UL) {

2930 
w™ãd_ts
 = (Ë
would_be_dow∆ﬂded
 /

2931 (Ë
dlh™dÀr
->
b™dwidth
;

2933 
w™ãd_ts
 = 
ñ≠£d
;

2935 *
ªquúed_¶ìp
 = 
w™ãd_ts
 - 
ñ≠£d
;

2936 
¥evious_chunk_size
 = 
dlh™dÀr
->
chunk_size
;

2937 i‡(
dlh™dÀr
->
tŸÆ_dow∆ﬂded
 <dlh™dÀr->
chunk_size
) {

2940 i‡(*
ªquúed_¶ìp
 < 
dlh™dÀr
->
mö_¶ìp
) {

2941 
dlh™dÀr
->
chunk_size
 =

2942 (
dlh™dÀr
->
max_chunk_size
 + dlh™dÀr->
chunk_size
) / 2;

2943 } i‡(*
ªquúed_¶ìp
 > 
dlh™dÀr
->
max_¶ìp
) {

2944 
dlh™dÀr
->
chunk_size
 =

2945 (
dlh™dÀr
->
mö_chunk_size
 + dlh™dÀr->
chunk_size
) / 2;

2947 
dlh™dÀr
->
chunk_size
 = dlh™dÀr->
deÁu…_chunk_size
;

2949 i‡(
dlh™dÀr
->
chunk_size
 <0 || dlh™dÀr->chunk_sizê> 
INT_MAX
) {

2950 
dlh™dÀr
->
chunk_size
 = dlh™dÀr->
deÁu…_chunk_size
;

2952 i‡(
¥evious_chunk_size
 !
dlh™dÀr
->
deÁu…_chunk_size
) {

2953 
would_be_dow∆ﬂded
 =

2954 
dlh™dÀr
->
tŸÆ_dow∆ﬂded
 + dlh™dÀr->
chunk_size
;

2955 i‡(
dlh™dÀr
->
b™dwidth
 > 0UL) {

2956 
w™ãd_ts
 = (Ë
would_be_dow∆ﬂded
 /

2957 (Ë
dlh™dÀr
->
b™dwidth
;

2959 
w™ãd_ts
 = 
ñ≠£d
;

2961 *
ªquúed_¶ìp
 = 
w™ãd_ts
 - 
ñ≠£d
;

2964 
	}
}

2966 
	$dlh™dÀr_öô
(
DLH™dÀr
 * c⁄° 
dlh™dÀr
,

2967 c⁄° 
˛õ¡fd
, * c⁄° 
és_˛õ¡fd
,

2968 c⁄° 
x„rfd
,

2969 c⁄° * c⁄° 
«me
,

2970 c⁄° 
f
, * c⁄° 
és_fd
,

2971 c⁄° 
off_t
 
ª°¨èt
,

2972 c⁄° 
ascii_mode
,

2973 c⁄° 
b™dwidth
)

2975 
°©
 
°
;

2976 
pﬁlfd
 *
pfd
;

2978 i‡(
	`f°©
(
f
, &
°
Ë< 0 || (
	`S_ISLNK
(°.
°_mode
Ë&& 
	`°©
(
«me
, &st) < 0)) {

2979 
	`îr‹
(451, 
MSG_STAT_FAILURE
);

2982 i‡(!
	`S_ISREG
(
°
.
°_mode
)) {

2983 
	`addª∂y_nof‹m©
(550, 
MSG_NOT_REGULAR_FILE
);

2986 
dlh™dÀr
->
˛õ¡fd
 = clientfd;

2987 
dlh™dÀr
->
és_˛õ¡fd
 =Åls_clientfd;

2988 
dlh™dÀr
->
x„rfd
 = xferfd;

2989 
dlh™dÀr
->
f
 = f;

2990 
dlh™dÀr
->
és_fd
 =Åls_fd;

2991 
dlh™dÀr
->
fûe_size
 = 
°
.
°_size
;

2992 
dlh™dÀr
->
ascii_mode
 =áscii_mode;

2993 
dlh™dÀr
->
cur_pos
 = 
ª°¨èt
;

2994 
dlh™dÀr
->
tŸÆ_dow∆ﬂded
 = (
off_t
) 0;

2995 
dlh™dÀr
->
mö_¶ìp
 = 0.1;

2996 
dlh™dÀr
->
max_¶ìp
 = 5.0;

2997 
dlh™dÀr
->
b™dwidth
 = bandwidth;

2998 
pfd
 = &
dlh™dÀr
->
pfds_f_ö
;

2999 
pfd
->
fd
 = 
˛õ¡fd
;

3000 #ifde‡
__APPLE_CC__


3001 
pfd
->
evíts
 = 
POLLRDBAND
 | 
POLLPRI
 | 
POLLERR
 | 
POLLHUP
;

3003 
pfd
->
evíts
 = 
POLLIN
 | 
POLLPRI
 | 
POLLERR
 | 
POLLHUP
;

3005 
pfd
->
ªvíts
 = 0;

3007 i‡(
ª°¨èt
 > (
off_t
) 0) {

3008 i‡(
ª°¨èt
 =
°
.
°_size
) {

3009 
	`addª∂y_nof‹m©
(226, 
MSG_NO_MORE_TO_DOWNLOAD
);

3011 } i‡(
ª°¨èt
 > 
°
.
°_size
) {

3012 
	`addª∂y
(554, 
MSG_REST_TOO_LARGE_FOR_FILE
 "\n" 
MSG_REST_RESET
,

3013 (Ë
ª°¨èt
, (Ë
°
.
°_size
);

3017 i‡(
	`f˙é
(
x„rfd
, 
F_SETFL
, f˙é(x„rfd, 
F_GETFL
Ë| 
O_NONBLOCK
) == -1) {

3018 
	`îr‹
(451, "fcntl(F_SETFL, O_NONBLOCK)");

3022 
	}
}

3024 
	$dlm≠_öô
(
DLH™dÀr
 * c⁄° 
dlh™dÀr
, c⁄° 
˛õ¡fd
,

3025 * c⁄° 
és_˛õ¡fd
, c⁄° 
x„rfd
,

3026 c⁄° * c⁄° 
«me
, c⁄° 
f
,

3027 * c⁄° 
és_fd
, c⁄° 
off_t
 
ª°¨èt
,

3028 c⁄° 
ascii_mode
, c⁄° 
b™dwidth
)

3030 i‡(
	`dlh™dÀr_öô
(
dlh™dÀr
, 
˛õ¡fd
, 
és_˛õ¡fd
, 
x„rfd
, 
«me
, 
f
,

3031 
és_fd
, 
ª°¨èt
, 
ascii_mode
, 
b™dwidth
) != 0) {

3034 
dlh™dÀr
->
mö_chunk_size
 = 
DL_MIN_CHUNK_SIZE
;

3035 i‡(
ascii_mode
 > 0) {

3036 
dlh™dÀr
->
deÁu…_chunk_size
 = dlh™dÀr->
max_chunk_size
 =

3037 
DL_DEFAULT_CHUNK_SIZE_ASCII
;

3039 
dlh™dÀr
->
max_chunk_size
 = 
DL_MAX_CHUNK_SIZE
;

3040 i‡(
b™dwidth
 <= 0UL) {

3041 
dlh™dÀr
->
deÁu…_chunk_size
 = dlh™dÀr->
max_chunk_size
;

3043 
dlh™dÀr
->
deÁu…_chunk_size
 = 
DL_DEFAULT_CHUNK_SIZE
;

3046 
dlh™dÀr
->
chunk_size
 = dlh™dÀr->
deÁu…_chunk_size
;

3047 
dlh™dÀr
->
dlm≠_size
 =

3048 (
DL_DLMAP_SIZE
 + 
∑ge_size
 - (
size_t
) 1U) & ~(page_size - (size_t) 1U);

3049 
dlh™dÀr
->
cur_pos
 = 
ª°¨èt
;

3050 
dlh™dÀr
->
dlm≠_pos
 = (
off_t
) 0;

3051 
dlh™dÀr
->
dlm≠_fdpos
 = (
off_t
) -1;

3052 
dlh™dÀr
->
sizeof_m≠
 = (
size_t
) 0U;

3053 
dlh™dÀr
->
m≠_d©a
 = 
NULL
;

3054 
dlh™dÀr
->
sizeof_m≠
 = dlh™dÀr->
dlm≠_size
;

3055 
dlh™dÀr
->
m≠
 = 
	`mÆloc
(dlh™dÀr->
sizeof_m≠
);

3056 i‡(
dlh™dÀr
->
m≠
 =
NULL
) {

3057 
	`dõ_mem
();

3060 
	}
}

3062 
	$_dlm≠_ªad
(
DLH™dÀr
 * c⁄° 
dlh™dÀr
)

3064 
ssize_t
 
ªadnb
;

3066 i‡(
dlh™dÀr
->
dlm≠_size
 > dlh™dÀr->
sizeof_m≠
) {

3067 
	`ab‹t
();

3069 i‡(
dlh™dÀr
->
dlm≠_size
 <(
size_t
) 0U) {

3072 i‡(
dlh™dÀr
->
dlm≠_pos
 !dlh™dÀr->
dlm≠_fdpos
) {

3074 i‡(
	`l£ek
(
dlh™dÀr
->
f
, dlh™dÀr->
dlm≠_pos
,

3075 
SEEK_SET
Ë=(
off_t
) -1) {

3076 
dlh™dÀr
->
dlm≠_fdpos
 = (
off_t
) -1;

3079 
dlh™dÀr
->
dlm≠_fdpos
 = dlh™dÀr->
dlm≠_pos
;

3080 
ªadnb
 = 
	`ªad
(
dlh™dÀr
->
f
, dlh™dÀr->
m≠
, dlh™dÀr->
dlm≠_size
);

3081 } 
ªadnb
 =(
ssize_t
Ë-1 && 
î∫o
 =
EINTR
);

3084 
ªadnb
 = 
	`ªad
(
dlh™dÀr
->
f
, dlh™dÀr->
m≠
, dlh™dÀr->
dlm≠_size
);

3085 } 
ªadnb
 =(
ssize_t
Ë-1 && 
î∫o
 =
EINTR
);

3087 i‡(
ªadnb
 <(
ssize_t
) 0) {

3088 
dlh™dÀr
->
dlm≠_fdpos
 = (
off_t
) -1;

3091 i‡(
ªadnb
 !(
ssize_t
Ë
dlh™dÀr
->
dlm≠_size
) {

3092 
dlh™dÀr
->
dlm≠_fdpos
 = (
off_t
) -1;

3094 
dlh™dÀr
->
dlm≠_fdpos
 +(
off_t
Ë
ªadnb
;

3097 
	}
}

3099 
	$_dlm≠_ªm≠
(
DLH™dÀr
 * c⁄° 
dlh™dÀr
)

3101 
size_t
 
mö_dlm≠_size
;

3102 
off_t
 
ªmaöög
;

3104 i‡(
dlh™dÀr
->
m≠_d©a
 !
NULL
) {

3105 i‡(
dlh™dÀr
->
cur_pos
 >dlh™dÀr->
dlm≠_pos
 &&

3106 
dlh™dÀr
->
cur_pos
 + dlh™dÀr->
chunk_size
 <=

3107 
dlh™dÀr
->
dlm≠_pos
 + (
off_t
Ëdlh™dÀr->
dlm≠_size
) {

3108 i‡(
dlh™dÀr
->
cur_pos
 < dlh™dÀr->
dlm≠_pos
 ||

3109 
dlh™dÀr
->
cur_pos
 - dlh™dÀr->
dlm≠_pos
 >

3110 (
off_t
Ë
dlh™dÀr
->
dlm≠_size
) {

3111 
	`addª∂y_nof‹m©
(451, "remap");

3114 
dlh™dÀr
->
m≠_d©a
 =

3115 
dlh™dÀr
->
m≠
 + dlh™dÀr->
cur_pos
 - dlh™dÀr->
dlm≠_pos
;

3119 i‡(
dlh™dÀr
->
fûe_size
 - dlh™dÀr->
cur_pos
 < dlh™dÀr->
chunk_size
) {

3120 
dlh™dÀr
->
chunk_size
 = dlh™dÀr->
fûe_size
 - dlh™dÀr->
cur_pos
;

3122 i‡(
dlh™dÀr
->
chunk_size
 <= 0) {

3125 
dlh™dÀr
->
dlm≠_pos
 = dlh™dÀr->
cur_pos
;

3126 
mö_dlm≠_size
 = 
dlh™dÀr
->
chunk_size
;

3127 i‡(
dlh™dÀr
->
dlm≠_size
 < 
mö_dlm≠_size
) {

3128 
dlh™dÀr
->
dlm≠_size
 = 
mö_dlm≠_size
;

3130 
dlh™dÀr
->
dlm≠_size
 = (dlh™dÀr->dlm≠_sizê+ 
∑ge_size
 - (
size_t
) 1U) &

3131 ~(
∑ge_size
 - (
size_t
) 1U);

3132 i‡(
dlh™dÀr
->
dlm≠_size
 < 
∑ge_size
) {

3133 
dlh™dÀr
->
dlm≠_size
 = 
∑ge_size
;

3135 
ªmaöög
 = 
dlh™dÀr
->
fûe_size
 - dlh™dÀr->
dlm≠_pos
;

3136 i‡((
off_t
Ë
dlh™dÀr
->
dlm≠_size
 > 
ªmaöög
) {

3137 
dlh™dÀr
->
dlm≠_size
 = (
off_t
Ë
ªmaöög
;

3139 i‡(
	`_dlm≠_ªad
(
dlh™dÀr
) != 0) {

3140 
	`îr‹
(451, 
MSG_DATA_READ_FAILED
);

3143 
dlh™dÀr
->
m≠_d©a
 = dlh™dÀr->
m≠
;

3146 
	}
}

3148 
	$dl_dowrôe
(
DLH™dÀr
 * c⁄° 
dlh™dÀr
, c⁄° *
buf_
,

3149 c⁄° 
size_t
 
size_
, 
off_t
 * c⁄° 
dow∆ﬂded
)

3151 
size_t
 
size
 = 
size_
;

3152 c⁄° *
buf
 = 
buf_
;

3153 *
asciibuf
 = 
NULL
;

3154 
ªt
 = 0;

3156 i‡(
size_
 <(
size_t
) 0U) {

3157 *
dow∆ﬂded
 = 0;

3160 #i‚de‡
WITHOUT_ASCII


3161 i‡(
dlh™dÀr
->
ascii_mode
 > 0) {

3162 *
asciibuÂ¡
;

3163 
size_t
 
z
 = (size_t) 0U;

3165 i‡(
size
 > (
size_t
Ë
dlh™dÀr
->
chunk_size
 ||

3166 (
asciibuf
 = 
	`ALLOCA
((
size_t
Ë
dlh™dÀr
->
chunk_size
 * 2U)Ë=
NULL
) {

3169 
asciibuÂ¡
 = 
asciibuf
;

3171 i‡(
buf_
[
z
] == () '\n') {

3172 *
asciibuÂ¡
++ = () '\r';

3174 *
asciibuÂ¡
++ = 
buf_
[
z
];

3175 
z
++;

3176 } 
z
 < 
size
);

3177 
buf
 = 
asciibuf
;

3178 
size
 = (
size_t
Ë(
asciibuÂ¡
 - 
asciibuf
);

3181 
ªt
 = 
	`ß„_n⁄block_wrôe
(
dlh™dÀr
->
x„rfd
, dlh™dÀr->
és_fd
, 
buf
, 
size
);

3182 i‡(
asciibuf
 !
NULL
) {

3183 
	`ALLOCA_FREE
(
asciibuf
);

3185 i‡(
ªt
 < 0) {

3186 *
dow∆ﬂded
 = 0;

3188 *
dow∆ﬂded
 = 
size
;

3190  
ªt
;

3191 
	}
}

3193 
	$dlh™dÀr_h™dÀ_comm™ds
(
DLH™dÀr
 * c⁄° 
dlh™dÀr
,

3194 c⁄° 
ªquúed_¶ìp
)

3196 
pﬁÃë
;

3197 
buf
[100];

3198 *
buÂ¡
;

3199 
ssize_t
 
ªadnb
;

3201 
ªpﬁl
:

3202 
dlh™dÀr
->
pfds_f_ö
.
ªvíts
 = 0;

3203 
pﬁÃë
 = 
	`pﬁl
(&
dlh™dÀr
->
pfds_f_ö
, 1U,

3204 
ªquúed_¶ìp
 <= 0.0 ?

3205 0 : (Ë(
ªquúed_¶ìp
 * 1000.0));

3206 i‡(
pﬁÃë
 <= 0) {

3207  
pﬁÃë
;

3209 i‡((
dlh™dÀr
->
pfds_f_ö
.
ªvíts
 & (
POLLIN
 | 
POLLPRI
)) != 0) {

3210 i‡(
dlh™dÀr
->
és_˛õ¡fd
 !
NULL
) {

3211 #ifde‡
WITH_TLS


3212 
ªadnb
 = 
	`SSL_ªad
(
dlh™dÀr
->
és_˛õ¡fd
, 
buf
,

3213  
buf
 - (
size_t
) 1U);

3215 
	`ab‹t
();

3218 
ªadnb
 = 
	`ªad
(
dlh™dÀr
->
˛õ¡fd
, 
buf
,  bu‡- (
size_t
) 1U);

3220 i‡(
ªadnb
 =(
ssize_t
) 0) {

3223 i‡(
ªadnb
 < (
ssize_t
) 0) {

3224 i‡(
î∫o
 =
EAGAIN
 ||Éºnÿ=
EINTR
) {

3229 
buf
[
ªadnb
] = 0;

3230 
buÂ¡
 = 
	`skù_ã ë_c⁄åﬁs
(
buf
);

3231 i‡(
	`°rchr
(
buÂ¡
, '\n'Ë!
NULL
) {

3232 i‡(
	`°∫ˇ£cmp
(
buÂ¡
, "ABOR",  "ABOR" - 1U) != 0 &&

3233 
	`°∫ˇ£cmp
(
buÂ¡
, "QUIT",  "QUIT" - 1U) != 0) {

3234 
	`addª∂y_nof‹m©
(500, 
MSG_UNKNOWN_COMMAND
);

3235 
	`d‹ïly
();

3237 
	`addª∂y_nof‹m©
(426, "ABORT");

3238 
	`d‹ïly
();

3239 
	`addª∂y_nof‹m©
(226, 
MSG_ABORTED
);

3243 i‡(
ªquúed_¶ìp
 > 0.0) {

3244 
ªpﬁl
;

3246 } i‡((
dlh™dÀr
->
pfds_f_ö
.
ªvíts
 &

3247 (
POLLERR
 | 
POLLHUP
 | 
POLLNVAL
)) != 0) {

3248 
	`addª∂y_nof‹m©
(451, 
MSG_DATA_READ_FAILED
);

3252 
	}
}

3254 
	$dlm≠_£nd
(
DLH™dÀr
 * c⁄° 
dlh™dÀr
)

3256 
ªt
;

3257 
ts_°¨t
 = 0.0;

3258 
ªquúed_¶ìp
;

3259 
off_t
 
dow∆ﬂded
;

3261 i‡(
dlh™dÀr
->
b™dwidth
 > 0UL && (
ts_°¨t
 = 
	`gë_u£c_time
()) <= 0.0) {

3262 
	`îr‹
(451, "gettimeofday()");

3265 
ªquúed_¶ìp
 = 0.0;

3267 
ªt
 = 
	`_dlm≠_ªm≠
(
dlh™dÀr
);

3268 i‡(
ªt
 < 0) {

3271 i‡(
ªt
 == 1) {

3274 i‡(
	`dl_dowrôe
(
dlh™dÀr
, dlh™dÀr->
m≠_d©a
, dlh™dÀr->
chunk_size
,

3275 &
dow∆ﬂded
) != 0) {

3278 
dlh™dÀr
->
cur_pos
 +dlh™dÀr->
chunk_size
;

3279 #ifde‡
FTPWHO


3280 i‡(
shm_d©a_cur
 !
NULL
) {

3281 
shm_d©a_cur
->
dow∆ﬂd_cuºít_size
 = 
dlh™dÀr
->
cur_pos
;

3284 
dlh™dÀr
->
tŸÆ_dow∆ﬂded
 +
dow∆ﬂded
;

3285 
ªquúed_¶ìp
 = 0.0;

3286 i‡(
dlh™dÀr
->
b™dwidth
 > 0UL) {

3287 
	`dlh™dÀr_thrŸée
(
dlh™dÀr
, 
dow∆ﬂded
, 
ts_°¨t
,

3288 &
ªquúed_¶ìp
);

3290 
ªt
 = 
	`dlh™dÀr_h™dÀ_comm™ds
(
dlh™dÀr
, 
ªquúed_¶ìp
);

3291 i‡(
ªt
 != 0) {

3292  
ªt
;

3296 
	}
}

3298 
	$dlm≠_exô
(
DLH™dÀr
 * c⁄° 
dlh™dÀr
)

3300 i‡(
dlh™dÀr
->
m≠
 !
NULL
) {

3301 
	`‰ì
(
dlh™dÀr
->
m≠
);

3302 
dlh™dÀr
->
m≠
 = 
NULL
;

3303 
dlh™dÀr
->
sizeof_m≠
 = (
size_t
) 0U;

3304 
dlh™dÀr
->
dlm≠_size
 = (
size_t
) 0U;

3307 
	}
}

3309 
	$d‹ër
(*
«me
)

3311 
DLH™dÀr
 
dlh™dÀr
;

3312 
f
;

3313 
°©
 
°
;

3314 
°¨ãd
 = 0.0;

3315 
ªt
;

3317 i‡(!
ˇndow∆ﬂd
) {

3318 
	`addª∂y
(550, 
MSG_LOAD_TOO_HIGH
, 
lﬂd
);

3319 
íd
;

3321 i‡(
ty≥
 < 1 || (ty≥ =1 && 
ª°¨èt
 > (
off_t
) 1)) {

3322 
	`addª∂y_nof‹m©
(503, 
MSG_NO_ASCII_RESUME
);

3323 
íd
;

3325 i‡(
	`check«meßnôy
(
«me
, 
dŸ_ªad_ok
) != 0) {

3326 
	`addª∂y
(553, 
MSG_SANITY_FILE_FAILURE
, 
«me
);

3327 
íd
;

3329 i‡((
f
 = 
	`›í
(
«me
, 
O_RDONLY
)) == -1) {

3330 
	`di•œy›íÁûuª
(
«me
);

3331 
íd
;

3333 i‡(
	`f°©
(
f
, &
°
) < 0) {

3334 
°©_Áûuª
:

3335 (Ë
	`˛o£
(
f
);

3336 
	`îr‹
(451, 
MSG_STAT_FAILURE
);

3337 
íd
;

3339 i‡(
	`S_ISLNK
(
°
.
°_mode
)) {

3340 i‡(
	`°©
(
«me
, &
°
) < 0) {

3341 
°©_Áûuª
;

3344 i‡(
ª°¨èt
 > 
°
.
°_size
) {

3345 (Ë
	`˛o£
(
f
);

3346 
	`addª∂y
(554, 
MSG_REST_TOO_LARGE_FOR_FILE
 "\n" 
MSG_REST_RESET
,

3347 (Ë
ª°¨èt
, (Ë
°
.
°_size
);

3348 
íd
;

3350 i‡(!
	`S_ISREG
(
°
.
°_mode
Ë|| ((
off_t
Ë°.
°_size
 != st.st_size)) {

3351 (Ë
	`˛o£
(
f
);

3352 
	`addª∂y_nof‹m©
(550, 
MSG_NOT_REGULAR_FILE
);

3353 
íd
;

3355 i‡(
w¨ez
 !0 && 
°
.
°_uid
 =w¨ez && 
gue°
 != 0) {

3356 (Ë
	`˛o£
(
f
);

3357 
	`addª∂y
(550, 
MSG_NOT_MODERATED
);

3358 
íd
;

3360 #ifde‡
RATIOS


3361 i‡(
øtio_u∂ﬂd
 > 0U && 
øtio_dow∆ﬂd
 > 0U) {

3362 i‡((
dow∆ﬂded
 + 
°
.
°_size
 - 
ª°¨èt
Ë/ 
øtio_dow∆ﬂd
 >

3363 (
u∂ﬂded
 / 
øtio_u∂ﬂd
)) {

3364 (Ë
	`˛o£
(
f
);

3365 
	`addª∂y
(550, 
MSG_RATIO_DENIAL
, 
øtio_u∂ﬂd
, 
øtio_dow∆ﬂd
,

3366 (Ë
u∂ﬂded
 / 1024ULL,

3367 (Ë
dow∆ﬂded
 / 1024ULL);

3368 
íd
;

3372 
	`›íd©a
();

3373 i‡(
x„rfd
 == -1) {

3374 (Ë
	`˛o£
(
f
);

3375 
íd
;

3377 #i‚de‡
DISABLE_HUMOR


3378 i‡((
	`time
(
NULL
) % 100) == 0) {

3379 
	`addª∂y_nof‹m©
(0, 
MSG_WINNER
);

3382 i‡(
°
.
°_size
 - 
ª°¨èt
 > 4096) {

3383 
	`addª∂y
(0, 
MSG_KBYTES_LEFT
, (Ë((
°
.
°_size
 - 
ª°¨èt
) / 1024.0));

3385 
	`d‹ïly
();

3386 #ifde‡
WITH_TLS


3387 i‡(
d©a_¥Ÿe˘i⁄_Àvñ
 =
CPL_PRIVATE
) {

3388 
	`és_öô_d©a_£ssi⁄
(
x„rfd
, 
∑ssive
);

3391 
°©e_√eds_upd©e
 = 1;

3392 
	`£çro˚s¢ame
("pure-ftpd (DOWNLOAD)");

3394 #ifde‡
FTPWHO


3395 i‡(
shm_d©a_cur
 !
NULL
) {

3396 c⁄° 
size_t
 
¶
 = 
	`°æí
(
«me
);

3398 
	`·pwho_lock
();

3399 
shm_d©a_cur
->
°©e
 = 
FTPWHO_STATE_DOWNLOAD
;

3400 
shm_d©a_cur
->
dow∆ﬂd_tŸÆ_size
 = 
°
.
°_size
;

3401 
shm_d©a_cur
->
dow∆ﬂd_cuºít_size
 = 
ª°¨èt
;

3402 
shm_d©a_cur
->
ª°¨èt
 =Ñestartat;

3403 (Ë
	`time
(&
shm_d©a_cur
->
x„r_d©e
);

3404 i‡(
¶
 <  
shm_d©a_cur
->
fûíame
 - 1U) {

3406 
	`°r˝y
(
shm_d©a_cur
->
fûíame
, 
«me
);

3409 
	`°r˝y
(
shm_d©a_cur
->
fûíame
,

3410 &
«me
[
¶
 -  
shm_d©a_cur
->
fûíame
 + 1U]);

3412 
	`·pwho_u∆ock
();

3415 #ifde‡
HAVE_POSIX_FADVISE


3416 (Ë
	`posix_Ádvi£
(
f
, (
off_t
Ë0, 
°
.
°_size
, 
POSIX_FADV_SEQUENTIAL
);

3419 
°¨ãd
 = 
	`gë_u£c_time
();

3421 i‡(
	`dlm≠_öô
(&
dlh™dÀr
, 
˛õ¡fd
, 
és_˙x
, 
x„rfd
, 
«me
, 
f
,

3422 
és_d©a_˙x
, 
ª°¨èt
, 
ty≥
 == 1,

3423 
thrŸéög_b™dwidth_dl
) == 0) {

3424 
ªt
 = 
	`dlm≠_£nd
(&
dlh™dÀr
);

3425 
	`dlm≠_exô
(&
dlh™dÀr
);

3427 
ªt
 = -1;

3430 (Ë
	`˛o£
(
f
);

3431 
	`˛o£d©a
();

3432 i‡(
ªt
 == 0) {

3433 
	`addª∂y_nof‹m©
(226, 
MSG_TRANSFER_SUCCESSFUL
);

3435 
dow∆ﬂded
 +
dlh™dÀr
.
tŸÆ_dow∆ﬂded
;

3436 
	`di•œyøã
(
MSG_DOWNLOADED
, 
dlh™dÀr
.
tŸÆ_dow∆ﬂded
, 
°¨ãd
, 
«me
, 0);

3438 
íd
:

3439 
ª°¨èt
 = (
off_t
) 0;

3440 
	}
}

3442 
	$d‹e°
(c⁄° *
«me
)

3444 *
íd±r
;

3446 
ª°¨èt
 = (
off_t
Ë
	`°πouŒ
(
«me
, &
íd±r
, 10);

3447 i‡(*
íd±r
 !0 || 
ª°¨èt
 < (
off_t
) 0) {

3448 
ª°¨èt
 = 0;

3449 
	`addª∂y
(554, 
MSG_REST_NOT_NUMERIC
 "\n" 
MSG_REST_RESET
);

3451 i‡(
ty≥
 =1 && 
ª°¨èt
 != 0) {

3452 #ifde‡
STRICT_REST


3453 
	`addª∂y_nof‹m©
(504, 
MSG_REST_ASCII_STRICT
);

3455 
	`addª∂y
(350, 
MSG_REST_ASCII_WORKAROUND
,

3456 (Ë
ª°¨èt
);

3459 i‡(
ª°¨èt
 != 0) {

3460 
	`logfûe
(
LOG_NOTICE
, 
MSG_REST_SUCCESS
, (Ë
ª°¨èt
);

3462 
	`addª∂y
(350, 
MSG_REST_SUCCESS
, (Ë
ª°¨èt
);

3465 
	}
}

3467 
	$domkd
(*
«me
)

3469 #ifde‡
QUOTAS


3470 
QuŸa
 
quŸa
;

3471 
ovîÊow
;

3474 i‡(
gue°
 !0 && 
Ælow_™⁄_mkdú
 == 0) {

3475 
	`addª∂y_nof‹m©
(550, 
MSG_ANON_CANT_MKD
);

3478 i‡(
	`check«meßnôy
(
«me
, 
dŸ_wrôe_ok
) != 0) {

3479 
	`addª∂y_nof‹m©
(553, 
MSG_SANITY_DIRECTORY_FAILURE
);

3482 #ifde‡
QUOTAS


3483 i‡(
	`quŸa_upd©e
(&
quŸa
, 1LL, 0LL, &
ovîÊow
) == 0 && overflow != 0) {

3484 (Ë
	`quŸa_upd©e
(&
quŸa
, -1LL, 0LL, 
NULL
);

3485 
	`addª∂y
(552, 
MSG_QUOTA_EXCEEDED
, 
«me
);

3486 
íd
;

3489 i‡((
	`mkdú
(
«me
, (
mode_t
Ë(0777 & ~
u_mask_d
))) < 0) {

3490 #ifde‡
QUOTAS


3491 (Ë
	`quŸa_upd©e
(&
quŸa
, -1LL, 0LL, 
NULL
);

3493 
	`îr‹
(550, 
MSG_MKD_FAILURE
);

3495 
	`addª∂y
(257, "\"%s\" : " 
MSG_MKD_SUCCESS
, 
«me
);

3496 #i‚de‡
MINIMAL


3497 
cwd_Áûuªs
 = 0UL;

3500 #ifde‡
QUOTAS


3501 
íd
:

3502 
	`di•œyquŸa
(&
quŸa
);

3504 
	}
}

3506 
	$d‹md
(*
«me
)

3508 #ifde‡
QUOTAS


3509 
QuŸa
 
quŸa
;

3512 #i‚de‡
ANON_CAN_DELETE


3513 i‡(
gue°
 != 0) {

3514 
	`addª∂y_nof‹m©
(550, 
MSG_ANON_CANT_RMD
);

3518 i‡(
	`check«meßnôy
(
«me
, 
dŸ_wrôe_ok
) != 0) {

3519 
	`addª∂y_nof‹m©
(553, 
MSG_SANITY_DIRECTORY_FAILURE
);

3522 i‡((
	`rmdú
(
«me
)) < 0) {

3523 
	`îr‹
(550, 
MSG_RMD_FAILURE
);

3525 #ifde‡
QUOTAS


3526 i‡(
	`quŸa_upd©e
(&
quŸa
, -1LL, 0LL, 
NULL
) == 0) {

3527 
	`di•œyquŸa
(&
quŸa
);

3530 
	`addª∂y_nof‹m©
(250, 
MSG_RMD_SUCCESS
);

3532 
	}
}

3534 #i‚de‡
MINIMAL


3535 
	$do„©
()

3537 
	#FEAT
 "Exãnsi⁄†suµ‹ãd:" 
CRLF
 \

3538 " EPRT" 
CRLF
 " IDLE" CRLF " MDTM" CRLF " SIZE" CRLF " MFMT" CRLF \

3539 " REST STREAM" 
CRLF
 \

3540 " MLSTÅy≥*;size*;sizd*;modify*;UNIX.mode*;UNIX.uid*;UNIX.gid*;unique*;" 
CRLF
 \

3541 " MLSD"

	)

3543 #ifde‡
WITH_TLS


3544 
	#FEAT_TLS
 
CRLF
 " AUTH TLS" CRLF " PBSZ" CRLF " PROT"

	)

3546 
	#FEAT_TLS
 ""

	)

3548 #ifde‡
DEBUG


3549 
	#FEAT_DEBUG
 
CRLF
 " XDBG"

	)

3551 
	#FEAT_DEBUG
 ""

	)

3553 #ifde‡
WITH_VIRTUAL_CHROOT


3554 
	#FEAT_TVFS
 ""

	)

3556 
	#FEAT_TVFS
 
CRLF
 " TVFS"

	)

3558 
	#FEAT_PASV
 
CRLF
 " PASV" CRLF " EPSV" CRLF " SPSV"

	)

3560 #ifde‡
MINIMAL


3561 
	#FEAT_ESTA
 ""

	)

3562 
	#FEAT_ESTP
 ""

	)

3564 
	#FEAT_ESTA
 
CRLF
 " ESTA"

	)

3565 
	#FEAT_ESTP
 
CRLF
 " ESTP"

	)

3568 #ifde‡
WITH_RFC2640


3569 
	#FEAT_UTF8
 
CRLF
 " UTF8"

	)

3571 
	#FEAT_UTF8
 ""

	)

3574 
„©
[] = 
FEAT
 
FEAT_DEBUG
 
FEAT_TLS
 
FEAT_UTF8
 
FEAT_TVFS
 
FEAT_ESTA
 
FEAT_PASV
 
FEAT_ESTP
;

3576 i‡(
dißŒow_∑ssive
 != 0) {

3577 
„©
[ 
FEAT
 
FEAT_DEBUG
 
FEAT_TLS
 
FEAT_UTF8
 
FEAT_TVFS
 
FEAT_ESTA
] = 0;

3579 #i‚de‡
MINIMAL


3580 i‡(
	`STORAGE_FAMILY
(
f‹˚_∑ssive_ù
) != 0) {

3581 
„©
[ 
FEAT
 
FEAT_DEBUG
 
FEAT_TLS
 
FEAT_UTF8
 
FEAT_TVFS
 
FEAT_ESTA
 
FEAT_PASV
] = 0;

3584 
	`addª∂y_nof‹m©
(0, 
„©
);

3585 
	`addª∂y_nof‹m©
(211, "End.");

3586 
	}
}

3589 #i‚de‡
MINIMAL


3590 
	$do°ou
()

3592 
fûe
[64];

3593 
£q
 = 0U;

3594 
timevÆ
 
tv
;

3595 
timez⁄e
 
tz
;

3597 i‡(
	`gëtimeofday
(&
tv
, &
tz
) != 0) {

3598 
	`îr‹
(553, 
MSG_TIMESTAMP_FAILURE
);

3601 i‡(
	`SNCHECK
(
	`¢¥ötf
(
fûe
,  file, "pureftpd.%08lx.%02lx.%04x",

3602 (Ë
tv
.
tv_£c
,

3603 (Ë
tv
.
tv_u£c
 & 0xff,

3604 
£q
),  
fûe
)) {

3605 
	`_EXIT
(
EXIT_FAILURE
);

3607 
£q
++;

3608 
£q
 &= 0xffff;

3609 
	`addª∂y
(150, "FILE: %s", 
fûe
);

3610 
	`do°‹
(
fûe
, 0, 1);

3611 
	}
}

3614 
	$åyaut‹íame
(c⁄° * c⁄° 
©omic_fûe
, * c⁄° 
«me
,

3615 c⁄° ** c⁄° 
«me2_
)

3617 
«me2
[
MAXPATHLEN
];

3618 
gc
 = 0U;

3620 i‡(
	`lök
(
©omic_fûe
, 
«me
) == 0) {

3621 *
«me2_
 = 
NULL
;

3622 (Ë
	`u∆ök
(
©omic_fûe
);

3625 *
«me2_
 = 
«me2
;

3627 
gc
++;

3628 i‡(
gc
 == 0U ||

3629 #ifde‡
AUTORENAME_REVERSE_ORDER


3630 
	`SNCHECK
(
	`¢¥ötf
(
«me2
, Çame2, "%u.%s", 
gc
, 
«me
),

3631  
«me2
)

3633 
	`SNCHECK
(
	`¢¥ötf
(
«me2
, Çame2, "%s.%u", 
«me
, 
gc
),

3634  
«me2
)

3639 i‡(
	`lök
(
©omic_fûe
, 
«me2
) == 0) {

3640 (Ë
	`u∆ök
(
©omic_fûe
);

3643 
î∫o
) {

3644 #ifde‡
EEXIST


3645 
EEXIST
:

3647 #ifde‡
EISDIR


3648 
EISDIR
:

3650 #ifde‡
ETXTBSY


3651 
ETXTBSY
:

3657 *
«me2_
 = 
NULL
;

3660 
	}
}

3662 *
	$gë_©omic_fûe
(c⁄° * c⁄° 
fûe
)

3664 
ªs
[
MAXPATHLEN
];

3665 *
z
;

3666 
size_t
 
‹ig_Àn
;

3667 
size_t
 
¶ash
;

3668 
size_t
 
sizeof_©omic_¥efix
;

3670 i‡(
fûe
 =
NULL
) {

3671  
ªs
;

3673 i‡((
z
 = 
	`°ºchr
(
fûe
, '/')Ë=
NULL
) {

3674 *
ªs
 = 0;

3675 
‹ig_Àn
 = (
size_t
) 0U;

3677 
¶ash
 = (
size_t
Ë(
z
 - 
fûe
);

3678 i‡(
¶ash
 >( 
ªs
 - (
size_t
) 1U)) {

3679  
NULL
;

3681 
¶ash
++;

3682 i‡(
fûe
[
¶ash
] == 0) {

3683  
NULL
;

3685 
	`°∫˝y
(
ªs
, 
fûe
, 
¶ash
);

3686 
ªs
[
¶ash
] = 0;

3687 
‹ig_Àn
 = 
	`°æí
(
ªs
);

3689 
sizeof_©omic_¥efix
 = 
	`°æí
(
©omic_¥efix
Ë+ (
size_t
) 1U;

3690 i‡( 
ªs
 - 
‹ig_Àn
 < 
sizeof_©omic_¥efix
) {

3691  
NULL
;

3693 
	`mem˝y
(
ªs
 + 
‹ig_Àn
, 
©omic_¥efix
, 
sizeof_©omic_¥efix
);

3695  
ªs
;

3696 
	}
}

3698 
	$dñëe_©omic_fûe
()

3700 c⁄° *
©omic_fûe
;

3702 i‡((
©omic_fûe
 = 
	`gë_©omic_fûe
(
NULL
)) == NULL || *atomic_file == 0) {

3705 (Ë
	`u∆ök
(
©omic_fûe
);

3706 
©omic_fûe
 = 
NULL
;

3707 
	}
}

3709 
off_t
 
	$gë_fûe_size
(c⁄° * c⁄° 
fûe
)

3711 
°©
 
°
;

3713 i‡(
	`°©
(
fûe
, &
°
) != 0) {

3714  (
off_t
) -1;

3716  
°
.
°_size
;

3717 
	}
}

3719 #ifde‡
QUOTAS


3720 
	$ul_quŸa_upd©e
(c⁄° * c⁄° 
fûe_«me
,

3721 c⁄° 
fûes_cou¡
, c⁄° 
off_t
 
byãs
)

3723 
QuŸa
 
quŸa
;

3724 
off_t
 
fûe_size
 = (off_t) -1;

3725 
ovîÊow
;

3726 
ªt
 = 0;

3728 i‡(
fûes_cou¡
 =0 && 
byãs
 =(
off_t
) 0) {

3731 i‡(
	`quŸa_upd©e
(&
quŸa
, 
fûes_cou¡
, (Ë
byãs
, &
ovîÊow
) != 0) {

3734 i‡(
ovîÊow
 != 0) {

3735 
ªt
 = 1;

3736 i‡(
fûe_«me
 !
NULL
) {

3737 
fûe_size
 = 
	`gë_fûe_size
(
fûe_«me
);

3739 i‡(
fûe_size
 >(
off_t
Ë0 && 
	`u∆ök
(
fûe_«me
) == 0) {

3740 (Ë
	`quŸa_upd©e
(&
quŸa
, -1, (Ë-
fûe_size
, 
NULL
);

3743 
	`di•œyquŸa
(&
quŸa
);

3745  
ªt
;

3746 
	}
}

3749 
	$ulh™dÀr_thrŸée
(
ULH™dÀr
 * c⁄° 
ulh™dÀr
,

3750 c⁄° 
off_t
 
u∂ﬂded
, c⁄° 
ts_°¨t
,

3751 *
ªquúed_¶ìp
)

3753 
ts_now
;

3754 
ñ≠£d
;

3755 
off_t
 
would_be_u∂ﬂded
;

3756 
w™ãd_ts
;

3757 
off_t
 
¥evious_chunk_size
;

3759 (Ë
u∂ﬂded
;

3760 i‡(
ulh™dÀr
->
b™dwidth
 <= 0UL) {

3761 *
ªquúed_¶ìp
 = 0.0;

3764 i‡((
ts_now
 = 
	`gë_u£c_time
()) <= 0.0) {

3765 
ts_now
 = 
ts_°¨t
;

3767 i‡(
ts_°¨t
 > 
ts_now
) {

3768 
ts_now
 = 
ts_°¨t
;

3770 
ñ≠£d
 = 
ts_now
 - 
ts_°¨t
;

3771 
would_be_u∂ﬂded
 = 
ulh™dÀr
->
tŸÆ_u∂ﬂded
 + ulh™dÀr->
chunk_size
;

3772 i‡(
ulh™dÀr
->
b™dwidth
 > 0UL) {

3773 
w™ãd_ts
 = (Ë
would_be_u∂ﬂded
 / (Ë
ulh™dÀr
->
b™dwidth
;

3775 
w™ãd_ts
 = 
ñ≠£d
;

3777 *
ªquúed_¶ìp
 = 
w™ãd_ts
 - 
ñ≠£d
;

3778 
¥evious_chunk_size
 = 
ulh™dÀr
->
chunk_size
;

3779 i‡(
ulh™dÀr
->
tŸÆ_u∂ﬂded
 > ulh™dÀr->
chunk_size
) {

3780 i‡(*
ªquúed_¶ìp
 < 
ulh™dÀr
->
mö_¶ìp
) {

3781 
ulh™dÀr
->
chunk_size
 =

3782 (
ulh™dÀr
->
max_chunk_size
 + ulh™dÀr->
chunk_size
) / 2;

3783 } i‡(*
ªquúed_¶ìp
 > 
ulh™dÀr
->
max_¶ìp
) {

3784 
ulh™dÀr
->
chunk_size
 =

3785 (
ulh™dÀr
->
mö_chunk_size
 + ulh™dÀr->
chunk_size
) / 2;

3787 
ulh™dÀr
->
chunk_size
 = ulh™dÀr->
deÁu…_chunk_size
;

3789 i‡(
ulh™dÀr
->
chunk_size
 <= 0 ||

3790 
ulh™dÀr
->
chunk_size
 > (
off_t
Ëulh™dÀr->
sizeof_buf
) {

3791 
ulh™dÀr
->
chunk_size
 = ulh™dÀr->
deÁu…_chunk_size
;

3793 i‡(
¥evious_chunk_size
 !
ulh™dÀr
->
deÁu…_chunk_size
) {

3794 
would_be_u∂ﬂded
 =

3795 
ulh™dÀr
->
tŸÆ_u∂ﬂded
 + ulh™dÀr->
chunk_size
;

3796 i‡(
ulh™dÀr
->
b™dwidth
 > 0UL) {

3797 
w™ãd_ts
 = (Ë
would_be_u∂ﬂded
 /

3798 (Ë
ulh™dÀr
->
b™dwidth
;

3800 
w™ãd_ts
 = 
ñ≠£d
;

3802 *
ªquúed_¶ìp
 = 
w™ãd_ts
 - 
ñ≠£d
;

3806 
	}
}

3808 
	$ul_öô
(
ULH™dÀr
 * c⁄° 
ulh™dÀr
, c⁄° 
˛õ¡fd
,

3809 * c⁄° 
és_˛õ¡fd
, c⁄° 
x„rfd
,

3810 c⁄° * c⁄° 
«me
, c⁄° 
f
, * c⁄° 
és_fd
,

3811 c⁄° 
off_t
 
ª°¨èt
, c⁄° 
ascii_mode
,

3812 c⁄° 
b™dwidth
, c⁄° 
off_t
 
max_fûesize
)

3814 
pﬁlfd
 *
pfd
;

3816 (Ë
«me
;

3817 i‡(
	`f˙é
(
x„rfd
, 
F_SETFL
, f˙é(x„rfd, 
F_GETFL
Ë| 
O_NONBLOCK
) == -1) {

3818 
	`îr‹
(451, "fcntl(F_SETFL, O_NONBLOCK)");

3821 
ulh™dÀr
->
buf
 = 
NULL
;

3822 
ulh™dÀr
->
sizeof_buf
 = (
size_t
) 0UL;

3823 
ulh™dÀr
->
˛õ¡fd
 = clientfd;

3824 
ulh™dÀr
->
és_˛õ¡fd
 =Åls_clientfd;

3825 
ulh™dÀr
->
x„rfd
 = xferfd;

3826 
ulh™dÀr
->
f
 = f;

3827 
ulh™dÀr
->
és_fd
 =Åls_fd;

3828 
ulh™dÀr
->
ascii_mode
 =áscii_mode;

3829 
ulh™dÀr
->
cur_pos
 = 
ª°¨èt
;

3830 
ulh™dÀr
->
tŸÆ_u∂ﬂded
 = (
off_t
) 0;

3831 
ulh™dÀr
->
mö_¶ìp
 = 0.1;

3832 
ulh™dÀr
->
max_¶ìp
 = 5.0;

3833 
ulh™dÀr
->
b™dwidth
 = bandwidth;

3834 
ulh™dÀr
->
max_fûesize
 = max_filesize;

3835 
ulh™dÀr
->
idÀtime
 = idletime;

3836 
pfd
 = &
ulh™dÀr
->
pfds
[
PFD_DATA
];

3837 
pfd
->
fd
 = 
x„rfd
;

3838 
pfd
->
evíts
 = 
POLLIN
 | 
POLLERR
 | 
POLLHUP
;

3839 
pfd
->
ªvíts
 = 0;

3840 
pfd
 = &
ulh™dÀr
->
pfds
[
PFD_COMMANDS
];

3841 
pfd
->
fd
 = 
˛õ¡fd
;

3842 #ifde‡
__APPLE_CC__


3843 
pfd
->
evíts
 = 
POLLRDBAND
 | 
POLLPRI
 | 
POLLERR
 | 
POLLHUP
;

3845 
pfd
->
evíts
 = 
POLLIN
 | 
POLLPRI
 | 
POLLERR
 | 
POLLHUP
;

3847 
pfd
->
ªvíts
 = 0;

3848 
pfd
 = &
ulh™dÀr
->
pfds_comm™d
;

3849 
pfd
->
fd
 = 
˛õ¡fd
;

3850 #ifde‡
__APPLE_CC__


3851 
pfd
->
evíts
 = 
POLLRDBAND
 | 
POLLPRI
 | 
POLLERR
 | 
POLLHUP
;

3853 
pfd
->
evíts
 = 
POLLIN
 | 
POLLPRI
 | 
POLLERR
 | 
POLLHUP
;

3855 
pfd
->
ªvíts
 = 0;

3856 
ulh™dÀr
->
mö_chunk_size
 = 
UL_MIN_CHUNK_SIZE
;

3857 i‡(
ascii_mode
 > 0) {

3858 
ulh™dÀr
->
deÁu…_chunk_size
 = ulh™dÀr->
max_chunk_size
 =

3859 
UL_DEFAULT_CHUNK_SIZE_ASCII
;

3861 
ulh™dÀr
->
max_chunk_size
 = 
UL_MAX_CHUNK_SIZE
;

3862 i‡(
b™dwidth
 <= 0UL) {

3863 
ulh™dÀr
->
deÁu…_chunk_size
 = ulh™dÀr->
max_chunk_size
;

3865 
ulh™dÀr
->
deÁu…_chunk_size
 = 
UL_DEFAULT_CHUNK_SIZE
;

3868 
ulh™dÀr
->
chunk_size
 = ulh™dÀr->
deÁu…_chunk_size
;

3869 
ulh™dÀr
->
cur_pos
 = 
ª°¨èt
;

3870 
ulh™dÀr
->
sizeof_buf
 = ulh™dÀr->
max_chunk_size
;

3871 i‡((
ulh™dÀr
->
buf
 = 
	`mÆloc
(ulh™dÀr->
sizeof_buf
)Ë=
NULL
) {

3872 
ulh™dÀr
->
buf
 = 
NULL
;

3873 
ulh™dÀr
->
sizeof_buf
 = (
size_t
) 0U;

3877 
	}
}

3879 
	$ul_dowrôe
(
ULH™dÀr
 * c⁄° 
ulh™dÀr
, c⁄° *
buf_
,

3880 c⁄° 
size_t
 
size_
, 
off_t
 * c⁄° 
u∂ﬂded
)

3882 
size_t
 
size
 = 
size_
;

3883 
ssize_t
 
wrôãn
;

3884 c⁄° *
buf
 = 
buf_
;

3885 *
u«sciibuf
 = 
NULL
;

3886 
ªt
 = 0;

3888 i‡(
size_
 <(
size_t
) 0U) {

3889 *
u∂ﬂded
 = 0;

3892 #i‚de‡
WITHOUT_ASCII


3893 i‡(
ulh™dÀr
->
ascii_mode
 > 0) {

3894 *
u«sciibuÂ¡
;

3895 
size_t
 
z
 = (size_t) 0U;

3897 i‡(
size
 > (
size_t
Ë
ulh™dÀr
->
chunk_size
 ||

3898 (
u«sciibuf
 = 
	`ALLOCA
((
size_t
Ë
ulh™dÀr
->
chunk_size
)Ë=
NULL
) {

3901 
u«sciibuÂ¡
 = 
u«sciibuf
;

3903 i‡(
buf_
[
z
] != () '\r') {

3904 *
u«sciibuÂ¡
++ = 
buf_
[
z
];

3906 
z
++;

3907 } 
z
 < 
size
);

3908 
buf
 = 
u«sciibuf
;

3909 
size
 = (
size_t
Ë(
u«sciibuÂ¡
 - 
u«sciibuf
);

3912 
wrôãn
 = 
	`ß„_wrôe
(
ulh™dÀr
->
f
, 
buf
, 
size
, -1);

3913 
ªt
 = - (
wrôãn
 !(
ssize_t
Ë
size
);

3914 i‡(
u«sciibuf
 !
NULL
) {

3915 
	`ALLOCA_FREE
(
u«sciibuf
);

3917 i‡(
ªt
 < 0) {

3918 *
u∂ﬂded
 = 0;

3920 *
u∂ﬂded
 = 
size
;

3922  
ªt
;

3923 
	}
}

3925 
	$ulh™dÀr_h™dÀ_comm™ds
(
ULH™dÀr
 * c⁄° 
ulh™dÀr
)

3927 
buf
[100];

3928 *
buÂ¡
;

3929 
ssize_t
 
ªadnb
;

3931 i‡(
ulh™dÀr
->
és_˛õ¡fd
 !
NULL
) {

3932 #ifde‡
WITH_TLS


3933 
ªadnb
 = 
	`SSL_ªad
(
ulh™dÀr
->
és_˛õ¡fd
, 
buf
,

3934  
buf
 - (
size_t
) 1U);

3936 
	`ab‹t
();

3939 
ªadnb
 = 
	`ªad
(
ulh™dÀr
->
˛õ¡fd
, 
buf
,  bu‡- (
size_t
) 1U);

3941 i‡(
ªadnb
 =(
ssize_t
) 0) {

3944 i‡(
ªadnb
 < (
ssize_t
) 0) {

3945 i‡(
î∫o
 =
EAGAIN
 ||Éºnÿ=
EINTR
) {

3950 
buf
[
ªadnb
] = 0;

3951 
buÂ¡
 = 
	`skù_ã ë_c⁄åﬁs
(
buf
);

3952 i‡(
	`°rchr
(
buf
, '\n'Ë!
NULL
) {

3953 i‡(
	`°∫ˇ£cmp
(
buÂ¡
, "ABOR",  "ABOR" - 1U) != 0 &&

3954 
	`°∫ˇ£cmp
(
buÂ¡
, "QUIT",  "QUIT" - 1U) != 0) {

3955 
	`addª∂y_nof‹m©
(500, 
MSG_UNKNOWN_COMMAND
);

3956 
	`d‹ïly
();

3958 
	`addª∂y_nof‹m©
(426, 
MSG_ABORTED
);

3959 
	`d‹ïly
();

3964 
	}
}

3966 
	$ul_h™dÀ_d©a
(
ULH™dÀr
 * c⁄° 
ulh™dÀr
, 
off_t
 * c⁄° 
u∂ﬂded
,

3967 c⁄° 
ts_°¨t
)

3969 
ssize_t
 
ªadnb
;

3970 
ªquúed_¶ìp
 = 0.0;

3971 
pﬁÃë
;

3972 
ªt
;

3974 i‡(
ulh™dÀr
->
max_fûesize
 >(
off_t
) 0 &&

3975 
ulh™dÀr
->
tŸÆ_u∂ﬂded
 > ulh™dÀr->
max_fûesize
) {

3976 
	`addª∂y
(552, 
MSG_ABORTED
 " (quota)");

3979 i‡(
ulh™dÀr
->
chunk_size
 > (
off_t
Ëulh™dÀr->
sizeof_buf
) {

3980 
ulh™dÀr
->
chunk_size
 = ulh™dÀr->
max_chunk_size
 =

3981 
ulh™dÀr
->
sizeof_buf
;

3983 i‡(
ulh™dÀr
->
és_fd
 !
NULL
) {

3984 #ifde‡
WITH_TLS


3985 
ªadnb
 = 
	`SSL_ªad
(
ulh™dÀr
->
és_fd
, ulh™dÀr->
buf
,

3986 
ulh™dÀr
->
chunk_size
);

3988 
	`ab‹t
();

3991 
ªadnb
 = 
	`ªad
(
ulh™dÀr
->
x„rfd
, ulh™dÀr->
buf
,

3992 
ulh™dÀr
->
chunk_size
);

3994 i‡(
ªadnb
 =(
ssize_t
) 0) {

3997 i‡(
ªadnb
 < (
ssize_t
) 0) {

3998 i‡(
î∫o
 =
EAGAIN
 ||Éºnÿ=
EINTR
) {

4001 
	`addª∂y_nof‹m©
(451, 
MSG_DATA_READ_FAILED
);

4004 i‡(
	`ul_dowrôe
(
ulh™dÀr
, ulh™dÀr->
buf
, 
ªadnb
, 
u∂ﬂded
) != 0) {

4005 
	`addª∂y_nof‹m©
(452, 
MSG_WRITE_FAILED
);

4008 
ulh™dÀr
->
cur_pos
 +*
u∂ﬂded
;

4009 #ifde‡
FTPWHO


4010 i‡(
shm_d©a_cur
 !
NULL
) {

4011 
shm_d©a_cur
->
dow∆ﬂd_cuºít_size
 =

4012 
shm_d©a_cur
->
dow∆ﬂd_tŸÆ_size
 = 
ulh™dÀr
->
cur_pos
;

4015 
ulh™dÀr
->
tŸÆ_u∂ﬂded
 +*
u∂ﬂded
;

4016 i‡(
ulh™dÀr
->
b™dwidth
 > 0UL) {

4017 
	`ulh™dÀr_thrŸée
(
ulh™dÀr
, *
u∂ﬂded
, 
ts_°¨t
, &
ªquúed_¶ìp
);

4018 i‡(
ªquúed_¶ìp
 > 0.0) {

4019 
ªpﬁl
:

4020 
ulh™dÀr
->
pfds_comm™d
.
ªvíts
 = 0;

4021 
pﬁÃë
 = 
	`pﬁl
(&
ulh™dÀr
->
pfds_comm™d
, 1, 
ªquúed_¶ìp
 * 1000.0);

4022 i‡(
pﬁÃë
 == 0) {

4025 i‡(
pﬁÃë
 < 0) {

4026 i‡(
î∫o
 =
EINTR
) {

4027 
ªpﬁl
;

4031 i‡((
ulh™dÀr
->
pfds_comm™d
.
ªvíts
 &

4032 (
POLLERR
 | 
POLLHUP
 | 
POLLNVAL
)) != 0) {

4035 i‡((
ulh™dÀr
->
pfds_comm™d
.
ªvíts
 & (
POLLIN
 | 
POLLPRI
)) != 0) {

4036 
ªt
 = 
	`ulh™dÀr_h™dÀ_comm™ds
(
ulh™dÀr
);

4037 i‡(
ªt
 != 0) {

4038  
ªt
;

4040 
ªpﬁl
;

4045 
	}
}

4047 
	$ul_£nd
(
ULH™dÀr
 * c⁄° 
ulh™dÀr
)

4049 
ts_°¨t
 = 0.0;

4050 
off_t
 
u∂ﬂded
 = (off_t) 0;

4051 
pﬁÃë
;

4052 
timeout
;

4053 
ªt
;

4055 i‡(
ulh™dÀr
->
b™dwidth
 > 0UL && (
ts_°¨t
 = 
	`gë_u£c_time
()) <= 0.0) {

4056 
	`îr‹
(451, "gettimeofday()");

4060 i‡(
ulh™dÀr
->
idÀtime
 >
INT_MAX
 / 1000) {

4061 
timeout
 = 
INT_MAX
;

4063 
timeout
 = (Ë
ulh™dÀr
->
idÀtime
 * 1000;

4065 
ulh™dÀr
->
pfds
[
PFD_DATA
].
ªvíts
 =

4066 
ulh™dÀr
->
pfds
[
PFD_COMMANDS
].
ªvíts
 = 0;

4067 
pﬁÃë
 = 
	`pﬁl
(
ulh™dÀr
->
pfds
,

4068  
ulh™dÀr
->
pfds
 /  ulhandler->pfds[0],

4069 
timeout
);

4070 i‡(
pﬁÃë
 < 0) {

4071 
	`addª∂y_nof‹m©
(451, 
MSG_DATA_READ_FAILED
);

4074 i‡(
pﬁÃë
 == 0) {

4075 
	`addª∂y_nof‹m©
(421, 
MSG_TIMEOUT
);

4078 i‡((
ulh™dÀr
->
pfds
[
PFD_DATA
].
ªvíts
 & 
POLLIN
) != 0) {

4079 
ªt
 = 
	`ul_h™dÀ_d©a
(
ulh™dÀr
, &
u∂ﬂded
, 
ts_°¨t
);

4080 
ªt
) {

4088 i‡(
ªt
 > 2) {

4089 
	`ab‹t
();

4091  
ªt
;

4094 i‡((
ulh™dÀr
->
pfds
[
PFD_COMMANDS
].
ªvíts
 & (
POLLIN
 | 
POLLPRI
)) != 0) {

4095 
ªt
 = 
	`ulh™dÀr_h™dÀ_comm™ds
(
ulh™dÀr
);

4096 i‡(
ªt
 != 0) {

4097  
ªt
;

4100 i‡((
ulh™dÀr
->
pfds
[
PFD_DATA
].
ªvíts
 & (
POLLERR
 | 
POLLNVAL
)) != 0 ||

4101 ((
ulh™dÀr
->
pfds
[
PFD_DATA
].
ªvíts
 & 
POLLHUP
) != 0 &&

4102 (
ulh™dÀr
->
pfds
[
PFD_DATA
].
ªvíts
 & 
POLLIN
) == 0)) {

4105 i‡((
ulh™dÀr
->
pfds
[
PFD_COMMANDS
].
ªvíts
 &

4106 (
POLLERR
 | 
POLLHUP
 | 
POLLNVAL
)) != 0) {

4107 
	`addª∂y_nof‹m©
(221, 
MSG_LOGOUT
);

4113 
	}
}

4115 
	$ul_exô
(
ULH™dÀr
 * c⁄° 
ulh™dÀr
)

4117 
	`‰ì
(
ulh™dÀr
->
buf
);

4118 
ulh™dÀr
->
buf
 = 
NULL
;

4121 
	}
}

4123 
	$ul_check_‰ì_•a˚
(c⁄° *
«me
, c⁄° 
mö_•a˚
)

4125 
STATFS_STRUCT
 
°©fsbuf
;

4126 *
z
;

4127 *
Æloˇ_«medú
;

4128 
size_t
 
«me_Àn
;

4129 
jam
;

4130 
•a˚
;

4132 i‡(
maxdiskußgï˘
 <0.0 && 
mö_•a˚
 <= 0.0) {

4135 #ifde‡
CHECK_SYMLINKS_DISK_SPACE


4136 i‡(
	`STATFS
(
«me
, &
°©fsbuf
) == 0) {

4137 
okcheck•a˚
;

4140 
«me_Àn
 = 
	`°æí
(
«me
Ë+ (
size_t
) 1U;

4141 i‡(
«me_Àn
 < (
size_t
) 2U ||

4142 (
Æloˇ_«medú
 = 
	`ALLOCA
(
«me_Àn
)Ë=
NULL
) {

4145 
	`mem˝y
(
Æloˇ_«medú
, 
«me
, 
«me_Àn
);

4146 i‡((
z
 = 
	`°ºchr
(
Æloˇ_«medú
, '/')Ë!
NULL
) {

4147 i‡(
z
 =
Æloˇ_«medú
) {

4148 *
z
++ = '.';

4150 *
z
 = 0;

4152 
Æloˇ_«medú
[0] = '.';

4153 
Æloˇ_«medú
[1] = 0;

4155 i‡(
	`STATFS
(
Æloˇ_«medú
, &
°©fsbuf
) != 0) {

4156 
	`ALLOCA_FREE
(
Æloˇ_«medú
);

4159 
	`ALLOCA_FREE
(
Æloˇ_«medú
);

4161 #ifde‡
CHECK_SYMLINKS_DISK_SPACE


4162 
okcheck•a˚
:

4164 i‡((Ë
	`STATFS_BLOCKS
(
°©fsbuf
) <= 0.0) {

4167 i‡(
mö_•a˚
 >= 0.0) {

4168 
•a˚
 = (Ë
	`STATFS_BAVAIL
(
°©fsbuf
) *

4169 (Ë
	`STATFS_FRSIZE
(
°©fsbuf
);

4170 i‡(
•a˚
 < 
mö_•a˚
) {

4174 
jam
 = (Ë
	`STATFS_BAVAIL
(
°©fsbuf
) /

4175 (Ë
	`STATFS_BLOCKS
(
°©fsbuf
);

4176 i‡(
jam
 >
maxdiskußgï˘
) {

4180 
	}
}

4182 
	$do°‹
(*
«me
, c⁄° 
≠≥nd
, c⁄° 
aut‹íame
)

4184 
ULH™dÀr
 
ulh™dÀr
;

4185 
f
;

4186 c⁄° *
ul_«me
 = 
NULL
;

4187 c⁄° *
©omic_fûe
 = 
NULL
;

4188 
off_t
 
fûesize
 = (off_t) 0U;

4189 
°©
 
°
;

4190 
°¨ãd
 = 0.0;

4191 sig√d 
ovîwrôe
 = 0;

4192 
ovîÊow
 = 0;

4193 
ªt
 = -1;

4194 
off_t
 
max_fûesize
 = (off_t) -1;

4195 #ifde‡
QUOTAS


4196 
QuŸa
 
quŸa
;

4198 c⁄° *
«me2
 = 
NULL
;

4200 i‡(
ty≥
 < 1 || (ty≥ =1 && 
ª°¨èt
 > (
off_t
) 1)) {

4201 
	`addª∂y_nof‹m©
(503, 
MSG_NO_ASCII_RESUME
);

4202 
íd
;

4204 #i‚de‡
ANON_CAN_RESUME


4205 i‡(
gue°
 !0 && 
™⁄_nou∂ﬂd
 != 0) {

4206 
	`addª∂y_nof‹m©
(550, 
MSG_ANON_CANT_OVERWRITE
);

4207 
íd
;

4210 i‡(
	`ul_check_‰ì_•a˚
(
«me
, -1.0) == 0) {

4211 
	`addª∂y_nof‹m©
(552, 
MSG_NO_DISK_SPACE
);

4212 
íd
;

4214 i‡(
	`check«meßnôy
(
«me
, 
dŸ_wrôe_ok
) != 0) {

4215 
	`addª∂y
(553, 
MSG_SANITY_FILE_FAILURE
, 
«me
);

4216 
íd
;

4218 i‡(
aut‹íame
 != 0) {

4219 
no_åunˇã
 = 1;

4221 i‡(
ª°¨èt
 > (
off_t
Ë0 || 
no_åunˇã
 != 0) {

4222 i‡((
©omic_fûe
 = 
	`gë_©omic_fûe
(
«me
)Ë=
NULL
) {

4223 
	`addª∂y
(553, 
MSG_SANITY_FILE_FAILURE
, 
«me
);

4224 
íd
;

4226 i‡(
ª°¨èt
 > (
off_t
) 0 &&

4227 
	`ª«me
(
«me
, 
©omic_fûe
Ë!0 && 
î∫o
 !
ENOENT
) {

4228 
	`îr‹
(553, 
MSG_RENAME_FAILURE
);

4229 
©omic_fûe
 = 
NULL
;

4230 
íd
;

4233 i‡(
©omic_fûe
 !
NULL
) {

4234 
ul_«me
 = 
©omic_fûe
;

4236 
ul_«me
 = 
«me
;

4238 i‡(
©omic_fûe
 =
NULL
 &&

4239 (
f
 = 
	`›í
(
ul_«me
, 
O_WRONLY
 | 
O_NOFOLLOW
)) != -1) {

4240 
ovîwrôe
++;

4241 } i‡((
f
 = 
	`›í
(
ul_«me
, 
O_CREAT
 | 
O_WRONLY
 | 
O_NOFOLLOW
,

4242 (
mode_t
Ë0777 & ~
u_mask
)) == -1) {

4243 
	`îr‹
(553, 
MSG_OPEN_FAILURE2
);

4244 
íd
;

4246 i‡(
	`f°©
(
f
, &
°
) < 0) {

4247 (Ë
	`˛o£
(
f
);

4248 
	`îr‹
(553, 
MSG_STAT_FAILURE2
);

4249 
íd
;

4251 i‡(!
	`S_ISREG
(
°
.
°_mode
)) {

4252 (Ë
	`˛o£
(
f
);

4253 
	`addª∂y_nof‹m©
(550, 
MSG_NOT_REGULAR_FILE
);

4254 
íd
;

4256 
	`Æ¨m
(
MAX_SESSION_XFER_IDLE
);

4259 i‡(
°
.
°_size
 > (
off_t
) 0) {

4260 #i‚de‡
ANON_CAN_RESUME


4261 i‡(
gue°
 != 0) {

4262 
	`addª∂y_nof‹m©
(550, 
MSG_ANON_CANT_OVERWRITE
);

4263 (Ë
	`˛o£
(
f
);

4264 
íd
;

4267 i‡(
≠≥nd
 != 0) {

4268 
ª°¨èt
 = 
°
.
°_size
;

4271 
ª°¨èt
 = (
off_t
) 0;

4273 i‡(
ª°¨èt
 > 
°
.
°_size
) {

4274 
ª°¨èt
 = 
°
.
°_size
;

4276 i‡(
ª°¨èt
 > (
off_t
Ë0 && 
	`l£ek
(
f
,Ñe°¨èt, 
SEEK_SET
) < (off_t) 0) {

4277 (Ë
	`˛o£
(
f
);

4278 
	`îr‹
(451, "seek");

4279 
íd
;

4281 i‡(
ª°¨èt
 < 
°
.
°_size
) {

4282 i‡(
	`·runˇã
(
f
, 
ª°¨èt
) < 0) {

4283 (Ë
	`˛o£
(
f
);

4284 
	`îr‹
(451, "ftruncate");

4285 
íd
;

4287 #ifde‡
QUOTAS


4288 i‡(
ª°¨èt
 !
°
.
°_size
) {

4289 (Ë
	`quŸa_upd©e
(
NULL
, 0LL,

4290 (Ë(
ª°¨èt
 - 
°
.
°_size
),

4291 &
ovîÊow
);

4295 #ifde‡
QUOTAS


4296 i‡(
	`quŸa_upd©e
(&
quŸa
, 0LL, 0LL, &
ovîÊow
) == 0 &&

4297 (
ovîÊow
 > 0 || 
quŸa
.
fûes
 >
u£r_quŸa_fûes
 ||

4298 
quŸa
.
size
 > 
u£r_quŸa_size
 ||

4299 (
max_fûesize
 >(
off_t
) 0 &&

4300 (
max_fûesize
 = 
u£r_quŸa_size
 - 
quŸa
.
size
Ë< (
off_t
) 0))) {

4301 
ovîÊow
 = 1;

4302 (Ë
	`˛o£
(
f
);

4303 
a·îquŸa
;

4306 
	`›íd©a
();

4307 i‡(
x„rfd
 == -1) {

4308 (Ë
	`˛o£
(
f
);

4309 
íd
;

4311 
	`d‹ïly
();

4312 #ifde‡
WITH_TLS


4313 i‡(
d©a_¥Ÿe˘i⁄_Àvñ
 =
CPL_PRIVATE
) {

4314 
	`és_öô_d©a_£ssi⁄
(
x„rfd
, 
∑ssive
);

4317 
°©e_√eds_upd©e
 = 1;

4318 
	`£çro˚s¢ame
("pure-ftpd (UPLOAD)");

4319 
fûesize
 = 
ª°¨èt
;

4321 #ifde‡
FTPWHO


4322 i‡(
shm_d©a_cur
 !
NULL
) {

4323 c⁄° 
size_t
 
¶
 = 
	`°æí
(
«me
);

4325 
	`·pwho_lock
();

4326 
shm_d©a_cur
->
°©e
 = 
FTPWHO_STATE_UPLOAD
;

4327 
shm_d©a_cur
->
dow∆ﬂd_tŸÆ_size
 = (
off_t
) 0U;

4328 
shm_d©a_cur
->
dow∆ﬂd_cuºít_size
 = (
off_t
Ë
fûesize
;

4329 
shm_d©a_cur
->
ª°¨èt
 =Ñestartat;

4330 (Ë
	`time
(&
shm_d©a_cur
->
x„r_d©e
);

4331 i‡(
¶
 <  
shm_d©a_cur
->
fûíame
 - 1U) {

4333 
	`°r˝y
(
shm_d©a_cur
->
fûíame
, 
«me
);

4336 
	`°r˝y
(
shm_d©a_cur
->
fûíame
,

4337 &
«me
[
¶
 -  
shm_d©a_cur
->
fûíame
 + 1U]);

4339 
	`·pwho_u∆ock
();

4345 
°¨ãd
 = 
	`gë_u£c_time
();

4347 i‡(
	`ul_öô
(&
ulh™dÀr
, 
˛õ¡fd
, 
és_˙x
, 
x„rfd
, 
«me
, 
f
, 
és_d©a_˙x
,

4348 
ª°¨èt
, 
ty≥
 =1, 
thrŸéög_b™dwidth_ul
,

4349 
max_fûesize
) == 0) {

4350 
ªt
 = 
	`ul_£nd
(&
ulh™dÀr
);

4351 
	`ul_exô
(&
ulh™dÀr
);

4353 
ªt
 = -1;

4355 (Ë
	`˛o£
(
f
);

4356 
	`˛o£d©a
();

4360 #ifde‡
SHOW_REAL_DISK_SPACE


4361 i‡(
	`FSTATFS
(
f
, &
°©fsbuf
) == 0) {

4362 
•a˚
;

4364 
•a˚
 = (Ë
	`STATFS_BAVAIL
(
°©fsbuf
) *

4365 (Ë
	`STATFS_FRSIZE
(
°©fsbuf
);

4366 i‡(
•a˚
 > 524288.0) {

4367 
	`addª∂y
(0, 
MSG_SPACE_FREE_M
, 
•a˚
 / 1048576.0);

4369 
	`addª∂y
(0, 
MSG_SPACE_FREE_K
, 
•a˚
 / 1024.0);

4374 
u∂ﬂded
 +(Ë
ulh™dÀr
.
tŸÆ_u∂ﬂded
;

4376 
off_t
 
©omic_fûe_size
;

4377 
off_t
 
‹igöÆ_fûe_size
;

4378 
fûes_cou¡
;

4380 i‡(
ovîwrôe
 == 0) {

4381 
fûes_cou¡
 = 1;

4383 
fûes_cou¡
 = 0;

4385 i‡(
aut‹íame
 !0 && 
ª°¨èt
 =(
off_t
) 0) {

4386 i‡((
©omic_fûe_size
 = 
	`gë_fûe_size
(
©omic_fûe
)Ë< (
off_t
) 0) {

4387 
a·îquŸa
;

4389 i‡(
	`åyaut‹íame
(
©omic_fûe
, 
«me
, &
«me2
) != 0) {

4390 
	`îr‹
(553, 
MSG_RENAME_FAILURE
);

4391 
a·îquŸa
;

4393 #ifde‡
QUOTAS


4394 
	`ul_quŸa_upd©e
(
«me2
 ?Çame2 : 
«me
, 1, 
©omic_fûe_size
);

4396 
©omic_fûe
 = 
NULL
;

4398 } i‡(
©omic_fûe
 !
NULL
) {

4399 i‡((
©omic_fûe_size
 = 
	`gë_fûe_size
(
©omic_fûe
)Ë< (
off_t
) 0) {

4400 
a·îquŸa
;

4402 i‡((
‹igöÆ_fûe_size
 = 
	`gë_fûe_size
(
«me
)Ë< (
off_t
) 0 ||

4403 
ª°¨èt
 > 
‹igöÆ_fûe_size
) {

4404 
‹igöÆ_fûe_size
 = 
ª°¨èt
;

4406 i‡(
	`ª«me
(
©omic_fûe
, 
«me
) != 0) {

4407 
	`îr‹
(553, 
MSG_RENAME_FAILURE
);

4408 
a·îquŸa
;

4410 #ifde‡
QUOTAS


4411 
ovîÊow
 = 
ul_quŸa_upd©e


4412 (
«me
, 
fûes_cou¡
, 
©omic_fûe_size
 - 
‹igöÆ_fûe_size
);

4414 
©omic_fûe
 = 
NULL
;

4417 #ifde‡
QUOTAS


4418 
ovîÊow
 = 
ul_quŸa_upd©e


4419 (
«me
, 
fûes_cou¡
, 
ulh™dÀr
.
tŸÆ_u∂ﬂded
);

4423 
a·îquŸa
:

4424 i‡(
ovîÊow
 > 0) {

4425 
	`addª∂y
(552, 
MSG_QUOTA_EXCEEDED
, 
«me
);

4427 i‡(
ªt
 == 0) {

4428 
	`addª∂y_nof‹m©
(226, 
MSG_TRANSFER_SUCCESSFUL
);

4430 
	`addª∂y_nof‹m©
(226, 
MSG_ABORTED
);

4432 
	`di•œyøã
(
MSG_UPLOADED
, 
ulh™dÀr
.
tŸÆ_u∂ﬂded
, 
°¨ãd
,

4433 
«me2
 ?Çame2 : 
«me
, 1);

4435 
íd
:

4436 
ª°¨èt
 = (
off_t
) 0;

4437 i‡(
©omic_fûe
 !
NULL
) {

4438 
	`u∆ök
(
©omic_fûe
);

4439 
©omic_fûe
 = 
NULL
;

4441 
	}
}

4443 
	$domdtm
(c⁄° *
«me
)

4445 
°©
 
°
;

4446 
tm
 *
t
;

4448 i‡(!
«me
 || !*name) {

4449 
	`addª∂y_nof‹m©
(501, 
MSG_MISSING_ARG
);

4450 } i‡(
	`°©
(
«me
, &
°
)) {

4451 #ifde‡
DEBUG


4452 i‡(
debug
 != 0) {

4453 
	`addª∂y
(0, "¨g: %s, wd: %s", 
«me
, 
wd
);

4456 
	`addª∂y_nof‹m©
(550, 
MSG_STAT_FAILURE2
);

4457 } i‡(!
	`S_ISREG
(
°
.
°_mode
)) {

4458 
	`addª∂y_nof‹m©
(550, 
MSG_NOT_REGULAR_FILE
);

4460 
t
 = 
	`gmtime
((
time_t
 *Ë&(
°
.
°_mtime
));

4461 i‡(!
t
) {

4462 
	`addª∂y_nof‹m©
(451, 
MSG_GMTIME_FAILURE
);

4464 
	`addª∂y
(213, "%04d%02d%02d%02d%02d%02d",

4465 
t
->
tm_yór
 + 1900,Å->
tm_m⁄
 + 1,Å->
tm_mday
,

4466 
t
->
tm_hour
,Å->
tm_mö
,Å->
tm_£c
);

4469 
	}
}

4471 
	$dosize
(c⁄° *
«me
)

4473 
°©
 
°
;

4475 i‡(!
«me
 || !*name) {

4476 
	`addª∂y_nof‹m©
(501, 
MSG_MISSING_ARG
);

4477 } i‡(
	`°©
(
«me
, &
°
)) {

4478 #ifde‡
DEBUG


4479 i‡(
debug
 != 0) {

4480 
	`addª∂y
(0, "¨g: %s, wd: %s", 
«me
, 
wd
);

4483 
	`addª∂y_nof‹m©
(550, 
MSG_STAT_FAILURE2
);

4484 } i‡(!
	`S_ISREG
(
°
.
°_mode
)) {

4485 
	`addª∂y_nof‹m©
(550, 
MSG_NOT_REGULAR_FILE
);

4487 
	`addª∂y
(213, "%Œu", (Ë
°
.
°_size
);

4489 
	}
}

4491 
	$dŸy≥
(c⁄° *
¨g
)

4493 
ª∂ycode
 = 200;

4495 i‡(!
¨g
 || !*arg) {

4496 
	`addª∂y
(501, 
MSG_MISSING_ARG
 "\n" "A(scii) I(mage) L(ocal)");

4497 } i‡(
	`tﬁowî
((Ë*
¨g
) == 'a')

4498 
ty≥
 = 1;

4499 i‡(
	`tﬁowî
((Ë*
¨g
) == 'i')

4500 
ty≥
 = 2;

4501 i‡(
	`tﬁowî
((Ë*
¨g
) == 'l') {

4502 i‡(
¨g
[1] == '8') {

4503 
ty≥
 = 2;

4504 } i‡(
	`isdigô
((Ë
¨g
[1])) {

4505 
	`addª∂y_nof‹m©
(504, 
MSG_TYPE_8BIT_FAILURE
);

4507 
	`addª∂y_nof‹m©
(0, 
MSG_MISSING_ARG
);

4508 
ty≥
 = 2;

4511 
	`addª∂y
(504, 
MSG_TYPE_UNKNOWN
 ": %s", 
¨g
);

4514 
	`addª∂y
(0, 
MSG_TYPE_SUCCESS
 " %s", (
ty≥
 > 1) ? "8-bit binary" : "ASCII");

4515 
	}
}

4517 
	$do°ru
(c⁄° *
¨g
)

4519 i‡(
¨g
 =
NULL
 || !*arg) {

4520 
	`addª∂y_nof‹m©
(501, 
MSG_MISSING_ARG
);

4521 } i‡(
	`°rˇ£cmp
(
¨g
, "F")) {

4522 
	`addª∂y_nof‹m©
(504, 
MSG_STRU_FAILURE
);

4524 
	`addª∂y_nof‹m©
(200, "F OK");

4526 
	}
}

4528 
	$domode
(c⁄° *
¨g
)

4530 i‡(
¨g
 =
NULL
 || !*arg) {

4531 
	`addª∂y_nof‹m©
(501, 
MSG_MISSING_ARG
);

4532 } i‡(
	`°rˇ£cmp
(
¨g
, "S")) {

4533 
	`addª∂y_nof‹m©
(504, 
MSG_MODE_FAILURE
);

4535 
	`addª∂y_nof‹m©
(200, "S OK");

4537 
	}
}

4539 
	$d‹n‰
(*
«me
)

4541 
°©
 
°
;

4543 #i‚de‡
ANON_CAN_RENAME


4544 i‡(
gue°
 != 0) {

4545 
	`addª∂y_nof‹m©
(550, 
MSG_ANON_CANT_RENAME
);

4549 i‡(
dißŒow_ª«me
 != 0) {

4550 
	`addª∂y_nof‹m©
(550, 
MSG_RENAME_FAILURE
);

4553 i‡(
	`check«meßnôy
(
«me
, 
dŸ_wrôe_ok
) != 0) {

4554 
	`addª∂y
(553, 
MSG_SANITY_FILE_FAILURE
, 
«me
);

4557 i‡((
	`l°©
(
«me
, &
°
)) == 0) {

4558 i‡(
ª«me‰om
 !
NULL
) {

4559 
	`addª∂y_nof‹m©
(0, 
MSG_RENAME_ABORT
);

4560 (Ë
	`‰ì
(
ª«me‰om
);

4562 i‡((
ª«me‰om
 = 
	`°rdup
(
«me
)Ë=
NULL
) {

4563 
	`dõ_mem
();

4565 
	`addª∂y_nof‹m©
(350, 
MSG_RENAME_RNFR_SUCCESS
);

4567 
	`addª∂y_nof‹m©
(550, 
MSG_FILE_DOESNT_EXIST
);

4569 
	}
}

4571 
	$d‹¡o
(*
«me
)

4573 #ifde‡
QUOTAS


4574 
off_t
 
sour˚_fûe_size
 = (off_t) -1;

4575 
off_t
 
èrgë_fûe_size
 = (off_t) -1;

4576 
fûes_cou¡
 = 0;

4577 
byãs
 = 0LL;

4580 #i‚de‡
ANON_CAN_RENAME


4581 i‡(
gue°
 != 0) {

4582 
	`addª∂y_nof‹m©
(550, 
MSG_ANON_CANT_RENAME
);

4583 
bye
;

4586 i‡(
ª«me‰om
 =
NULL
) {

4587 
	`addª∂y_nof‹m©
(503, 
MSG_RENAME_NORNFR
);

4588 
bye
;

4590 i‡(
	`check«meßnôy
(
«me
, 
dŸ_wrôe_ok
) != 0) {

4591 
	`addª∂y
(553, 
MSG_SANITY_FILE_FAILURE
, 
«me
);

4594 #ifde‡
QUOTAS


4595 i‡(
	`hasquŸa
() == 0) {

4596 
°©
 
°_sour˚
, 
°_èrgë
;

4598 i‡(
	`°©
(
ª«me‰om
, &
°_sour˚
) != 0) {

4599 
	`addª∂y_nof‹m©
(550, 
MSG_RENAME_FAILURE
);

4600 
bye
;

4602 
sour˚_fûe_size
 = 
°_sour˚
.
°_size
;

4603 i‡(
	`°©
(
«me
, &
°_èrgë
) != 0) {

4604 i‡(
î∫o
 =
ENOENT
) {

4605 
èrgë_fûe_size
 = (
off_t
) -1;

4607 
	`addª∂y_nof‹m©
(550, 
MSG_RENAME_FAILURE
);

4608 
bye
;

4610 } i‡(
°_sour˚
.
°_öo
 =
°_èrgë
.st_ino &&

4611 
°_sour˚
.
°_dev
 =
°_èrgë
.st_dev) {

4612 
	`addª∂y_nof‹m©
(250, 
MSG_RENAME_SUCCESS
);

4613 
bye
;

4615 
èrgë_fûe_size
 = 
°_èrgë
.
°_size
;

4617 i‡(
èrgë_fûe_size
 >(
off_t
) 0) {

4618 
byãs
 = - (Ë
èrgë_fûe_size
;

4619 
fûes_cou¡
 = -1;

4620 (Ë
	`quŸa_upd©e
(
NULL
, 
fûes_cou¡
, 
byãs
, NULL);

4622 
byãs
 = (
off_t
) 0;

4626 i‡(
	`ª«me
(
ª«me‰om
, 
«me
) < 0) {

4627 
	`îr‹
(451, 
MSG_RENAME_FAILURE
);

4628 #ifde‡
QUOTAS


4629 (Ë
	`quŸa_upd©e
(
NULL
, -
fûes_cou¡
, -
byãs
, NULL);

4632 
	`addª∂y_nof‹m©
(250, 
MSG_RENAME_SUCCESS
);

4633 
	`logfûe
(
LOG_NOTICE
, 
MSG_RENAME_SUCCESS
 ": [%s]->[%s]",

4634 
ª«me‰om
, 
«me
);

4636 
bye
:

4637 (Ë
	`‰ì
(
ª«me‰om
);

4638 
ª«me‰om
 = 
NULL
;

4639 
	}
}

4641 #i‚de‡
MINIMAL


4642 
	$do›ts
(*
¨gs
)

4644 *
cmd›ts
;

4646 i‡((
cmd›ts
 = 
	`°rchr
(
¨gs
, ' ')Ë!
NULL
) {

4647 
cmd›ts
++;

4648 (Ë
cmd›ts
;

4650 #ifde‡
WITH_RFC2640


4651 i‡(
	`°∫ˇ£cmp
("utf8 ", 
¨gs
, 5) == 0 ||

4652 
	`°∫ˇ£cmp
("utf-8 ", 
¨gs
, 6) == 0) {

4653 i‡(
cmd›ts
 =
NULL
 || *cmdopts == 0) {

4654 
	`addª∂y_nof‹m©
(501, "OPTS UTF8: " 
MSG_MISSING_ARG
);

4655 } i‡(
	`°∫ˇ£cmp
(
cmd›ts
, "on",  "on" - 1U) == 0) {

4656 
utf8
 = 1;

4657 
	`addª∂y_nof‹m©
(200, "OK, UTF-8Énabled");

4658 } i‡(
	`°∫ˇ£cmp
(
cmd›ts
, "off",  "off" - 1U) == 0 &&

4659 
	`°rˇ£cmp
(
ch¨£t_˛õ¡
, "utf-8") != 0) {

4660 
utf8
 = 0;

4661 
	`addª∂y_nof‹m©
(200, "OK, UTF-8 disabled");

4663 
	`addª∂y_nof‹m©
(502, 
MSG_UNKNOWN_COMMAND
);

4668 i‡(
	`°∫ˇ£cmp
("ml° ", 
¨gs
, 5) == 0) {

4669 
	`addª∂y_nof‹m©
(200, " MLST OPTS "

4674 
	`addª∂y_nof‹m©
(504, 
MSG_UNKNOWN_COMMAND
);

4675 
	}
}

4678 
	$îr‹
(
n
, c⁄° *
msg
)

4680 c⁄° *
e
 = 
	`°ªº‹
(
î∫o
);

4682 
	`logfûe
(
LOG_ERR
, "%s: %s", 
msg
, 
e
);

4683 
	`addª∂y
(
n
, "%s: %s", 
msg
, 
e
);

4684 
	}
}

4686 
	$fixlimôs
()

4688 #ifde‡
HAVE_SETRLIMIT


4689 
æimô
 
lim
;

4691 
lim
.
æim_max
 =Üim.
æim_cur
 = 
MAX_CPU_TIME
;

4692 
	`£ålimô
(
RLIMIT_CPU
, &
lim
);

4693 
lim
.
æim_max
 =Üim.
æim_cur
 = 
MAX_DATA_SIZE
;

4694 
	`£ålimô
(
RLIMIT_DATA
, &
lim
);

4695 #i‚de‡
DEBUG


4696 
lim
.
æim_max
 =Üim.
æim_cur
 = 0;

4697 
	`£ålimô
(
RLIMIT_CORE
, &
lim
);

4700 
	}
}

4702 #ifde‡
COOKIE


4703 
	$f‹tu√
()

4705 
fd
;

4706 *
buf
;

4707 *
buÂ¡
;

4708 *
bu„nd
;

4709 
°©
 
°
;

4710 
off_t
 
gl
;

4711 *
f‹tu√≤t
;

4712 
f‹tu√
[2048];

4714 i‡(
f‹tu√s_fûe
 =
NULL
 || *fortunes_file == 0) {

4717 i‡((
fd
 = 
	`›í
(
f‹tu√s_fûe
, 
O_RDONLY
)) == -1) {

4718 
	`logfûe
(
LOG_ERR
, 
MSG_OPEN_FAILURE
, 
f‹tu√s_fûe
);

4721 i‡(
	`f°©
(
fd
, &
°
) < 0 ||

4722 (((
S_IRUSR
 | 
S_IRGRP
 | 
S_IROTH
Ë& 
°
.
°_mode
) !=

4723 (
S_IRUSR
 | 
S_IRGRP
 | 
S_IROTH
)) ||

4724 !(
	`S_ISREG
(
°
.
°_mode
Ë|| 
	`S_ISLNK
(°.°_mode)Ë|| st.
°_size
 < 2 ||

4725 (
buf
 = 
	`mm≠
(
NULL
, (
size_t
Ë
°
.
°_size
,

4726 
PROT_READ
, 
MAP_FILE
 | 
MAP_SHARED
, 
fd
,

4727 (
off_t
Ë0)Ë=(*Ë
MAP_FAILED
) {

4728 (Ë
	`˛o£
(
fd
);

4729 
	`logfûe
(
LOG_ERR
, 
MSG_OPEN_FAILURE
, 
f‹tu√s_fûe
);

4732 #ifde‡
HAVE_RANDOM


4733 
gl
 = (
off_t
Ë(
	`øndom
(Ë% (
°
.
°_size
 - 1U));

4735 
gl
 = (
off_t
Ë(
	`ønd
(Ë% (
°
.
°_size
 - 1U));

4737 
buÂ¡
 = 
buf
 + 
gl
;

4738 
bu„nd
 = 
buf
 + 
°
.
°_size
;

4739 
buÂ¡
 !
buf
) {

4740 i‡(
buÂ¡
[0] == '\n') {

4741 i‡(&
buÂ¡
[-1] !
buf
 && bufpnt[-1] == '%') {

4742 i‡(&
buÂ¡
[-2] !
buf
 && bufpnt[-2] == '\n') {

4747 
buÂ¡
--;

4749 i‡(
buÂ¡
 !
buf
) {

4750 
buÂ¡
 !
bu„nd
 && *bufpnt == '\n') {

4751 
buÂ¡
++;

4754 
f‹tu√≤t
 = 
f‹tu√
;

4755 *
buÂ¡
 !0 && buÂ¡ !
bu„nd
 &&

4756 
f‹tu√≤t
 !&
f‹tu√
[ fortune - 1U]) {

4757 i‡(
buÂ¡
[0] == '\n') {

4758 i‡(&
buÂ¡
[1] !
bu„nd
 && bufpnt[1] == '%') {

4759 i‡(&
buÂ¡
[2] !
bu„nd
 && bufpnt[2] == '\n') {

4764 *
f‹tu√≤t
++ = *
buÂ¡
++;

4766 i‡(
f‹tu√≤t
 =
f‹tu√
) {

4767 
bye
;

4770 
f‹tu√≤t
--;

4771 } 
f‹tu√≤t
 !
f‹tu√
 && (*fortunepnt == '\n' ||

4772 
	`is•a˚
((Ë*
f‹tu√≤t
)));

4773 
f‹tu√≤t
[1] = 0;

4774 
f‹tu√≤t
 = 
f‹tu√
;

4775 *
f‹tu√≤t
 == '\n') {

4776 
f‹tu√≤t
++;

4778 i‡(*
f‹tu√≤t
 == 0) {

4779 
bye
;

4781 
	`addª∂y
(220, "%s", 
f‹tu√≤t
);

4782 
bye
:

4783 (Ë
	`munm≠
(
buf
, 
°
.
°_size
);

4784 (Ë
	`˛o£
(
fd
);

4787 
	}
}

4790 #i‡!
deföed
(
NO_STANDALONE
Ë&& !deföed(
NO_INETD
)

4791 
	$check_°™dÆ⁄e
()

4793 
sockÀn_t
 
socksize
 = (sockÀn_tË 
˘æc⁄n
;

4794 i‡(
	`gësock«me
(0, (
sockaddr
 *Ë&
˘æc⁄n
, &
socksize
) != 0) {

4795 
˛õ¡fd
 = -1;

4798 i‡(
	`dup2
(0, 1) == -1) {

4799 
	`_EXIT
(
EXIT_FAILURE
);

4801 
˛õ¡fd
 = 0;

4804 
	}
}

4807 
	$£t_sig«ls_˛õ¡
()

4809 
sig£t_t
 
sigs
;

4810 
siga˘i⁄
 
ß
;

4812 
	`sigfûl£t
(&
sigs
);

4813 
	`sigem±y£t
(&
ß
.
ß_mask
);

4815 
ß
.
ß_Êags
 = 
SA_RESTART
;

4817 
ß
.
ß_h™dÀr
 = 
SIG_IGN
;

4818 (Ë
	`siga˘i⁄
(
SIGPIPE
, &
ß
, 
NULL
);

4819 (Ë
	`siga˘i⁄
(
SIGURG
, &
ß
, 
NULL
);

4820 #ifde‡
SIGIO


4821 (Ë
	`siga˘i⁄
(
SIGIO
, &
ß
, 
NULL
);

4824 
ß
.
ß_h™dÀr
 = 
SIG_DFL
;

4825 
	`sigdñ£t
(&
sigs
, 
SIGCHLD
);

4826 (Ë
	`siga˘i⁄
(
SIGCHLD
, &
ß
, 
NULL
);

4827 #ifde‡
SIGFPE


4828 (Ë
	`siga˘i⁄
(
SIGFPE
, &
ß
, 
NULL
);

4829 
	`sigdñ£t
(&
sigs
, 
SIGFPE
);

4831 
ß
.
ß_Êags
 = 0;

4833 
ß
.
ß_h™dÀr
 = 
sigÆ¨m
;

4834 
	`sigdñ£t
(&
sigs
, 
SIGALRM
);

4835 (Ë
	`siga˘i⁄
(
SIGALRM
, &
ß
, 
NULL
);

4837 
ß
.
ß_h™dÀr
 = 
sigãrm_˛õ¡
;

4838 
	`sigdñ£t
(&
sigs
, 
SIGTERM
);

4839 (Ë
	`siga˘i⁄
(
SIGTERM
, &
ß
, 
NULL
);

4840 
	`sigdñ£t
(&
sigs
, 
SIGHUP
);

4841 (Ë
	`siga˘i⁄
(
SIGHUP
, &
ß
, 
NULL
);

4842 
	`sigdñ£t
(&
sigs
, 
SIGQUIT
);

4843 (Ë
	`siga˘i⁄
(
SIGQUIT
, &
ß
, 
NULL
);

4844 
	`sigdñ£t
(&
sigs
, 
SIGINT
);

4845 (Ë
	`siga˘i⁄
(
SIGINT
, &
ß
, 
NULL
);

4846 #ifde‡
SIGXCPU


4847 
	`sigdñ£t
(&
sigs
, 
SIGXCPU
);

4848 (Ë
	`siga˘i⁄
(
SIGXCPU
, &
ß
, 
NULL
);

4850 (Ë
	`sig¥ocmask
(
SIG_SETMASK
, &
sigs
, 
NULL
);

4851 
	}
}

4853 
	$£t_sig«ls
()

4855 #i‚de‡
NO_STANDALONE


4856 
sig£t_t
 
sigs
;

4857 
siga˘i⁄
 
ß
;

4859 
	`sigfûl£t
(&
sigs
);

4860 
	`sigem±y£t
(&
ß
.
ß_mask
);

4862 
ß
.
ß_Êags
 = 
SA_RESTART
;

4863 
ß
.
ß_h™dÀr
 = 
sigchûd
;

4864 
	`sigdñ£t
(&
sigs
, 
SIGCHLD
);

4865 (Ë
	`siga˘i⁄
(
SIGCHLD
, &
ß
, 
NULL
);

4867 
ß
.
ß_h™dÀr
 = 
SIG_IGN
;

4868 (Ë
	`siga˘i⁄
(
SIGPIPE
, &
ß
, 
NULL
);

4869 (Ë
	`siga˘i⁄
(
SIGALRM
, &
ß
, 
NULL
);

4870 (Ë
	`siga˘i⁄
(
SIGURG
, &
ß
, 
NULL
);

4871 #ifde‡
SIGIO


4872 (Ë
	`siga˘i⁄
(
SIGIO
, &
ß
, 
NULL
);

4875 
ß
.
ß_Êags
 = 0;

4876 
ß
.
ß_h™dÀr
 = 
sigãrm
;

4877 
	`sigdñ£t
(&
sigs
, 
SIGTERM
);

4878 (Ë
	`siga˘i⁄
(
SIGTERM
, &
ß
, 
NULL
);

4879 
	`sigdñ£t
(&
sigs
, 
SIGHUP
);

4880 (Ë
	`siga˘i⁄
(
SIGHUP
, &
ß
, 
NULL
);

4881 
	`sigdñ£t
(&
sigs
, 
SIGQUIT
);

4882 (Ë
	`siga˘i⁄
(
SIGQUIT
, &
ß
, 
NULL
);

4883 
	`sigdñ£t
(&
sigs
, 
SIGINT
);

4884 (Ë
	`siga˘i⁄
(
SIGINT
, &
ß
, 
NULL
);

4885 #ifde‡
SIGXCPU


4886 
	`sigdñ£t
(&
sigs
, 
SIGXCPU
);

4887 (Ë
	`siga˘i⁄
(
SIGXCPU
, &
ß
, 
NULL
);

4889 (Ë
	`sig¥ocmask
(
SIG_SETMASK
, &
sigs
, 
NULL
);

4891 
	}
}

4893 
	$dns_ßnôize
(*
z
)

4895 *
z
 != 0) {

4896 i‡((*
z
 >= 'a' && *z <= 'z') ||

4897 (*
z
 >= '0' && *z <= '9') ||

4898 *
z
 == '.' || *z == '-' || *z == ':' ||

4899 (*
z
 >= 'A' && *z <= 'Z')) {

4902 *
z
 = '_';

4904 
z
++;

4906 
	}
}

4908 
	$fûl_©omic_¥efix
()

4910 
tmp_©omic_¥efix
[
MAXPATHLEN
];

4912 
	`¢¥ötf
(
tmp_©omic_¥efix
, Åmp_atomic_prefix,

4914 
ATOMIC_PREFIX_PREFIX
,

4915 (Ë
£ssi⁄_°¨t_time
,

4916 (Ë
£rvîp‹t
,

4917 (Ë
	`gëpid
(),

4918 
	`zønd
());

4919 i‡((
©omic_¥efix
 = 
	`°rdup
(
tmp_©omic_¥efix
)Ë=
NULL
) {

4920 
	`dõ_mem
();

4922 
	}
}

4924 #i‚de‡
HAVE_RANDOM_DEV


4925 
	$£ed_ﬁd_∫g
()

4927 
timevÆ
 
tv
;

4928 
	`gëtimeofday
(&
tv
, 
NULL
);

4929 c⁄° 
£ed
 = ()

4930 (((Ë
	`gëpid
(Ë* 131072LË^ 
tv
->
tv_£c
 ^ (
tv_u£c
 * 4096L));

4932 #i‡
	`deföed
(
HAVE_RANDOM
)

4933 
	`§™dom
(
£ed
);

4935 
	`§™d
(
£ed
);

4937 
	}
}

4940 
	$doô
()

4942 
sockÀn_t
 
socksize
;

4943 
u£rs
 = 0U;

4944 
di•œy_b™√r
 = 1;

4946 
	`˛õ¡_öô_ª∂y_buf
();

4947 
£ssi⁄_°¨t_time
 = 
	`time
(
NULL
);

4948 
	`fixlimôs
();

4949 #ifde‡
F_SETOWN


4950 
	`f˙é
(
˛õ¡fd
, 
F_SETOWN
, 
	`gëpid
());

4952 
	`£t_sig«ls_˛õ¡
();

4953 #i‚de‡
HAVE_RANDOM_DEV


4954 
	`£ed_ﬁd_∫g
();

4956 
	`Æt_¨c4øndom_°ú
();

4957 (Ë
	`umask
((
mode_t
) 0);

4958 
socksize
 = (
sockÀn_t
Ë 
˘æc⁄n
;

4959 i‡(
	`gësock«me
(
˛õ¡fd
, (
sockaddr
 *Ë&
˘æc⁄n
, &
socksize
) != 0) {

4960 
	`dõ
(421, 
LOG_ERR
, 
MSG_NO_SUPERSERVER
);

4962 
	`fourösix
(&
˘æc⁄n
);

4963 i‡(
	`checkvÆidaddr
(&
˘æc⁄n
) == 0) {

4964 
	`dõ
(425, 
LOG_ERR
, 
MSG_INVALID_IP
);

4966 i‡(
	`STORAGE_FAMILY
(
˘æc⁄n
Ë=
AF_INET6
) {

4967 
£rvîp‹t
 = 
	`¡ohs
((
ö_p‹t_t
Ë
	`STORAGE_PORT6
(
˘æc⁄n
));

4969 
£rvîp‹t
 = 
	`¡ohs
((
ö_p‹t_t
Ë
	`STORAGE_PORT
(
˘æc⁄n
));

4971 i‡(
åu°edù
 !
NULL
 && 
	`addrcmp
(&
˘æc⁄n
,Årustedip) != 0) {

4972 
™⁄_⁄ly
 = 1;

4974 
socksize
 = (
sockÀn_t
Ë 
≥î
;

4975 i‡(
	`gë≥î«me
(
˛õ¡fd
, (
sockaddr
 *Ë&
≥î
, &
socksize
)) {

4976 
	`dõ
(421, 
LOG_ERR
, 
MSG_GETPEERNAME
 ": %s" , 
	`°ªº‹
(
î∫o
));

4978 
	`fourösix
(&
≥î
);

4979 i‡(
	`checkvÆidaddr
(&
≥î
) == 0) {

4980 
	`dõ
(425, 
LOG_ERR
, 
MSG_INVALID_IP
);

4982 #i‚de‡
DONT_LOG_IP


4984 
ói
;

4986 i‡((
ói
 = 
gë«meöfo


4987 ((
sockaddr
 *Ë&
≥î
, 
	`STORAGE_LEN
’ìr), 
ho°
,

4988  
ho°
, 
NULL
, (
size_t
) 0U,

4989 
ªsﬁve_ho°«mes
 !0 ? 0 : 
NI_NUMERICHOST
)) == 0) {

4992 i‡(
ªsﬁve_ho°«mes
 != 0 &&

4993 
gë«meöfo


4994 ((
sockaddr
 *Ë&
≥î
, 
	`STORAGE_LEN
’ìr), 
ho°
,

4995  
ho°
, 
NULL
, (
size_t
Ë0U, 
NI_NUMERICHOST
) == 0) {

4998 
	`dõ
(425, 
LOG_ERR
, 
MSG_INVALID_IP
);

5001 #i‚de‡
DONT_LOG_IP


5002 
	`dns_ßnôize
(
ho°
);

5004 *
ho°
 = '?';

5005 
ho°
[1] = 0;

5007 
	`logfûe
(
LOG_INFO
, 
MSG_NEW_CONNECTION
, 
ho°
);

5009 
ª∂ycode
 = 220;

5011 
	`fûl_©omic_¥efix
();

5013 i‡(
maxu£rs
 > 0U) {

5014 #ifde‡
NO_STANDALONE


5015 
u£rs
 = 
	`d´m⁄s
(
£rvîp‹t
);

5017 #ifde‡
NO_INETD


5018 
u£rs
 = 
nb_chûdªn
;

5020 i‡(
°™dÆ⁄e
) {

5021 
u£rs
 = 
nb_chûdªn
;

5023 
u£rs
 = 
	`d´m⁄s
(
£rvîp‹t
);

5027 i‡(
u£rs
 > 
maxu£rs
) {

5028 
	`addª∂y
(421, 
MSG_MAX_USERS
, (Ë
maxu£rs
);

5029 
	`d‹ïly
();

5030 
	`_EXIT
(1);

5034 #ifde‡
FTPWHO


5036 
	`·pwho_öôwho
();

5037 i‡(
shm_d©a_cur
 !
NULL
) {

5038 
	`·pwho_lock
();

5039 
shm_d©a_cur
->
pid
 = 
	`gëpid
();

5040 
shm_d©a_cur
->
°©e
 = 
FTPWHO_STATE_IDLE
;

5041 
shm_d©a_cur
->
addr
 = 
≥î
;

5042 
shm_d©a_cur
->
loˇl_addr
 = 
˘æc⁄n
;

5043 
shm_d©a_cur
->
d©e
 = 
£ssi⁄_°¨t_time
;

5044 
shm_d©a_cur
->
x„r_d©e
 = shm_d©a_cur->
d©e
;

5045 (
shm_d©a_cur
->
accou¡
)[0] = '?';

5046 (
shm_d©a_cur
->
accou¡
)[1] = 0;

5047 
shm_d©a_cur
->
dow∆ﬂd_tŸÆ_size
 = (
off_t
) 0;

5048 
shm_d©a_cur
->
dow∆ﬂd_cuºít_size
 = (
off_t
) 0;

5049 
	`·pwho_u∆ock
();

5054 #ifde‡
WITH_ALTLOG


5055 i‡(
Æéog_f‹m©
 !
ALTLOG_NONE
) {

5056 i‡(
Æéog_f‹m©
 =
ALTLOG_W3C
) {

5057 i‡((
Æéog_fd
 = 
	`›í
(
Æéog_fûíame
,

5058 
O_CREAT
 | 
O_WRONLY
 | 
O_NOFOLLOW
 | 
O_EXCL
,

5059 (
mode_t
) 0600)) != -1) {

5060 
	`Æéog_wrôe_w3c_hódî
();

5061 } i‡(
î∫o
 =
EEXIST
) {

5062 
Æéog_fd
 = 
	`›í
(
Æéog_fûíame
, 
O_WRONLY
 | 
O_NOFOLLOW
);

5065 
Æéog_fd
 = 
	`›í
(
Æéog_fûíame
,

5066 
O_CREAT
 | 
O_WRONLY
 | 
O_NOFOLLOW
, (
mode_t
) 0600);

5068 i‡(
Æéog_fd
 == -1) {

5069 
	`logfûe
(
LOG_ERR
, "Æéog %s: %s", 
Æéog_fûíame
, 
	`°ªº‹
(
î∫o
));

5075 
lﬂd_
[2];

5077 i‡(
	`gëlﬂdavg
(
lﬂd_
, Üoad_ / Üoad_[0]) < 0) {

5078 
lﬂd
 = 0.0;

5080 
lﬂd
 = 
lﬂd_
[1];

5083 #i‚de‡
NON_ROOT_FTP


5084 
wd
[0] = '/';

5085 
wd
[1] = 0;

5086 i‡(
	`chdú
(
wd
)) {

5087 
	`_EXIT
(
EXIT_FAILURE
);

5091 
foddî
;

5092 #ifde‡
IPTOS_LOWDELAY


5093 
foddî
 = 
IPTOS_LOWDELAY
;

5094 
	`£tsock›t
(
˛õ¡fd
, 
SOL_IP
, 
IP_TOS
, (*Ë&
foddî
,  fodder);

5096 #ifde‡
SO_OOBINLINE


5097 
foddî
 = 1;

5098 
	`£tsock›t
(
˛õ¡fd
, 
SOL_SOCKET
, 
SO_OOBINLINE
,

5099 (*Ë&
foddî
,  fodder);

5101 #ifde‡
TCP_NODELAY


5102 
foddî
 = 1;

5103 
	`£tsock›t
(
˛õ¡fd
, 
IPPROTO_TCP
, 
TCP_NODELAY
,

5104 (*Ë&
foddî
,  fodder);

5106 
	`kì∑live
(
˛õ¡fd
, 0);

5108 #ifde‡
HAVE_SRANDOMDEV


5109 
	`§™domdev
();

5110 #ñi‡
	`deföed
 (
HAVE_RANDOM
)

5111 
	`§™dom
((Ë
£ssi⁄_°¨t_time
 ^ (Ë
	`zønd
());

5113 
	`§™d
((Ë
£ssi⁄_°¨t_time
 ^ (Ë
	`zønd
());

5115 #ifde‡
COOKIE


5116 i‡(
	`f‹tu√
() > 0) {

5117 
di•œy_b™√r
 = 0;

5120 i‡(
di•œy_b™√r
) {

5121 #ifde‡
BORING_MODE


5122 
	`addª∂y_nof‹m©
(0, 
MSG_WELCOME_TO
 " Pure-FTPd.");

5124 #ifde‡
DEBUG


5125 
	`addª∂y_nof‹m©
(0, "--------- " 
MSG_WELCOME_TO


5126 " Puª-FTPd " 
PACKAGE_VERSION
 
VERSION_PRIVSEP
 
VERSION_TLS
 " ----------");

5128 
	`addª∂y_nof‹m©
(0, "--------- " 
MSG_WELCOME_TO


5129 " Puª-FTPd" 
VERSION_PRIVSEP
 
VERSION_TLS
 " ----------");

5132 i‡(
u£rs
 > 0U) {

5133 
	`addª∂y
(0, 
MSG_NB_USERS
, 
u£rs
, 
maxu£rs
);

5136 
tm
 *
t
;

5138 i‡((
t
 = 
	`loˇ…ime
(&
£ssi⁄_°¨t_time
)Ë!
NULL
) {

5139 
	`addª∂y
(220, 
MSG_WELCOME_TIME
,

5140 
t
->
tm_hour
,Å->
tm_mö
, (Ë
£rvîp‹t
);

5144 i‡(
™⁄_⁄ly
 > 0) {

5145 
	`addª∂y_nof‹m©
(220, 
MSG_ANONYMOUS_FTP_ONLY
);

5146 } i‡(
™⁄_⁄ly
 < 0) {

5147 
	`addª∂y_nof‹m©
(220, 
MSG_NO_ANONYMOUS_LOGIN
);

5149 i‡(
Ælowfxp
 == 2) {

5150 
	`addª∂y_nof‹m©
(220, 
MSG_FXP_SUPPORT
);

5152 #ifde‡
RATIOS


5153 i‡(
øtio_u∂ﬂd
 > 0) {

5154 i‡(
øtio_f‹_n⁄_™⁄
 != 0) {

5155 
	`addª∂y_nof‹m©
(0, 
MSG_RATIOS_EVERYONE
);

5157 
	`addª∂y_nof‹m©
(0, 
MSG_RATIOS_ANONYMOUS
);

5159 
	`addª∂y
(0, 
MSG_RATIOS_RULE
, 
øtio_dow∆ﬂd
, 
øtio_u∂ﬂd
);

5162 i‡(
di•œy_b™√r
) {

5163 i‡(
v6ªady
 !0 && 
	`STORAGE_FAMILY
(
≥î
Ë!
AF_INET6
) {

5164 
	`addª∂y
(0, 
MSG_IPV6_OK
);

5166 i‡(
idÀtime
 >= 120UL) {

5167 
	`addª∂y
(220, 
MSG_INFO_IDLE_M
, 
idÀtime
 / 60UL);

5169 
	`addª∂y
(220, 
MSG_INFO_IDLE_S
, (Ë
idÀtime
);

5172 
ˇndow∆ﬂd
 = (sig√d Ë((
maxlﬂd
 <0.0Ë|| (
lﬂd
 < maxload));

5174 i‡(
f‹˚_∑ssive_ù_s
 !
NULL
) {

5175 
addröfo
 
höts
, *
ªs
;

5177 
	`mem£t
(&
höts
, 0,  hints);

5178 
höts
.
ai_Ámûy
 = 
AF_INET
;

5179 
höts
.
ai_addr
 = 
NULL
;

5180 i‡(
	`gëaddröfo
(
f‹˚_∑ssive_ù_s
, 
NULL
, &
höts
, &
ªs
) != 0 ||

5181 
ªs
->
ai_Ámûy
 !
AF_INET
 ||

5182 
ªs
->
ai_addæí
 >  
f‹˚_∑ssive_ù
) {

5183 
	`dõ
(421, 
LOG_ERR
, 
MSG_ILLEGAL_FORCE_PASSIVE
);

5185 
	`mem˝y
(&
f‹˚_∑ssive_ù
, 
ªs
->
ai_addr
,Ñes->
ai_addæí
);

5186 
	`‰ìaddröfo
(
ªs
);

5189 #i‚de‡
WITHOUT_PRIVSEP


5190 i‡(
	`¥iv£p_öô
() != 0) {

5191 
	`dõ
(421, 
LOG_ERR
, "privsep_init");

5195 
	`∑r£r
();

5197 
	`addª∂y
(0, 
MSG_LOGOUT
);

5198 
	`logfûe
(
LOG_INFO
, 
MSG_LOGOUT
);

5199 
	`d‹ïly
();

5200 #ifde‡
WITH_BONJOUR


5201 
	`ª‰eshM™agî
();

5203 
	}
}

5205 
	$check_ùv6_suµ‹t
()

5207 #i‚de‡
OLD_IP_STACK


5208 
p
;

5210 i‡((
p
 = 
	`sockë
(
PF_INET6
, 
SOCK_STREAM
, 
IPPROTO_TCP
)) != -1) {

5211 (Ë
	`˛o£
(
p
);

5212 
v6ªady
++;

5215 
	}
}

5217 #i‚de‡
NO_STANDALONE


5218 
	$upd©ïidfûe
()

5220 
fd
;

5221 
buf
[42];

5222 
size_t
 
buf_Àn
;

5224 i‡(
	`SNCHECK
(
	`¢¥ötf
(
buf
,  buf, "%lu\n",

5225 (Ë
	`gëpid
()),  
buf
)) {

5228 i‡(
	`u∆ök
(
pid_fûe
Ë!0 && 
î∫o
 !
ENOENT
) {

5231 i‡((
fd
 = 
	`›í
(
pid_fûe
, 
O_CREAT
 | 
O_WRONLY
 | 
O_TRUNC
 |

5232 
O_NOFOLLOW
, (
mode_t
) 0644)) == -1) {

5235 
buf_Àn
 = 
	`°æí
(
buf
);

5236 i‡(
	`ß„_wrôe
(
fd
, 
buf
, 
buf_Àn
, -1Ë!(
ssize_t
) buf_len) {

5237 (Ë
	`·runˇã
(
fd
, (
off_t
) 0);

5239 (Ë
	`˛o£
(
fd
);

5240 
	}
}

5242 #i‚de‡
NO_STANDALONE


5243 
	$˛o£desc_Æl
(c⁄° 
˛o£°dö
)

5245 
foddî
;

5247 i‡(
˛o£°dö
 != 0) {

5248 (Ë
	`˛o£
(0);

5249 i‡((
foddî
 = 
	`›í
("/dev/nuŒ", 
O_RDONLY
)) == -1) {

5252 (Ë
	`dup2
(
foddî
, 0);

5253 i‡(
foddî
 > 0) {

5254 (Ë
	`˛o£
(
foddî
);

5257 i‡((
foddî
 = 
	`›í
("/dev/nuŒ", 
O_WRONLY
)) == -1) {

5260 (Ë
	`dup2
(
foddî
, 1);

5261 (Ë
	`dup2
(1, 2);

5262 i‡(
foddî
 > 2) {

5263 (Ë
	`˛o£
(
foddî
);

5267 
	}
}

5269 
	$dod´m⁄ize
()

5271 
pid_t
 
chûd
;

5272 
i
;

5275 i‡(
d´m⁄ize
 != 0) {

5276 i‡((
chûd
 = 
	`f‹k
()Ë=(
pid_t
) -1) {

5277 
	`≥º‹
(
MSG_STANDALONE_FAILED
 " - fork");

5278 
	`logfûe
(
LOG_ERR
, 
MSG_STANDALONE_FAILED
 ": [f‹k: %s]", 
	`°ªº‹
(
î∫o
));

5280 } i‡(
chûd
 !(
pid_t
) 0) {

5281 
	`_EXIT
(
EXIT_SUCCESS
);

5283 i‡(
	`£tsid
(Ë=(
pid_t
) -1) {

5284 
	`≥º‹
(
MSG_STANDALONE_FAILED
 " - setsid");

5286 #i‚de‡
NON_ROOT_FTP


5287 i‡(
	`chdú
("/") != 0) {

5288 
	`≥º‹
("chdir");

5289 
	`_EXIT
(
EXIT_FAILURE
);

5292 
i
 = 
	`›í_max
();

5294 i‡(
	`ißây
((Ë
i
)) {

5295 (Ë
	`˛o£
((Ë
i
);

5297 
i
--;

5298 } 
i
 > 2U);

5299 i‡(
	`˛o£desc_Æl
(1) != 0) {

5300 
	`≥º‹
(
MSG_STANDALONE_FAILED
 " - /dev/null duplication");

5301 
	`_EXIT
(
EXIT_FAILURE
);

5304 
	}
}

5307 
	$ac˚±_˛õ¡
(c⁄° 
a˘ive_li°í_fd
) {

5308 
sig£t_t
 
£t
;

5309 
sockaddr_°‹age
 
ß
;

5310 
sockÀn_t
 
dummy
;

5311 
pid_t
 
chûd
;

5313 
	`mem£t
(&
ß
, 0,  sa);

5314 
dummy
 = (
sockÀn_t
Ë 
ß
;

5315 i‡((
˛õ¡fd
 = 
ac˚±


5316 (
a˘ive_li°í_fd
, (
sockaddr
 *Ë&
ß
, &
dummy
)) == -1) {

5319 i‡(
	`STORAGE_FAMILY
(
ß
Ë!
AF_INET
 && STORAGE_FAMILY(ßË!
AF_INET6
) {

5320 (Ë
	`˛o£
(
˛õ¡fd
);

5321 
˛õ¡fd
 = -1;

5324 i‡(
maxu£rs
 > 0U && 
nb_chûdªn
 >= maxusers) {

5325 
löe
[1024];

5327 
	`¢¥ötf
(
löe
, Üöe, "421 " 
MSG_MAX_USERS
 "\r\n",

5328 (Ë
maxu£rs
);

5330 (Ë
	`f˙é
(
˛õ¡fd
, 
F_SETFL
, f˙é(˛õ¡fd, 
F_GETFL
Ë| 
O_NONBLOCK
);

5331 (Ë
	`wrôe
(
˛õ¡fd
, 
löe
, 
	`°æí
(line));

5332 (Ë
	`˛o£
(
˛õ¡fd
);

5333 
˛õ¡fd
 = -1;

5336 i‡(
maxù
 > 0U) {

5337 
	`fourösix
(&
ß
);

5338 i‡(
	`ùåack_gë
(&
ß
Ë>
maxù
) {

5339 
löe
[1024];

5340 
hbuf
[
NI_MAXHOST
];

5341 
sockaddr_°‹age
 
ﬁd_ß
;

5343 (Ë
	`f˙é
(
˛õ¡fd
, 
F_SETFL
, f˙é(˛õ¡fd, 
F_GETFL
Ë| 
O_NONBLOCK
);

5344 i‡(!
	`SNCHECK
(
	`¢¥ötf
(
löe
, Üine,

5345 "421 " 
MSG_MAX_USERS_IP
 "\r\n",

5346 (Ë
maxù
),  
löe
)) {

5347 (Ë
	`wrôe
(
˛õ¡fd
, 
löe
, 
	`°æí
(line));

5349 i‡(
	`addrcmp
(&
ﬁd_ß
, &
ß
) != 0) {

5350 
ﬁd_ß
 = 
ß
;

5351 i‡(
	`gë«meöfo
((
sockaddr
 *Ë&
ß
,

5352 
	`STORAGE_LEN
(
ß
), 
hbuf
,

5353  
hbuf
, 
NULL
, (
size_t
) 0U,

5354 
NI_NUMERICHOST
) == 0) {

5355 
	`logfûe
(
LOG_WARNING
, 
MSG_MAX_USERS_IP
 ": [%s]",

5356 (Ë
maxù
, 
hbuf
);

5359 (Ë
	`˛o£
(
˛õ¡fd
);

5360 
˛õ¡fd
 = -1;

5364 
	`sigem±y£t
(&
£t
);

5365 
	`sigadd£t
(&
£t
, 
SIGCHLD
);

5366 
	`sig¥ocmask
(
SIG_BLOCK
, &
£t
, 
NULL
);

5367 
nb_chûdªn
++;

5368 
chûd
 = 
	`f‹k
();

5369 i‡(
chûd
 =(
pid_t
) 0) {

5370 i‡(
	`ißây
(2)) {

5371 (Ë
	`˛o£
(2);

5373 #i‚de‡
SAVE_DESCRIPTORS


5374 i‡(
no_sy¶og
 == 0) {

5375 
	`˛o£log
();

5376 
	`›ílog
("puª-·pd", 
LOG_NDELAY
 | 
log_pid
, 
sy¶og_Ácûôy
);

5379 
	`doô
();

5380 
	`_EXIT
(
EXIT_SUCCESS
);

5381 } i‡(
chûd
 =(
pid_t
) -1) {

5382 i‡(
nb_chûdªn
 > 0U) {

5383 
nb_chûdªn
--;

5386 i‡(
maxù
 > 0U) {

5387 
	`ùåack_add
(&
ß
, 
chûd
);

5390 (Ë
	`˛o£
(
˛õ¡fd
);

5391 
˛õ¡fd
 = -1;

5392 
	`sig¥ocmask
(
SIG_UNBLOCK
, &
£t
, 
NULL
);

5393 
	}
}

5395 
	$°™dÆ⁄e_£rvî
()

5397 
⁄
;

5398 
addröfo
 
höts
, *
ªs
, *
ªs6
;

5399 
fd_£t
 
rs
;

5400 
max_fd
;

5402 #i‚de‡
NO_INETD


5403 
°™dÆ⁄e
 = 1;

5405 
	`mem£t
(&
höts
, 0,  hints);

5406 
höts
.
ai_Êags
 = 
AI_PASSIVE
;

5407 
höts
.
ai_Ámûy
 = 
AF_INET
;

5408 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

5409 
höts
.
ai_addr
 = 
NULL
;

5410 
⁄
 = 1;

5411 i‡(
li°ífd
 =-1 && 
no_ùv4
 == 0 &&

5412 
	`gëaddröfo
(
°™dÆ⁄e_ù
, 
°™dÆ⁄e_p‹t
, &
höts
, &
ªs
) == 0) {

5413 i‡((
li°ífd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 
IPPROTO_TCP
)) == -1 ||

5414 
	`£tsock›t
(
li°ífd
, 
SOL_SOCKET
, 
SO_REUSEADDR
,

5415 (*Ë&
⁄
,  on) != 0) {

5416 
ﬁd_î∫o
;

5418 
ˇ¡_böd
:

5419 
ﬁd_î∫o
 = 
î∫o
;

5420 
	`≥º‹
(
MSG_STANDALONE_FAILED
);

5421 
	`logfûe
(
LOG_ERR
, 
MSG_STANDALONE_FAILED
 ": [%s]",

5422 
	`°ªº‹
(
ﬁd_î∫o
));

5425 i‡(
	`böd
(
li°ífd
, 
ªs
->
ai_addr
, (
sockÀn_t
Ëªs->
ai_addæí
) != 0 ||

5426 
	`li°í
(
li°ífd
, 
maxu£rs
 > 0U ?

5427 3U + 
maxu£rs
 / 8U : 
DEFAULT_BACKLOG
) != 0) {

5428 
ˇ¡_böd
;

5430 
	`‰ìaddröfo
(
ªs
);

5431 
	`£t_˛€xec_Êag
(
li°ífd
);

5433 i‡(
li°ífd6
 =-1 && 
v6ªady
 != 0) {

5434 
höts
.
ai_Ámûy
 = 
AF_INET6
;

5435 i‡(
	`gëaddröfo
(
°™dÆ⁄e_ù
, 
°™dÆ⁄e_p‹t
, &
höts
, &
ªs6
) == 0) {

5436 i‡((
li°ífd6
 = 
	`sockë
(
AF_INET6
,

5437 
SOCK_STREAM
, 
IPPROTO_TCP
)) == -1 ||

5438 
	`£tsock›t
(
li°ífd6
, 
SOL_SOCKET
, 
SO_REUSEADDR
,

5439 (*Ë&
⁄
,  on) != 0) {

5440 
ˇ¡_böd
;

5442 #i‡
	`deföed
(
IPPROTO_IPV6
Ë&& deföed(
IPV6_V6ONLY
)

5443 (Ë
	`£tsock›t
(
li°ífd6
, 
IPPROTO_IPV6
, 
IPV6_V6ONLY
,

5444 (*Ë&
⁄
,  on);

5446 i‡(
	`böd
(
li°ífd6
, 
ªs6
->
ai_addr
,

5447 (
sockÀn_t
Ë
ªs6
->
ai_addæí
) != 0 ||

5448 
	`li°í
(
li°ífd6
, 
maxu£rs
 > 0U ?

5449 3U + 
maxu£rs
 / 8U : 
DEFAULT_BACKLOG
) != 0) {

5450 
ˇ¡_böd
;

5452 
	`‰ìaddröfo
(
ªs6
);

5453 
	`£t_˛€xec_Êag
(
li°ífd6
);

5456 i‡(
li°ífd
 =-1 && 
li°ífd6
 == -1) {

5457 #ifde‡
EADDRNOTAVAIL


5458 
î∫o
 = 
EADDRNOTAVAIL
;

5460 
ˇ¡_böd
;

5462 
	`upd©ïidfûe
();

5463 
	`£çro˚s¢ame
("pure-ftpd (SERVER)");

5464 
	`FD_ZERO
(&
rs
);

5465 i‡(
li°ífd
 > 
li°ífd6
) {

5466 
max_fd
 = 
li°ífd
;

5468 
max_fd
 = 
li°ífd6
;

5470 
max_fd
++;

5471 
°›_£rvî
 == 0) {

5472 
	`ß„_fd_£t
(
li°ífd
, &
rs
);

5473 
	`ß„_fd_£t
(
li°ífd6
, &
rs
);

5474 i‡(
	`£À˘
(
max_fd
, &
rs
, 
NULL
, NULL, NULL) <= 0) {

5475 i‡(
î∫o
 !
EINTR
) {

5476 (Ë
	`¶ìp
(1);

5480 i‡(
	`ß„_fd_is£t
(
li°ífd
, &
rs
)) {

5481 
	`ac˚±_˛õ¡
(
li°ífd
);

5483 i‡(
	`ß„_fd_is£t
(
li°ífd6
, &
rs
)) {

5484 
	`ac˚±_˛õ¡
(
li°ífd6
);

5487 
	}
}

5490 #i‡
deföed
(
WIN32
Ë|| deföed(
_WIN32
Ë|| deföed(
__WIN32__
Ë|| deföed(
__CYGWIN__
)

5491 
∑sswd
 *
	$Ákegëpw«m
(c⁄° * c⁄° 
«me
)

5493 
∑sswd
 
pwd
;

5495 (Ë
«me
;

5496 
pwd
.
pw_«me
 =Öwd.
pw_gecos
 =Öwd.
pw_shñl
 = "ftp";

5497 
pwd
.
pw_∑sswd
 = "*";

5498 
pwd
.
pw_uid
 = (
uid_t
) 42U;

5499 
pwd
.
pw_gid
 = (
gid_t
) 42U;

5500 
pwd
.
pw_dú
 = 
WIN32_ANON_DIR
;

5502  &
pwd
;

5503 
	}
}

5506 
	$puª·pd_°¨t
(
¨gc
, *
¨gv
[], c⁄° *
home_dúe˘‹y_
)

5508 #i‚de‡
NO_GETOPT_LONG


5509 
›ti⁄_ödex
 = 0;

5511 
foddî
;

5512 
by∑ss_ùv6
 = 0;

5513 
∑sswd
 *
pw
;

5515 (Ë
home_dúe˘‹y_
;

5516 #ifde‡
NON_ROOT_FTP


5517 
home_dúe˘‹y
 = 
home_dúe˘‹y_
;

5519 
	`˛õ¡_öô_ª∂y_buf
();

5521 #ifde‡
HAVE_GETPAGESIZE


5522 
∑ge_size
 = (
size_t
Ë
	`gë∑gesize
();

5523 #ñi‡
	`deföed
(
_SC_PAGESIZE
)

5524 
∑ge_size
 = (
size_t
Ë
	`sysc⁄f
(
_SC_PAGESIZE
);

5525 #ñi‡
	`deföed
(
_SC_PAGE_SIZE
)

5526 
∑ge_size
 = (
size_t
Ë
	`sysc⁄f
(
_SC_PAGE_SIZE
);

5528 
∑ge_size
 = (
size_t
) 4096U;

5531 #ifde‡
HAVE_SETLOCALE


5532 #ifde‡
LC_MESSAGES


5533 (Ë
	`£éoˇÀ
(
LC_MESSAGES
, 
MESSAGES_LOCALE
);

5535 #ifde‡
LC_CTYPE


5536 (Ë
	`£éoˇÀ
(
LC_CTYPE
, "C");

5538 #ifde‡
LC_COLLATE


5539 (Ë
	`£éoˇÀ
(
LC_COLLATE
, "C");

5543 
	`öô_tz
();

5544 (Ë
	`°ªº‹
(
ENOENT
);

5546 #i‚de‡
SAVE_DESCRIPTORS


5547 
	`›ílog
("puª-·pd", 
LOG_NDELAY
 | 
log_pid
, 
DEFAULT_FACILITY
);

5550 #ifde‡
USE_CAPABILITIES


5551 
	`£t_öôül_ˇps
();

5553 
	`£t_sig«ls
();

5555 
loggedö
 = 0;

5557 #ifde‡
BANNER_ENVIRON


5558 #ifde‡
COOKIE


5560 c⁄° *
a
;

5562 i‡((
a
 = 
	`gëív
("BANNER")Ë!
NULL
 && *a != 0) {

5563 
f‹tu√s_fûe
 = 
	`°rdup
(
a
);

5569 (
foddî
 =

5570 #i‚de‡
NO_GETOPT_LONG


5571 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, 
GETOPT_OPTIONS
, 
l⁄g_›ti⁄s
, &
›ti⁄_ödex
)

5573 
	`gë›t
(
¨gc
, 
¨gv
, 
GETOPT_OPTIONS
)

5576 
foddî
) {

5578 i‡((
pw
 = 
	`gëpw«m
("ftp"))) {

5579 
w¨ez
 = 
pw
->
pw_uid
;

5581 
	`logfûe
(
LOG_ERR
, 
MSG_NO_FTP_ACCOUNT
);

5586 
no_åunˇã
 = 1;

5590 
by∑ss_ùv6
 = 1;

5594 
no_ùv4
 = 1;

5597 #ifde‡
WITH_RFC2640


5599 i‡((
ch¨£t_fs
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

5600 
	`dõ_mem
();

5605 i‡((
ch¨£t_˛õ¡
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

5606 
	`dõ_mem
();

5612 
log_pid
 = 
LOG_PID
;

5615 #i‚de‡
NO_STANDALONE


5617 *
°ruck
;

5619 i‡((
°ruck
 = 
	`°rchr
(
›èrg
, ',')Ë!
NULL
) {

5620 *
°ruck
 = 0;

5621 i‡(*
›èrg
 != 0) {

5622 i‡((
°™dÆ⁄e_ù
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

5623 
	`dõ_mem
();

5626 *
°ruck
 = ',';

5627 i‡(
°ruck
[1] != 0) {

5628 i‡((
°™dÆ⁄e_p‹t
 = 
	`°rdup
(
°ruck
 + 1)Ë=
NULL
) {

5629 
	`dõ_mem
();

5633 i‡((
°™dÆ⁄e_p‹t
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

5634 
	`dõ_mem
();

5641 
f‹˚_ls_a
 = 1;

5644 #ifde‡
THROTTLING


5647 *
°ruck
;

5648 c⁄° *
å_bw_ul
 = 
NULL
;

5649 c⁄° *
å_bw_dl
 = 
NULL
;

5651 i‡((
°ruck
 = 
	`°rchr
(
›èrg
, ':')Ë!
NULL
) {

5652 *
°ruck
 = 0;

5653 i‡(*
›èrg
 != 0) {

5654 
å_bw_ul
 = 
›èrg
;

5656 i‡(
°ruck
[1] != 0) {

5657 
å_bw_dl
 = &
°ruck
[1];

5660 
å_bw_ul
 = 
å_bw_dl
 = 
›èrg
;

5662 i‡((
å_bw_ul
 =
NULL
 || *tr_bw_ul == 0) &&

5663 (
å_bw_dl
 =
NULL
 || *tr_bw_dl == 0)) {

5664 
bad_bw
:

5665 
	`dõ
(421, 
LOG_ERR
, 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_THROTTLING
 ": %s" , 
›èrg
);

5667 i‡(
å_bw_dl
 !
NULL
) {

5668 i‡((
thrŸéög_b™dwidth_dl
 =

5669 
	`°πoul
(
å_bw_dl
, 
NULL
, 0) * 1024UL) == 0UL) {

5670 
bad_bw
;

5673 i‡(
å_bw_ul
 !
NULL
) {

5674 i‡((
thrŸéög_b™dwidth_ul
 =

5675 
	`°πoul
(
å_bw_ul
, 
NULL
, 0) * 1024UL) == 0UL) {

5676 
bad_bw
;

5679 
thrŸéög_dñay
 = 1000000 /

5680 (
thrŸéög_b™dwidth_dl
 | 
thrŸéög_b™dwidth_ul
);

5681 i‡(
foddî
 == 't') {

5682 
thrŸéög
 = 1;

5684 
thrŸéög
 = 2;

5690 c⁄° *
≈å
;

5691 *
íd±r
;

5693 
≈å
 = 
›èrg
;

5694 
íd±r
 = 
NULL
;

5695 
chroŸ_åu°edgid
 = 
	`°πoul
(
≈å
, &
íd±r
, 0);

5696 i‡(!
≈å
 || !*≈å || !
íd±r
 || *endptr) {

5697 
	`dõ
(421, 
LOG_ERR
, 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_TRUSTED_GID
 ": %s" , 
›èrg
);

5699 
u£rchroŸ
 = 1;

5703 
dŸ_wrôe_ok
 = 0;

5707 
dŸ_wrôe_ok
 = 
dŸ_ªad_ok
 = 0;

5711 
dŸ_ªad_™⁄_ok
 = 1;

5715 
be_cu°omî_¥oof
 = 1;

5719 
u£rchroŸ
 = 2;

5723 
Ælowfxp
 = 1;

5727 
Ælowfxp
 = 2;

5731 i‡(
loggög
 < 2) {

5732 
loggög
++;

5737 
brokí_˛õ¡_com∑t
 = 1;

5741 c⁄° *
≈å
;

5742 *
íd±r
;

5744 
≈å
 = 
›èrg
;

5745 
íd±r
 = 
NULL
;

5746 
maxu£rs
 = (Ë
	`°πoul
(
≈å
, &
íd±r
, 0);

5747 i‡(!
≈å
 || !*≈å || !
íd±r
 || *íd±∏|| !
maxu£rs
) {

5748 
	`dõ
(421, 
LOG_ERR
, 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_USER_LIMIT
 ": %s" , 
›èrg
);

5752 #i‚de‡
NO_STANDALONE


5754 
d´m⁄ize
 = 1;

5758 c⁄° *
≈å
;

5759 *
íd±r
;

5761 
≈å
 = 
›èrg
;

5762 
íd±r
 = 
NULL
;

5763 
maxù
 = (Ë
	`°πoul
(
≈å
, &
íd±r
, 0);

5764 i‡(!
≈å
 || !*≈å || !
íd±r
 || *íd±∏|| !
maxù
) {

5765 
	`dõ
(421, 
LOG_ERR
, 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_USER_LIMIT
 ": %s" , 
›èrg
);

5770 #ifde‡
PER_USER_LIMITS


5772 
ªt
;

5774 
ªt
 = 
	`ssˇnf
(
›èrg
, "%u:%u", &
≥r_u£r_max
, &
≥r_™⁄_max
);

5775 i‡(
ªt
 != 2) {

5776 
	`dõ
(421, 
LOG_ERR
, 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_USER_LIMIT
 ": %s" , 
›èrg
);

5781 #ifde‡
WITH_TLS


5783 i‡((
íf‹˚_és_auth
 = 
	`©oi
(
›èrg
)) < 0 ||Énforce_tls_auth > 3) {

5784 
	`dõ
(421, 
LOG_ERR
, 
MSG_CONF_ERR
 ": TLS");

5789 i‡(
	`°∫cmp
(
›èrg
, "-S:",  "-S:" - (
size_t
) 1U) == 0) {

5790 
›èrg
 + "-S:" - (
size_t
) 1U;

5791 
s¶_dißbÀd
 = 1;

5793 i‡((
éscùhîsuôe
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

5794 
	`dõ_mem
();

5800 
™⁄_⁄ly
 = 1;

5804 
™⁄_⁄ly
 = -1;

5807 #ifde‡
COOKIE


5809 #ifde‡
BANNER_ENVIRON


5810 
	`‰ì
(
f‹tu√s_fûe
);

5812 
f‹tu√s_fûe
 = 
	`°rdup
(
›èrg
);

5817 
n
 = 0;

5819 i‡(
	`°rˇ£cmp
(
›èrg
, "none") == 0) {

5820 
no_sy¶og
 = 1;

5823 
Ácûôy«mes
[
n
].
c_«me
 &&

5824 
	`°rˇ£cmp
(
Ácûôy«mes
[
n
].
c_«me
, 
›èrg
) != 0) {

5825 
n
++;

5827 i‡(
Ácûôy«mes
[
n
].
c_«me
) {

5828 
sy¶og_Ácûôy
 = 
Ácûôy«mes
[
n
].
c_vÆ
;

5830 
	`logfûe
(
LOG_ERR
,

5831 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_FACILITY
 ": %s", 
›èrg
);

5836 c⁄° 
Authítiˇti⁄
 *
auth_li°_≤t
 = 
auth_li°
;

5837 c⁄° *
›t
 = 
›èrg
;

5838 
Authítiˇti⁄s
 *
√w_auth
;

5839 
size_t
 
auth_«me_Àn
;

5842 
auth_«me_Àn
 = 
	`°æí
(
auth_li°_≤t
->
«me
);

5843 i‡(
	`°∫ˇ£cmp
(
›t
, 
auth_li°_≤t
->
«me
,

5844 
auth_«me_Àn
) == 0) {

5845 *
fûe
 = 
NULL
;

5847 
›t
 +
auth_«me_Àn
;

5848 i‡(*
›t
 == ':') {

5849 
›t
++;

5850 i‡(*
›t
 != 0) {

5851 i‡((
fûe
 = 
	`°rdup
(
›t
)Ë=
NULL
) {

5852 
	`dõ_mem
();

5856 i‡(
auth_li°_≤t
->
∑r£
 !
NULL
) {

5857 
auth_li°_≤t
->
	`∑r£
(
fûe
);

5859 i‡((
√w_auth
 = 
	`mÆloc
( *√w_auth)Ë=
NULL
) {

5860 
	`dõ_mem
();

5862 
√w_auth
->
auth
 = 
auth_li°_≤t
;

5863 
√w_auth
->
c⁄f_fûe
 = 
fûe
;

5864 
√w_auth
->
√xt
 = 
NULL
;

5865 i‡(
œ°_authítiˇti⁄s
 =
NULL
) {

5866 
fú°_authítiˇti⁄s
 = 
√w_auth
;

5868 
œ°_authítiˇti⁄s
->
√xt
 = 
√w_auth
;

5870 
œ°_authítiˇti⁄s
 = 
√w_auth
;

5874 
auth_li°_≤t
++;

5875 i‡(
auth_li°_≤t
->
«me
 =
NULL
) {

5876 
	`dõ
(421, 
LOG_ERR
, 
MSG_AUTH_UNKNOWN
 ": %s", 
›t
);

5883 c⁄° *
≈å
;

5884 *
íd±r
;

5886 
≈å
 = 
›èrg
;

5887 
íd±r
 = 
NULL
;

5888 
maxlﬂd
 = 
	`°πod
(
≈å
, &
íd±r
);

5889 i‡(!
≈å
 || !*≈å || !
íd±r
 || *íd±∏|| 
maxlﬂd
 <= 0.0) {

5890 
	`dõ
(421, 
LOG_ERR
, 
MSG_CONF_ERR
 ": "

5891 
MSG_ILLEGAL_LOAD_LIMIT
 ": %s" , 
›èrg
);

5896 
Ælow_™⁄_mkdú
 = 1;

5900 
dißŒow_∑ssive
 = 1;

5903 #i‡
	`deföed
(
WITH_UPLOAD_SCRIPT
)

5905 
do_u∂ﬂd_s¸ùt
 = 1;

5909 #ifde‡
WITH_ALTLOG


5911 *
›èrg_c›y
;

5912 *
dñpoöt
;

5914 i‡((
›èrg_c›y
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

5915 
	`dõ_mem
();

5917 i‡((
dñpoöt
 = 
	`°rchr
(
›èrg_c›y
, 
ALTLOG_DELIMITER
)Ë=
NULL
) {

5918 
Æéog_f‹m©
 = 
ALTLOG_DEFAULT
;

5919 
dñpoöt
 = 
›èrg_c›y
;

5921 c⁄° 
A…LogPªfixes
 *
Æéog¥efixes_≤t
 = 
Æéog¥efixes
;

5923 *
dñpoöt
++ = 0;

5925 i‡(
	`°rˇ£cmp
(
›èrg_c›y
,

5926 
Æéog¥efixes_≤t
->
¥efix
) == 0) {

5927 
Æéog_f‹m©
 = 
Æéog¥efixes_≤t
->
f‹m©
;

5930 
Æéog¥efixes_≤t
++;

5931 } 
Æéog¥efixes_≤t
->
¥efix
 !
NULL
);

5932 i‡(
Æéog_f‹m©
 =
ALTLOG_NONE
) {

5933 
	`dõ
(421, 
LOG_ERR
,

5934 
MSG_CONF_ERR
 ": " 
MSG_UNKNOWN_ALTLOG
 ": %s",

5935 
›èrg_c›y
);

5938 i‡(*
dñpoöt
 != '/') {

5939 
	`dõ
(421, 
LOG_ERR
,

5940 
MSG_CONF_ERR
 ": " 
MSG_SANITY_FILE_FAILURE
,

5941 
dñpoöt
);

5943 i‡((
Æéog_fûíame
 = 
	`°rdup
(
dñpoöt
)Ë=
NULL
) {

5944 
	`dõ_mem
();

5946 (Ë
	`‰ì
(
›èrg_c›y
);

5951 
ªt
;

5953 
ªt
 = 
	`ssˇnf
(
›èrg
, "%u:%u", &
fú°p‹t
, &
œ°p‹t
);

5954 i‡(
ªt
 != 2 ||

5955 
fú°p‹t
 < 1024U || 
œ°p‹t
 > 65535U

5956 || 
œ°p‹t
 < 
fú°p‹t
) {

5957 
	`dõ
(421, 
LOG_ERR
, 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_PORTS_RANGE
 ": %s" , 
›èrg
);

5962 
ªt
;

5964 
ªt
 = 
	`ssˇnf
(
›èrg
, "%u:%u", &
max_ls_fûes
, &
max_ls_dïth
);

5965 i‡(
ªt
 != 2 ||

5966 
max_ls_fûes
 < 1U || 
max_ls_dïth
 < 1U) {

5967 
	`dõ
(421, 
LOG_ERR
, 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_LS_LIMITS
 ": %s" , 
›èrg
);

5971 #ifde‡
QUOTAS


5973 
ªt
;

5975 
ªt
 = 
	`ssˇnf
(
›èrg
, "%llu:%llu",

5976 &
u£r_quŸa_fûes
, &
u£r_quŸa_size
);

5977 i‡(
ªt
 != 2) {

5978 
	`dõ
(421, 
LOG_ERR
, 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_QUOTA
 ": %s" , 
›èrg
);

5980 
u£r_quŸa_size
 *= (1024ULL * 1024ULL);

5985 i‡((
f‹˚_∑ssive_ù_s
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

5986 
	`dõ_mem
();

5990 #ifde‡
RATIOS


5993 
ªt
;

5995 
ªt
 = 
	`ssˇnf
(
›èrg
, "%u:%u", &
øtio_u∂ﬂd
, &
øtio_dow∆ﬂd
);

5996 i‡(
ªt
 != 2 ||

5997 
øtio_u∂ﬂd
 < 1U || 
øtio_dow∆ﬂd
 < 1U) {

5998 
	`dõ
(421, 
LOG_ERR
, 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_RATIO
 ": %s" , 
›èrg
);

6000 i‡(
foddî
 == 'Q') {

6001 
øtio_f‹_n⁄_™⁄
 = 1;

6007 
aut‹íame
 = 1;

6011 
nochmod
 = 1;

6015 
kì∑Œfûes
 = 1;

6018 #i‚de‡
NO_STANDALONE


6020 i‡((
pid_fûe
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

6021 
	`dõ_mem
();

6027 
dißŒow_ª«me
 = 1;

6031 
ªsﬁve_ho°«mes
 = 0;

6035 c⁄° *
≈å
;

6036 *
íd±r
;

6038 
≈å
 = 
›èrg
;

6039 
íd±r
 = 
NULL
;

6040 
idÀtime
 = 
	`°πoul
(
≈å
, &
íd±r
, 0) * 60UL;

6041 i‡(
idÀtime
 <= 0) {

6042 
idÀtime
 = 
DEFAULT_IDLE
;

6047 
™⁄_nou∂ﬂd
 = 1;

6051 
¸óã_home
 = 1;

6055 c⁄° *
≈å
;

6056 *
íd±r
;

6058 
≈å
 = 
›èrg
;

6059 
íd±r
 = 
NULL
;

6060 
maxdiskußgï˘
 = 1.0 - (
	`°πod
(
≈å
, &
íd±r
) / 100.0);

6061 i‡(
maxdiskußgï˘
 >= 1.0 || maxdiskusagepct < 0.0) {

6062 
maxdiskußgï˘
 = 0.0;

6067 c⁄° *
≈å
;

6068 *
íd±r
;

6069 
tmp
;

6071 
≈å
 = 
›èrg
;

6072 
íd±r
 = 
NULL
;

6073 
tmp
 = 
	`°πﬁ
(
≈å
, &
íd±r
, 10);

6074 i‡(!
≈å
 || !*≈å || !
íd±r
 || *íd±∏|| 
tmp
 < 0) {

6075 
	`dõ
(421, 
LOG_ERR
, 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_UID_LIMIT
 ": %s" , 
›èrg
);

6077 
u£ruid
 = (
uid_t
Ë
tmp
;

6081 *
›èrg_c›y
;

6082 *
°ruck
;

6083 c⁄° *
å_umask
 = 
NULL
;

6084 c⁄° *
å_umask_d
 = 
NULL
;

6086 i‡((
›èrg_c›y
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

6087 
	`dõ_mem
();

6089 i‡((
°ruck
 = 
	`°rchr
(
›èrg_c›y
, ':')Ë!
NULL
) {

6090 *
°ruck
 = 0;

6091 i‡(*
›èrg_c›y
 != 0) {

6092 
å_umask
 = 
›èrg_c›y
;

6094 i‡(
°ruck
[1] != 0) {

6095 
å_umask_d
 = &
°ruck
[1];

6098 
å_umask
 = 
å_umask_d
 = 
›èrg_c›y
;

6100 i‡((
å_umask
 =
NULL
 || *tr_umask == 0) &&

6101 (
å_umask_d
 =
NULL
 || *tr_umask_d == 0)) {

6102 
bad_umask
:

6103 
	`dõ
(421, 
LOG_ERR
, 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_UMASK
 ": %s",

6104 
›èrg_c›y
);

6106 i‡(
å_umask
 !
NULL
) {

6107 i‡((
u_mask
 =

6108 
	`°πoul
(
å_umask
, 
NULL
, 8)) > 0777) {

6109 
bad_umask
;

6112 i‡(
å_umask_d
 !
NULL
) {

6113 i‡((
u_mask_d
 =

6114 
	`°πoul
(
å_umask_d
, 
NULL
, 8)) > 0777) {

6115 
bad_umask
;

6118 (Ë
	`‰ì
(
›èrg_c›y
);

6121 #ifde‡
WITH_VIRTUAL_HOSTS


6123 i‡((
åu°edù
 = 
	`mÆloc
( *åu°edù)Ë=
NULL
) {

6124 
	`dõ_mem
();

6126 i‡(
	`gíîic_©⁄
(
›èrg
, 
åu°edù
) != 0) {

6127 
	`dõ
(421, 
LOG_ERR
, 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_TRUSTED_IP
);

6132 #ifde‡
WITH_BONJOUR


6134 *
rdv«me
;

6135 *
íd
;

6137 i‡((
rdv«me
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

6138 
	`dõ_mem
();

6140 
	`d‹egi°øti⁄
(
rdv«me
, 
	`°πoul
(
°™dÆ⁄e_p‹t
, &
íd
, 10));

6145 #i‚de‡
NON_ROOT_FTP


6146 i‡(
	`gëeuid
(Ë=(
uid_t
) 0)

6149 
	`puts
(
PACKAGE
 " v" 
VERSION
 
VERSION_PRIVSEP
 "\n");

6151 #i‚de‡
NO_GETOPT_LONG


6153 c⁄° 
›ti⁄
 *
›ti⁄s
 = 
l⁄g_›ti⁄s
;

6156 
	`¥ötf
("-%c\t--%s\t%s\n", 
›ti⁄s
->
vÆ
, o±i⁄s->
«me
,

6157 
›ti⁄s
->
has_¨g
 ? "<opt>" : "");

6158 
›ti⁄s
++;

6159 } 
›ti⁄s
->
«me
 !
NULL
);

6162 
	`exô
(
EXIT_SUCCESS
);

6165 
	`logfûe
(
LOG_WARNING
, 
MSG_ILLEGAL_OPTION
);

6168 #ifde‡
WITH_RFC2640


6169 i‡(
ch¨£t_fs
 =
NULL
) {

6170 
ch¨£t_fs
 = (*) "utf-8";

6172 i‡(
ch¨£t_˛õ¡
 =
NULL
) {

6173 
ch¨£t_˛õ¡
 = (*) "utf-8";

6175 i‡(
	`°rˇ£cmp
(
ch¨£t_fs
, 
ch¨£t_˛õ¡
) != 0) {

6176 i‡((
ic⁄v_fd_fs2˛õ¡
 = 
	`ic⁄v_›í
(
ch¨£t_˛õ¡
, 
ch¨£t_fs
))

6177 =(
ic⁄v_t
) -1) {

6178 
	`dõ
(421, 
LOG_ERR
,

6179 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_CHARSET
 ": %s/%s",

6180 
ch¨£t_fs
, 
ch¨£t_˛õ¡
);

6182 i‡((
ic⁄v_fd_˛õ¡2fs
 = 
	`ic⁄v_›í
(
ch¨£t_fs
, 
ch¨£t_˛õ¡
))

6183 =(
ic⁄v_t
) -1) {

6184 
	`dõ
(421, 
LOG_ERR
,

6185 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_CHARSET
 ": %s/%s",

6186 
ch¨£t_˛õ¡
, 
ch¨£t_fs
);

6189 i‡(
	`°rˇ£cmp
(
ch¨£t_fs
, "utf-8") != 0) {

6190 i‡((
ic⁄v_fd_fs2utf8
 = 
	`ic⁄v_›í
("utf-8", 
ch¨£t_fs
))

6191 =(
ic⁄v_t
) -1) {

6192 
	`dõ
(421, 
LOG_ERR
,

6193 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_CHARSET
 ": %s/utf-8",

6194 
ch¨£t_fs
);

6196 i‡((
ic⁄v_fd_utf82fs
 = 
	`ic⁄v_›í
(
ch¨£t_fs
, "utf-8"))

6197 =(
ic⁄v_t
) -1) {

6198 
	`dõ
(421, 
LOG_ERR
,

6199 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_CHARSET
 ": utf-8/%s",

6200 
ch¨£t_fs
);

6205 i‡(
fú°_authítiˇti⁄s
 =
NULL
) {

6206 i‡((
fú°_authítiˇti⁄s
 =

6207 
	`mÆloc
( *
fú°_authítiˇti⁄s
)Ë=
NULL
) {

6208 
	`dõ_mem
();

6210 
fú°_authítiˇti⁄s
->
auth
 = 
DEFAULT_AUTHENTICATION
;

6211 
fú°_authítiˇti⁄s
->
c⁄f_fûe
 = 
NULL
;

6212 
fú°_authítiˇti⁄s
->
√xt
 = 
NULL
;

6214 #i‚de‡
NO_STANDALONE


6215 
	`dod´m⁄ize
();

6217 #i‚de‡
SAVE_DESCRIPTORS


6218 i‡(
no_sy¶og
 =0 && (
log_pid
 || 
sy¶og_Ácûôy
 !
DEFAULT_FACILITY
)) {

6219 
	`˛o£log
();

6220 
	`›ílog
("puª-·pd", 
LOG_NDELAY
 | 
log_pid
, 
sy¶og_Ácûôy
);

6223 (Ë
	`umask
((
mode_t
) 0);

6224 
	`˛óørgs
(
¨gc
, 
¨gv
);

6225 
idÀtime_no›
 = (Ë
idÀtime
 * 2.0;

6226 i‡(
fú°p‹t
) {

6227 
p‹tmax
;

6229 
p‹tmax
 = (
œ°p‹t
 - 
fú°p‹t
 + 1) / 2;

6230 i‡(!
maxu£rs
 || maxu£r†> 
p‹tmax
) {

6231 
maxu£rs
 = 
p‹tmax
;

6234 i‡(
by∑ss_ùv6
 == 0) {

6235 
	`check_ùv6_suµ‹t
();

6237 #i‡
	`deföed
(
WITH_UPLOAD_SCRIPT
)

6238 i‡(
do_u∂ﬂd_s¸ùt
 != 0) {

6239 
	`u∂ﬂd_pùe_›í
();

6242 #ifde‡
WITH_DIRALIASES


6243 i‡(
	`öô_Æü£s
() != 0) {

6244 
	`logfûe
(
LOG_ERR
, 
MSG_ALIASES_BROKEN_FILE
);

6247 #ifde‡
WITH_TLS


6248 i‡(
íf‹˚_és_auth
 > 0) {

6249 (Ë
	`és_öô_libøry
();

6252 #i‡!
	`deföed
(
NO_STANDALONE
Ë&& !deföed(
NO_INETD
)

6253 i‡(
	`check_°™dÆ⁄e
() != 0) {

6254 
	`°™dÆ⁄e_£rvî
();

6256 
	`doô
();

6258 #ñi‡!
	`deföed
(
NO_STANDALONE
Ë&& deföed(
NO_INETD
)

6259 
	`°™dÆ⁄e_£rvî
();

6260 #ñi‡
	`deföed
(
NO_STANDALONE
Ë&& !deföed(
NO_INETD
)

6261 
	`doô
();

6263 #îr‹ 
C⁄figuøti⁄
 
îr‹


6266 #ifde‡
WITH_UPLOAD_SCRIPT


6267 
	`u∂ﬂd_pùe_˛o£
();

6270 
Authítiˇti⁄s
 *
auth_sˇn
 = 
fú°_authítiˇti⁄s
;

6271 
Authítiˇti⁄s
 *
¥evious
;

6273 
auth_sˇn
 !
NULL
) {

6274 i‡(
auth_sˇn
->
auth
->
exô
 !
NULL
) {

6275 
auth_sˇn
->
auth
->
	`exô
();

6277 
	`‰ì
(
auth_sˇn
->
c⁄f_fûe
);

6278 
¥evious
 = 
auth_sˇn
;

6279 
auth_sˇn
 =áuth_sˇn->
√xt
;

6280 
	`‰ì
(
¥evious
);

6283 
fú°_authítiˇti⁄s
 = 
œ°_authítiˇti⁄s
 = 
NULL
;

6284 
	`‰ì
(
åu°edù
);

6285 #ifde‡
WITH_RFC2640


6286 i‡(
ic⁄v_fd_fs2˛õ¡
 !(
ic⁄v_t
) -1) {

6287 
	`ic⁄v_˛o£
(
ic⁄v_fd_fs2˛õ¡
);

6289 i‡(
ic⁄v_fd_fs2utf8
 !(
ic⁄v_t
) -1) {

6290 
	`ic⁄v_˛o£
(
ic⁄v_fd_fs2utf8
);

6292 i‡(
ic⁄v_fd_˛õ¡2fs
 !(
ic⁄v_t
) -1) {

6293 
	`ic⁄v_˛o£
(
ic⁄v_fd_˛õ¡2fs
);

6295 i‡(
ic⁄v_fd_utf82fs
 !(
ic⁄v_t
) -1) {

6296 
	`ic⁄v_˛o£
(
ic⁄v_fd_utf82fs
);

6299 #i‚de‡
NO_STANDALONE


6300 
	`ùåack_‰ì
();

6301 
	`u∆ök
(
pid_fûe
);

6303 
	`˛o£log
();

6304 #ifde‡
WITH_TLS


6305 
	`és_‰ì_libøry
();

6307 
	`Æt_¨c4øndom_˛o£
();

6309 
	`_EXIT
(
EXIT_SUCCESS
);

6312 
	}
}

	@src/ftpd.h

1 #i‚de‡
__FTPD_H__


2 
	#__FTPD_H__
 1

	)

4 #i‚de‡
__GNUC__


5 #ifde‡
__©åibuã__


6 #unde‡
__©åibuã__


8 
	#__©åibuã__
(
a
)

	)

11 
	~<°dio.h
>

12 #ifde‡
STDC_HEADERS


13 
	~<°dlib.h
>

14 
	~<°ddef.h
>

15 
	~<°d¨g.h
>

17 #i‡
HAVE_STDLIB_H


18 
	~<°dlib.h
>

21 
	~<sys/ty≥s.h
>

22 #ifde‡
HAVE_STDINT_H


23 
	~<°döt.h
>

25 #ifde‡
HAVE_LOCALE_H


26 
	~<loˇÀ.h
>

28 #ifde‡
HAVE_STRING_H


29 #i‡!
STDC_HEADERS
 && 
HAVE_MEMORY_H


30 
	~<mem‹y.h
>

32 
	~<°rög.h
>

34 #i‡
HAVE_STRINGS_H


35 
	~<°rögs.h
>

38 
	~<limôs.h
>

39 
	~<î∫o.h
>

40 
	~<˘y≥.h
>

41 
	~<sig«l.h
>

42 #ifde‡
HAVE_UNISTD_H


43 
	~<uni°d.h
>

45 #ifde‡
TIME_WITH_SYS_TIME


46 
	~<sys/time.h
>

47 
	~<time.h
>

49 #i‡
HAVE_SYS_TIME_H


50 
	~<sys/time.h
>

52 
	~<time.h
>

55 
	~<sys/°©.h
>

56 #ifde‡
HAVE_FCNTL_H


57 
	~<f˙é.h
>

58 #ñi‡
deföed
(
HAVE_SYS_FCNTL_H
)

59 
	~<sys/f˙é.h
>

61 #ifde‡
HAVE_IOCTL_H


62 
	~<io˘l.h
>

63 #ñi‡
deföed
(
HAVE_SYS_IOCTL_H
)

64 
	~<sys/io˘l.h
>

66 
	~<sys/sockë.h
>

67 
	~<pﬁl.h
>

68 #ifde‡
HAVE_NETINET_IN_SYSTM_H


69 
	~<√töë/ö_sy°m.h
>

71 
	~<√töë/ö.h
>

72 
	~<√töë/ù.h
>

73 
	~<√töë/t˝.h
>

74 
	~<sys/mm™.h
>

75 #ifde‡
HAVE_SYS_RESOURCE_H


76 
	~<sys/ªsour˚.h
>

78 #ifde‡
HAVE_SYS_PARAM_H


79 
	~<sys/∑øm.h
>

81 #ifde‡
HAVE_SYS_MOUNT_H


82 
	~<sys/mou¡.h
>

84 
	~<pwd.h
>

85 
	~<gΩ.h
>

86 
	~<¨∑/öë.h
>

87 
	~<√tdb.h
>

88 #ifde‡
HAVE_SYS_VFS_H


89 #i‚de‡
STATFS_ALREADY_DEFINED


90 
	~<sys/vfs.h
>

93 #ifde‡
HAVE_SYS_STATVFS_H


94 
	~<sys/°©vfs.h
>

96 #ifde‡
HAVE_SYS_LOADAVG_H


97 
	~<sys/lﬂdavg.h
>

99 #ifde‡
HAVE_SYS_SYSMP_H


100 
	~<sys/sysmp.h
>

102 #ifde‡
HAVE_SYS_SYSGET_H


103 
	~<sys/sysgë.h
>

105 #ifde‡
HAVE_UTIME_H


106 
	~<utime.h
>

108 #ifde‡
WITH_RFC2640


109 
	~<ic⁄v.h
>

112 
	~"my¢¥ötf.h
"

114 #i‡!
deföed
(
HAVE_GETADDRINFO
Ë|| !deföed(
HAVE_GETNAMEINFO
Ë|| (!deföed(
HAVE_INET_NTOP
Ë&& !deföed(
öë_¡›
)Ë|| (!deföed(
HAVE_INET_PTON
Ë&& !deföed(
öë_±⁄
))

115 
	#OLD_IP_STACK
 1

	)

118 
	~"ù°ack.h
"

122 #ifde‡
VIRTUOZZO


123 #i‚de‡
DISABLE_SENDFILE


124 
	#DISABLE_SENDFILE
 1

	)

129 #i‡
deföed
(
SENDFILEV_SOLARIS
Ë&& deföed(
SENDFILE_LINUX
)

130 #unde‡
SENDFILEV_SOLARIS


132 #i‡
deföed
(
DISABLE_SENDFILE
) || \

133 (
deföed
(
SENDFILE_FREEBSD
Ë&& (deföed(
SENDFILE_LINUX
Ë|| deföed(
SENDFILEV_SOLARIS
Ë|| deföed(
SENDFILE_HPUX
))) || \

134 (
deföed
(
SENDFILE_LINUX
Ë&& (deföed(
SENDFILEV_SOLARIS
Ë|| deföed(
SENDFILE_HPUX
))) || \

135 (
deföed
(
SENDFILEV_SOLARIS
Ë&& 
	$deföed
(
SENDFILE_HPUX
))

136 #unde‡
SENDFILE_FREEBSD


137 #unde‡
SENDFILE_LINUX


138 #unde‡
SENDFILE64_LINUX


139 #unde‡
SENDFILE_HPUX


140 #unde‡
SENDFILEV_SOLARIS


142 #i‡
	`deföed
(
SENDFILE_FREEBSD
Ë|| deföed(
SENDFILEV_SOLARIS
) || \

143 
	`deföed
(
SENDFILE_HPUX
) || \

144 (
	`deföed
(
SENDFILE_LINUX
Ë&& 
	$deföed
(
SENDFILE64_LINUX
))

148 
	#SENDFILE_NONE


	)

151 #ifde‡
HAVE_SYS_UIO_H


152 
	~<sys/uio.h
>

161 #i‡(
	`deföed
(
SENDFILE_LINUX
Ë|| deföed(
SENDFILEV_SOLARIS
)Ë&& deföed(
HAVE_SYS_SENDFILE_H
)

162 
	~<sys/£ndfûe.h
>

165 #ifde‡
HAVE_ALLOCA


166 #ifde‡
HAVE_ALLOCA_H


167 
	~<Æloˇ.h
>

169 
	#ALLOCA
(
X
Ë
	`Æloˇ
(X)

	)

170 
	#ALLOCA_FREE
(
X
Ëdÿ{ 
	}
} 0)

	)

172 
	#ALLOCA
(
X
Ë
	`mÆloc
(X)

	)

173 
	#ALLOCA_FREE
(
X
Ë
	`‰ì
(X)

	)

176 #ifde‡
__FTPD_P_H__


177 
	#SYSLOG_NAMES
 1

	)

179 
	~<sy¶og.h
>

180 #i‚de‡
HAVE_SYSLOG_NAMES


181 
	~"sy¶og«mes.h
"

184 #ifde‡
HAVE_CRYPT_H


185 
	~<¸y±.h
>

188 #ifde‡
USE_SHADOW


189 #ifde‡
HAVE_SHADOW_H


190 
	~<shadow.h
>

194 #i‡
deföed
(
__svr4__
Ë&& deföed(
__sun__
)

195 
	~<kvm.h
>

196 
	~<∆i°.h
>

199 #ifde‡
HAVE_SYS_PSTAT_H


200 
	~<sys/p°©.h
>

203 #i‚de‡
O_NOFOLLOW


204 
	#O_NOFOLLOW
 0

	)

207 #i‚de‡
O_DIRECTORY


208 
	#O_DIRECTORY
 0

	)

211 #i‚de‡
MAP_FILE


212 
	#MAP_FILE
 0

	)

221 #i‡
deföed
(
HAVE_STATVFS
Ë|| deföed(
HAVE_STATVFS64
)

222 #ifde‡
HAVE_STATVFS64


223 
	#STATFS_STRUCT
 
°©vfs64


	)

224 
	#STATFS
(
PATH
, 
STR
Ë
	`°©vfs64
(PATH, STR)

	)

225 
	#FSTATFS
(
FD
, 
STR
Ë
	`f°©vfs64
(FD, STR)

	)

226 
	#STATFS_TYPE
 1

	)

228 
	#STATFS_STRUCT
 
°©vfs


	)

229 
	#STATFS
(
PATH
, 
STR
Ë
	`°©vfs
(PATH, STR)

	)

230 
	#FSTATFS
(
FD
, 
STR
Ë
	`f°©vfs
(FD, STR)

	)

231 
	#STATFS_TYPE
 2

	)

233 
	#STATFS_BAVAIL
(
X
Ë((X).
f_bavaû
)

	)

234 
	#STATFS_BLOCKS
(
X
Ë((X).
f_blocks
)

	)

235 
	#STATFS_BSIZE
(
X
Ë((X).
f_bsize
)

	)

236 
	#STATFS_FRSIZE
(
X
Ë((X).
f_‰size
)

	)

237 #ñi‡
deföed
(
HAVE_STATFS
)

238 
	#STATFS_STRUCT
 
°©fs


	)

239 
	#STATFS
(
PATH
, 
STR
Ë
	`°©fs
(PATH, STR)

	)

240 
	#FSTATFS
(
FD
, 
STR
Ë
	`f°©fs
(FD, STR)

	)

241 
	#STATFS_TYPE
 3

	)

242 
	#STATFS_BAVAIL
(
X
Ë((X).
f_bavaû
)

	)

243 
	#STATFS_BLOCKS
(
X
Ë((X).
f_blocks
)

	)

244 
	#STATFS_FRSIZE
(
X
Ë((X).
f_bsize
)

	)

245 
	#STATFS_BSIZE
(
X
Ë((X).
f_bsize
)

	)

247 
	#STATFS_STRUCT
 

	)

248 
	#STATFS
(
PATH
, 
STR
Ë(-1)

	)

249 
	#FSTATFS
(
FD
, 
STR
Ë(-1)

	)

250 
	#STATFS_TYPE
 -1

	)

251 
	#STATFS_BAVAIL
(
X
Ë(0)

	)

252 
	#STATFS_BLOCKS
(
X
Ë(0)

	)

253 
	#STATFS_BSIZE
(
X
Ë(0)

	)

254 
	#STATFS_FRSIZE
(
X
Ë(0)

	)

257 #i‚de‡
î∫o


258 
î∫o
;

260 #i‚de‡
ívú⁄


261 #ifde‡
__APPLE_CC__


262 
	~<¸t_exã∫s.h
>

263 
	#ívú⁄
 (*
	`_NSGëEnvú⁄
())

	)

265 **
ívú⁄
;

269 
	sAuthResu…_
 {

270 
	mauth_ok
;

271 
uid_t
 
	muid
;

272 
gid_t
 
	mgid
;

273 c⁄° *
	mdú
;

274 
	m¶ow_tûde_ex∑nsi⁄
;

275 *
	mbackíd_d©a
;

276 #ifde‡
THROTTLING


277 
	mthrŸéög_b™dwidth_ul
;

278 
	mthrŸéög_b™dwidth_dl
;

279 
	mthrŸéög_ul_ch™ged
;

280 
	mthrŸéög_dl_ch™ged
;

282 #ifde‡
QUOTAS


283 
	mu£r_quŸa_size
;

284 
	mu£r_quŸa_fûes
;

285 
	mquŸa_size_ch™ged
;

286 
	mquŸa_fûes_ch™ged
;

288 #ifde‡
RATIOS


289 
	møtio_u∂ﬂd
;

290 
	møtio_dow∆ﬂd
;

291 
	møtio_ul_ch™ged
;

292 
	møtio_dl_ch™ged
;

294 #ifde‡
PER_USER_LIMITS


295 
	m≥r_u£r_max
;

297 } 
	tAuthResu…
;

299 
	sPuªFûeInfo_
 {

300 **
	m«mes_≤t
;

301 
size_t
 
	m«me_off£t
;

302 
off_t
 
	msize
;

303 
time_t
 
	mmtime
;

304 
mode_t
 
	mmode
;

305 
∆ök_t
 
	m∆ök
;

306 
uid_t
 
	muid
;

307 
gid_t
 
	mgid
;

308 } 
	tPuªFûeInfo
;

310 
	#FI_NAME
(
X
Ë(*((X)->
«mes_≤t
Ë+ (X)->
«me_off£t
)

	)

313 
	mALTLOG_NONE
, 
	mALTLOG_CLF
, 
	mALTLOG_STATS
, 
	mALTLOG_W3C
, 
	mALTLOG_XFERLOG


314 } 
	tA…LogF‹m©
;

316 
	sA…LogPªfixes_
 {

317 c⁄° *
	m¥efix
;

318 c⁄° 
A…LogF‹m©
 
	mf‹m©
;

319 } 
	tA…LogPªfixes
;

322 
	mCPL_NONE
, 
	mCPL_CLEAR
, 
	mCPL_SAFE
, 
	mCPL_CONFIDENTIAL
, 
	mCPL_PRIVATE


323 } 
	tCh™√lPrŸe˘i⁄Levñ
;

325 
puª·pd_°¨t
(
¨gc
, *
¨gv
[], c⁄° *
home_dúe˘‹y
);

326 #ifde‡
WITH_TLS


327 
ssize_t
 
£cuª_ß„_wrôe
(* c⁄° 
és_fd
, c⁄° *
buf_
, 
size_t
 
cou¡
);

329 
∑r£r
();

330 
°rù˘æ
(* c⁄° 
buf
, 
size_t
 
Àn
);

331 
dob™√r
(c⁄° 
ty≥
);

332 
dou£r
(c⁄° *
«me
);

333 
d›ass
(*
∑ssw‹d
);

334 
docwd
(c⁄° *
dú
);

335 
d‹ër
(*
«me
);

336 
d‹e°
(c⁄° *
«me
);

337 
dodñe
(*
«me
);

338 
do°‹
(*
«me
, c⁄° 
≠≥nd
, c⁄° 
aut‹íame
);

339 
domkd
(*
«me
);

340 
d‹md
(*
«me
);

341 
domdtm
(c⁄° *
«me
);

342 
dosize
(c⁄° *
«me
);

343 
d€¥t
(*
p
);

344 
d›‹t
(c⁄° *
¨g
);

345 
d›‹t2
(
sockaddr_°‹age
 
a
, 
p
);

346 #i‚de‡
MINIMAL


347 
d€°a
();

348 
d€°p
();

349 
dﬂŒo
(c⁄° 
off_t
 
size
);

351 
d›asv
();

352 
do›ts
(*
¨gs
);

353 
dochmod
(*
«me
, 
mode_t
 
mode
);

354 
doutime
(*
«me
, c⁄° * c⁄° 
w™ãd_time
);

355 
îr‹
(
n
, c⁄° *
msg
);

356 
domode
(c⁄° *
¨g
);

357 
do°ru
(c⁄° *
¨g
);

358 
dŸy≥
(c⁄° *
¨g
);

359 
d⁄o›
();

360 
d‹n‰
(*
«me
);

361 
d‹¡o
(*
«me
);

362 
do°ou
();

363 
do„©
();

364 
doml°
(c⁄° * c⁄° 
fûe
);

365 
dosôëime
();

366 
ul_check_‰ì_•a˚
(c⁄° *
«me
, c⁄° 
mö_•a˚
);

367 
m≠≥dtov4
(
sockaddr_°‹age
 *
ss
);

368 
dißbÀsig«ls
();

369 
gë«mes
();

370 
d⁄li°
(*
¨g
, c⁄° 
⁄_˘æc⁄n
, c⁄° 
›t_l_
,

371 c⁄° 
›t_a_
, c⁄° 
•lô_¨gs
);

372 
›íd©a
();

373 
˛o£d©a
();

374 
˛õ¡_fÊush
();

375 
	$˛õ¡_¥ötf
(c⁄° * c⁄° 
f‹m©
, ...)

376 
	`__©åibuã__
 ((
	`f‹m©
(
¥ötf
, 1, 2)));

377 
	$addª∂y
(c⁄° 
code
, c⁄° * c⁄° 
löe
, ...)

378 
	`__©åibuã__
 ((
	`f‹m©
(
¥ötf
, 2, 3)));

379 
	`addª∂y_nof‹m©
(c⁄° 
code
, c⁄° * c⁄° 
löe
);

380 
	`d‹ïly
();

381 
	`sigh™dÀr
(
sig
);

382 
	`¥evít
(*
¨g
);

383 
	`d´m⁄s
(
ö_p‹t_t
 
£rvî_p‹t
);

384 
	$logfûe
(c⁄° 
Ácûôy
, c⁄° *
f‹m©
, ...)

385 
	`__©åibuã__
 ((
	`f‹m©
(
¥ötf
, 2, 3)));

386 *
	`skù_ã ë_c⁄åﬁs
(c⁄° *
°r
);

387 
	$dõ
(c⁄° 
îr
, c⁄° 
¥i‹ôy
, c⁄° * c⁄° 
f‹m©
, ...)

388 
	`__©åibuã__
 ((
	$f‹m©
(
¥ötf
, 3, 4))Ë
	`__©åibuã__
 ((
n‹ëu∫
));

389 
	$dõ_mem
(Ë
	`__©åibuã__
 ((
n‹ëu∫
));

390 
	$_EXIT
(c⁄° 
°©us
Ë
	`__©åibuã__
 ((
n‹ëu∫
));

391 
	`£çro˚s¢ame
(c⁄° * c⁄° 
tôÀ
);

392 
	`modînf‹m©
(c⁄° *
fûe
, *
èrgë
, 
size_t
 
èrgë_size
,

393 c⁄° * c⁄° 
¥efix
);

394 
	`sfgës
();

395 c⁄° *
	`gëgroup
(c⁄° 
gid_t
 
gid
);

396 c⁄° *
	`gë«me
(c⁄° 
uid_t
 
uid
);

397 
	`zønd
();

398 
	`sim∂ify
(*
subdú
);

399 
	`check¥öèbÀ
(c⁄° *
s
);

400 
	`dñëe_©omic_fûe
();

401 #ifde‡
WITH_RFC2640


402 *
	`ch¨£t_fs2˛õ¡
(c⁄° * c⁄° 
°rög
);

404 
	`u¶ìp2
(c⁄° 
mi¸o£c
);

405 
	`my¢¥ötf
(*
°r
, 
size_t
 
size
, c⁄° *
f‹m©
, ...);

407 
›t_a
, 
›t_C
, 
›t_d
, 
›t_F
, 
›t_l
, 
›t_R
;

409 #i‚de‡
CONFDIR


410 
	#CONFDIR
 "/ëc"

	)

413 #i‚de‡
VHOST_PATH


414 
	#VHOST_PATH
 
CONFDIR
 "/puª-·pd"

	)

417 #ifde‡
WITH_TLS


418 #i‚de‡
TLS_CERTIFICATE_FILE


419 
	#TLS_CERTIFICATE_FILE
 "/ëc/s¶/¥iv©e/puª-·pd.≥m"

	)

423 
	#FAKE_SHELL
 "·p"

	)

425 #i‚de‡
PID_FILE


426 #ifde‡
NON_ROOT_FTP


427 
	#PID_FILE
 
CONFDIR
 "/puª-·pd.pid"

	)

429 
	#PID_FILE
 
STATEDIR
 "/run/puª-·pd.pid"

	)

433 #i‚de‡
UPLOADSCRIPT_PID_FILE


434 #ifde‡
NON_ROOT_FTP


435 
	#UPLOADSCRIPT_PID_FILE
 
CONFDIR
 "/puª-u∂ﬂds¸ùt.pid"

	)

437 
	#UPLOADSCRIPT_PID_FILE
 
STATEDIR
 "/run/puª-u∂ﬂds¸ùt.pid"

	)

441 #i‚de‡
AUTHD_PID_FILE


442 #ifde‡
NON_ROOT_FTP


443 
	#AUTHD_PID_FILE
 
CONFDIR
 "/puª-authd.pid"

	)

445 
	#AUTHD_PID_FILE
 
STATEDIR
 "/run/puª-authd.pid"

	)

449 #i‚de‡
NON_ROOT_FTP


450 #ifde‡
IMPLICIT_TLS


451 
	#DEFAULT_FTP_PORT_S
 "990"

	)

453 
	#DEFAULT_FTP_PORT_S
 "21"

	)

455 #ñi‡
	`deföed
(
WIN32
Ë|| deföed(
_WIN32
Ë|| deföed(
__WIN32__
Ë|| deföed(
__CYGWIN__
)

456 #ifde‡
IMPLICIT_TLS


457 
	#DEFAULT_FTP_PORT_S
 "990"

	)

459 
	#DEFAULT_FTP_PORT_S
 "21"

	)

462 #ifde‡
IMPLICIT_TLS


463 
	#DEFAULT_FTP_PORT_S
 "9990"

	)

465 
	#DEFAULT_FTP_PORT_S
 "2121"

	)

478 
	#FTP_ACTIVE_SOURCE_PORTS
 { \

479 
DEFAULT_FTP_DATA_PORT
, 2U, 3U, 4U, 5U, 6U, 10U, 14U, 16U, 0U \

480 
	}

	)
}

482 #i‚de‡
MAXPATHLEN


483 #ifde‡
PATH_MAX


484 
	#MAXPATHLEN
 
PATH_MAX


	)

486 
	#MAXPATHLEN
 65536U

	)

487 
	gW¨nög
: 
√ôhî
 
PATH_MAX
 
n‹
 
MAXPATHLEN
 
wîe
 
found
.

488 
Remove
 
the£
 
löes
 
you
 
ªÆly
 
w™t
 
to
 
compûe
 
the
 
£rvî
, 
but


489 
the
 
£rvî
 
may
 
be
 
ö£cuª
 
a
 
wr⁄g
 
vÆue
 
is
 
£t
 
	ghîe
.

492 #i‡(
MAXPATHLEN
Ë>(
INT_MAX
)

493 
Your
 
∂©f‹m
 
has
 
a
 
vîy
 
œrge
 
	gMAXPATHLEN
, 
we
 
should
 
nŸ
 
åu°
 
	gô
.

496 #i‚de‡
DEFAULT_MAX_USERS


497 
	#DEFAULT_MAX_USERS
 50

	)

499 #i‚de‡
DEFAULT_FTP_DATA_PORT


500 #ifde‡
IMPLICIT_TLS


501 
	#DEFAULT_FTP_DATA_PORT
 989

	)

503 
	#DEFAULT_FTP_DATA_PORT
 20

	)

506 #i‚de‡
MAX_SYSLOG_LINE


507 
	#MAX_SYSLOG_LINE
 (
MAXPATHLEN
 + 512U)

	)

509 #i‚de‡
DEFAULT_IDLE


510 
	#DEFAULT_IDLE
 (15UL * 60UL)

	)

512 #i‚de‡
MAX_SITE_IDLE


513 
	#MAX_SITE_IDLE
 (42UL * 60UL)

	)

515 #i‚de‡
DEFAULT_MAX_LS_FILES


516 
	#DEFAULT_MAX_LS_FILES
 10000U

	)

518 #i‚de‡
DEFAULT_MAX_LS_DEPTH


519 
	#DEFAULT_MAX_LS_DEPTH
 5U

	)

521 #i‚de‡
GLOB_TIMEOUT


522 
	#GLOB_TIMEOUT
 17

	)

524 #i‚de‡
MAX_CPU_TIME


525 
	#MAX_CPU_TIME
 (4 * 60 * 60Ë

	)

527 #i‚de‡
MAX_SESSION_XFER_IDLE


528 
	#MAX_SESSION_XFER_IDLE
 (24 * 60 * 60Ë

	)

530 #i‚de‡
MAX_USER_LENGTH


531 
	#MAX_USER_LENGTH
 127U

	)

534 #ifde‡
LOG_FTP


535 
	#DEFAULT_FACILITY
 
LOG_FTP


	)

537 
	#DEFAULT_FACILITY
 
LOG_LOCAL2


	)

540 #i‡
deföed
(
WITH_LDAP
Ë|| deföed(
WITH_MYSQL
Ë|| deföed(
WITH_PGSQL
)

541 
	#MAX_DATA_SIZE
 (16 * 1024 * 1024Ë

	)

543 
	#MAX_DATA_SIZE
 (8 * 1024 * 1024Ë

	)

546 #i‡
CONF_TCP_SO_RCVBUF
 < 65536

547 #unde‡
CONF_TCP_SO_RCVBUF


548 
	#CONF_TCP_SO_RCVBUF
 65536

	)

550 #i‡
CONF_TCP_SO_SNDBUF
 < 65536

551 #unde‡
CONF_TCP_SO_SNDBUF


552 
	#CONF_TCP_SO_SNDBUF
 65536

	)

555 #i‚de‡
DL_MIN_CHUNK_SIZE


556 
	#DL_MIN_CHUNK_SIZE
 (8 * 1024)

	)

558 #i‚de‡
DL_DEFAULT_CHUNK_SIZE


559 
	#DL_DEFAULT_CHUNK_SIZE
 49152UL

	)

561 #i‚de‡
DL_DEFAULT_CHUNK_SIZE_ASCII


562 
	#DL_DEFAULT_CHUNK_SIZE_ASCII
 32768UL

	)

564 #i‚de‡
DL_MAX_CHUNK_SIZE


565 
	#DL_MAX_CHUNK_SIZE
 (128 * 1024UL)

	)

567 #i‚de‡
DL_DLMAP_SIZE


568 
	#DL_DLMAP_SIZE
 (128 * 1024UL)

	)

570 #i‡
DL_DEFAULT_CHUNK_SIZE
 > 
DL_MAX_CHUNK_SIZE
 || 
DL_MIN_CHUNK_SIZE
 > DL_MAX_CHUNK_SIZE

571 #îr‹ 
DL_MAX_CHUNK_SIZE
 
should¡
 
be
 <
DL_MIN_CHUNK_SIZE
 
‹
 <
DL_DEFAULT_CHUNK_SIZE


573 #i‡
DL_DLMAP_SIZE
 < 
DL_MAX_CHUNK_SIZE


574 #îr‹ 
DL_DLMAP_SIZE
 
should
 
be
 >
DL_MAX_CHUNK_SIZE


577 #i‚de‡
UL_MIN_CHUNK_SIZE


578 
	#UL_MIN_CHUNK_SIZE
 
CONF_TCP_SO_RCVBUF


	)

580 #i‚de‡
UL_DEFAULT_CHUNK_SIZE


581 
	#UL_DEFAULT_CHUNK_SIZE
 (
CONF_TCP_SO_RCVBUF
 * 2)

	)

583 #i‚de‡
UL_DEFAULT_CHUNK_SIZE_ASCII


584 #i‡
CONF_TCP_SO_RCVBUF
 < 65536

585 
	#UL_DEFAULT_CHUNK_SIZE_ASCII
 
CONF_TCP_SO_RCVBUF


	)

587 
	#UL_DEFAULT_CHUNK_SIZE_ASCII
 65536UL

	)

590 #i‚de‡
UL_MAX_CHUNK_SIZE


591 
	#UL_MAX_CHUNK_SIZE
 (512 * 1024UL)

	)

594 
	#VHOST_PREFIX_MAX_LEN
 64

	)

596 
	#PUREFTPD_TMPFILE_PREFIX
 ".puª·pd-"

	)

597 
	#ATOMIC_PREFIX_PREFIX
 
PUREFTPD_TMPFILE_PREFIX
 "u∂ﬂd."

	)

598 
	#WIN32_ANON_DIR
 "/·p"

	)

600 
	#STORAGE_PORT
(
X
Ë(*
	`°‹age_p‹t
(&(X)))

	)

601 
	#STORAGE_PORT6
(
X
Ë(*
	`°‹age_p‹t6
(&(X)))

	)

602 
	#STORAGE_SIN_ADDR
(
X
Ë(
	`°‹age_sö_addr
(&(X))->
s_addr
)

	)

603 
	#STORAGE_SIN_ADDR6
(
X
Ë(
	`°‹age_sö_addr6
(&(X))->
s6_addr
)

	)

604 
	#STORAGE_SIN_ADDR6_NF
(
X
Ë(*(
	`°‹age_sö_addr6
(&(X))))

	)

606 #ifde‡
HAVE_SS_LEN


607 
	#STORAGE_LEN
(
X
Ë((X).
ss_Àn
)

	)

608 
	#SET_STORAGE_LEN
(
X
, 
Y
Ëdÿ{ 
	`STORAGE_LEN
(XË(Y); } 0)

	)

609 #ñi‡
deföed
(
HAVE___SS_LEN
)

610 
	#STORAGE_LEN
(
X
Ë((X).
__ss_Àn
)

	)

611 
	#SET_STORAGE_LEN
(
X
, 
Y
Ëdÿ{ 
	`STORAGE_LEN
(XË(Y); } 0)

	)

613 
	#STORAGE_LEN
(
X
Ë(
	`STORAGE_FAMILY
(XË=
AF_INET
 ? (
sockaddr_ö
Ë: (
sockaddr_ö6
))

	)

614 
	#SET_STORAGE_LEN
(
X
, 
Y
Ë(Ë0

	)

617 #ifde‡
HAVE___SS_FAMILY


618 
	#STORAGE_FAMILY
(
X
Ë((X).
__ss_Ámûy
)

	)

620 
	#STORAGE_FAMILY
(
X
Ë((X).
ss_Ámûy
)

	)

623 #i‚de‡
SOL_IP


624 
	#SOL_IP
 
IPPROTO_IP


	)

626 #i‚de‡
SOL_TCP


627 
	#SOL_TCP
 
IPPROTO_TCP


	)

630 #i‚de‡
INADDR_NONE


631 
	#INADDR_NONE
 0

	)

634 #i‡!
deföed
(
O_NDELAY
Ë&& deföed(
O_NONBLOCK
)

635 
	#O_NDELAY
 
O_NONBLOCK


	)

638 #i‚de‡
FNDELAY


639 
	#FNDELAY
 
O_NDELAY


	)

642 #i‚de‡
MAP_FAILED


643 
	#MAP_FAILED
 ((*Ë-1)

	)

646 #i‚de‡
HAVE_STRTOULL


647 #ifde‡
HAVE_STRTOQ


648 
	#°πouŒ
(
X
, 
Y
, 
Z
Ë
	`°πoq
(X, Y, Z)

	)

650 
	#°πouŒ
(
X
, 
Y
, 
Z
Ë
	`°πoul
(X, Y, Z)

	)

654 #i‚de‡
ULONG_LONG_MAX


655 
	#ULONG_LONG_MAX
 (1ULL << 63)

	)

658 #ifde‡
HAVE_DIRENT_H


659 
	~<dúít.h
>

661 #ifde‡
HAVE_SYS_NDIR_H


662 
	~<sys/ndú.h
>

664 #ifde‡
HAVE_NDIR_H


665 
	~<ndú.h
>

668 #ifde‡
STAT_MACROS_BROKEN


669 #unde‡
S_ISBLK


670 #unde‡
S_ISCHR


671 #unde‡
S_ISDIR


672 #unde‡
S_ISFIFO


673 #unde‡
S_ISLNK


674 #unde‡
S_ISMPB


675 #unde‡
S_ISMPC


676 #unde‡
S_ISNWK


677 #unde‡
S_ISREG


678 #unde‡
S_ISSOCK


681 #i‚de‡
S_IFMT


682 
	#S_IFMT
 0170000

	)

684 #i‡!
deföed
(
S_ISBLK
Ë&& deföed(
S_IFBLK
)

685 
	#S_ISBLK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFBLK
)

	)

687 #i‡!
deföed
(
S_ISCHR
Ë&& deföed(
S_IFCHR
)

688 
	#S_ISCHR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFCHR
)

	)

690 #i‡!
deföed
(
S_ISDIR
Ë&& deföed(
S_IFDIR
)

691 
	#S_ISDIR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFDIR
)

	)

693 #i‡!
deföed
(
S_ISREG
Ë&& deföed(
S_IFREG
)

694 
	#S_ISREG
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFREG
)

	)

696 #i‡!
deföed
(
S_ISFIFO
Ë&& deföed(
S_IFIFO
)

697 
	#S_ISFIFO
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFIFO
)

	)

699 #i‡!
deföed
(
S_ISLNK
Ë&& deföed(
S_IFLNK
)

700 
	#S_ISLNK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFLNK
)

	)

702 #i‡!
deföed
(
S_ISSOCK
Ë&& deföed(
S_IFSOCK
)

703 
	#S_ISSOCK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFSOCK
)

	)

705 #i‡!
deföed
(
S_ISMPB
Ë&& deföed(
S_IFMPB
)

706 
	#S_ISMPB
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFMPB
)

	)

707 
	#S_ISMPC
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFMPC
)

	)

709 #i‡!
deföed
(
S_ISNWK
Ë&& deföed(
S_IFNWK
)

710 
	#S_ISNWK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFNWK
)

	)

713 #i‚de‡
S_IEXEC


714 
	#S_IEXEC
 
S_IXUSR


	)

717 #i‚de‡
S_IXUSR


718 
	#S_IXUSR
 
S_IEXEC


	)

720 #i‚de‡
S_IXGRP


721 
	#S_IXGRP
 (
S_IEXEC
 >> 3)

	)

723 #i‚de‡
S_IXOTH


724 
	#S_IXOTH
 (
S_IEXEC
 >> 6)

	)

726 #i‚de‡
S_IXUGO


727 
	#S_IXUGO
 (
S_IXUSR
 | 
S_IXGRP
 | 
S_IXOTH
)

	)

730 #ifde‡
DISABLE_UNICODE_CONTROL_CHARS


731 
	#ISCTRLCODE
(
X
Ë((XË=0x7‡|| !(((Ë(X)Ë& 0x60))

	)

733 
	#ISCTRLCODE
(
X
Ë((XË=0x7‡|| ((Ë(X)Ë< 32U)

	)

736 #i‚de‡
HAVE_MUNMAP


737 
	#munm≠
(
A
, 
B
Ë(0)

	)

740 #i‚de‡
HAVE_GETHOSTNAME


741 
	#gëho°«me
(
A
, 
B
Ë(-1)

	)

744 #i‚de‡
HAVE_SETEUID


745 #ifde‡
HAVE_SETREUID


746 
	#£ãuid
(
X
Ë
	`£åeuid
(-1, (X))

	)

747 #ñi‡
deföed
(
HAVE_SETRESUID
)

748 
	#£ãuid
(
X
Ë
	`£åesuid
(-1, (X), -1)

	)

750 
	#£ãuid
(
X
Ë(-1)

	)

753 #i‚de‡
HAVE_SETEGID


754 #ifde‡
HAVE_SETREGID


755 
	#£ãgid
(
X
Ë
	`£åegid
(-1, (X))

	)

756 #ñi‡
deföed
(
HAVE_SETRESGID
)

757 
	#£ãgid
(
X
Ë
	`£åesgid
(-1, (X), -1)

	)

759 
	#£ãgid
(
X
Ë(-1)

	)

763 #i‡
deföed
(
HAVE_DEV_ARANDOM
Ë|| deföed(
HAVE_DEV_URANDOM
Ë|| deföed(
HAVE_DEV_RANDOM
)

764 
	#HAVE_RANDOM_DEV
 1

	)

767 
	#CRLF
 "\r\n"

	)

769 #ifde‡
WITH_DMALLOC


770 
	#_exô
(
X
Ë
	`exô
(X)

	)

773 #i‚de‡
off£tof


774 
	#off£tof
(
ty≥
, 
membî
Ë((
size_t
Ë&(—y≥*Ë
NULL
)->membî)

	)

777 
	~"bsd-ªÆ∑th.h
"

778 
	~"ÁkechroŸ.h
"

	@src/ftpd_p.h

1 #i‚de‡
__FTPD_P_H__


2 
	#__FTPD_P_H__
 1

	)

4 
	~"·pd.h
"

5 
	~"log_unix.h
"

6 #ifde‡
USE_PAM


7 
	~"log_∑m.h
"

9 #ifde‡
WITH_LDAP


10 
	~"log_ld≠.h
"

12 #ifde‡
WITH_MYSQL


13 
	~"log_mysql.h
"

15 #ifde‡
WITH_PGSQL


16 
	~"log_pgsql.h
"

18 #ifde‡
WITH_PUREDB


19 
	~"log_puªdb.h
"

21 #ifde‡
WITH_EXTAUTH


22 
	~"log_exèuth.h
"

25 #i‚de‡
HAVE_GETOPT_LONG


26 
	~"bsd-gë›t_l⁄g.h
"

28 
	~<gë›t.h
>

31 #ifde‡
HAVE_SYS_WAIT_H


32 
	~<sys/waô.h
>

35 
	#DEFAULT_BACKLOG
 42

	)

36 
	#DEFAULT_BACKLOG_DATA
 8

	)

37 
	#NICE_VALUE
 10

	)

38 
	#THROTTLING_UNIT
 10000UL

	)

39 
	#MAX_GROUPS
 256

	)

40 
	#MAX_PASSWD_TRIES
 5

	)

41 
	#PASSWD_FAILURE_DELAY
 (3UL*1000000ULË

	)

42 
	#MAX_DIRSCAN_TRIES
 50

	)

43 
	#DIRSCAN_FAILURE_DELAY
 (100000ULË

	)

44 
	#ASCII_CHUNKSIZE
 65536U

	)

45 
	#BANNER_MAXLINES
 100

	)

46 
	#MAX_SERVER_REPLY_LEN
 (
MAXPATHLEN
 + (
size_t
Ë50U)

	)

48 #i‚de‡
NO_STANDALONE


49 vﬁ©ûê
sig_©omic_t
 
	g°›_£rvî
;

50 c⁄° *
	g°™dÆ⁄e_p‹t
 = 
DEFAULT_FTP_PORT_S
;

51 c⁄° *
	g°™dÆ⁄e_ù
;

52 vﬁ©ûê
	gnb_chûdªn
;

53 vﬁ©ûê
	gli°ífd
 = -1;

54 vﬁ©ûê
	gli°ífd6
 = -1;

57 
	sª∂y
 {

58 
ª∂y
 *
	m√xt
;

59 
	mlöe
[1];

62 c⁄° *
	gGETOPT_OPTIONS
 =

64 #ifde‡
WITH_RFC2640


68 #i‚de‡
NO_STANDALONE


72 #ifde‡
COOKIE


75 #i‚de‡
NO_STANDALONE


79 #ifde‡
QUOTAS


82 #i‡
deföed
(
WITH_UPLOAD_SCRIPT
)

85 #ifde‡
WITH_ALTLOG


89 #ifde‡
RATIOS


93 #i‚de‡
NO_STANDALONE


96 #ifde‡
THROTTLING


100 #ifde‡
WITH_OSX_BONJOUR


103 #ifde‡
PER_USER_LIMITS


106 #ifde‡
WITH_TLS


111 #i‚de‡
NO_GETOPT_LONG


112 
›ti⁄
 
	gl⁄g_›ti⁄s
[] = {

113 { "nŸrunˇã", 0, 
NULL
, '0' },

114 { "logpid", 0, 
NULL
, '1' },

115 { "ùv4⁄ly", 0, 
NULL
, '4' },

116 { "ùv6⁄ly", 0, 
NULL
, '6' },

117 #ifde‡
WITH_RFC2640


118 { "fsch¨£t", 1, 
NULL
, '8' },

119 { "˛õ¡ch¨£t", 1, 
NULL
, '9' },

121 { "chroŸevîy⁄e", 0, 
NULL
, 'A' },

122 { "åu°edgid", 1, 
NULL
, 'a' },

123 { "brokí˛õ¡scom∑tibûôy", 0, 
NULL
, 'b' },

124 #i‚de‡
NO_STANDALONE


125 { "d´m⁄ize", 0, 
NULL
, 'B' },

126 { "max˛õ¡•îù", 1, 
NULL
, 'C' },

128 { "max˛õ¡¢umbî", 1, 
NULL
, 'c' },

129 { "vîbo£log", 0, 
NULL
, 'd' },

130 { "di•œydŸfûes", 0, 
NULL
, 'D' },

131 { "™⁄ymous⁄ly", 0, 
NULL
, 'e' },

132 { "nﬂn⁄ymous", 0, 
NULL
, 'E' },

133 { "sy¶ogÁcûôy", 1, 
NULL
, 'f' },

134 #ifde‡
COOKIE


135 { "f‹tu√sfûe", 1, 
NULL
, 'F' },

137 #i‚de‡
NO_STANDALONE


138 { "pidfûe", 1, 
NULL
, 'g' },

140 { "n‹íame", 0, 
NULL
, 'G' },

141 { "hñp", 0, 
NULL
, 'h' },

142 { "d⁄åesﬁve", 0, 
NULL
, 'H' },

143 { "maxidÀtime", 1, 
NULL
, 'I' },

144 { "™⁄ymousˇ¡u∂ﬂd", 0, 
NULL
, 'i' },

145 { "¸óãhomedú", 0, 
NULL
, 'j' },

146 { "kì∑Œfûes", 0, 
NULL
, 'K' },

147 { "maxdiskußgï˘", 1, 
NULL
, 'k' },

148 { "logö", 1, 
NULL
, 'l' },

149 { "limôªcursi⁄", 1, 
NULL
, 'L' },

150 { "™⁄ymousˇn¸óãdús", 0, 
NULL
, 'M' },

151 { "maxlﬂd", 1, 
NULL
, 'm' },

152 { "«tmode", 0, 
NULL
, 'N' },

153 #ifde‡
QUOTAS


154 { "quŸa", 1, 
NULL
, 'n' },

156 #i‡
deföed
(
WITH_UPLOAD_SCRIPT
)

157 { "u∂ﬂds¸ùt", 0, 
NULL
, 'o' },

159 #ifde‡
WITH_ALTLOG


160 { "Æéog", 1, 
NULL
, 'O' },

162 { "∑ssivï‹å™ge", 1, 
NULL
, 'p' },

163 { "f‹˚∑ssiveù", 1, 
NULL
, 'P' },

164 #ifde‡
RATIOS


165 { "™⁄ymou§©io", 1, 
NULL
, 'q' },

166 { "u£º©io", 1, 
NULL
, 'Q' },

168 { "aut‹íame", 0, 
NULL
, 'r' },

169 { "nochmod", 0, 
NULL
, 'R' },

170 { "™tiw¨ez", 0, 
NULL
, 's' },

171 #i‚de‡
NO_STANDALONE


172 { "böd", 1, 
NULL
, 'S' },

174 { "™⁄ymousb™dwidth", 1, 
NULL
, 't' },

175 { "u£rb™dwidth", 1, 
NULL
, 'T' },

176 { "umask", 1, 
NULL
, 'U' },

177 { "möuid", 1, 
NULL
, 'u' },

178 { "åu°edù", 1, 
NULL
, 'V' },

179 #ifde‡
WITH_OSX_BONJOUR


180 { "b⁄jour", 1, 
NULL
, 'v' },

182 { "Ælowu£rfxp", 0, 
NULL
, 'w' },

183 { "Ælow™⁄ymousfxp", 0, 
NULL
, 'W' },

184 { "¥ohibôdŸfûeswrôe", 0, 
NULL
, 'x' },

185 { "¥ohibôdŸfûe§ód", 0, 
NULL
, 'X' },

186 #ifde‡
PER_USER_LIMITS


187 { "≥ru£æimôs", 1, 
NULL
, 'y' },

189 #ifde‡
WITH_TLS


190 { "és", 1, 
NULL
, 'Y' },

191 { "éscùhîsuôe", 1, 
NULL
, 'J' },

193 { "ÆlowdŸfûes", 0, 
NULL
, 'z' },

194 { "cu°omî¥oof", 0, 
NULL
, 'Z' },

195 { 
NULL
, 0, NULL, 0 }

200 #ifde‡
WITH_ALTLOG


201 c⁄° 
A…LogPªfixes
 
	gÆéog¥efixes
[] = {

202 { "˛f", 
ALTLOG_CLF
 },

203 { "°©s", 
ALTLOG_STATS
 },

204 { "w3c", 
ALTLOG_W3C
 },

205 { "x„æog", 
ALTLOG_XFERLOG
 },

206 { 
NULL
, 
ALTLOG_NONE
 }

209 
	#ALTLOG_DELIMITER
 ':'

	)

210 
	#ALTLOG_DEFAULT
 
ALTLOG_CLF


	)

213 #i‚de‡
WITHOUT_PRIVSEP


214 
	#VERSION_PRIVSEP
 " [¥iv£p]"

	)

216 
	#VERSION_PRIVSEP
 ""

	)

219 #ifde‡
WITH_TLS


220 
	#VERSION_TLS
 " [TLS]"

	)

222 
	#VERSION_TLS
 ""

	)

225 
sig£t_t
 
	gﬁd_sigmask
;

227 #i‚de‡
NO_PROCNAME_CHANGE


228 #i‡
deföed
(
__löux__
Ë&& !deföed(
HAVE_SETPROCTITLE
)

229 **
	g¨gv0
;

230 
size_t
 
	g¨gv_…h
;

245 
	sAuthítiˇti⁄_
 {

246 c⁄° * 
	m«me
;

247 (* 
	m∑r£
)(c⁄° * c⁄° 
	mfûe
);

248 (* 
	mcheck
)(
AuthResu…
 * c⁄° 
	mªsu…
,

249 c⁄° *
	maccou¡
, c⁄° *
	m∑ssw‹d
,

250 c⁄° 
sockaddr_°‹age
 * c⁄° 
	mß
,

251 c⁄° 
sockaddr_°‹age
 * c⁄° 
	m≥î
);

252 (* 
	mexô
)();

253 } 
	tAuthítiˇti⁄
;

255 
Authítiˇti⁄
 
	gauth_li°
[] = {

256 { "unix", 
pw_unix_∑r£
, 
pw_unix_check
, 
pw_unix_exô
 },

257 #ifde‡
USE_PAM


258 { "∑m", 
pw_∑m_∑r£
, 
pw_∑m_check
, 
pw_∑m_exô
 },

260 #ifde‡
WITH_MYSQL


261 { "mysql", 
pw_mysql_∑r£
, 
pw_mysql_check
, 
pw_mysql_exô
 },

263 #ifde‡
WITH_PGSQL


264 { "pgsql", 
pw_pgsql_∑r£
, 
pw_pgsql_check
, 
pw_pgsql_exô
 },

266 #ifde‡
WITH_LDAP


267 { "ld≠", 
pw_ld≠_∑r£
, 
pw_ld≠_check
, 
pw_ld≠_exô
 },

269 #ifde‡
WITH_PUREDB


270 { "puªdb", 
pw_puªdb_∑r£
, 
pw_puªdb_check
, 
pw_puªdb_exô
 },

272 #ifde‡
WITH_EXTAUTH


273 { "exèuth", 
pw_exèuth_∑r£
, 
pw_exèuth_check
, 
pw_exèuth_exô
 },

275 { 
NULL
, NULL, NULL, NULL }

278 #ifde‡
USE_PAM


279 
	#DEFAULT_AUTHENTICATION
 (&
auth_li°
[1]Ë

	)

281 
	#DEFAULT_AUTHENTICATION
 (&
auth_li°
[0]Ë

	)

284 
	sAuthítiˇti⁄s_
 {

285 c⁄° 
Authítiˇti⁄
 *
	mauth
;

286 *
	mc⁄f_fûe
;

287 
Authítiˇti⁄s_
 *
	m√xt
;

288 } 
	tAuthítiˇti⁄s
;

290 
Authítiˇti⁄s
 *
	gfú°_authítiˇti⁄s
, *
	gœ°_authítiˇti⁄s
;

292 
	sDLH™dÀr_
 {

293 
	m˛õ¡fd
;

294 *
	més_˛õ¡fd
;

295 
	mx„rfd
;

296 
	mf
;

297 *
	més_fd
;

298 
off_t
 
	mfûe_size
;

299 
size_t
 
	mdlm≠_size
;

300 
off_t
 
	mcur_pos
;

301 
off_t
 
	mchunk_size
;

302 
off_t
 
	mmö_chunk_size
;

303 
off_t
 
	mdeÁu…_chunk_size
;

304 
off_t
 
	mmax_chunk_size
;

305 
off_t
 
	mdlm≠_pos
;

306 
off_t
 
	mdlm≠_fdpos
;

307 
off_t
 
	mtŸÆ_dow∆ﬂded
;

308 
size_t
 
	msizeof_m≠
;

309 *
	mm≠
;

310 *
	mm≠_d©a
;

311 
	mascii_mode
;

312 
	mmö_¶ìp
;

313 
	mmax_¶ìp
;

314 
	mb™dwidth
;

315 
pﬁlfd
 
	mpfds_f_ö
;

316 } 
	tDLH™dÀr
;

318 
	sULH™dÀr_
 {

319 *
	mbuf
;

320 
size_t
 
	msizeof_buf
;

321 
	m˛õ¡fd
;

322 *
	més_˛õ¡fd
;

323 
	mx„rfd
;

324 *
	més_fd
;

325 
	mf
;

326 
off_t
 
	mcur_pos
;

327 
off_t
 
	mchunk_size
;

328 
off_t
 
	mmö_chunk_size
;

329 
off_t
 
	mdeÁu…_chunk_size
;

330 
off_t
 
	mmax_chunk_size
;

331 
off_t
 
	mtŸÆ_u∂ﬂded
;

332 
	mascii_mode
;

333 
	mmö_¶ìp
;

334 
	mmax_¶ìp
;

335 
	mb™dwidth
;

336 
off_t
 
	mmax_fûesize
;

337 
	midÀtime
;

338 
pﬁlfd
 
	mpfds
[2];

339 
pﬁlfd
 
	mpfds_comm™d
;

340 } 
	tULH™dÀr
;

342 
	#PFD_DATA
 0

	)

343 
	#PFD_COMMANDS
 1

	)

345 #i‡
deföed
(
WIN32
Ë|| deföed(
_WIN32
Ë|| deföed(
__WIN32__
Ë|| deföed (
__CYGWIN__
)

346 
∑sswd
 *
Ákegëpw«m
(c⁄° * c⁄° 
«me
);

347 
	#gëpw«m
(
A
Ë
	`Ákegëpw«m
(A)

	)

348 
	#gëpwuid
(
A
Ë
	`Ákegëpw«m
(
NULL
)

	)

350 
	#NON_ROOT_ANON_DIR
 "/·p"

	)

352 #ifde‡
PROBE_RANDOM_AT_RUNTIME


353 c⁄° *
	gøndom_devi˚
;

356 
ª∂y
 *
	gfú°ª∂y
;

357 
ª∂y
 *
	gœ°ª∂y
;

	@src/ftpwho-read.c

1 
	~<c⁄fig.h
>

3 #ifde‡
PER_USER_LIMITS


4 
	~"·pd.h
"

5 
	~"·pwho-upd©e.h
"

6 
	~"globÆs.h
"

7 
	~"·pwho-ªad.h
"

9 #ifde‡
WITH_DMALLOC


10 
	~<dmÆloc.h
>

13 
	$check¥oc
(c⁄° 
pid_t
 
¥oc
)

15  
	`kûl
(
¥oc
, 0Ë=0 || 
î∫o
 =
EPERM
;

16 
	}
}

18 
	$sc‹ebﬂrd_˛ónup
(c⁄° * c⁄° 
fûe
)

20 
pid_t
 
pid
;

22 i‡(
	`°æí
(
fûe
Ë< 
SCOREBOARD_PREFIX
) {

25 
pid
 = (
pid_t
Ë
	`°πoul
(
fûe
 +  
SCOREBOARD_PREFIX
, 
NULL
, 10);

26 i‡(
	`check¥oc
(
pid
) == 0) {

27 (Ë
	`u∆ök
(
fûe
);

31 
	}
}

33 
	$·pwho_ªad_cou¡
(c⁄° * c⁄° 
u£r
)

35 
fd
;

36 
cou¡
 = 0;

37 
DIR
 *
dú
;

38 
dúít
 *
íåy
;

39 
foundaccou¡
[
MAX_USER_LENGTH
 + 1U];

41 i‡(
	`chdú
(
SCOREBOARD_PATH
Ë!0 || (
dú
 = 
	`›ídú
(".")Ë=
NULL
) {

44 (
íåy
 = 
	`ªaddú
(
dú
)Ë!
NULL
) {

45 i‡(
	`°∫cmp
(
íåy
->
d_«me
, 
SCOREBOARD_PREFIX
,

46  
SCOREBOARD_PREFIX
 - 1U) != 0 ||

47 
	`sc‹ebﬂrd_˛ónup
(
íåy
->
d_«me
) != 0 ||

48 (
fd
 = 
	`›í
(
íåy
->
d_«me
, 
O_RDONLY
 | 
O_NOFOLLOW
)) == -1) {

56 #ifde‡
HAVE_PREAD


57 i‡(
	`¥ód
(
fd
, 
foundaccou¡
,  foundaccount,

58 
	`off£tof
(
FTPWhoE¡ry
, 
accou¡
)Ë! 
foundaccou¡
) {

59 
cou¡
++;

60 
√xt⁄e_˛o£
;

63 i‡(
	`l£ek
(
fd
, (
off_t
Ë
	`off£tof
(
FTPWhoE¡ry
, 
accou¡
), 
SEEK_SET
) ==

64 (
off_t
) -1) {

65 
√xt⁄e_˛o£
;

67 i‡(
	`ªad
(
fd
, 
foundaccou¡
,  foundaccount) !=

68  
foundaccou¡
) {

69 
cou¡
++;

70 
√xt⁄e_˛o£
;

73 
foundaccou¡
[( foundaccount) - 1] = 0;

74 i‡(
	`°rˇ£cmp
(
foundaccou¡
, 
u£r
Ë=0 && 
cou¡
 < 
UINT_MAX
) {

75 
cou¡
++;

77 
√xt⁄e_˛o£
:

78 (Ë
	`˛o£
(
fd
);

80 
	`˛o£dú
(
dú
);

81 #ifde‡
DEBUG


82 
	`addª∂y
(0, "Thê[%s]áccou¡ i†ÆªadyÜogged %uÅime%c", 
u£r
, 
cou¡
,

83 
cou¡
 > 0 ? 's' : 0);

85  
cou¡
;

86 
	}
}

89 sig√d 
v6ªady
;

	@src/ftpwho-read.h

1 #i‚de‡
__FTPWHO_READ_H__


2 
	#__FTPWHO_READ_H__
 1

	)

4 #ifde‡
PER_USER_LIMITS


6 
·pwho_ªad_cou¡
(c⁄° * c⁄° 
u£r
);

	@src/ftpwho-update.c

1 
	~<c⁄fig.h
>

3 #ifde‡
FTPWHO


4 
	~"·pd.h
"

5 
	~"·pwho-upd©e_p.h
"

6 
	~"·pwho-upd©e.h
"

7 
	~"globÆs.h
"

8 #i‚de‡
WITHOUT_PRIVSEP


9 
	~"¥iv£p.h
"

12 #ifde‡
WITH_DMALLOC


13 
	~<dmÆloc.h
>

16 
	$·pwho_exô
()

18 
	`dißbÀsig«ls
();

19 i‡(
shm_d©a_cur
 !
NULL
) {

20 
shm_d©a_cur
->
°©e
 = 
FTPWHO_STATE_FREE
;

22 #i‚de‡
NO_INETD


23 
°™dÆ⁄e
 == 0 &&

25 
chroŸed
 != 0) {

26 (Ë
	`msync
((*Ë
shm_d©a_cur
,  (
FTPWhoE¡ry
), 
MS_ASYNC
);

28 (Ë
	`munm≠
((*Ë
shm_d©a_cur
,  (
FTPWhoE¡ry
));

30 i‡(
mm≠_fd
 != -1) {

31 (Ë
	`˛o£
(
mm≠_fd
);

33 #i‚de‡
WITHOUT_PRIVSEP


35 #i‚de‡
NO_INETD


36 
°™dÆ⁄e
 == 0 &&

38 
sc‹ebﬂrdfûe
 !
NULL
) {

39 (Ë
	`¥iv£p_ªmove·pwh€¡ry
();

43 #i‚de‡
NO_INETD


44 
°™dÆ⁄e
 == 0 &&

46 
chroŸed
 =0 && 
sc‹ebﬂrdfûe
 !
NULL
) {

47 #i‚de‡
NON_ROOT_FTP


48 (Ë
	`£ãuid
((
uid_t
) 0);

50 (Ë
	`u∆ök
(
sc‹ebﬂrdfûe
);

53 
	}
}

55 
	$·pwho_u∆ock
()

57 #i‡
	`deföed
(
__O≥nBSD__
)

58 (Ë
	`msync
(
shm_d©a_cur
, (
size_t
Ë0U, 
MS_ASYNC
);

60 
lock
.
l_ty≥
 = 
F_UNLCK
;

61 
	`f˙é
(
mm≠_fd
, 
F_SETLK
, &
lock
) < 0) {

62 i‡(
î∫o
 !
EINTR
) {

66 
	}
}

68 
	$·pwho_lock
()

70 
lock
.
l_ty≥
 = 
F_WRLCK
;

71 
	`f˙é
(
mm≠_fd
, 
F_SETLKW
, &
lock
) < 0) {

72 i‡(
î∫o
 !
EINTR
) {

76 
	}
}

78 #i‚de‡
NO_STANDALONE


79 
	$·pwho_u∆öksbfûe
(c⁄° 
pid_t
 
pid
)

81 
size_t
 
sbfûe_size
;

82 *
sbfûe
;

84 
sbfûe_size
 =  
SCOREBOARD_PATH
 - 1U + 1U +

85  
SCOREBOARD_PREFIX
 - 1U + 8U + 1U;

87 i‡((
sbfûe
 = 
	`ALLOCA
(
sbfûe_size
)Ë=
NULL
) {

90 i‡(
	`SNCHECK
(
	`¢¥ötf
(
sbfûe
, 
sbfûe_size
,

91 
SCOREBOARD_PATH
 "/" 
SCOREBOARD_PREFIX
 "%08lu",

92 (Ë
pid
), 
sbfûe_size
)) {

93 
	`ALLOCA_FREE
(
sbfûe
);

96 (Ë
	`u∆ök
(
sbfûe
);

97 
	`ALLOCA_FREE
(
sbfûe
);

98 
	}
}

101 
	$·pwho_öôwho
()

103 
fd
;

104 
size_t
 
sc‹ebﬂrdfûe_size
;

105 
°©
 
°
;

107 
shm_d©a_cur
 = 
NULL
;

108 i‡((
fd
 = 
	`›í
(
SCOREBOARD_PATH
, 
O_RDONLY
 | 
O_DIRECTORY
)) == -1) {

109 i‡(
	`mkdú
(
SCOREBOARD_PATH
, (
mode_t
) 0700) != 0) {

113 i‡(
	`f°©
(
fd
, &
°
Ë!0 || !
	`S_ISDIR
(°.
°_mode
) ||

114 #ifde‡
NON_ROOT_FTP


115 
°
.
°_uid
 !
	`gëeuid
()

117 
°
.
°_uid
 !(
uid_t
) 0

120 
	`˛o£
(
fd
);

123 i‡((
°
.
°_mode
 & 0777) != 0700) {

124 i‡(
	`fchmod
(
fd
, 0700) != 0) {

125 
	`˛o£
(
fd
);

130 
	`˛o£
(
fd
);

131 
sc‹ebﬂrdfûe_size
 =  
SCOREBOARD_PATH
 - 1U + 1U +

132  
SCOREBOARD_PREFIX
 - 1U + 8U + 1U;

133 i‡((
sc‹ebﬂrdfûe
 = 
	`mÆloc
(
sc‹ebﬂrdfûe_size
)Ë=
NULL
) {

136 i‡(
	`SNCHECK
(
	`¢¥ötf
(
sc‹ebﬂrdfûe
, 
sc‹ebﬂrdfûe_size
,

137 
SCOREBOARD_PATH
 "/" 
SCOREBOARD_PREFIX
 "%08lu",

138 (Ë
	`gëpid
()), 
sc‹ebﬂrdfûe_size
)) {

139 
îr
:

140 
	`‰ì
(
sc‹ebﬂrdfûe
);

141 
sc‹ebﬂrdfûe
 = 
NULL
;

142 
shm_d©a_cur
 = 
NULL
;

150 i‡((
mm≠_fd
 = 
	`›í
(
sc‹ebﬂrdfûe
,

151 
O_RDWR
 | 
O_CREAT
 | 
O_NOFOLLOW
, 0600)) == -1) {

152 
îr
;

154 i‡(
	`f°©
(
mm≠_fd
, &
°
Ë!0 || !
	`S_ISREG
(°.
°_mode
) ||

155 (
°
.
°_mode
 & 0600) != 0600 ||

156 #ifde‡
NON_ROOT_FTP


157 
°
.
°_uid
 !
	`gëeuid
()

159 
°
.
°_uid
 !(
uid_t
) 0

162 
îr2
:

163 
	`˛o£
(
mm≠_fd
);

164 
îr
;

166 i‡(
	`l£ek
(
mm≠_fd
, (
off_t
Ë( (
FTPWhoE¡ry
) - 1U),

167 
SEEK_SET
Ë=(
off_t
) -1) {

168 
îr2
;

170 
	`wrôe
(
mm≠_fd
, "", (
size_t
) 1U) < 0 &&

171 (
î∫o
 =
EAGAIN
 ||Éºnÿ=
EINTR
));

172 
lock
.
l_whí˚
 = 
SEEK_SET
;

173 
lock
.
l_°¨t
 = (
off_t
) 0;

174 
lock
.
l_Àn
 = (
off_t
) 0;

175 
lock
.
l_pid
 = 
	`gëpid
();

176 i‡((
shm_d©a_cur
 =

177 (
FTPWhoE¡ry
 *Ë
	`mm≠
(
NULL
,  (FTPWhoEntry),

178 
PROT_WRITE
 | 
PROT_READ
,

179 
MAP_SHARED
 | 
MAP_FILE
,

180 
mm≠_fd
, (
off_t
Ë0)Ë=(*Ë
MAP_FAILED
) {

181 
îr2
;

184 
	}
}

187 sig√d 
v6ªady
;

	@src/ftpwho-update.h

1 #i‚de‡
__FTPWHO_UPDATE_H__


2 
	#__FTPWHO_UPDATE_H__
 1

	)

4 #ifde‡
FTPWHO


6 #ifde‡
NON_ROOT_FTP


7 
	#SCOREBOARD_PATH
 
CONFDIR
 "/puª-·pd-·pwho"

	)

9 
	#SCOREBOARD_PATH
 
STATEDIR
 "/run/puª-·pd"

	)

11 
	#SCOREBOARD_PREFIX
 "˛õ¡-"

	)

14 
	mFTPWHO_STATE_FREE
 = 0,

15 
	mFTPWHO_STATE_IDLE
, 
	mFTPWHO_STATE_DOWNLOAD
, 
	mFTPWHO_STATE_UPLOAD


16 } 
	tFTPWhoE¡rySèã
;

18 
	sFTPWhoE¡ry_
 {

19 
FTPWhoE¡rySèã
 
	m°©e
;

20 
pid_t
 
	mpid
;

21 
sockaddr_°‹age
 
	maddr
;

22 
sockaddr_°‹age
 
	mloˇl_addr
;

23 
time_t
 
	md©e
;

24 
time_t
 
	mx„r_d©e
;

25 vﬁ©ûê
off_t
 
	mª°¨èt
;

26 vﬁ©ûê
off_t
 
	mdow∆ﬂd_tŸÆ_size
;

27 vﬁ©ûê
off_t
 
	mdow∆ﬂd_cuºít_size
;

28 
	maccou¡
[
MAX_USER_LENGTH
 + 1U];

29 #i‡
deföed
(
__O≥nBSD__
)

30 
	mfûíame
[1024];

32 #ifde‡
PAGE_SIZE


33 #i‡
PAGE_SIZE
 > 2048

34 
	mfûíame
[
PAGE_SIZE
 - 1024];

36 
	mfûíame
[1024];

39 
	mfûíame
[1024];

42 } 
	tFTPWhoE¡ry
;

44 
·pwho_öôwho
();

45 
·pwho_exô
();

46 
·pwho_lock
();

47 
·pwho_u∆ock
();

48 #i‚de‡
NO_STANDALONE


49 
·pwho_u∆öksbfûe
(c⁄° 
pid_t
 
pid
);

	@src/ftpwho-update_p.h

1 #i‚de‡
__FTPWHO_UPDATE_P_H__


2 
	#__FTPWHO_UPDATE_P_H__
 1

	)

4 
	gmm≠_fd
 = -1;

5 
Êock
 
	glock
;

	@src/getloadavg.c

1 #ifde‡
HAVE_CONFIG_H


2 
	~<c⁄fig.h
>

5 #i‚de‡
HAVE_GETLOADAVG


7 
	$gëlﬂdavg
(
lﬂdavg
[], 
√Àm
)

9 i‡(
√Àm
 <= 0) {

13 
√Àm
--;

14 
lﬂdavg
[
√Àm
] = 0.0;

15 } 
√Àm
 != 0);

17  
√Àm
;

18 
	}
}

20 sig√d 
v6ªady
;

	@src/getloadavg.h

1 #i‚de‡
__GETLOADAVG_H__


2 
	#__GETLOADAVG_H__
 1

	)

4 #i‚de‡
HAVE_GETLOADAVG


5 
gëlﬂdavg
(
lﬂdavg
[], 
√Àm
);

	@src/globals.h

1 #i‚de‡
__GLOBALS_H__


2 
	#__GLOBALS_H__
 1

	)

4 #ifde‡
DEFINE_GLOBALS


5 
	#GLOBAL0
(
A
Ë
	)
A

6 
	#GLOBAL
(
A
, 
B
ËA = 
	)
B

8 
	#GLOBAL0
(
A
Ë
	)
A

9 
	#GLOBAL
(
A
, 
B
Ë
	)
A

12 
GLOBAL
(
deÁu…_tz_f‹_puãnv
[], "TZ=UTC+00:00");

13 
GLOBAL0
(
dow∆ﬂded
);

14 
GLOBAL0
(
u∂ﬂded
);

15 
GLOBAL0
(sig√d 
™⁄_⁄ly
);

16 
GLOBAL0
(
sockaddr_°‹age
 *
åu°edù
);

17 
GLOBAL0
(vﬁ©ûêsig√d 
loggög
);

18 #ifde‡
THROTTLING


19 
GLOBAL0
(
thrŸéög_dñay
);

20 
GLOBAL0
(sig√d 
thrŸéög
);

22 
GLOBAL0
(
thrŸéög_b™dwidth_dl
);

23 
GLOBAL0
(
thrŸéög_b™dwidth_ul
);

24 
GLOBAL0
(sig√d 
Ælowfxp
);

25 
GLOBAL0
(sig√d 
∑ssive
);

26 
GLOBAL
(
˛õ¡fd
, 0);

27 
GLOBAL
(
d©afd
, -1);

28 
GLOBAL0
(
sockaddr_°‹age
 
˘æc⁄n
);

29 
GLOBAL0
(sig√d 
v6ªady
);

30 
GLOBAL0
(sig√d 
no_ùv4
);

31 
GLOBAL
(c⁄° 
size_t
 
cmdsize
, 
MAXPATHLEN
 + 16U);

32 
GLOBAL0
(
cmd
[
MAXPATHLEN
 + 32U]);

33 
GLOBAL0
(
wd
[
MAXPATHLEN
 + 1U]);

34 
GLOBAL0
(*
roŸ_dúe˘‹y
);

35 
GLOBAL0
(sig√d 
loggedö
);

36 
GLOBAL0
(
accou¡
[
MAX_USER_LENGTH
 + 1U]);

37 
GLOBAL0
(*
ª«me‰om
);

38 
GLOBAL0
(
ö_p‹t_t
 
£rvîp‹t
);

39 
GLOBAL0
(sig√d 
u£rchroŸ
);

40 
GLOBAL0
(sig√d 
chroŸed
);

41 
GLOBAL0
(
uid_t
 
chroŸ_åu°edgid
);

42 
GLOBAL0
(sig√d 
brokí_˛õ¡_com∑t
);

43 
GLOBAL0
(
uid_t
 
w¨ez
);

44 
GLOBAL0
(sig√d 
debug
);

45 
GLOBAL0
(sig√d 
gue°
);

46 
GLOBAL0
(
uid_t
 
u£ruid
);

47 
GLOBAL0
(sig√d 
ˇndow∆ﬂd
);

48 
GLOBAL0
(
lﬂd
);

49 
GLOBAL
(
time_t
 
no›idÀ
, (time_t) - 1);

50 
GLOBAL
(
fú°p‹t
, 1024U);

51 
GLOBAL
(
œ°p‹t
, 65535U);

52 
GLOBAL
(sig√d 
dŸ_wrôe_ok
, 1);

53 
GLOBAL
(sig√d 
dŸ_ªad_ok
, 1);

54 
GLOBAL0
(sig√d 
dŸ_ªad_™⁄_ok
);

55 #i‚de‡
DEFAULT_TO_BINARY_TYPE


56 
GLOBAL
(sig√d 
ty≥
, 1);

58 
GLOBAL
(sig√d 
ty≥
, 2);

60 #ifde‡
RATIOS


61 
GLOBAL0
(
øtio_u∂ﬂd
);

62 
GLOBAL0
(
øtio_dow∆ﬂd
);

63 
GLOBAL0
(sig√d 
øtio_f‹_n⁄_™⁄
);

65 
GLOBAL0
(
off_t
 
ª°¨èt
);

66 
GLOBAL
(
idÀtime
, 
DEFAULT_IDLE
);

67 
GLOBAL0
(
idÀtime_no›
);

68 
GLOBAL
(sig√d 
ªsﬁve_ho°«mes
, 1);

69 
GLOBAL0
(
Ælow_™⁄_mkdú
);

70 
GLOBAL
(
max_ls_fûes
, 
DEFAULT_MAX_LS_FILES
);

71 
GLOBAL
(
max_ls_dïth
, 
DEFAULT_MAX_LS_DEPTH
);

72 
GLOBAL0
(*
f‹tu√s_fûe
);

73 
GLOBAL0
(
ho°
[
NI_MAXHOST
]);

74 
GLOBAL0
(
ª∂ycode
);

75 
GLOBAL0
(sig√d 
f‹˚_ls_a
);

76 
GLOBAL0
(
sockaddr_°‹age
 
≥î
);

77 
GLOBAL0
(
sockaddr_°‹age
 
f‹˚_∑ssive_ù
);

78 
GLOBAL0
(c⁄° *
f‹˚_∑ssive_ù_s
);

79 
GLOBAL0
(
ö_p‹t_t
 
≥îd©≠‹t
);

80 
GLOBAL0
(
maxlﬂd
);

81 
GLOBAL
(
maxu£rs
, 
DEFAULT_MAX_USERS
);

82 #ifde‡
PER_USER_LIMITS


83 
GLOBAL0
(
≥r_u£r_max
);

84 
GLOBAL0
(
≥r_™⁄_max
);

86 
GLOBAL
(vﬁ©ûê
x„rfd
, -1);

87 #i‚de‡
NO_STANDALONE


88 
GLOBAL0
(
maxù
);

90 #i‚de‡
NO_INETD


91 
GLOBAL0
(sig√d 
°™dÆ⁄e
);

93 
GLOBAL0
(sig√d 
ïsv_Æl
);

94 
GLOBAL0
(
maxdiskußgï˘
);

95 
GLOBAL0
(sig√d 
dißŒow_∑ssive
);

96 
GLOBAL
(
mode_t
 
u_mask
, 0133);

97 
GLOBAL
(
mode_t
 
u_mask_d
, 0022);

98 
GLOBAL
(sig√d 
°©e_√eds_upd©e
, 1);

99 
GLOBAL0
(sig√d 
no_sy¶og
);

100 
GLOBAL
(
sy¶og_Ácûôy
, 
DEFAULT_FACILITY
);

101 
GLOBAL0
(sig√d 
aut‹íame
);

102 
GLOBAL0
(sig√d 
™⁄_nou∂ﬂd
);

103 
GLOBAL0
(sig√d 
nochmod
);

104 
GLOBAL0
(sig√d 
kì∑Œfûes
);

106 #i‚de‡
MINIMAL


107 
GLOBAL0
(sig√d 
modîn_li°ögs
);

110 #i‚de‡
NO_STANDALONE


111 
GLOBAL0
(sig√d 
d´m⁄ize
);

114 #ifde‡
FTPWHO


115 
GLOBAL0
(
shm_id
);

116 
GLOBAL0
(
FTPWhoE¡ry
 *
shm_d©a
);

117 
GLOBAL0
(
FTPWhoE¡ry
 *
shm_d©a_cur
);

118 
GLOBAL0
(*
sc‹ebﬂrdfûe
);

121 #i‡
deföed
(
WITH_UPLOAD_SCRIPT
)

122 
GLOBAL0
(sig√d 
do_u∂ﬂd_s¸ùt
);

123 
GLOBAL
(
u∂ﬂd_pùe_fd
, -1);

124 
GLOBAL
(
u∂ﬂd_pùe_lock
, -1);

127 
GLOBAL0
(sig√d 
¸óã_home
);

128 
GLOBAL0
(sig√d 
dißŒow_ª«me
);

129 
GLOBAL0
(sig√d 
no_åunˇã
);

131 
GLOBAL0
(
size_t
 
∑ge_size
);

132 
GLOBAL0
(
log_pid
);

134 #ifde‡
WITH_ALTLOG


135 
GLOBAL0
(c⁄° *
Æéog_fûíame
);

136 
GLOBAL0
(
A…LogF‹m©
 
Æéog_f‹m©
);

137 
GLOBAL
(
Æéog_fd
, -1);

140 #ifde‡
QUOTAS


141 
GLOBAL
(
u£r_quŸa_size
, 
ULONG_LONG_MAX
);

142 
GLOBAL
(
u£r_quŸa_fûes
, 
ULONG_LONG_MAX
);

145 
	#MONTHS_NAMES
 "Jan", "Feb", "Mar", "Apr", "May", "Jun", \

146 "Jul", "Aug", "Sï", "O˘", "Nov", "Dec"

	)

147 
GLOBAL
(c⁄° *
m⁄ths
[12], { 
MONTHS_NAMES
 });

149 #ifde‡
WITH_ALTLOG


150 
	#WEEK_DAYS_NAMES
 "Sun", "M⁄", "Tue", "Wed", "Thu", "Fri", "S©"

	)

151 
GLOBAL
(c⁄° *
wìk_days
[7], { 
WEEK_DAYS_NAMES
 });

154 
GLOBAL0
(
AuthResu…
 
authªsu…
);

155 
GLOBAL0
(
time_t
 
£ssi⁄_°¨t_time
);

157 #i‚de‡
NO_STANDALONE


158 
GLOBAL
(c⁄° *
pid_fûe
, 
PID_FILE
);

161 
GLOBAL0
(sig√d 
be_cu°omî_¥oof
);

163 #ifde‡
WITH_TLS


164 
GLOBAL0
(sig√d 
íf‹˚_és_auth
);

165 
GLOBAL0
(
d©a_¥Ÿe˘i⁄_Àvñ
);

166 
GLOBAL
(c⁄° *
éscùhîsuôe
, 
NULL
);

167 
GLOBAL0
(sig√d 
s¶_dißbÀd
);

170 
GLOBAL0
(*
©omic_¥efix
);

174 #ifde‡
WITH_RFC2640


175 
GLOBAL
(sig√d 
utf8
, 0);

176 
GLOBAL
(*
ch¨£t_fs
, 
NULL
);

177 
GLOBAL
(*
ch¨£t_˛õ¡
, 
NULL
);

178 
GLOBAL
(
ic⁄v_t
 
ic⁄v_fd_fs2˛õ¡
, (iconv_t) -1);

179 
GLOBAL
(
ic⁄v_t
 
ic⁄v_fd_fs2utf8
, (iconv_t) -1);

180 
GLOBAL
(
ic⁄v_t
 
ic⁄v_fd_˛õ¡2fs
, (iconv_t) -1);

181 
GLOBAL
(
ic⁄v_t
 
ic⁄v_fd_utf82fs
, (iconv_t) -1);

184 #i‚de‡
WITH_TLS


185 
GLOBAL0
(* 
és_˙x
);

186 
GLOBAL0
(* 
és_d©a_˙x
);

189 #ifde‡
NON_ROOT_FTP


190 
GLOBAL0
(c⁄° *
home_dúe˘‹y
);

193 #i‚de‡
MINIMAL


194 
GLOBAL0
(
cwd_Áûuªs
);

	@src/ipstack.c

11 
	~<c⁄fig.h
>

13 
	~"·pd.h
"

14 #ifde‡
OLD_IP_STACK


16 #ifde‡
WITH_DMALLOC


17 
	~<dmÆloc.h
>

20 
	#DEFAULT_PROTO_NAME
 "t˝"

	)

27 #i‚de‡
HAVE_GETNAMEINFO


28 
	$gë«meöfo
(c⁄° 
sockaddr
 *
ß_
, 
sockÀn_t
 
ßÀn
,

29 *
ho°
, 
size_t
 
ho°Àn
,

30 *
£rv
, 
size_t
 
£rvÀn
, 
Êags
)

32 
sockaddr_ö
 *
ß
 = (sockaddr_ö *Ë
ß_
;

34 (Ë
ßÀn
;

35 i‡(
ß
 =
NULL
 || sa->
sö_Ámûy
 !
AF_INET
) {

36  
EAI_FAMILY
;

38 i‡(
£rv
 !
NULL
 && 
£rvÀn
 > (
size_t
) 1U) {

39 
	`¢¥ötf
(
£rv
, 
£rvÀn
, "%lu", (Ë
	`¡ohs
(
ß
->
sö_p‹t
));

41 i‡(
ho°
 !
NULL
 && 
ho°Àn
 > (
size_t
) 1U) {

42 
ho°ít
 *
he
;

44 i‡((
Êags
 & 
NI_NUMERICHOST
) == 0 &&

45 (
he
 =

46 
	`gëho°byaddr
((c⁄° *Ë&(
ß
->
sö_addr
),

47  
ß
->
sö_addr
, 
AF_INET
)Ë!
NULL
 &&

48 
he
->
h_«me
 !
NULL
 && *he->h_name != 0) {

49 
size_t
 
h_«me_Àn
;

51 i‡((
h_«me_Àn
 = 
	`°æí
(
he
->
h_«me
)Ë>
ho°Àn
) {

52 
ªsﬁve_numîic_ù
;

54 
	`mem˝y
(
ho°
, 
he
->
h_«me
, 
h_«me_Àn
 + (
size_t
) 1U);

56 *
numîic_ù
;

57 
size_t
 
numîic_ù_Àn
;

59 
ªsﬁve_numîic_ù
:

60 i‡((
numîic_ù
 = 
	`öë_¡ﬂ
(
ß
->
sö_addr
)Ë=
NULL
) {

61  
EAI_SYSTEM
;

63 i‡((
numîic_ù_Àn
 = 
	`°æí
(
numîic_ù
)Ë>
ho°Àn
) {

64  
EAI_FAIL
;

66 
	`mem˝y
(
ho°
, 
numîic_ù
, 
numîic_ù_Àn
 + (
size_t
) 1U);

70 
	}
}

75 #i‚de‡
HAVE_GETADDRINFO


76 
	$gëaddröfo
(c⁄° *
node
, c⁄° *
£rvi˚
,

77 c⁄° 
addröfo
 *
höts
, addröfÿ**
ªs
)

79 
addröfo
 *
™swî
;

80 
sockaddr_ö
 *
ßddr
;

81 c⁄° *
¥Ÿo_«me
 = 
DEFAULT_PROTO_NAME
;

82 
sockty≥
 = 
SOCK_STREAM
;

83 
ö_p‹t_t
 
p‹t
 = 0U;

85 i‡(
ªs
 =
NULL
) {

86  
EAI_FAIL
;

88 *
ªs
 = 
NULL
;

89 i‡((
™swî
 = 
	`mÆloc
( *™swî)Ë=
NULL
) {

90  
EAI_MEMORY
;

92 i‡((
ßddr
 = 
	`mÆloc
( *ßddr)Ë=
NULL
) {

93 
	`‰ì
(
™swî
);

94  
EAI_MEMORY
;

96 
™swî
->
ai_Ámûy
 = 
AF_INET
;

97 
™swî
->
ai_addæí
 =  *
ßddr
;

98 
™swî
->
ai_addr
 = (
sockaddr
 *Ë
ßddr
;

99 
™swî
->
ai_√xt
 = 
NULL
;

100 
	`mem£t
(
ßddr
, 0,  *saddr);

101 
ßddr
->
sö_Ámûy
 = 
AF_INET
;

102 #i‡
	`deföed
(
HAVE_SIN_LEN
)

103 
ßddr
->
sö_Àn
 =  *saddr;

105 i‡(
höts
 !
NULL
) {

106 
¥Ÿ€¡
 *
≥
;

108 i‡((
≥
 = 
	`gë¥Ÿobynumbî
(
höts
->
ai_¥Ÿocﬁ
)Ë!
NULL
 &&

109 
≥
->
p_«me
 !
NULL
 && *pe->p_name != 0) {

110 
¥Ÿo_«me
 = 
≥
->
p_«me
;

112 i‡(
höts
->
ai_sockty≥
 != 0) {

113 
sockty≥
 = 
höts
->
ai_sockty≥
;

114 } i‡(
	`°rˇ£cmp
(
¥Ÿo_«me
, "udp") == 0) {

115 
sockty≥
 = 
SOCK_DGRAM
;

118 i‡(
£rvi˚
 !
NULL
) {

119 
£rvít
 *
£
;

121 i‡((
£
 = 
	`gë£rvby«me
(
£rvi˚
, 
¥Ÿo_«me
)Ë!
NULL
 &&

122 
£
->
s_p‹t
 > 0) {

123 
p‹t
 = 
£
->
s_p‹t
;

124 } i‡((
p‹t
 = (
ö_p‹t_t
Ë
	`°πoul
(
£rvi˚
, 
NULL
, 0)) <= 0U ||

125 
p‹t
 > 65535U) {

126 
p‹t
 = 0U;

129 i‡(
höts
 !
NULL
 && (höts->
ai_Êags
 & 
AI_PASSIVE
) != 0) {

130 
ßddr
->
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

132 i‡(
node
 !
NULL
) {

133 
ho°ít
 *
he
;

135 i‡((
he
 = 
	`gëho°by«me
(
node
)Ë!
NULL
 && he->
h_addr_li°
 != NULL

136 && 
he
->
h_addr_li°
[0] !
NULL
 && he->
h_Àngth
 > 0 &&

137 
he
->
h_Àngth
 <(Ë 
ßddr
->
sö_addr
) {

138 
	`mem˝y
(&
ßddr
->
sö_addr
, 
he
->
h_addr_li°
[0], he->
h_Àngth
);

141 
™swî
->
ai_sockty≥
 = 
sockty≥
;

142 
ßddr
->
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

143 *
ªs
 = 
™swî
;

146 
	}
}

148 
	$‰ìaddröfo
(
addröfo
 *
ªs
)

150 i‡(
ªs
 =
NULL
) {

153 
	`‰ì
(
ªs
->
ai_addr
);

154 
ªs
->
ai_addr
 = 
NULL
;

155 
	`‰ì
(
ªs
);

156 
	}
}

159 #i‡!
deföed
(
HAVE_INET_PTON
Ë&& !deföed(
öë_±⁄
)

160 
	$öë_±⁄
(
af
, c⁄° *
§c
, *
d°
)

163 
ö_addr_t
 
öa
;

165 i‡(
af
 !
AF_INET
) {

166 
î∫o
 = 
EAFNOSUPPORT
;

171 
öa
 = 
	`öë_addr
(
§c
);

172 i‡(
öa
 == 0UL) {

175 
	`mem˝y
(
d°
, &
öa
,  ina);

178 
	}
}

183 
ö_p‹t_t
 *
	$°‹age_p‹t
(c⁄° 
sockaddr_°‹age
 * c⁄° 
ss
)

185 
sockaddr_ö
 * c⁄° 
si
 = (sockaddr_ö *Ë
ss
;

187  &
si
->
sö_p‹t
;

188 
	}
}

190 
ö_p‹t_t
 *
	$°‹age_p‹t6
(c⁄° 
sockaddr_°‹age
 * c⁄° 
ss
)

192 
sockaddr_ö6
 * c⁄° 
si
 = (sockaddr_ö6 *Ë
ss
;

194  &
si
->
sö6_p‹t
;

195 
	}
}

197 
ö_addr
 *
	$°‹age_sö_addr
(c⁄° 
sockaddr_°‹age
 * c⁄° 
ss
)

199 
sockaddr_ö
 * c⁄° 
si
 = (sockaddr_ö *Ë
ss
;

201  &
si
->
sö_addr
;

202 
	}
}

204 
ö6_addr
 *
	$°‹age_sö_addr6
(c⁄° 
sockaddr_°‹age
 * c⁄° 
ss
)

206 
sockaddr_ö6
 * c⁄° 
si
 = (sockaddr_ö6 *Ë
ss
;

208  &
si
->
sö6_addr
;

209 
	}
}

	@src/ipstack.h

1 #i‚de‡
__IPSTACK_H__


2 
	#__IPSTACK_H__
 1

	)

4 #ifde‡
OLD_IP_STACK


6 #i‚de‡
EAI_FAMILY


7 
	#EAI_FAMILY
 (-1)

	)

8 
	#EAI_FAIL
 (-2)

	)

9 
	#EAI_SYSTEM
 (-3)

	)

10 
	#EAI_MEMORY
 (-4)

	)

13 #i‚de‡
NI_NUMERICHOST


14 
	#NI_NUMERICHOST
 (1 << 0)

	)

15 
	#NI_MAXHOST
 1025

	)

16 
	#NI_MAXSERV
 32

	)

17 
	#NI_NUMERICSERV
 2

	)

20 #i‚de‡
AI_PASSIVE


21 
	#AI_PASSIVE
 (1 << 0)

	)

24 #i‚de‡
HAVE_STRUCT_ADDRINFO


25 
	saddröfo
 {

26 
	mai_Êags
;

27 
	mai_Ámûy
;

28 
	mai_sockty≥
;

29 
	mai_¥Ÿocﬁ
;

30 
	mai_addæí
;

31 
sockaddr
 *
	mai_addr
;

32 *
	mai_ˇn⁄«me
;

33 
addröfo
 *
	mai_√xt
;

37 #i‡!
deföed
(
HAVE_GETADDRINFO
Ë&& !deföed(
HAVE_GETNAMEINFO
)

38 
	#sockaddr_°‹age
 
sockaddr_ö


	)

39 
	#ss_Ámûy
 
sö_Ámûy


	)

40 #ifde‡
HAVE_SIN_LEN


41 
	#ss_Àn
 
sö_Àn


	)

42 
	#HAVE_SS_LEN
 1

	)

44 
	#sockaddr_ö6
 
sockaddr_ö


	)

45 
	#sö6_p‹t
 
sö_p‹t


	)

46 
	#sö6_addr
 
sö_addr


	)

47 
	#ö6_addr
 
ö_addr


	)

48 
	#s6_addr
 
s_addr


	)

51 #i‚de‡
AF_INET6


52 
	#AF_INET6
 
AF_UNSPEC


	)

53 
	#PF_INET6
 
AF_INET6


	)

56 #i‚de‡
IN6ADDR_ANY_INIT


57 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

59 #i‚de‡
IN6ADDR_LOOPBACK_INIT


60 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

63 #i‚de‡
INET6_ADDRSTRLEN


64 
	#INET6_ADDRSTRLEN
 46

	)

66 #i‚de‡
IN6_IS_ADDR_UNSPECIFIED


67 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
Ë0

	)

69 #i‚de‡
IN6_IS_ADDR_LOOPBACK


70 
	#IN6_IS_ADDR_LOOPBACK
(
a
Ë0

	)

72 #i‚de‡
IN6_IS_ADDR_MULTICAST


73 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë0

	)

75 #i‚de‡
IN6_IS_ADDR_LINKLOCAL


76 
	#IN6_IS_ADDR_LINKLOCAL
(
a
Ë0

	)

78 #i‚de‡
IN6_IS_ADDR_SITELOCAL


79 
	#IN6_IS_ADDR_SITELOCAL
(
a
Ë0

	)

81 #i‚de‡
IN6_IS_ADDR_V4MAPPED


82 
	#IN6_IS_ADDR_V4MAPPED
(
a
Ë0

	)

84 #i‚de‡
IN6_IS_ADDR_V4COMPAT


85 
	#IN6_IS_ADDR_V4COMPAT
(
a
Ë0

	)

87 #i‚de‡
IN6_ARE_ADDR_EQUAL


88 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
Ë0

	)

91 #i‡!
deföed
(
HAVE_INET_NTOP
Ë&& !deföed(
öë_¡›
)

92 
	#öë_¡›
(
AF
, 
SRC
, 
DST
Ë
	`öë_©⁄
(SRC, (
ö_addr
 *Ë(DST))

	)

95 #i‡!
deföed
(
HAVE_INET_PTON
Ë&& !deföed(
öë_±⁄
)

96 
öë_±⁄
(
af
, c⁄° *
§c
, *
d°
);

99 #i‚de‡
HAVE_GETNAMEINFO


100 
gë«meöfo
(c⁄° 
sockaddr
 *
ß_
, 
sockÀn_t
 
ßÀn
,

101 *
ho°
, 
size_t
 
ho°Àn
,

102 *
£rv
, 
size_t
 
£rvÀn
, 
Êags
);

105 #i‚de‡
HAVE_GETADDRINFO


106 
gëaddröfo
(c⁄° *
node
, c⁄° *
£rvi˚
,

107 c⁄° 
addröfo
 *
höts
, addröfÿ**
ªs
);

109 
‰ìaddröfo
(
addröfo
 *
ªs
);

114 
ö_p‹t_t
 *
°‹age_p‹t
(c⁄° 
sockaddr_°‹age
 * c⁄° 
ss
);

115 
ö_p‹t_t
 *
°‹age_p‹t6
(c⁄° 
sockaddr_°‹age
 * c⁄° 
ss
);

116 
ö_addr
 *
°‹age_sö_addr
(c⁄° 
sockaddr_°‹age
 * c⁄° 
ss
);

117 
ö6_addr
 *
°‹age_sö_addr6
(c⁄° 
sockaddr_°‹age
 * c⁄° 
ss
);

	@src/log_extauth.c

1 
	~<c⁄fig.h
>

3 #ifde‡
WITH_EXTAUTH


5 
	~"·pd.h
"

6 
	~"dy«mic.h
"

7 
	~"·pwho-upd©e.h
"

8 
	~"globÆs.h
"

9 
	~"log_exèuth.h
"

10 
	~"log_exèuth_p.h
"

11 
	~"ß„_rw.h
"

12 #ifde‡
WITH_TLS


13 
	~"és.h
"

16 #ifde‡
WITH_DMALLOC


17 
	~<dmÆloc.h
>

20 
sockaddr_un
 *
	gßddr
;

21 sig√d 
	gauth_föÆized
;

23 
	$pw_exèuth_∑r£
(c⁄° * c⁄° 
fûe
)

25 
size_t
 
fûe_Àn
;

27 i‡(
fûe
 =
NULL
 || (
fûe_Àn
 = 
	`°æí
(fûe)Ë<(
size_t
) 0U) {

30 i‡((
ßddr
 = 
	`mÆloc
((*ßddrË+ 
fûe_Àn
 +

31 (
size_t
Ë1U)Ë=
NULL
) {

32 
	`dõ_mem
();

34 
	`mem˝y
(
ßddr
->
sun_∑th
, 
fûe
, 
fûe_Àn
 + (
size_t
) 1U);

35 
ßddr
->
sun_Ámûy
 = 
AF_UNIX
;

36 
	}
}

38 
	$pw_exèuth_exô
()

40 
	`‰ì
(
ßddr
);

41 
	}
}

43 
	$ˇŒback_ª∂y_auth_ok
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
)

45 
ªsu…
->
auth_ok
 = 
	`©oi
(
°r
);

46 
	}
}

48 
	$ˇŒback_ª∂y_uid
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
)

50 
ªsu…
->
uid
 = (
uid_t
Ë
	`°πoul
(
°r
, 
NULL
, 10);

51 
	}
}

53 
	$ˇŒback_ª∂y_gid
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
)

55 
ªsu…
->
gid
 = (
gid_t
Ë
	`°πoul
(
°r
, 
NULL
, 10);

56 
	}
}

58 
	$ˇŒback_ª∂y_dú
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
)

60 i‡(*
°r
 == '/') {

61 
	`‰ì
((*Ë(
ªsu…
->
dú
));

62 
ªsu…
->
dú
 = 
	`°rdup
(
°r
);

64 
	}
}

66 
	$ˇŒback_ª∂y_¶ow_tûde_ex∑nsi⁄
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
)

68 
ªsu…
->
¶ow_tûde_ex∑nsi⁄
 = (
	`©oi
(
°r
) != 0);

69 
	}
}

71 
	$ˇŒback_ª∂y_thrŸéög_b™dwidth_ul
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
)

73 #ifde‡
THROTTLING


74 
ªsu…
->
thrŸéög_b™dwidth_ul
 = 
	`°πoul
(
°r
, 
NULL
, 10);

75 
ªsu…
->
thrŸéög_ul_ch™ged
 = 1;

77 (Ë
°r
;

78 (Ë
ªsu…
;

80 
	}
}

82 
	$ˇŒback_ª∂y_thrŸéög_b™dwidth_dl
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
)

84 #ifde‡
THROTTLING


85 
ªsu…
->
thrŸéög_b™dwidth_dl
 = 
	`°πoul
(
°r
, 
NULL
, 10);

86 
ªsu…
->
thrŸéög_dl_ch™ged
 = 1;

88 (Ë
°r
;

89 (Ë
ªsu…
;

91 
	}
}

93 
	$ˇŒback_ª∂y_u£r_quŸa_size
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
)

95 #ifde‡
QUOTAS


96 
ªsu…
->
u£r_quŸa_size
 = 
	`°πouŒ
(
°r
, 
NULL
, 10);

97 
ªsu…
->
quŸa_size_ch™ged
 = 1;

99 (Ë
°r
;

100 (Ë
ªsu…
;

102 
	}
}

104 
	$ˇŒback_ª∂y_u£r_quŸa_fûes
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
)

106 #ifde‡
QUOTAS


107 
ªsu…
->
u£r_quŸa_fûes
 = 
	`°πouŒ
(
°r
, 
NULL
, 10);

108 
ªsu…
->
quŸa_fûes_ch™ged
 = 1;

110 (Ë
°r
;

111 (Ë
ªsu…
;

113 
	}
}

115 
	$ˇŒback_ª∂y_øtio_u∂ﬂd
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
)

117 #ifde‡
RATIOS


118 
ªsu…
->
øtio_u∂ﬂd
 = (Ë
	`°πoul
(
°r
, 
NULL
, 10);

119 
ªsu…
->
øtio_ul_ch™ged
 = 1;

121 (Ë
°r
;

122 (Ë
ªsu…
;

124 
	}
}

126 
	$ˇŒback_ª∂y_øtio_dow∆ﬂd
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
)

128 #ifde‡
RATIOS


129 
ªsu…
->
øtio_dow∆ﬂd
 = (Ë
	`°πoul
(
°r
, 
NULL
, 10);

130 
ªsu…
->
øtio_dl_ch™ged
 = 1;

132 (Ë
°r
;

133 (Ë
ªsu…
;

135 
	}
}

137 
	$ˇŒback_ª∂y_≥r_u£r_max
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
)

139 #ifde‡
PER_USER_LIMITS


140 
ªsu…
->
≥r_u£r_max
 = (Ë
	`°πoul
(
°r
, 
NULL
, 10);

142 (Ë
°r
;

143 (Ë
ªsu…
;

145 
	}
}

147 
	$ˇŒback_ª∂y_íd
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
)

149 (Ë
°r
;

150 (Ë
ªsu…
;

151 
auth_föÆized
 |= 1;

152 
	}
}

154 
	$pw_exèuth_check
(
AuthResu…
 * c⁄° 
ªsu…
,

155 c⁄° *
accou¡
, c⁄° *
∑ssw‹d
,

156 c⁄° 
sockaddr_°‹age
 * c⁄° 
ß
,

157 c⁄° 
sockaddr_°‹age
 * c⁄° 
≥î
)

159 
ködy
 = -1;

160 
îr
;

161 
åõs
 = 
EXTAUTH_MAX_CONNECT_TRIES
;

162 
ssize_t
 
ªadnb
;

163 *
löï¡
;

164 *
¸poöt
;

165 
ß_hbuf
[
NI_MAXHOST
];

166 
ß_p‹t
[
NI_MAXSERV
];

167 
≥î_hbuf
[
NI_MAXHOST
];

168 
löe
[4096];

169 
size_t
 
löe_Àn
;

171 
ªsu…
->
auth_ok
 = 0;

172 i‡(
	`gë«meöfo
((
sockaddr
 *Ë
ß
, 
	`STORAGE_LEN
(*sa),

173 
ß_hbuf
,  sa_hbuf,

174 
ß_p‹t
,  sa_port,

175 
NI_NUMERICHOST
 | 
NI_NUMERICSERV
) != 0 ||

176 
	`gë«meöfo
((
sockaddr
 *Ë
≥î
, 
	`STORAGE_LEN
(*peer),

177 
≥î_hbuf
, Öeer_hbuf,

178 
NULL
, (
size_t
) 0U,

179 
NI_NUMERICHOST
 | 
NI_NUMERICSERV
) != 0) {

182 
åyagaö
:

183 i‡((
ködy
 = 
	`sockë
(
AF_UNIX
, 
SOCK_STREAM
, 0)) == -1) {

184 
bye
;

186 (
îr
 = 
	`c⁄√˘
(
ködy
, (
sockaddr
 *Ë
ßddr
, 
	`SUN_LEN
(saddr)))

187 !0 && 
î∫o
 =
EINTR
);

188 i‡(
îr
 != 0) {

189 
	`˛o£
(
ködy
);

190 
ködy
 = -1;

191 i‡(
åõs
 > 0) {

192 
	`¶ìp
(
EXTAUTH_MAX_CONNECT_DELAY
);

193 
åõs
--;

194 
åyagaö
;

196 
bye
;

198 i‡(
	`SNCHECK
(
	`¢¥ötf
(
löe
, Üine,

199 
EXTAUTH_CLIENT_ACCOUNT
 "%s\n"

200 
EXTAUTH_CLIENT_PASSWORD
 "%s\n"

201 
EXTAUTH_CLIENT_SA_HOST
 "%s\n"

202 
EXTAUTH_CLIENT_SA_PORT
 "%s\n"

203 
EXTAUTH_CLIENT_PEER_HOST
 "%s\n"

204 
EXTAUTH_CLIENT_ENCRYPTED
 "%d\n"

205 
EXTAUTH_CLIENT_END
 "\n",

206 
accou¡
, 
∑ssw‹d
, 
ß_hbuf
, 
ß_p‹t
, 
≥î_hbuf
,

207 
és_˙x
 !
NULL
),

208  
löe
)) {

209 
bye
;

211 
löe_Àn
 = 
	`°æí
(
löe
);

212 i‡(
	`ß„_wrôe
(
ködy
, 
löe
, 
löe_Àn
, -1Ë!(
ssize_t
)Üine_len) {

213 
bye
;

215 
ªsu…
->
uid
 = (
uid_t
) 0;

216 
ªsu…
->
gid
 = (
gid_t
) 0;

217 
ªsu…
->
dú
 = 
NULL
;

218 
ªsu…
->
¶ow_tûde_ex∑nsi⁄
 = 1;

219 
auth_föÆized
 = 0;

220 i‡((
ªadnb
 = 
	`ß„_ªad
(
ködy
, 
löe
, Üöê- 1U)Ë<(
ssize_t
) 0) {

221 
bye
;

223 
löe
[
ªadnb
] = 0;

224 
löï¡
 = 
löe
;

225 (
¸poöt
 = 
	`°rchr
(
löï¡
, '\n')Ë!
NULL
) {

226 c⁄° 
ExèuthCÆlBack
 *
sˇ¬ed
;

227 
size_t
 
keyw‹d_Àn
;

229 *
¸poöt
 = 0;

230 
sˇ¬ed
 = 
exèuth_ˇŒbacks
;

231 
sˇ¬ed
->
keyw‹d
 !
NULL
) {

232 
keyw‹d_Àn
 = 
	`°æí
(
sˇ¬ed
->
keyw‹d
);

233 i‡(
	`°∫cmp
(
sˇ¬ed
->
keyw‹d
, 
löï¡
, 
keyw‹d_Àn
) == 0) {

234 
sˇ¬ed
->
	`func
(
löï¡
 + 
keyw‹d_Àn
, 
ªsu…
);

237 
sˇ¬ed
++;

239 
löï¡
 = 
¸poöt
 + 1;

241 i‡(
auth_föÆized
 == 0 ||

242 (
ªsu…
->
auth_ok
 == 1 &&

243 (
ªsu…
->
uid
 <(
uid_t
Ë0 ||Ñesu…->
gid
 <(
gid_t
) 0 ||

244 
ªsu…
->
dú
 =
NULL
))) {

245 
ªsu…
->
auth_ok
 = -1;

247 
bye
:

248 i‡(
ködy
 != -1) {

249 
	`˛o£
(
ködy
);

251 
	}
}

	@src/log_extauth.h

1 #i‚de‡
__LOG_EXTAUTH_H__


2 
	#__LOG_EXTAUTH_H__
 1

	)

4 #ifde‡
WITH_EXTAUTH


6 
pw_exèuth_∑r£
(c⁄° * c⁄° 
fûe
);

8 
pw_exèuth_check
(
AuthResu…
 * c⁄° 
ªsu…
,

9 c⁄° *
accou¡
, c⁄° *
∑ssw‹d
,

10 c⁄° 
sockaddr_°‹age
 * c⁄° 
ß
,

11 c⁄° 
sockaddr_°‹age
 * c⁄° 
≥î
);

13 
pw_exèuth_exô
();

15 
	#EXTAUTH_KEYWORD_SEP
 ":"

	)

17 
	#EXTAUTH_CLIENT_ACCOUNT
 "accou¡" 
EXTAUTH_KEYWORD_SEP


	)

18 
	#EXTAUTH_CLIENT_PASSWORD
 "∑ssw‹d" 
EXTAUTH_KEYWORD_SEP


	)

19 
	#EXTAUTH_CLIENT_SA_HOST
 "loˇlho°" 
EXTAUTH_KEYWORD_SEP


	)

20 
	#EXTAUTH_CLIENT_SA_PORT
 "loˇÕ‹t" 
EXTAUTH_KEYWORD_SEP


	)

21 
	#EXTAUTH_CLIENT_PEER_HOST
 "≥î" 
EXTAUTH_KEYWORD_SEP


	)

22 
	#EXTAUTH_CLIENT_ENCRYPTED
 "í¸y±ed" 
EXTAUTH_KEYWORD_SEP


	)

23 
	#EXTAUTH_CLIENT_END
 "íd"

	)

25 
	#EXTAUTH_REPLY_AUTH_OK
 "auth_ok" 
EXTAUTH_KEYWORD_SEP


	)

26 
	#EXTAUTH_REPLY_UID
 "uid" 
EXTAUTH_KEYWORD_SEP


	)

27 
	#EXTAUTH_REPLY_GID
 "gid" 
EXTAUTH_KEYWORD_SEP


	)

28 
	#EXTAUTH_REPLY_DIR
 "dú" 
EXTAUTH_KEYWORD_SEP


	)

29 
	#EXTAUTH_REPLY_SLOW_TILDE_EXPANSION
 "¶ow_tûde_ex∑nsi⁄" 
EXTAUTH_KEYWORD_SEP


	)

30 
	#EXTAUTH_REPLY_THROTTLING_BANDWIDTH_UL
 "thrŸéög_b™dwidth_ul" 
EXTAUTH_KEYWORD_SEP


	)

31 
	#EXTAUTH_REPLY_THROTTLING_BANDWIDTH_DL
 "thrŸéög_b™dwidth_dl" 
EXTAUTH_KEYWORD_SEP


	)

32 
	#EXTAUTH_REPLY_USER_QUOTA_SIZE
 "u£r_quŸa_size" 
EXTAUTH_KEYWORD_SEP


	)

33 
	#EXTAUTH_REPLY_USER_QUOTA_FILES
 "u£r_quŸa_fûes" 
EXTAUTH_KEYWORD_SEP


	)

34 
	#EXTAUTH_REPLY_RATIO_UPLOAD
 "øtio_u∂ﬂd" 
EXTAUTH_KEYWORD_SEP


	)

35 
	#EXTAUTH_REPLY_RATIO_DOWNLOAD
 "øtio_dow∆ﬂd" 
EXTAUTH_KEYWORD_SEP


	)

36 
	#EXTAUTH_REPLY_PER_USER_MAX
 "≥r_u£r_max" 
EXTAUTH_KEYWORD_SEP


	)

37 
	#EXTAUTH_REPLY_END
 "íd"

	)

	@src/log_extauth_p.h

1 #i‚de‡
__LOG_EXTAUTH_P_H__


2 
	#__LOG_EXTAUTH_P_H__
 1

	)

4 #ifde‡
WITH_EXTAUTH


6 
	~<sys/un.h
>

8 #i‚de‡
SUN_LEN


9 
	#SUN_LEN
(
±r
Ë((
size_t
Ë(((
sockaddr_un
 *Ë
NULL
)->
sun_∑th
) \

10 + 
	`°æí
((
±r
)->
sun_∑th
))

	)

13 #i‚de‡
EXTAUTH_MAX_CONNECT_TRIES


14 
	#EXTAUTH_MAX_CONNECT_TRIES
 10

	)

16 #i‚de‡
EXTAUTH_MAX_CONNECT_DELAY


17 
	#EXTAUTH_MAX_CONNECT_DELAY
 1

	)

20 
	sExèuthCÆlBack_
 {

21 c⁄° *
	mkeyw‹d
;

22 (*
	mfunc
)(c⁄° *
	m°r
, 
AuthResu…
 * c⁄° 
	mªsu…
);

23 } 
	tExèuthCÆlBack
;

25 
ˇŒback_ª∂y_auth_ok
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
);

26 
ˇŒback_ª∂y_uid
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
);

27 
ˇŒback_ª∂y_gid
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
);

28 
ˇŒback_ª∂y_dú
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
);

29 
ˇŒback_ª∂y_¶ow_tûde_ex∑nsi⁄
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
);

30 
ˇŒback_ª∂y_thrŸéög_b™dwidth_ul
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
);

31 
ˇŒback_ª∂y_thrŸéög_b™dwidth_dl
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
);

32 
ˇŒback_ª∂y_u£r_quŸa_size
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
);

33 
ˇŒback_ª∂y_u£r_quŸa_fûes
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
);

34 
ˇŒback_ª∂y_øtio_u∂ﬂd
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
);

35 
ˇŒback_ª∂y_øtio_dow∆ﬂd
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
);

36 
ˇŒback_ª∂y_≥r_u£r_max
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
);

37 
ˇŒback_ª∂y_íd
(c⁄° *
°r
, 
AuthResu…
 * c⁄° 
ªsu…
);

39 
ExèuthCÆlBack
 
	gexèuth_ˇŒbacks
[] = {

40 { 
EXTAUTH_REPLY_AUTH_OK
, 
ˇŒback_ª∂y_auth_ok
 },

41 { 
EXTAUTH_REPLY_UID
, 
ˇŒback_ª∂y_uid
 },

42 { 
EXTAUTH_REPLY_GID
, 
ˇŒback_ª∂y_gid
 },

43 { 
EXTAUTH_REPLY_DIR
, 
ˇŒback_ª∂y_dú
 },

44 { 
EXTAUTH_REPLY_SLOW_TILDE_EXPANSION
, 
ˇŒback_ª∂y_¶ow_tûde_ex∑nsi⁄
 },

45 { 
EXTAUTH_REPLY_THROTTLING_BANDWIDTH_UL
, 
ˇŒback_ª∂y_thrŸéög_b™dwidth_ul
 },

46 { 
EXTAUTH_REPLY_THROTTLING_BANDWIDTH_DL
, 
ˇŒback_ª∂y_thrŸéög_b™dwidth_dl
 },

47 { 
EXTAUTH_REPLY_USER_QUOTA_SIZE
, 
ˇŒback_ª∂y_u£r_quŸa_size
 },

48 { 
EXTAUTH_REPLY_USER_QUOTA_FILES
, 
ˇŒback_ª∂y_u£r_quŸa_fûes
 },

49 { 
EXTAUTH_REPLY_RATIO_UPLOAD
, 
ˇŒback_ª∂y_øtio_u∂ﬂd
 },

50 { 
EXTAUTH_REPLY_RATIO_DOWNLOAD
, 
ˇŒback_ª∂y_øtio_dow∆ﬂd
 },

51 { 
EXTAUTH_REPLY_PER_USER_MAX
, 
ˇŒback_ª∂y_≥r_u£r_max
 },

52 { 
EXTAUTH_REPLY_END
, 
ˇŒback_ª∂y_íd
 },

53 { 
NULL
, 
ˇŒback_ª∂y_íd
 }

	@src/log_ldap.c

4 
	~<c⁄fig.h
>

6 #ifde‡
WITH_LDAP


7 
	~"·pd.h
"

8 
	~"∑r£r.h
"

9 
	~"log_ld≠_p.h
"

10 
	~"log_ld≠.h
"

11 
	~"mesßges.h
"

12 
	~"¸y±o.h
"

14 #ifde‡
WITH_DMALLOC


15 
	~<dmÆloc.h
>

18 
	$pw_ld≠_∑r£
(c⁄° * c⁄° 
fûe
)

20 i‡(
	`gíîic_∑r£r
(
fûe
, 
ld≠_c⁄fig_keyw‹ds
) != 0) {

21 
ûÀgÆ_c⁄fig
:

22 
	`dõ
(421, 
LOG_ERR
, 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_CONFIG_FILE_LDAP


23 ": %s" , 
fûe
 =
NULL
 ? "-" : file);

25 i‡(
ld≠_ho°
 =
NULL
) {

26 i‡((
ld≠_ho°
 = 
	`°rdup
(
LDAP_DEFAULT_SERVER
)Ë=
NULL
) {

27 
	`dõ_mem
();

30 i‡(
p‹t_s
 =
NULL
) {

31 
p‹t
 = 
LDAP_DEFAULT_PORT
;

33 
p‹t
 = 
	`©oi
(
p‹t_s
);

34 i‡(
p‹t
 <= 0 ||Öort > 65535) {

35 
p‹t
 = 
LDAP_DEFAULT_PORT
;

37 
	`‰ì
(
p‹t_s
);

38 
p‹t_s
 = 
NULL
;

40 i‡(
ld≠_fûãr
 =
NULL
) {

41 i‡((
ld≠_fûãr
 = 
	`°rdup
(
LDAP_DEFAULT_FILTER
)Ë=
NULL
) {

42 
	`dõ_mem
();

46 *
t
;

48 i‡(
	`°rchr
(
ld≠_fûãr
, '%'Ë!
NULL
) {

49 
ûÀgÆ_c⁄fig
;

51 i‡((
t
 = 
	`°rchr
(
ld≠_fûãr
, '\\')Ë!
NULL
) {

52 i‡(
t
[1] != 'L') {

53 
ûÀgÆ_c⁄fig
;

55 *
t
++ = '%';

56 *
t
 = 's';

59 i‡(
ld≠_homedúe˘‹y
 =
NULL
) {

60 i‡((
ld≠_homedúe˘‹y
 = 
	`°rdup
(
LDAP_HOMEDIRECTORY
)Ë=
NULL
) {

61 
	`dõ_mem
();

64 i‡(
ld≠_vîsi⁄_s
 !
NULL
) {

65 
ld≠_vîsi⁄
 = 
	`©oi
(
ld≠_vîsi⁄_s
);

66 
	`‰ì
(
ld≠_vîsi⁄_s
);

67 
ld≠_vîsi⁄_s
 = 
NULL
;

69 
ld≠_vîsi⁄
 = 
LDAP_DEFAULT_VERSION
;

71 i‡(
deÁu…_uid_s
 !
NULL
) {

72 
deÁu…_uid
 = (
uid_t
Ë
	`°πoul
(
deÁu…_uid_s
, 
NULL
, 10);

73 
	`‰ì
(
deÁu…_uid_s
);

74 
deÁu…_uid_s
 = 
NULL
;

76 i‡(
deÁu…_gid_s
 !
NULL
) {

77 
deÁu…_gid
 = (
gid_t
Ë
	`°πoul
(
deÁu…_gid_s
, 
NULL
, 10);

78 
	`‰ì
(
deÁu…_gid_s
);

79 
deÁu…_gid_s
 = 
NULL
;

81 
u£_és
 = 0;

82 i‡(
u£_és_s
 !
NULL
) {

83 i‡(
	`°rˇ£cmp
(
u£_és_s
, "True") == 0) {

84 
u£_és
 = 1;

86 
	`‰ì
(
u£_és_s
);

87 
u£_és_s
 = 
NULL
;

92 i‡(
böddn
 =
NULL
) {

93 
u£_ld≠_böd_mëhod
 = 1;

95 
u£_ld≠_böd_mëhod
 = 0;

98 i‡(
ld≠_auth_mëhod_s
 !
NULL
) {

99 i‡(
	`°rˇ£cmp
(
ld≠_auth_mëhod_s
, "bind") == 0) {

100 
u£_ld≠_böd_mëhod
 = 1;

101 } i‡(
	`°rˇ£cmp
(
ld≠_auth_mëhod_s
, "password") == 0) {

102 
u£_ld≠_böd_mëhod
 = 0;

104 
	`dõ
(421, 
LOG_ERR
, 
MSG_LDAP_INVALID_AUTH_METHOD
);

106 
	`‰ì
(
ld≠_auth_mëhod_s
);

107 
ld≠_auth_mëhod_s
 = 
NULL
;

109 i‡(
ba£
 =
NULL
) {

110 
	`dõ
(421, 
LOG_ERR
, 
MSG_LDAP_MISSING_BASE
);

112 i‡(
böddn
 =
NULL
) {

113 
pwd
 = 
NULL
;

115 
	}
}

117 
	$pw_ld≠_exô
()

119 
	`‰ì
((*Ë
ld≠_ho°
);

120 
ld≠_ho°
 = 
NULL
;

121 
	`‰ì
((*Ë
p‹t_s
);

122 
p‹t_s
 = 
NULL
;

123 
p‹t
 = -1;

124 
	`‰ì
((*Ë
böddn
);

125 
böddn
 = 
NULL
;

126 
	`‰ì
((*Ë
pwd
);

127 
pwd
 = 
NULL
;

128 
	`‰ì
((*Ë
ba£
);

129 
ba£
 = 
NULL
;

130 
	`‰ì
((*Ë
ld≠_fûãr
);

131 
	`‰ì
((*Ë
ld≠_homedúe˘‹y
);

132 
	`‰ì
((*Ë
deÁu…_uid_s
);

133 
deÁu…_uid_s
 = 
NULL
;

134 
	`‰ì
((*Ë
deÁu…_gid_s
);

135 
deÁu…_gid_s
 = 
NULL
;

136 
	`‰ì
((*Ë
u£_és_s
);

137 
u£_és_s
 = 
NULL
;

138 
	`‰ì
((*Ë
ld≠_auth_mëhod_s
);

139 
ld≠_auth_mëhod_s
 = 
NULL
;

140 
	`‰ì
((*Ë
ld≠_deÁu…_home_dúe˘‹y
);

141 
ld≠_deÁu…_home_dúe˘‹y
 = 
NULL
;

142 
	}
}

144 
LDAP
 *
	$pw_ld≠_c⁄√˘
(c⁄° *
dn
, c⁄° *
∑ssw‹d
)

146 
LDAP
 *
ld
;

147 #ifde‡
LDAP_OPT_PROTOCOL_VERSION


148 
vîsi⁄
 = 
ld≠_vîsi⁄
;

151 i‡(
ld≠_ho°
 =
NULL
 || 
p‹t
 < 0) {

152  
NULL
;

154 i‡((
ld
 = 
	`ld≠_öô
(
ld≠_ho°
, 
p‹t
)Ë=
NULL
) {

155  
NULL
;

157 #ifde‡
LDAP_OPT_PROTOCOL_VERSION


158 i‡(
	`ld≠_£t_›ti⁄
(
ld
, 
LDAP_OPT_PROTOCOL_VERSION
, &
vîsi⁄
) !=

159 
LDAP_SUCCESS
) {

160  
NULL
;

163 i‡(
u£_és
 > 0 && 
	`ld≠_°¨t_és_s
(
ld
, 
NULL
, NULLË!
LDAP_SUCCESS
) {

164  
NULL
;

166 i‡(
	`ld≠_böd_s
(
ld
, 
dn
, 
∑ssw‹d
, 
LDAP_AUTH_SIMPLE
Ë!
LDAP_SUCCESS
) {

167  
NULL
;

170  
ld
;

171 
	}
}

173 
LDAPMesßge
 *
	$pw_ld≠_uid_£¨ch
(
LDAP
 * c⁄° 
ld
,

174 c⁄° *
uid
,

175 *
©ås
[])

177 *
Æloˇ_fûãr
;

178 
size_t
 
uid_size
;

179 
size_t
 
fûãr_size
;

180 
rc
;

181 
LDAPMesßge
 *
ªs
;

183 i‡(
uid
 =
NULL
 || *uid == 0) {

184  
NULL
;

186 
uid_size
 = 
	`°æí
(
uid
);

187 i‡(
uid_size
 > 
MAX_LDAP_UID_LENGTH
) {

188  
NULL
;

190 
fûãr_size
 = 
	`°æí
(
ld≠_fûãr
Ë+ 
uid_size
 + (
size_t
) 1U;

191 i‡((
Æloˇ_fûãr
 = 
	`ALLOCA
(
fûãr_size
)Ë=
NULL
) {

192  
NULL
;

194 i‡(
	`SNCHECK
(
	`¢¥ötf
(
Æloˇ_fûãr
, 
fûãr_size
, 
ld≠_fûãr
, 
uid
),

195 
fûãr_size
)) {

196 
	`ALLOCA_FREE
(
Æloˇ_fûãr
);

197  
NULL
;

199 
rc
 = 
	`ld≠_£¨ch_s
(
ld
, 
ba£
, 
LDAP_SCOPE_SUBTREE
,

200 
Æloˇ_fûãr
, 
©ås
, 0, &
ªs
);

201 
	`ALLOCA_FREE
(
Æloˇ_fûãr
);

202 i‡(
rc
 !
LDAP_SUCCESS
) {

203  
NULL
;

206  
ªs
;

207 
	}
}

209 *
	$pw_ld≠_gëvÆue
(
LDAP
 * c⁄° 
ld
,

210 
LDAPMesßge
 * c⁄° 
ªs
,

211 c⁄° * c⁄° 
©åibuã
)

213 **
vÆs
;

214 *
ªt
;

216 i‡((
vÆs
 = 
	`ld≠_gë_vÆues
(
ld
, 
ªs
, 
©åibuã
)Ë=
NULL
 ||

217 
vÆs
[0] =
NULL
) {

218  
NULL
;

220 
ªt
 = 
	`°rdup
(
vÆs
[0]);

221 
	`ld≠_vÆue_‰ì
(
vÆs
);

223  
ªt
;

224 
	}
}

226 
	$pw_ld≠_gëpw«m_‰ìfõlds
(
∑sswd
 * c⁄° 
p
)

228 
	`‰ì
(
p
->
pw_∑sswd
);

229 
p
->
pw_∑sswd
 = 
NULL
;

230 
	`‰ì
(
p
->
pw_dú
);

231 
p
->
pw_dú
 = 
NULL
;

232 
	`‰ì
(
p
->
pw_shñl
);

233 
p
->
pw_shñl
 = 
NULL
;

234 
	}
}

236 
	$pw_ld≠_vÆid©e_«me
(c⁄° *
«me
)

238 i‡(
«me
 =
NULL
 || *name == 0) {

242 i‡((*
«me
 >= 'a' && *name <= 'z') ||

243 (*
«me
 >= 'A' && *name <= 'Z') ||

244 (*
«me
 >= '0' && *name <= '9') ||

245 *
«me
 == ' ' || *name == '-' || *name == '@' ||

246 *
«me
 == '_' || *name == '\'' || *name == '.') {

251 
«me
++;

252 } *
«me
 != 0);

255 
	}
}

257 
∑sswd
 *
	$pw_ld≠_gëpw«m
(c⁄° *
«me
,

258 
AuthResu…
 * c⁄° 
ªsu…
)

260 
∑sswd
 
pwªt
;

261 
LDAP
 *
ld
;

262 
LDAPMesßge
 *
ªs
;

263 *
©ås
[] = {

264 
LDAP_HOMEDIRECTORY
,

265 
LDAP_UIDNUMBER
, 
LDAP_FTPUID
, 
LDAP_GIDNUMBER
, 
LDAP_FTPGID
,

266 
LDAP_USERPASSWORD
, 
LDAP_LOGINSHELL
, 
LDAP_FTPSTATUS
,

267 #ifde‡
QUOTAS


268 
LDAP_QUOTAFILES
, 
LDAP_QUOTAMBYTES
,

270 #ifde‡
RATIOS


271 
LDAP_DOWNLOADRATIO
, 
LDAP_UPLOADRATIO
,

273 #ifde‡
THROTTLING


274 
LDAP_DOWNLOADBANDWIDTH
, 
LDAP_UPLOADBANDWIDTH
,

276 
NULL


278 c⁄° *
pw_uid_s
 = 
NULL
;

279 c⁄° *
pw_gid_s
 = 
NULL
;

280 c⁄° *
pw_∑sswd_ld≠
 = 
NULL
;

281 c⁄° *
pw_íabÀd
 = 
NULL
;

282 #ifde‡
QUOTAS


283 c⁄° *
quŸa_fûes
 = 
NULL
;

284 c⁄° *
quŸa_mbyãs
 = 
NULL
;

286 #ifde‡
RATIOS


287 c⁄° *
øtio_ul
 = 
NULL
;

288 c⁄° *
øtio_dl
 = 
NULL
;

290 #ifde‡
THROTTLING


291 c⁄° *
b™dwidth_ul
 = 
NULL
;

292 c⁄° *
b™dwidth_dl
 = 
NULL
;

295 
	`mem£t
(&
pwªt
, 0, Öwret);

296 
pwªt
.
pw_«me
 =Öwªt.
pw_∑sswd
 =Öwªt.
pw_gecos
 =Öwªt.
pw_dú
 =

297 
pwªt
.
pw_shñl
 = 
NULL
;

298 
pwªt
.
pw_uid
 = (
uid_t
) 0;

299 
pwªt
.
pw_gid
 = (
gid_t
) 0;

300 i‡(
	`pw_ld≠_vÆid©e_«me
(
«me
) != 0) {

301  
NULL
;

303 i‡((
ld
 = 
	`pw_ld≠_c⁄√˘
(
böddn
, 
pwd
)Ë=
NULL
) {

304  
NULL
;

306 
©ås
[0] = 
ld≠_homedúe˘‹y
;

307 i‡((
ªs
 = 
	`pw_ld≠_uid_£¨ch
(
ld
, 
«me
, 
©ås
)Ë=
NULL
) {

308 
îr‹
;

310 
	`pw_ld≠_gëpw«m_‰ìfõlds
(&
pwªt
);

311 
pwªt
.
pw_«me
 = (*Ë
«me
;

312 
pw_íabÀd
 = 
	`pw_ld≠_gëvÆue
(
ld
, 
ªs
, 
LDAP_FTPSTATUS
);

313 i‡(
pw_íabÀd
 !
NULL
 && 
	`°rˇ£cmp
(pw_enabled, "enabled") != 0 &&

314 
	`°rˇ£cmp
(
pw_íabÀd
, "TRUE") != 0) {

315 
îr‹
;

318 #ifde‡
QUOTAS


319 i‡((
quŸa_fûes
 = 
	`pw_ld≠_gëvÆue
(
ld
, 
ªs
, 
LDAP_QUOTAFILES
)Ë!
NULL
) {

320 c⁄° 
q
 = 
	`°πouŒ
(
quŸa_fûes
, 
NULL
, 10);

322 i‡(
q
 > 0ULL) {

323 
ªsu…
->
u£r_quŸa_fûes
 = 
q
;

324 
ªsu…
->
quŸa_fûes_ch™ged
 = 1;

327 i‡((
quŸa_mbyãs
 = 
	`pw_ld≠_gëvÆue
(
ld
, 
ªs
, 
LDAP_QUOTAMBYTES
))

328 !
NULL
) {

329 c⁄° 
q
 = 
	`°πouŒ
(
quŸa_mbyãs
, 
NULL
, 10);

331 i‡(
q
 > 0ULL) {

332 
ªsu…
->
u£r_quŸa_size
 = 
q
 * (1024UL * 1024UL);

333 
ªsu…
->
quŸa_size_ch™ged
 = 1;

337 #ifde‡
RATIOS


338 i‡((
øtio_dl
 = 
	`pw_ld≠_gëvÆue
(
ld
, 
ªs
, 
LDAP_DOWNLOADRATIO
)Ë!
NULL
) {

339 c⁄° 
q
 = 
	`°πoul
(
øtio_dl
, 
NULL
, 10);

341 i‡(
q
 > 0U) {

342 
ªsu…
->
øtio_dow∆ﬂd
 = 
q
;

343 
ªsu…
->
øtio_dl_ch™ged
 = 1;

346 i‡((
øtio_ul
 = 
	`pw_ld≠_gëvÆue
(
ld
, 
ªs
, 
LDAP_UPLOADRATIO
)Ë!
NULL
) {

347 c⁄° 
q
 = 
	`°πoul
(
øtio_ul
, 
NULL
, 10);

349 i‡(
q
 > 0U) {

350 
ªsu…
->
øtio_u∂ﬂd
 = 
q
;

351 
ªsu…
->
øtio_ul_ch™ged
 = 1;

355 #ifde‡
THROTTLING


356 i‡((
b™dwidth_dl
 = 
	`pw_ld≠_gëvÆue
(
ld
, 
ªs
, 
LDAP_DOWNLOADBANDWIDTH
))

357 !
NULL
) {

358 c⁄° 
q
 = (Ë
	`°πoul
(
b™dwidth_dl
, 
NULL
, 10);

360 i‡(
q
 > 0UL) {

361 
ªsu…
->
thrŸéög_b™dwidth_dl
 = 
q
 * 1024UL;

362 
ªsu…
->
thrŸéög_dl_ch™ged
 = 1;

365 i‡((
b™dwidth_ul
 = 
	`pw_ld≠_gëvÆue
(
ld
, 
ªs
, 
LDAP_UPLOADBANDWIDTH
))

366 !
NULL
) {

367 c⁄° 
q
 = (Ë
	`°πoul
(
b™dwidth_ul
, 
NULL
, 10);

369 i‡(
q
 > 0UL) {

370 
ªsu…
->
thrŸéög_b™dwidth_ul
 = 
q
 * 1024UL;

371 
ªsu…
->
thrŸéög_ul_ch™ged
 = 1;

376 i‡(
u£_ld≠_böd_mëhod
 == 0) {

377 i‡((
pw_∑sswd_ld≠
 =

378 
	`pw_ld≠_gëvÆue
(
ld
, 
ªs
, 
LDAP_USERPASSWORD
)Ë=
NULL
) {

382 
	`logfûe
(
LOG_WARNING
, 
MSG_WARN_LDAP_USERPASS_EMPTY
);

383 
îr‹
;

385 
pwªt
.
pw_∑sswd
 = 
	`°rdup
(
pw_∑sswd_ld≠
);

386 
	`‰ì
((*Ë
pw_∑sswd_ld≠
);

387 
pw_∑sswd_ld≠
 = 
NULL
;

389 
pwªt
.
pw_∑sswd
 = 
	`°rdup
("");

391 i‡(
pwªt
.
pw_∑sswd
 =
NULL
) {

392 
	`logfûe
(
LOG_ERR
, 
MSG_OUT_OF_MEMORY
);

393 
îr‹
;

395 i‡((
pw_uid_s
 = 
	`pw_ld≠_gëvÆue
(
ld
, 
ªs
, 
LDAP_FTPUID
)Ë=
NULL
 ||

396 *
pw_uid_s
 == 0 ||

397 (
pwªt
.
pw_uid
 = (
uid_t
Ë
	`°πoul
(
pw_uid_s
, 
NULL
, 10)) <= (uid_t) 0) {

398 
	`‰ì
((*Ë
pw_uid_s
);

399 
pw_uid_s
 = 
NULL
;

400 i‡((
pw_uid_s
 = 
	`pw_ld≠_gëvÆue
(
ld
, 
ªs
, 
LDAP_UIDNUMBER
)Ë=
NULL
 ||

401 *
pw_uid_s
 == 0 ||

402 (
pwªt
.
pw_uid
 = (
uid_t
Ë
	`°πoul
(
pw_uid_s
, 
NULL
, 10)) <= (uid_t) 0) {

403 
pwªt
.
pw_uid
 = 
deÁu…_uid
;

406 
	`‰ì
((*Ë
pw_uid_s
);

407 
pw_uid_s
 = 
NULL
;

408 i‡((
pw_gid_s
 = 
	`pw_ld≠_gëvÆue
(
ld
, 
ªs
, 
LDAP_FTPGID
)Ë=
NULL
 ||

409 *
pw_gid_s
 == 0 ||

410 (
pwªt
.
pw_gid
 = (
gid_t
Ë
	`°πoul
(
pw_gid_s
, 
NULL
, 10)) <= (gid_t) 0) {

411 
	`‰ì
((*Ë
pw_gid_s
);

412 
pw_gid_s
 = 
NULL
;

413 i‡((
pw_gid_s
 = 
	`pw_ld≠_gëvÆue
(
ld
, 
ªs
, 
LDAP_GIDNUMBER
)Ë=
NULL
 ||

414 *
pw_gid_s
 == 0 ||

415 (
pwªt
.
pw_gid
 = (
gid_t
Ë
	`°πoul
(
pw_gid_s
, 
NULL
, 10)) <= (gid_t) 0) {

416 
pwªt
.
pw_gid
 = 
deÁu…_gid
;

419 
	`‰ì
((*Ë
pw_gid_s
);

420 
pw_gid_s
 = 
NULL
;

421 i‡((
pwªt
.
pw_dú
 =

422 
	`pw_ld≠_gëvÆue
(
ld
, 
ªs
, 
ld≠_homedúe˘‹y
)Ë=
NULL
 ||

423 *
pwªt
.
pw_dú
 == 0) {

424 i‡(
ld≠_deÁu…_home_dúe˘‹y
 =
NULL
 &&

425 *
ld≠_deÁu…_home_dúe˘‹y
 != 0) {

426 
îr‹
;

428 i‡((
pwªt
.
pw_dú
 = 
	`°rdup
(
ld≠_deÁu…_home_dúe˘‹y
)Ë=
NULL
) {

429 
	`dõ_mem
();

432 i‡((
pwªt
.
pw_shñl
 =

433 
	`pw_ld≠_gëvÆue
(
ld
, 
ªs
, 
LDAP_LOGINSHELL
)Ë=
NULL
) {

434 
pwªt
.
pw_shñl
 = 
	`°rdup
(
DEFAULT_SHELL
);

436 
ªsu…
->
backíd_d©a
 = 
	`ld≠_gë_dn
(
ld
, 
ªs
);

438 
	`ld≠_msg‰ì
(
ªs
);

439 
	`ld≠_unböd
(
ld
);

441  &
pwªt
;

443 
îr‹
:

444 i‡(
ªs
 !
NULL
) {

445 
	`ld≠_msg‰ì
(
ªs
);

447 
	`ld≠_unböd
(
ld
);

448 
	`pw_ld≠_gëpw«m_‰ìfõlds
(&
pwªt
);

449 
	`‰ì
((*Ë
pw_uid_s
);

450 
	`‰ì
((*Ë
pw_gid_s
);

451 
	`‰ì
((*Ë
pw_∑sswd_ld≠
);

452 
	`‰ì
((*Ë
pw_íabÀd
);

453 #ifde‡
QUOTAS


454 
	`‰ì
((*Ë
quŸa_fûes
);

455 
	`‰ì
((*Ë
quŸa_mbyãs
);

457 #ifde‡
RATIOS


458 
	`‰ì
((*Ë
øtio_ul
);

459 
	`‰ì
((*Ë
øtio_dl
);

461 #ifde‡
THROTTLING


462 
	`‰ì
((*Ë
b™dwidth_ul
);

463 
	`‰ì
((*Ë
b™dwidth_dl
);

465  
NULL
;

466 
	}
}

468 
	$pw_ld≠_check
(
AuthResu…
 * c⁄° 
ªsu…
,

469 c⁄° *
accou¡
, c⁄° *
∑ssw‹d
,

470 c⁄° 
sockaddr_°‹age
 * c⁄° 
ß
,

471 c⁄° 
sockaddr_°‹age
 * c⁄° 
≥î
)

473 
∑sswd
 *
pw
;

474 c⁄° *
•wd
;

475 c⁄° *
˝wd
 = 
NULL
;

476 sig√d 
noˇ£
 = 0;

478 (Ë
ß
;

479 (Ë
≥î
;

480 
ªsu…
->
auth_ok
 = 0;

481 i‡(
accou¡
 =
NULL
 || *accou¡ =0 || 
∑ssw‹d
 == NULL ||

482 (
pw
 = 
	`pw_ld≠_gëpw«m
(
accou¡
, 
ªsu…
)Ë=
NULL
) {

486 
ªsu…
->
auth_ok
--;

488 i‡(
u£_ld≠_böd_mëhod
 =1 && 
ªsu…
->
backíd_d©a
 !
NULL
) {

489 
LDAP
 *
ld
;

490 *
dn
 = (*Ë
ªsu…
->
backíd_d©a
;

491 
ok
 = 0;

494 i‡(
∑ssw‹d
 !
NULL
 && *password != 0 &&

495 (
ld
 = 
	`pw_ld≠_c⁄√˘
(
dn
, 
∑ssw‹d
)Ë!
NULL
) {

496 
	`ld≠_unböd
(
ld
);

497 
ok
 = 1;

499 
	`‰ì
(
ªsu…
->
backíd_d©a
);

500 
ªsu…
->
backíd_d©a
 = 
NULL
;

501 i‡(
ok
 <= 0) {

505 
	`‰ì
(
ªsu…
->
backíd_d©a
);

506 
ªsu…
->
backíd_d©a
 = 
NULL
;

507 
•wd
 = 
pw
->
pw_∑sswd
;

508 i‡(
	`°∫ˇ£cmp
(
•wd
, 
PASSWD_LDAP_MD5_PREFIX
,

509  
PASSWD_LDAP_MD5_PREFIX
 - 1U) == 0) {

510 
•wd
 +( 
PASSWD_LDAP_MD5_PREFIX
 - 1U);

512 i‡(
	`°æí
(
•wd
) >= 32U) {

513 
noˇ£
++;

515 
˝wd
 = 
	`¸y±o_hash_md5
(
∑ssw‹d
, 
noˇ£
);

516 } i‡(
	`°∫ˇ£cmp
(
•wd
, 
PASSWD_LDAP_SHA_PREFIX
,

517  
PASSWD_LDAP_SHA_PREFIX
 - 1U) == 0) {

518 
•wd
 +( 
PASSWD_LDAP_SHA_PREFIX
 - 1U);

519 i‡(
	`°æí
(
•wd
) >= 40U) {

520 
noˇ£
++;

522 
˝wd
 = 
	`¸y±o_hash_sha1
(
∑ssw‹d
, 
noˇ£
);

523 } i‡(
	`°∫ˇ£cmp
(
•wd
, 
PASSWD_LDAP_SSHA_PREFIX
,

524  
PASSWD_LDAP_SSHA_PREFIX
 - 1U) == 0) {

525 
•wd
 +( 
PASSWD_LDAP_SSHA_PREFIX
 - 1U);

526 
˝wd
 = 
	`¸y±o_hash_ssha1
(
∑ssw‹d
, 
•wd
);

527 } i‡(
	`°∫ˇ£cmp
(
•wd
, 
PASSWD_LDAP_SMD5_PREFIX
,

528  
PASSWD_LDAP_SMD5_PREFIX
 - 1U) == 0) {

529 
•wd
 +( 
PASSWD_LDAP_SMD5_PREFIX
 - 1U);

530 
˝wd
 = 
	`¸y±o_hash_smd5
(
∑ssw‹d
, 
•wd
);

531 } i‡(
	`°∫ˇ£cmp
(
•wd
, 
PASSWD_LDAP_CRYPT_PREFIX
,

532  
PASSWD_LDAP_CRYPT_PREFIX
 - 1U) == 0) {

533 
•wd
 +( 
PASSWD_LDAP_CRYPT_PREFIX
 - 1U);

534 
˝wd
 = (c⁄° *Ë
	`¸y±
(
∑ssw‹d
, 
•wd
);

535 } i‡(*
∑ssw‹d
 != 0) {

536 
˝wd
 = 
∑ssw‹d
;

540 i‡(
˝wd
 =
NULL
) {

543 i‡(
noˇ£
 != 0) {

544 i‡(
	`°rˇ£cmp
(
˝wd
, 
•wd
) != 0) {

548 i‡(
	`°rcmp
(
˝wd
, 
•wd
) != 0) {

552 
ªsu…
->
uid
 = 
pw
->
pw_uid
;

553 
ªsu…
->
gid
 = 
pw
->
pw_gid
;

554 i‡(
ªsu…
->
uid
 <(
uid_t
Ë0 ||Ñesu…->
gid
 <(
gid_t
) 0) {

557 i‡((
ªsu…
->
dú
 = 
	`°rdup
(
pw
->
pw_dú
)Ë=
NULL
) {

560 
ªsu…
->
¶ow_tûde_ex∑nsi⁄
 = 1;

561 
ªsu…
->
auth_ok
 = 1;

562 
	}
}

564 sig√d 
v6ªady
;

	@src/log_ldap.h

1 #i‚de‡
__LOG_LDAP_H__


2 
	#__LOG_LDAP_H__
 1

	)

4 
	#LDAP_POSIXACCOUNT
 "posixAccou¡"

	)

5 
	#LDAP_UID
 "uid"

	)

6 
	#LDAP_UIDNUMBER
 "uidNumbî"

	)

7 
	#LDAP_GIDNUMBER
 "gidNumbî"

	)

8 
	#LDAP_HOMEDIRECTORY
 "homeDúe˘‹y"

	)

9 
	#LDAP_USERPASSWORD
 "u£rPassw‹d"

	)

10 
	#LDAP_LOGINSHELL
 "logöShñl"

	)

11 
	#LDAP_FTPUID
 "FTPuid"

	)

12 
	#LDAP_FTPGID
 "FTPgid"

	)

14 
	#LDAP_FTPSTATUS
 "FTPSètus"

	)

16 #ifde‡
QUOTAS


17 
	#LDAP_QUOTAFILES
 "FTPQuŸaFûes"

	)

18 
	#LDAP_QUOTAMBYTES
 "FTPQuŸaMByãs"

	)

21 #ifde‡
RATIOS


22 
	#LDAP_DOWNLOADRATIO
 "FTPDow∆ﬂdR©io"

	)

23 
	#LDAP_UPLOADRATIO
 "FTPU∂ﬂdR©io"

	)

26 #ifde‡
THROTTLING


27 
	#LDAP_DOWNLOADBANDWIDTH
 "FTPDow∆ﬂdB™dwidth"

	)

28 
	#LDAP_UPLOADBANDWIDTH
 "FTPU∂ﬂdB™dwidth"

	)

31 
	#MAX_LDAP_UID_LENGTH
 256U

	)

32 
	#DEFAULT_SHELL
 "·p"

	)

33 
	#PASSWD_LDAP_CRYPT_PREFIX
 "{¸y±}"

	)

34 
	#PASSWD_LDAP_MD5_PREFIX
 "{md5}"

	)

35 
	#PASSWD_LDAP_SMD5_PREFIX
 "{smd5}"

	)

36 
	#PASSWD_LDAP_SHA_PREFIX
 "{sha}"

	)

37 
	#PASSWD_LDAP_SSHA_PREFIX
 "{ssha}"

	)

38 
	#LDAP_DEFAULT_SERVER
 "loˇlho°"

	)

39 
	#LDAP_DEFAULT_PORT
 389

	)

40 
	#LDAP_DEFAULT_FILTER
 "(&(obje˘CœssıosixAccou¡)(uid=\\L))"

	)

41 
	#LDAP_DEFAULT_VERSION
 3

	)

43 
pw_ld≠_∑r£
(c⁄° * c⁄° 
fûe
);

45 
pw_ld≠_check
(
AuthResu…
 * c⁄° 
ªsu…
,

46 c⁄° *
accou¡
, c⁄° *
∑ssw‹d
,

47 c⁄° 
sockaddr_°‹age
 * c⁄° 
ß
,

48 c⁄° 
sockaddr_°‹age
 * c⁄° 
≥î
);

50 
pw_ld≠_exô
();

	@src/log_ldap_p.h

5 #i‚de‡
__LOG_LDAP_P_H__


6 
	#__LOG_LDAP_P_H__
 1

	)

8 
	#LDAP_DEPRECATED
 1

	)

9 
	~<lbî.h
>

10 
	~<ld≠.h
>

12 *
	gld≠_ho°
;

13 *
	gp‹t_s
;

14 
	gp‹t
;

15 *
	gböddn
;

16 *
	gpwd
;

17 *
	gba£
;

18 *
	gld≠_fûãr
;

19 *
	gld≠_homedúe˘‹y
;

20 *
	gld≠_vîsi⁄_s
;

21 
	gld≠_vîsi⁄
;

22 *
	gdeÁu…_uid_s
;

23 
uid_t
 
	gdeÁu…_uid
;

24 *
	gdeÁu…_gid_s
;

25 
gid_t
 
	gdeÁu…_gid
;

26 *
	gu£_és_s
;

27 
	gu£_és
;

28 *
	gld≠_auth_mëhod_s
;

29 
	gu£_ld≠_böd_mëhod
;

30 *
	gld≠_deÁu…_home_dúe˘‹y
;

32 
C⁄figKeyw‹ds
 
	gld≠_c⁄fig_keyw‹ds
[] = {

33 { "LDAPSîvî", &
ld≠_ho°
 },

34 { "LDAPP‹t", &
p‹t_s
 },

35 { "LDAPBödDN", &
böddn
 },

36 { "LDAPBödPW", &
pwd
 },

37 { "LDAPBa£DN", &
ba£
 },

38 { "LDAPFûãr", &
ld≠_fûãr
},

39 { "LDAPHomeDú", &
ld≠_homedúe˘‹y
 },

40 { "LDAPVîsi⁄", &
ld≠_vîsi⁄_s
 },

41 { "LDAPDeÁu…UID", &
deÁu…_uid_s
 },

42 { "LDAPDeÁu…GID", &
deÁu…_gid_s
 },

43 { "LDAPU£TLS", &
u£_és_s
 },

44 { "LDAPAuthMëhod", &
ld≠_auth_mëhod_s
 },

45 { "LDAPDeÁu…HomeDúe˘‹y", &
ld≠_deÁu…_home_dúe˘‹y
 },

46 { 
NULL
, NULL }

	@src/log_mysql.c

1 
	~<c⁄fig.h
>

3 #ifde‡
WITH_MYSQL


5 
	~"·pd.h
"

6 
	~"∑r£r.h
"

7 
	~"log_mysql_p.h
"

8 
	~"log_mysql.h
"

9 
	~"mesßges.h
"

10 
	~"¸y±o.h
"

11 
	~"Æt_¨c4øndom.h
"

13 #ifde‡
WITH_DMALLOC


14 
	~<dmÆloc.h
>

17 
	$pw_mysql_vÆid©e_«me
(c⁄° *
«me
)

19 i‡(
«me
 =
NULL
 || *name == 0) {

23 i‡((*
«me
 >= 'a' && *name <= 'z') ||

24 (*
«me
 >= 'A' && *name <= 'Z') ||

25 (*
«me
 >= '0' && *name <= '9') ||

26 *
«me
 == ' ' || *name == '-' ||

27 *
«me
 == '_' || *name == '\'' || *name == '.' ||

28 *
«me
 == ':' || *name == '@' || *name == '+') {

33 
«me
++;

34 } *
«me
 != 0);

37 
	}
}

39 *
	$pw_mysql_esˇ≥_°rög
(
MYSQL
 * c⁄° 
id_sql_£rvî
,

40 c⁄° *
‰om
)

42 
size_t
 
‰om_Àn
;

43 
size_t
 
to_Àn
;

44 *
to
;

45 
tﬁí
;

46 
t
;

47 
t1
, 
t2
;

49 i‡(
‰om
 =
NULL
) {

50  
NULL
;

52 
‰om_Àn
 = 
	`°æí
(
‰om
);

53 
to_Àn
 = 
‰om_Àn
 * 2U + (
size_t
) 1U;

54 i‡((
to
 = 
	`mÆloc
(
to_Àn
 + (
size_t
Ë2U)Ë=
NULL
) {

55  
NULL
;

57 
t
 = 
	`zønd
();

58 
t1
 = 
t
 & 0xff;

59 
t2
 = (
t
 >> 8) & 0xff;

60 
to
[
to_Àn
] = (Ë
t1
;

61 
to
[
to_Àn
 + 1] = (Ë
t2
;

71 #ifde‡
HAVE_MYSQL_REAL_ESCAPE_STRING


72 
tﬁí
 = 
	`mysql_ªÆ_esˇ≥_°rög
(
id_sql_£rvî
, 
to
, 
‰om
, 
‰om_Àn
);

75 
tﬁí
 = 
	`mysql_esˇ≥_°rög
(
to
, 
‰om
, 
‰om_Àn
);

77 i‡(
tﬁí
 >
to_Àn
 ||

78 (Ë
to
[
to_Àn
] !
t1
 ||

79 (Ë
to
[
to_Àn
 + 1] !
t2
) {

81 *
to
++ = 0;

84 
to
[
tﬁí
] = 0;

86  
to
;

87 
	}
}

97 *
	$sqlsub°
(c⁄° *
‹ig_°r
, * c⁄° 
quîy
,

98 
size_t
 
quîy_Àn
, c⁄° * c⁄° 
u£r
,

99 c⁄° * c⁄° 
ù
, c⁄° * c⁄° 
p‹t
,

100 c⁄° * c⁄° 
≥î_ù
,

101 c⁄° * c⁄° 
decimÆ_ù
)

103 *
quîy_≤t
 = 
quîy
;

104 c⁄° *
‹ig_°r_sˇn
 = 
‹ig_°r
;

105 c⁄° 
size_t
 
u£r_Àn
 = (
u£r
 =
NULL
 ? (size_tË0U : 
	`°æí
(user));

106 c⁄° 
size_t
 
ù_Àn
 = (
ù
 =
NULL
 ? (size_tË0U : 
	`°æí
(ip));

107 c⁄° 
size_t
 
p‹t_Àn
 = (
p‹t
 =
NULL
 ? (size_tË0U : 
	`°æí
(port));

108 c⁄° 
size_t
 
≥î_ù_Àn
 = (
≥î_ù
 =
NULL
 ? (size_tË0U : 
	`°æí
(peer_ip));

109 c⁄° 
size_t
 
decimÆ_ù_Àn
 = (
decimÆ_ù
 =
NULL
 ? (size_tË0U : 
	`°æí
(decimal_ip));

111 *
‹ig_°r_sˇn
 != 0) {

112 i‡(*
‹ig_°r_sˇn
 == '\\' && orig_str_scan[1] != 0) {

113 
‹ig_°r_sˇn
++;

114 
	`tﬁowî
((Ë*
‹ig_°r_sˇn
)) {

116 i‡(
u£r_Àn
 >
quîy_Àn
) {

117  
NULL
;

119 i‡(
u£r_Àn
 <(
size_t
) 0U) {

120 
√xt⁄e
;

122 
	`mem˝y
(
quîy_≤t
, 
u£r
, 
u£r_Àn
);

123 
quîy_≤t
 +
u£r_Àn
;

124 
quîy_Àn
 -
u£r_Àn
;

125 
√xt⁄e
;

127 i‡(
ù_Àn
 >
quîy_Àn
) {

128  
NULL
;

130 i‡(
ù_Àn
 <(
size_t
) 0U) {

131 
√xt⁄e
;

133 
	`mem˝y
(
quîy_≤t
, 
ù
, 
ù_Àn
);

134 
quîy_≤t
 +
ù_Àn
;

135 
quîy_Àn
 -
ù_Àn
;

136 
√xt⁄e
;

138 i‡(
p‹t_Àn
 >
quîy_Àn
) {

139  
NULL
;

141 i‡(
p‹t_Àn
 <(
size_t
) 0U) {

142 
√xt⁄e
;

144 
	`mem˝y
(
quîy_≤t
, 
p‹t
, 
p‹t_Àn
);

145 
quîy_≤t
 +
p‹t_Àn
;

146 
quîy_Àn
 -
p‹t_Àn
;

147 
√xt⁄e
;

149 i‡(
≥î_ù_Àn
 >
quîy_Àn
) {

150  
NULL
;

152 i‡(
≥î_ù_Àn
 <(
size_t
) 0U) {

153 
√xt⁄e
;

155 
	`mem˝y
(
quîy_≤t
, 
≥î_ù
, 
≥î_ù_Àn
);

156 
quîy_≤t
 +
≥î_ù_Àn
;

157 
quîy_Àn
 -
≥î_ù_Àn
;

158 
√xt⁄e
;

160 i‡(
decimÆ_ù_Àn
 >
quîy_Àn
) {

161  
NULL
;

163 i‡(
decimÆ_ù_Àn
 <(
size_t
) 0U) {

164 
√xt⁄e
;

166 
	`mem˝y
(
quîy_≤t
, 
decimÆ_ù
, 
decimÆ_ù_Àn
);

167 
quîy_≤t
 +
decimÆ_ù_Àn
;

168 
quîy_Àn
 -
decimÆ_ù_Àn
;

169 
√xt⁄e
;

171 i‡(--
quîy_Àn
 <(
size_t
) 0U) {

172  
NULL
;

174 *
quîy_≤t
++ = '\\';

177 i‡(
	`ISCTRLCODE
(*
‹ig_°r_sˇn
)) {

178 
√xt⁄e
;

180 i‡(--
quîy_Àn
 <(
size_t
) 0U) {

181  
NULL
;

183 *
quîy_≤t
++ = *
‹ig_°r_sˇn
;

184 
√xt⁄e
:

185 
‹ig_°r_sˇn
++;

187 *
quîy_≤t
 = 0;

189  
quîy
;

190 
	}
}

192 
	$pw_mysql_c⁄√˘
(
MYSQL
 ** c⁄° 
id_sql_£rvî
)

194 *
id_sql_£rvî
 = 
NULL
;

196 i‡((*
id_sql_£rvî
 = 
	`mysql_öô
(
NULL
)) == NULL) {

197 
down
:

198 i‡(
£rvî_down
 == 0) {

199 c⁄° *
mysql_îr
 = "mysql_init()";

201 i‡(*
id_sql_£rvî
 !
NULL
) {

202 
mysql_îr
 = 
	`mysql_îr‹
(*
id_sql_£rvî
);

204 
£rvî_down
++;

205 
	`logfûe
(
LOG_ERR
, 
MSG_SQL_DOWN
 " [%s]", 
mysql_îr
);

209 i‡(
	`mysql_ªÆ_c⁄√˘
(*
id_sql_£rvî
, 
£rvî
, 
u£r
, 
pw
,

210 
db
, 
p‹t
, 
sockë_∑th
,

211 #ifde‡
CLIENT_MULTI_STATEMENTS


212 
CLIENT_MULTI_STATEMENTS


216 Ë=
NULL
) {

217 
down
;

219 i‡(
	`mysql_pög
(*
id_sql_£rvî
) != 0) {

220 
down
;

222 
£rvî_down
 = 0;

225 
	}
}

227 
	$pw_mysql_sim∂equîy
(
MYSQL
 * c⁄° 
id_sql_£rvî
,

228 c⁄° * c⁄° 
quîy
)

230 i‡(
	`mysql_ªÆ_quîy
(
id_sql_£rvî
, 
quîy
, 
	`°æí
(query)) != 0) {

234 
	}
}

236 *
	$pw_mysql_gëquîy
(
MYSQL
 * c⁄° 
id_sql_£rvî
,

237 c⁄° * c⁄° 
‹ig_quîy
,

238 c⁄° * c⁄° 
accou¡
,

239 c⁄° * c⁄° 
ù
,

240 c⁄° * c⁄° 
p‹t
,

241 c⁄° * c⁄° 
≥î_ù
,

242 c⁄° * c⁄° 
decimÆ_ù
)

244 
quîy
[
MYSQL_MAX_REQUEST_LENGTH
];

245 
MYSQL_RES
 *
qªsu…
 = 
NULL
;

246 *
Àngths
;

247 *
™swî
 = 
NULL
;

248 
MYSQL_ROW
 
row
;

249 
size_t
 
Àngth
;

251 i‡(
‹ig_quîy
 =
NULL
 || *orig_query == 0) {

252 
bye
;

254 i‡(
	`sqlsub°
(
‹ig_quîy
, 
quîy
,  query,

255 
accou¡
, 
ù
, 
p‹t
, 
≥î_ù
, 
decimÆ_ù
Ë=
NULL
) {

256 
bye
;

258 i‡(
	`mysql_ªÆ_quîy
(
id_sql_£rvî
, 
quîy
, 
	`°æí
(query)) != 0) {

259 
	`logfûe
(
LOG_WARNING
, 
MSG_SQL_WRONG_PARMS
 " : [%s]", 
quîy
);

260 
bye
;

262 i‡(
	`mysql_fõld_cou¡
(
id_sql_£rvî
) != 1) {

263 
bye
;

265 i‡((
qªsu…
 = 
	`mysql_°‹e_ªsu…
(
id_sql_£rvî
)Ë=
NULL
) {

266 
bye
;

268 i‡(
	`mysql_num_rows
(
qªsu…
) != 1) {

269 
bye
;

271 i‡((
row
 = 
	`mysql_„tch_row
(
qªsu…
)Ë=
NULL
 ||Ñow[0] == NULL) {

272 
bye
;

274 
Àngths
 = 
	`mysql_„tch_Àngths
(
qªsu…
);

275 i‡(
Àngths
 =
NULL
 ||

276 (
Àngth
 = (
size_t
Ë
Àngths
[0] + (size_t) 1U) <= (size_t) 1U) {

277 
bye
;

279 i‡((
™swî
 = 
	`mÆloc
(
Àngth
)Ë=
NULL
) {

280 
bye
;

282 
	`°∫˝y
(
™swî
, 
row
[0], 
Àngth
 - (
size_t
) 1U);

283 
™swî
[
Àngth
 - (
size_t
) 1U] = 0;

285 
bye
:

286 i‡(
qªsu…
 !
NULL
) {

287 
	`mysql_‰ì_ªsu…
(
qªsu…
);

288 #ifde‡
CLIENT_MULTI_STATEMENTS


289 
	`mysql_√xt_ªsu…
(
id_sql_£rvî
) == 0) {

290 
qªsu…
 = 
	`mysql_°‹e_ªsu…
(
id_sql_£rvî
);

291 
	`mysql_‰ì_ªsu…
(
qªsu…
);

295  
™swî
;

296 
	}
}

298 
	$pw_mysql_check
(
AuthResu…
 * c⁄° 
ªsu…
,

299 c⁄° *
accou¡
, c⁄° *
∑ssw‹d
,

300 c⁄° 
sockaddr_°‹age
 * c⁄° 
ß
,

301 c⁄° 
sockaddr_°‹age
 * c⁄° 
≥î
)

303 
MYSQL
 *
id_sql_£rvî
 = 
NULL
;

304 c⁄° *
•wd
 = 
NULL
;

305 c⁄° *
uid
 = 
sql_deÁu…_uid
;

306 c⁄° *
gid
 = 
sql_deÁu…_gid
;

307 c⁄° *
dú
 = 
NULL
;

308 #ifde‡
QUOTAS


309 c⁄° *
sqè_fs
 = 
NULL
;

310 c⁄° *
sqè_sz
 = 
NULL
;

312 #ifde‡
RATIOS


313 c⁄° *
øtio_ul
 = 
NULL
;

314 c⁄° *
øtio_dl
 = 
NULL
;

316 #ifde‡
THROTTLING


317 c⁄° *
b™dwidth_ul
 = 
NULL
;

318 c⁄° *
b™dwidth_dl
 = 
NULL
;

320 *
esˇ≥d_accou¡
 = 
NULL
;

321 *
esˇ≥d_ù
 = 
NULL
;

322 *
esˇ≥d_p‹t
 = 
NULL
;

323 *
esˇ≥d_≥î_ù
 = 
NULL
;

324 *
esˇ≥d_decimÆ_ù
 = 
NULL
;

325 
commôãd
 = 1;

326 
¸y±o_¸y±
 = 0, 
¸y±o_mysql
 = 0, 
¸y±o_md5
 = 0, 
¸y±o_sha1
 = 0,

327 
¸y±o_∂aö
 = 0;

328 
decimÆ_ù_num
 = 0UL;

329 
decimÆ_ù
[42];

330 
hbuf
[
NI_MAXHOST
];

331 
pbuf
[
NI_MAXSERV
];

332 
phbuf
[
NI_MAXHOST
];

334 
ªsu…
->
auth_ok
 = 0;

335 i‡(
	`pw_mysql_vÆid©e_«me
(
accou¡
) != 0) {

336 
bye
;

338 i‡(
	`gë«meöfo
((c⁄° 
sockaddr
 *Ë
ß
, 
	`STORAGE_LEN
(*sa),

339 
hbuf
,  hbuf, 
pbuf
, Öbuf,

340 
NI_NUMERICHOST
 | 
NI_NUMERICSERV
) != 0 ||

341 
	`gë«meöfo
((c⁄° 
sockaddr
 *Ë
≥î
, 
	`STORAGE_LEN
(*peer),

342 
phbuf
, Öhbuf, 
NULL
, (
size_t
) 0U,

343 
NI_NUMERICHOST
) != 0) {

344 
bye
;

346 *
decimÆ_ù
 = 0;

347 i‡(
	`STORAGE_FAMILY
(*
≥î
Ë=
AF_INET
) {

348 c⁄° *
decimÆ_ù_øw
 =

349 (c⁄° *Ë&(
	`STORAGE_SIN_ADDR
(*
≥î
));

350 
decimÆ_ù_num
 = (
decimÆ_ù_øw
[0] << 24) |

351 (
decimÆ_ù_øw
[1] << 16) | (decimal_ip_raw[2] << 8) |

352 
decimÆ_ù_øw
[3];

353 i‡(
	`SNCHECK
(
	`¢¥ötf
(
decimÆ_ù
,  decimal_ip,

354 "%lu", 
decimÆ_ù_num
),  
decimÆ_ù
)) {

355 
bye
;

358 i‡(
	`pw_mysql_c⁄√˘
(&
id_sql_£rvî
) != 0) {

359 
bye
;

361 i‡((
esˇ≥d_accou¡
 =

362 
	`pw_mysql_esˇ≥_°rög
(
id_sql_£rvî
, 
accou¡
)Ë=
NULL
) {

363 
bye
;

365 i‡((
esˇ≥d_ù
 =

366 
	`pw_mysql_esˇ≥_°rög
(
id_sql_£rvî
, 
hbuf
)Ë=
NULL
) {

367 
bye
;

369 i‡((
esˇ≥d_p‹t
 =

370 
	`pw_mysql_esˇ≥_°rög
(
id_sql_£rvî
, 
pbuf
)Ë=
NULL
) {

371 
bye
;

373 i‡((
esˇ≥d_≥î_ù
 =

374 
	`pw_mysql_esˇ≥_°rög
(
id_sql_£rvî
, 
phbuf
)Ë=
NULL
) {

375 
bye
;

377 i‡((
esˇ≥d_decimÆ_ù
 =

378 
	`pw_mysql_esˇ≥_°rög
(
id_sql_£rvî
, 
decimÆ_ù
)Ë=
NULL
) {

379 
bye
;

381 i‡(
å™ß˘i⁄s
 !
NULL
 && 
	`°rˇ£cmp
(transactions, "on") == 0) {

382 i‡(
	`pw_mysql_sim∂equîy
(
id_sql_£rvî
, 
MYSQL_TRANSACTION_START
) == 0) {

383 
commôãd
 = 0;

386 i‡((
•wd
 = 
	`pw_mysql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëpw
,

387 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

388 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

389 
esˇ≥d_decimÆ_ù
)Ë=
NULL
) {

390 
bye
;

392 i‡(
uid
 =
NULL
) {

393 
uid
 = 
	`pw_mysql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëuid
,

394 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

395 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

396 
esˇ≥d_decimÆ_ù
);

398 i‡(
uid
 =
NULL
) {

399 
bye
;

401 i‡(
gid
 =
NULL
) {

402 
gid
 = 
	`pw_mysql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëgid
,

403 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

404 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

405 
esˇ≥d_decimÆ_ù
);

407 i‡(
gid
 =
NULL
) {

408 
bye
;

410 i‡((
dú
 = 
	`pw_mysql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëdú
,

411 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

412 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

413 
esˇ≥d_decimÆ_ù
)Ë=
NULL
) {

414 
bye
;

416 
ªsu…
->
auth_ok
--;

417 i‡(
	`°rˇ£cmp
(
¸y±o
, 
PASSWD_SQL_ANY
) == 0) {

418 
¸y±o_¸y±
++;

419 
¸y±o_mysql
++;

420 
¸y±o_md5
++;

421 
¸y±o_sha1
++;

422 } i‡(
	`°rˇ£cmp
(
¸y±o
, 
PASSWD_SQL_CRYPT
) == 0) {

423 
¸y±o_¸y±
++;

424 } i‡(
	`°rˇ£cmp
(
¸y±o
, 
PASSWD_SQL_MYSQL
) == 0) {

425 
¸y±o_mysql
++;

426 } i‡(
	`°rˇ£cmp
(
¸y±o
, 
PASSWD_SQL_MD5
) == 0) {

427 
¸y±o_md5
++;

428 } i‡(
	`°rˇ£cmp
(
¸y±o
, 
PASSWD_SQL_SHA1
) == 0) {

429 
¸y±o_sha1
++;

431 
¸y±o_∂aö
++;

433 i‡(
¸y±o_¸y±
 != 0) {

434 c⁄° *
¸y±ed
;

436 i‡((
¸y±ed
 = (c⁄° *Ë
	`¸y±
(
∑ssw‹d
, 
•wd
)Ë!
NULL
 &&

437 
	`°rcmp
(
¸y±ed
, 
•wd
) == 0) {

438 
auth_ok
;

441 i‡(
¸y±o_mysql
 != 0) {

442 #i‡
MYSQL_VERSION_ID
 < 40100 || 
	`deföed
(
USE_OLD_MYSQL_SCRAMBLING
)

443 
hash_ªs
[2];

444 
s¸ambÀd_∑ssw‹d
[
MYSQL_CRYPT_LEN
];

446 #i‡
MYSQL_VERSION_ID
 < 40100

447 
	`hash_∑ssw‹d
(
hash_ªs
, 
∑ssw‹d
);

449 
	`hash_∑ssw‹d
(
hash_ªs
, 
∑ssw‹d
, 
	`°æí
(password));

451 
	`¢¥ötf
(
s¸ambÀd_∑ssw‹d
,  scrambled_password, "%08lx%08lx",

452 
hash_ªs
[0], hash_res[1]);

454 
s¸ambÀd_∑ssw‹d
[42];

456 #i‡
MYSQL_VERSION_ID
 >= 40100 && MYSQL_VERSION_ID < 40101

457 
	`make_s¸ambÀd_∑ssw‹d
(
s¸ambÀd_∑ssw‹d
, 
∑ssw‹d
, 1, 
NULL
);

459 #ifde‡
HAVE_MY_MAKE_SCRAMBLED_PASSWORD


460 
	`my_make_s¸ambÀd_∑ssw‹d
(
s¸ambÀd_∑ssw‹d
, 
∑ssw‹d
,

461 
	`°æí
(
∑ssw‹d
));

463 
	`make_s¸ambÀd_∑ssw‹d
(
s¸ambÀd_∑ssw‹d
, 
∑ssw‹d
);

467 i‡(
	`°rcmp
(
s¸ambÀd_∑ssw‹d
, 
•wd
) == 0) {

468 
auth_ok
;

471 i‡(
¸y±o_md5
 != 0) {

472 c⁄° *
¸y±ed
;

474 i‡((
¸y±ed
 = (c⁄° *Ë
	`¸y±o_hash_md5
(
∑ssw‹d
, 1)Ë!
NULL
 &&

475 
	`°rcmp
(
¸y±ed
, 
•wd
) == 0) {

476 
auth_ok
;

479 i‡(
¸y±o_sha1
 != 0) {

480 c⁄° *
¸y±ed
;

482 i‡((
¸y±ed
 = (c⁄° *Ë
	`¸y±o_hash_sha1
(
∑ssw‹d
, 1)Ë!
NULL
 &&

483 
	`°rcmp
(
¸y±ed
, 
•wd
) == 0) {

484 
auth_ok
;

487 i‡(
¸y±o_∂aö
 != 0) {

488 i‡(*
∑ssw‹d
 != 0 &&

489 
	`°rcmp
(
∑ssw‹d
, 
•wd
) == 0) {

490 
auth_ok
;

493 
bye
;

495 
auth_ok
:

500 
ªsu…
->
uid
 = (
uid_t
Ë
	`°πoul
(uid, 
NULL
, 10);

501 i‡(
ªsu…
->
uid
 <(
uid_t
) 0) {

502 
∑sswd
 *
pw
;

504 i‡((
pw
 = 
	`gëpw«m
(
uid
)Ë=
NULL
 ||Öw->
pw_uid
 <(
uid_t
) 0) {

505 
bye
;

507 
ªsu…
->
uid
 = 
pw
->
pw_uid
;

509 
ªsu…
->
gid
 = (
gid_t
Ë
	`°πoul
(gid, 
NULL
, 10);

510 i‡(
ªsu…
->
gid
 <(
gid_t
) 0) {

511 
group
 *
gr
;

513 i‡((
gr
 = 
	`gëg∫am
(
gid
)Ë=
NULL
 || (
gid_t
Ëgr->
gr_gid
 <= (gid_t) 0) {

514 
bye
;

516 
ªsu…
->
gid
 = 
gr
->
gr_gid
;

518 
ªsu…
->
dú
 = dir;

519 
dú
 = 
NULL
;

520 #ifde‡
QUOTAS


521 i‡((
sqè_fs
 = 
	`pw_mysql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëqè_fs
,

522 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

523 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

524 
esˇ≥d_decimÆ_ù
)Ë!
NULL
) {

525 c⁄° 
q
 = 
	`°πouŒ
(
sqè_fs
, 
NULL
, 10);

527 i‡(
q
 > 0ULL) {

528 
ªsu…
->
u£r_quŸa_fûes
 = 
q
;

529 
ªsu…
->
quŸa_fûes_ch™ged
 = 1;

532 i‡((
sqè_sz
 = 
	`pw_mysql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëqè_sz
,

533 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

534 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

535 
esˇ≥d_decimÆ_ù
)Ë!
NULL
) {

536 c⁄° 
q
 = 
	`°πouŒ
(
sqè_sz
, 
NULL
, 10);

538 i‡(
q
 > 0ULL) {

539 
ªsu…
->
u£r_quŸa_size
 = 
q
 * (1024UL * 1024UL);

540 
ªsu…
->
quŸa_size_ch™ged
 = 1;

544 #ifde‡
RATIOS


545 i‡((
øtio_ul
 = 
	`pw_mysql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëøtio_ul
,

546 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

547 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

548 
esˇ≥d_decimÆ_ù
)Ë!
NULL
) {

549 c⁄° 
q
 = (Ë
	`°πoul
(
øtio_ul
, 
NULL
, 10);

551 i‡(
q
 > 0U) {

552 
ªsu…
->
øtio_u∂ﬂd
 = 
q
;

553 
ªsu…
->
øtio_ul_ch™ged
 = 1;

556 i‡((
øtio_dl
 = 
	`pw_mysql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëøtio_dl
,

557 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

558 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

559 
esˇ≥d_decimÆ_ù
)Ë!
NULL
) {

560 c⁄° 
q
 = (Ë
	`°πoul
(
øtio_dl
, 
NULL
, 10);

562 i‡(
q
 > 0U) {

563 
ªsu…
->
øtio_dow∆ﬂd
 = 
q
;

564 
ªsu…
->
øtio_dl_ch™ged
 = 1;

568 #ifde‡
THROTTLING


569 i‡((
b™dwidth_ul
 = 
	`pw_mysql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëb™dwidth_ul
,

570 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

571 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

572 
esˇ≥d_decimÆ_ù
)Ë!
NULL
) {

573 c⁄° 
q
 = (Ë
	`°πoul
(
b™dwidth_ul
, 
NULL
, 10);

575 i‡(
q
 > 0UL) {

576 
ªsu…
->
thrŸéög_b™dwidth_ul
 = 
q
 * 1024UL;

577 
ªsu…
->
thrŸéög_ul_ch™ged
 = 1;

580 i‡((
b™dwidth_dl
 = 
	`pw_mysql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëb™dwidth_dl
,

581 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

582 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

583 
esˇ≥d_decimÆ_ù
)Ë!
NULL
) {

584 c⁄° 
q
 = (Ë
	`°πoul
(
b™dwidth_dl
, 
NULL
, 10);

586 i‡(
q
 > 0UL) {

587 
ªsu…
->
thrŸéög_b™dwidth_dl
 = 
q
 * 1024UL;

588 
ªsu…
->
thrŸéög_dl_ch™ged
 = 1;

592 
ªsu…
->
¶ow_tûde_ex∑nsi⁄
 = !
tûdexp
;

593 
ªsu…
->
auth_ok
 = -result->auth_ok;

594 
bye
:

595 i‡(
commôãd
 == 0) {

596 (Ë
	`pw_mysql_sim∂equîy
(
id_sql_£rvî
, 
MYSQL_TRANSACTION_END
);

598 i‡(
id_sql_£rvî
 !
NULL
) {

599 
	`mysql_˛o£
(
id_sql_£rvî
);

601 
	`‰ì
((*Ë
•wd
);

602 i‡(
uid
 !
sql_deÁu…_uid
) {

603 
	`‰ì
((*Ë
uid
);

605 i‡(
gid
 !
sql_deÁu…_gid
) {

606 
	`‰ì
((*Ë
gid
);

608 
	`‰ì
((*Ë
dú
);

609 #ifde‡
QUOTAS


610 
	`‰ì
((*Ë
sqè_fs
);

611 
	`‰ì
((*Ë
sqè_sz
);

613 #ifde‡
RATIOS


614 
	`‰ì
((*Ë
øtio_ul
);

615 
	`‰ì
((*Ë
øtio_dl
);

617 #ifde‡
THROTTLING


618 
	`‰ì
((*Ë
b™dwidth_ul
);

619 
	`‰ì
((*Ë
b™dwidth_dl
);

621 
	`‰ì
((*Ë
esˇ≥d_accou¡
);

622 
	`‰ì
((*Ë
esˇ≥d_ù
);

623 
	`‰ì
((*Ë
esˇ≥d_p‹t
);

624 
	`‰ì
((*Ë
esˇ≥d_≥î_ù
);

625 
	`‰ì
((*Ë
esˇ≥d_decimÆ_ù
);

626 
	}
}

628 
	$pw_mysql_∑r£
(c⁄° * c⁄° 
fûe
)

630 i‡(
	`gíîic_∑r£r
(
fûe
, 
mysql_c⁄fig_keyw‹ds
) != 0) {

631 
	`dõ
(421, 
LOG_ERR
, 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_CONFIG_FILE_SQL
 ": %s",

632 
fûe
);

634 i‡(
£rvî
 =
NULL
 && 
sockë_∑th
 == NULL) {

635 
	`dõ
(421, 
LOG_ERR
, 
MSG_SQL_MISSING_SERVER
);

637 i‡(
£rvî
 !
NULL
 && 
sockë_∑th
 != NULL) {

638 
	`‰ì
(
sockë_∑th
);

639 
sockë_∑th
 = 
NULL
;

641 i‡(
tûdexp_s
 !
NULL
) {

642 i‡((
tûdexp
 = 
	`©oi
(
tûdexp_s
)) < 0) {

643 
tûdexp
 = 0;

645 
	`‰ì
(
tûdexp_s
);

646 
tûdexp_s
 = 
NULL
;

648 i‡(
p‹t_s
 !
NULL
) {

649 
p‹t
 = 
	`©oi
(
p‹t_s
);

650 i‡(
p‹t
 <= 0 ||Öort > 65535) {

651 
p‹t
 = 
MYSQL_DEFAULT_PORT
;

653 
	`‰ì
(
p‹t_s
);

654 
p‹t_s
 = 
NULL
;

656 
	}
}

658 
	#ZFREE
(
X
Ëdÿ{ 
	`‰ì
(X); (XË
NULL
; } 0)

	)

660 
	$pw_mysql_exô
()

662 
	`ZFREE
(
£rvî
);

663 
	`ZFREE
(
p‹t_s
);

664 
p‹t
 = -1;

665 
	`ZFREE
(
sockë_∑th
);

666 
	`ZFREE
(
u£r
);

667 
	`ZFREE
(
pw
);

668 
	`ZFREE
(
db
);

669 
	`ZFREE
(
¸y±o
);

670 
	`ZFREE
(
å™ß˘i⁄s
);

671 
	`ZFREE
(
sqÃeq_gëpw
);

672 
	`ZFREE
(
sqÃeq_gëuid
);

673 
	`ZFREE
(
sql_deÁu…_uid
);

674 
	`ZFREE
(
sqÃeq_gëgid
);

675 
	`ZFREE
(
sql_deÁu…_gid
);

676 
	`ZFREE
(
sqÃeq_gëdú
);

677 #ifde‡
QUOTAS


678 
	`ZFREE
(
sqÃeq_gëqè_fs
);

679 
	`ZFREE
(
sqÃeq_gëqè_sz
);

681 #ifde‡
RATIOS


682 
	`ZFREE
(
sqÃeq_gëøtio_ul
);

683 
	`ZFREE
(
sqÃeq_gëøtio_dl
);

685 #ifde‡
THROTTLING


686 
	`ZFREE
(
sqÃeq_gëb™dwidth_ul
);

687 
	`ZFREE
(
sqÃeq_gëb™dwidth_dl
);

689 
	}
}

691 sig√d 
v6ªady
;

	@src/log_mysql.h

1 #i‚de‡
__LOG_MYSQL_H__


2 
	#__LOG_MYSQL_H__
 1

	)

4 
	#PASSWD_SQL_CRYPT
 "¸y±"

	)

5 
	#PASSWD_SQL_CLEARTEXT
 "˛óπext"

	)

6 
	#PASSWD_SQL_MYSQL
 "∑ssw‹d"

	)

7 
	#PASSWD_SQL_MD5
 "md5"

	)

8 
	#PASSWD_SQL_SHA1
 "sha1"

	)

9 
	#PASSWD_SQL_ANY
 "™y"

	)

10 
	#MYSQL_DEFAULT_SERVER
 "loˇlho°"

	)

11 
	#MYSQL_DEFAULT_PORT
 3306

	)

12 
	#MYSQL_MAX_REQUEST_LENGTH
 ((
size_t
Ë8192U)

	)

13 
	#MYSQL_TRANSACTION_START
 "£àautocommô=0"

	)

14 
	#MYSQL_TRANSACTION_END
 "COMMIT"

	)

16 
	#MYSQL_CRYPT_LEN
 17U

	)

18 
pw_mysql_∑r£
(c⁄° * c⁄° 
fûe
);

20 
pw_mysql_check
(
AuthResu…
 * c⁄° 
ªsu…
,

21 c⁄° *
accou¡
, c⁄° *
∑ssw‹d
,

22 c⁄° 
sockaddr_°‹age
 * c⁄° 
ß
,

23 c⁄° 
sockaddr_°‹age
 * c⁄° 
≥î
);

25 
pw_mysql_exô
();

	@src/log_mysql_p.h

1 #i‚de‡
__LOG_MYSQL_P_H__


2 
	#__LOG_MYSQL_P_H__
 1

	)

4 
	~<mysql.h
>

6 #ifde‡
MYSQL_VERSION_ID


7 #i‡
MYSQL_VERSION_ID
 < 32224

8 
	#mysql_fõld_cou¡
(
X
Ë
	`mysql_num_fõlds
(X)

	)

12 *
	g£rvî
;

13 *
	gp‹t_s
;

14 
	gp‹t
;

15 *
	gsockë_∑th
;

16 *
	gu£r
;

17 *
	gpw
;

18 *
	gdb
;

19 *
	g¸y±o
;

20 *
	gå™ß˘i⁄s
;

21 *
	gsqÃeq_gëpw
;

22 *
	gsqÃeq_gëuid
;

23 *
	gsql_deÁu…_uid
;

24 *
	gsqÃeq_gëgid
;

25 *
	gsql_deÁu…_gid
;

26 *
	gsqÃeq_gëdú
;

27 *
	gtûdexp_s
;

28 
	gtûdexp
;

29 #ifde‡
QUOTAS


30 *
	gsqÃeq_gëqè_sz
;

31 *
	gsqÃeq_gëqè_fs
;

33 #ifde‡
RATIOS


34 *
	gsqÃeq_gëøtio_ul
;

35 *
	gsqÃeq_gëøtio_dl
;

37 #ifde‡
THROTTLING


38 *
	gsqÃeq_gëb™dwidth_ul
;

39 *
	gsqÃeq_gëb™dwidth_dl
;

41 sig√d 
	g£rvî_down
;

43 
C⁄figKeyw‹ds
 
	gmysql_c⁄fig_keyw‹ds
[] = {

44 { "MYSQLSîvî", &
£rvî
 },

45 { "MYSQLP‹t", &
p‹t_s
 },

46 { "MYSQLSockë", &
sockë_∑th
 },

47 { "MYSQLU£r", &
u£r
 },

48 { "MYSQLPassw‹d", &
pw
 },

49 { "MYSQLD©aba£", &
db
 },

50 { "MYSQLCry±", &
¸y±o
 },

51 { "MYSQLTønß˘i⁄s", &
å™ß˘i⁄s
 },

52 { "MYSQLGëPW", &
sqÃeq_gëpw
 },

53 { "MYSQLGëUID", &
sqÃeq_gëuid
 },

54 { "MYSQLDeÁu…UID", &
sql_deÁu…_uid
 },

55 { "MYSQLGëGID", &
sqÃeq_gëgid
 },

56 { "MYSQLDeÁu…GID", &
sql_deÁu…_gid
 },

57 { "MYSQLGëDú", &
sqÃeq_gëdú
 },

58 { "MYSQLF‹˚TûdeEx∑nsi⁄", &
tûdexp_s
 },

59 #ifde‡
QUOTAS


60 { "MYSQLGëQTAFS", &
sqÃeq_gëqè_fs
 },

61 { "MYSQLGëQTASZ", &
sqÃeq_gëqè_sz
 },

63 #ifde‡
RATIOS


64 { "MYSQLGëR©ioUL", &
sqÃeq_gëøtio_ul
 },

65 { "MYSQLGëR©ioDL", &
sqÃeq_gëøtio_dl
 },

67 #ifde‡
THROTTLING


68 { "MYSQLGëB™dwidthUL", &
sqÃeq_gëb™dwidth_ul
 },

69 { "MYSQLGëB™dwidthDL", &
sqÃeq_gëb™dwidth_dl
 },

71 { 
NULL
, NULL }

74 #ifde‡
HAVE_MY_MAKE_SCRAMBLED_PASSWORD


75 
my_make_s¸ambÀd_∑ssw‹d
(*
to
, c⁄° *
∑ssw‹d
,

76 
size_t
 
∑ss_Àn
);

	@src/log_pam.c

16 
	~<c⁄fig.h
>

18 #ifde‡
USE_PAM


19 
	~"·pd.h
"

20 
	~"log_∑m.h
"

21 #ifde‡
HAVE_SECURITY_PAM_MISC_H


22 
	~<£curôy/∑m_misc.h
>

24 #ifde‡
HAVE_SECURITY_PAM_APPL_H


25 
	~<£curôy/∑m_≠∂.h
>

27 #ifde‡
HAVE_SECURITY_PAM_MODULES_H


28 
	~<£curôy/∑m_moduÀs.h
>

30 #ifde‡
HAVE_SECURITY_PAM_FILTER_H


31 
	~<£curôy/∑m_fûãr.h
>

34 #ifde‡
HAVE_PAM_PAM_MISC_H


35 
	~<∑m/∑m_misc.h
>

37 #ifde‡
HAVE_PAM_PAM_APPL_H


38 
	~<∑m/∑m_≠∂.h
>

40 #ifde‡
HAVE_PAM_PAM_MODULES_H


41 
	~<∑m/∑m_moduÀs.h
>

43 #ifde‡
HAVE_PAM_PAM_FILTER_H


44 
	~<∑m/∑m_fûãr.h
>

47 #ifde‡
WITH_DMALLOC


48 
	~<dmÆloc.h
>

51 #i‚de‡
FTPD_PAM_SERVICE_NAME


52 
	#FTPD_PAM_SERVICE_NAME
 "puª-·pd"

	)

58 c⁄° *
	gPAM_u£∫ame
;

59 c⁄° *
	gPAM_∑ssw‹d
;

60 
	gPAM_îr‹
;

63 #i‚de‡
PAM_CRED_ESTABLISH


64 
	#PAM_CRED_ESTABLISH
 0x0002U

	)

72 
	#GET_MEM
 \

73 
size
 +(
∑m_ª•⁄£
); \

74 i‡((
ª∂y
 = 
	`ªÆloc
‘ïly, 
size
)Ë=
NULL
) { \

75 
PAM_îr‹
 = 1; \

76  
PAM_CONV_ERR
; \

77 }

	)

79 
	$PAM_c⁄v
(
num_msg
,

80 c⁄° 
∑m_mesßge
 **
msg
,

81 
∑m_ª•⁄£
 **
ª•
, *
≠pd©a_±r
)

83 
cou¡
 = 0;

84 
ª∂õs
 = 0U;

85 
∑m_ª•⁄£
 *
ª∂y
 = 
NULL
;

86 
size_t
 
size
 = (size_t) 0U;

88 (Ë
≠pd©a_±r
;

89 *
ª•
 = 
NULL
;

90 
cou¡
 = 0; cou¡ < 
num_msg
; count++) {

91 
msg
[
cou¡
]->
msg_°yÀ
) {

92 
PAM_PROMPT_ECHO_ON
:

93 
GET_MEM
;

94 
	`mem£t
(&
ª∂y
[
ª∂õs
], 0, Ñeply[replies]);

95 i‡((
ª∂y
[
ª∂õs
].
ª•
 = 
	`°rdup
(
PAM_u£∫ame
)Ë=
NULL
) {

96 #ifde‡
PAM_BUF_ERR


97 
ª∂y
[
ª∂õs
].
ª•_ªtcode
 = 
PAM_BUF_ERR
;

99 
PAM_îr‹
 = 1;

100  
PAM_CONV_ERR
;

102 
ª∂y
[
ª∂õs
++].
ª•_ªtcode
 = 
PAM_SUCCESS
;

105 
PAM_PROMPT_ECHO_OFF
:

106 
GET_MEM
;

107 
	`mem£t
(&
ª∂y
[
ª∂õs
], 0, Ñeply[replies]);

108 i‡((
ª∂y
[
ª∂õs
].
ª•
 = 
	`°rdup
(
PAM_∑ssw‹d
)Ë=
NULL
) {

109 #ifde‡
PAM_BUF_ERR


110 
ª∂y
[
ª∂õs
].
ª•_ªtcode
 = 
PAM_BUF_ERR
;

112 
PAM_îr‹
 = 1;

113  
PAM_CONV_ERR
;

115 
ª∂y
[
ª∂õs
++].
ª•_ªtcode
 = 
PAM_SUCCESS
;

118 
PAM_TEXT_INFO
:

121 
PAM_ERROR_MSG
:

124 
	`‰ì
(
ª∂y
);

125 
PAM_îr‹
 = 1;

126  
PAM_CONV_ERR
;

129 *
ª•
 = 
ª∂y
;

131  
PAM_SUCCESS
;

132 
	}
}

137 
∑m_c⁄v
 
	gPAM_c⁄vîßti⁄
 = {

138 &
PAM_c⁄v
, 
NULL


141 
	#PAM_BAIL
 \

142 i‡(
PAM_îr‹
 !0 || 
∑m_îr‹
 !
PAM_SUCCESS
) { \

143 
bye
; \

144 }

	)

148 
	$pw_∑m_check
(
AuthResu…
 * c⁄° 
ªsu…
,

149 c⁄° *
u£r
, c⁄° *
∑ss
,

150 c⁄° 
sockaddr_°‹age
 * c⁄° 
ß
,

151 c⁄° 
sockaddr_°‹age
 * c⁄° 
≥î
)

153 
∑m_h™dÀ_t
 *
∑mh
;

154 
∑m_îr‹
;

155 
∑sswd
 
pw
, *
pw_
;

156 *
dú
 = 
NULL
;

158 (Ë
ß
;

159 (Ë
≥î
;

160 
ªsu…
->
auth_ok
 = 0;

161 
PAM_∑ssw‹d
 = 
∑ss
;

162 
PAM_u£∫ame
 = 
u£r
;

163 
∑m_îr‹
 = 
	`∑m_°¨t
(
FTPD_PAM_SERVICE_NAME
, 
u£r
,

164 &
PAM_c⁄vîßti⁄
, &
∑mh
);

165 
PAM_BAIL
;

166 #ifde‡
PAM_TTY


167 (Ë
	`∑m_£t_ôem
(
∑mh
, 
PAM_TTY
, "pure-ftpd");

169 #ifde‡
PAM_RUSER


170 (Ë
	`∑m_£t_ôem
(
∑mh
, 
PAM_RUSER
, 
u£r
);

177 
∑m_îr‹
 = 
	`∑m_authítiˇã
(
∑mh
, 0);

178 
PAM_BAIL
;

179 
∑m_îr‹
 = 
	`∑m_ac˘_mgmt
(
∑mh
, 0);

180 
PAM_BAIL
;

182 i‡((
pw_
 = 
	`gëpw«m
(
u£r
)Ë=
NULL
) {

183 
bye
;

185 
pw
 = *
pw_
;

186 i‡((
dú
 = 
	`°rdup
(
pw
.
pw_dú
)Ë=
NULL
) {

187 
bye
;

189 
ªsu…
->
auth_ok
--;

190 #ifde‡
HAVE_INITGROUPS


191 (Ë
	`öôgroups
(
pw
.
pw_«me
,Öw.
pw_gid
);

193 
∑m_îr‹
 = 
	`∑m_£t¸ed
(
∑mh
, 
PAM_CRED_ESTABLISH
);

194 
PAM_BAIL
;

200 #i‚de‡
WITHOUT_PAM_SESSION


201 (Ë
	`∑m_›í_£ssi⁄
(
∑mh
, 
PAM_SILENT
);

202 (Ë
	`∑m_˛o£_£ssi⁄
(
∑mh
, 
PAM_SILENT
);

204 
ªsu…
->
dú
 = dir;

205 
dú
 = 
NULL
;

206 
ªsu…
->
uid
 = 
pw
.
pw_uid
;

207 
ªsu…
->
gid
 = 
pw
.
pw_gid
;

208 
ªsu…
->
¶ow_tûde_ex∑nsi⁄
 = 0;

209 
ªsu…
->
auth_ok
 = -result->auth_ok;

211 
bye
:

212 i‡(
dú
 !
NULL
) {

213 
dú
 = 
NULL
;

215 (Ë
	`∑m_íd
(
∑mh
, 
ªsu…
->
auth_ok
 =0 ? 0 : 
PAM_SUCCESS
);

216 
	}
}

218 sig√d 
v6ªady
;

	@src/log_pam.h

1 #i‚de‡
__LOG_PAM_H__


2 
	#__LOG_PAM_H__
 1

	)

4 
pw_∑m_check
(
AuthResu…
 * c⁄° 
ªsu…
,

5 c⁄° *
accou¡
, c⁄° *
∑ssw‹d
,

6 c⁄° 
sockaddr_°‹age
 * c⁄° 
ß
,

7 c⁄° 
sockaddr_°‹age
 * c⁄° 
≥î
);

9 
	#pw_∑m_∑r£
 
NULL


	)

10 
	#pw_∑m_exô
 
NULL


	)

	@src/log_pgsql.c

1 
	~<c⁄fig.h
>

5 #ifde‡
WITH_PGSQL


7 
	~"·pd.h
"

8 
	~"∑r£r.h
"

9 
	~"log_pgsql_p.h
"

10 
	~"log_pgsql.h
"

11 
	~"mesßges.h
"

12 
	~"¸y±o.h
"

13 
	~"Æt_¨c4øndom.h
"

15 #ifde‡
WITH_DMALLOC


16 
	~<dmÆloc.h
>

19 
	$pw_pgsql_vÆid©e_«me
(c⁄° *
«me
)

21 i‡(
«me
 =
NULL
 || *name == 0) {

25 i‡((*
«me
 >= 'a' && *name <= 'z') ||

26 (*
«me
 >= 'A' && *name <= 'Z') ||

27 (*
«me
 >= '0' && *name <= '9') ||

28 *
«me
 == ' ' || *name == '-' ||

29 *
«me
 == '_' || *name == '\'' || *name == '.' ||

30 *
«me
 == ':' || *name == '@' || *name == '+') {

35 
«me
++;

36 } *
«me
 != 0);

39 
	}
}

41 *
	$pw_pgsql_esˇ≥_°rög
(
PGc⁄n
 * c⁄° 
id_sql_£rvî
,

42 c⁄° *
‰om
)

44 
size_t
 
‰om_Àn
;

45 
size_t
 
to_Àn
;

46 *
to
;

47 
size_t
 
tﬁí
;

48 
t
;

49 
t1
, 
t2
;

50 
îr‹
;

52 i‡(
‰om
 =
NULL
) {

53  
NULL
;

55 
‰om_Àn
 = 
	`°æí
(
‰om
);

56 
to_Àn
 = 
‰om_Àn
 * 2U + (
size_t
) 1U;

57 i‡((
to
 = 
	`mÆloc
(
to_Àn
 + (
size_t
Ë2U)Ë=
NULL
) {

58  
NULL
;

60 
t
 = 
	`zønd
();

61 
t1
 = 
t
 & 0xff;

62 
t2
 = (
t
 >> 8) & 0xff;

63 
to
[
to_Àn
] = (Ë
t1
;

64 
to
[
to_Àn
 + 1] = (Ë
t2
;

74 
tﬁí
 = 
	`PQesˇ≥SåögC⁄n
(
id_sql_£rvî
, 
to
, 
‰om
, 
‰om_Àn
, &
îr‹
);

75 i‡(
tﬁí
 >
to_Àn
 ||

76 (Ë
to
[
to_Àn
] !
t1
 ||

77 (Ë
to
[
to_Àn
 + 1] !
t2
) {

79 *
to
++ = 0;

82 
to
[
tﬁí
] = 0;

83 i‡(
îr‹
 != 0) {

84  
NULL
;

86  
to
;

87 
	}
}

98 *
	$sqlsub°
(c⁄° *
‹ig_°r
, * c⁄° 
quîy
,

99 
size_t
 
quîy_Àn
, c⁄° * c⁄° 
u£r
,

100 c⁄° * c⁄° 
ù
, c⁄° * c⁄° 
p‹t
,

101 c⁄° * c⁄° 
≥î_ù
,

102 c⁄° * c⁄° 
decimÆ_ù
)

104 *
quîy_≤t
 = 
quîy
;

105 c⁄° *
‹ig_°r_sˇn
 = 
‹ig_°r
;

106 c⁄° 
size_t
 
u£r_Àn
 = (
u£r
 =
NULL
 ? (size_tË0U : 
	`°æí
(user));

107 c⁄° 
size_t
 
ù_Àn
 = (
ù
 =
NULL
 ? (size_tË0U : 
	`°æí
(ip));

108 c⁄° 
size_t
 
p‹t_Àn
 = (
p‹t
 =
NULL
 ? (size_tË0U : 
	`°æí
(port));

109 c⁄° 
size_t
 
≥î_ù_Àn
 = (
≥î_ù
 =
NULL
 ? (size_tË0U : 
	`°æí
(peer_ip));

110 c⁄° 
size_t
 
decimÆ_ù_Àn
 = (
decimÆ_ù
 =
NULL
 ? (size_tË0U : 
	`°æí
(decimal_ip));

112 *
‹ig_°r_sˇn
 != 0) {

113 i‡(*
‹ig_°r_sˇn
 == '\\' && orig_str_scan[1] != 0) {

114 
‹ig_°r_sˇn
++;

115 
	`tﬁowî
((Ë*
‹ig_°r_sˇn
)) {

117 i‡(
u£r_Àn
 >
quîy_Àn
) {

118  
NULL
;

120 i‡(
u£r_Àn
 <(
size_t
) 0U) {

121 
√xt⁄e
;

123 
	`mem˝y
(
quîy_≤t
, 
u£r
, 
u£r_Àn
);

124 
quîy_≤t
 +
u£r_Àn
;

125 
quîy_Àn
 -
u£r_Àn
;

126 
√xt⁄e
;

128 i‡(
ù_Àn
 >
quîy_Àn
) {

129  
NULL
;

131 i‡(
ù_Àn
 <(
size_t
) 0U) {

132 
√xt⁄e
;

134 
	`mem˝y
(
quîy_≤t
, 
ù
, 
ù_Àn
);

135 
quîy_≤t
 +
ù_Àn
;

136 
quîy_Àn
 -
ù_Àn
;

137 
√xt⁄e
;

139 i‡(
p‹t_Àn
 >
quîy_Àn
) {

140  
NULL
;

142 i‡(
p‹t_Àn
 <(
size_t
) 0U) {

143 
√xt⁄e
;

145 
	`mem˝y
(
quîy_≤t
, 
p‹t
, 
p‹t_Àn
);

146 
quîy_≤t
 +
p‹t_Àn
;

147 
quîy_Àn
 -
p‹t_Àn
;

148 
√xt⁄e
;

150 i‡(
≥î_ù_Àn
 >
quîy_Àn
) {

151  
NULL
;

153 i‡(
≥î_ù_Àn
 <(
size_t
) 0U) {

154 
√xt⁄e
;

156 
	`mem˝y
(
quîy_≤t
, 
≥î_ù
, 
≥î_ù_Àn
);

157 
quîy_≤t
 +
≥î_ù_Àn
;

158 
quîy_Àn
 -
≥î_ù_Àn
;

159 
√xt⁄e
;

161 i‡(
decimÆ_ù_Àn
 >
quîy_Àn
) {

162  
NULL
;

164 i‡(
decimÆ_ù_Àn
 <(
size_t
) 0U) {

165 
√xt⁄e
;

167 
	`mem˝y
(
quîy_≤t
, 
decimÆ_ù
, 
decimÆ_ù_Àn
);

168 
quîy_≤t
 +
decimÆ_ù_Àn
;

169 
quîy_Àn
 -
decimÆ_ù_Àn
;

170 
√xt⁄e
;

172 i‡(--
quîy_Àn
 <(
size_t
) 0U) {

173  
NULL
;

175 *
quîy_≤t
++ = '\\';

178 i‡(
	`ISCTRLCODE
(*
‹ig_°r_sˇn
)) {

179 
√xt⁄e
;

181 i‡(--
quîy_Àn
 <(
size_t
) 0U) {

182  
NULL
;

184 *
quîy_≤t
++ = *
‹ig_°r_sˇn
;

185 
√xt⁄e
:

186 
‹ig_°r_sˇn
++;

188 *
quîy_≤t
 = 0;

190  
quîy
;

191 
	}
}

193 
size_t
 
	$pw_pgsql_esˇ≥_c⁄nöfo_
(* c⁄° 
to
,

194 c⁄° * c⁄° 
‰om
,

195 c⁄° 
size_t
 
Àngth
)

197 c⁄° *
sour˚
 = 
‰om
;

198 *
èrgë
 = 
to
;

199 
size_t
 
ªmaöög
 = 
Àngth
;

201 
ªmaöög
 > (
size_t
) 0U) {

202 *
sour˚
) {

204 
ªmaöög
 = (
size_t
) 1U;

207 *
èrgë
++ = '\\';

208 *
èrgë
++ = 'r';

211 *
èrgë
++ = '\\';

212 *
èrgë
++ = 'n';

215 *
èrgë
++ = '\\';

216 *
èrgë
++ = 'b';

219 *
èrgë
++ = '\'';

220 *
èrgë
++ = '\'';

224 *
èrgë
++ = '\\';

226 *
èrgë
++ = *
sour˚
;

228 
sour˚
++;

229 
ªmaöög
--;

231 *
èrgë
 = 0;

233  (
size_t
Ë(
èrgë
 - 
to
);

234 
	}
}

236 *
	$pw_pgsql_esˇ≥_c⁄nöfo
(c⁄° *
‰om
)

238 
size_t
 
‰om_Àn
;

239 
size_t
 
to_Àn
;

240 *
to
;

241 
size_t
 
tﬁí
;

243 i‡(
‰om
 =
NULL
) {

244  
NULL
;

246 
‰om_Àn
 = 
	`°æí
(
‰om
);

247 
to_Àn
 = 
‰om_Àn
 * 2U + (
size_t
) 1U;

248 i‡((
to
 = 
	`mÆloc
(
to_Àn
)Ë=
NULL
) {

249  
NULL
;

251 
tﬁí
 = 
	`pw_pgsql_esˇ≥_c⁄nöfo_
(
to
, 
‰om
, 
‰om_Àn
);

252 i‡(
tﬁí
 >
to_Àn
) {

254 *
to
++ = 0;

257 
to
[
tﬁí
] = 0;

259  
to
;

260 
	}
}

262 
	$pw_pgsql_c⁄√˘
(
PGc⁄n
 ** c⁄° 
id_sql_£rvî
)

264 *
c⁄nöfo
 = 
NULL
;

265 
size_t
 
sizeof_c⁄nöfo
;

266 *
esˇ≥d_£rvî
 = 
NULL
;

267 *
esˇ≥d_db
 = 
NULL
;

268 *
esˇ≥d_u£r
 = 
NULL
;

269 *
esˇ≥d_pw
 = 
NULL
;

270 
ªt
 = -1;

272 *
id_sql_£rvî
 = 
NULL
;

274 i‡((
esˇ≥d_£rvî
 = 
	`pw_pgsql_esˇ≥_c⁄nöfo
(
£rvî
)Ë=
NULL
 ||

275 (
esˇ≥d_db
 = 
	`pw_pgsql_esˇ≥_c⁄nöfo
(
db
)Ë=
NULL
 ||

276 (
esˇ≥d_u£r
 = 
	`pw_pgsql_esˇ≥_c⁄nöfo
(
u£r
)Ë=
NULL
 ||

277 (
esˇ≥d_pw
 = 
	`pw_pgsql_esˇ≥_c⁄nöfo
(
pw
)Ë=
NULL
) {

278 
bye
;

281 
	#PGSQL_CONNECT_FMTSTRING
 \

282 "ho°='%s'Ö‹t='%d' db«me='%s' u£r='%s'Öassw‹d='%s'"

	)

284 
sizeof_c⁄nöfo
 =  
PGSQL_CONNECT_FMTSTRING
 +

285 
	`°æí
(
esˇ≥d_£rvî
Ë+ (
size_t
Ë5U + såÀn(
esˇ≥d_db
) +

286 
	`°æí
(
esˇ≥d_u£r
Ë+ såÀn(
esˇ≥d_pw
);

287 i‡((
c⁄nöfo
 = 
	`mÆloc
(
sizeof_c⁄nöfo
)Ë=
NULL
) {

288 
bye
;

290 i‡(
	`SNCHECK
(
	`¢¥ötf
(
c⁄nöfo
, 
sizeof_c⁄nöfo
,

291 
PGSQL_CONNECT_FMTSTRING
,

292 
£rvî
, 
p‹t
, 
db
, 
u£r
, 
pw
), 
sizeof_c⁄nöfo
)) {

293 
bye
;

295 i‡((*
id_sql_£rvî
 = 
	`PQc⁄√˘db
(
c⁄nöfo
)Ë=
NULL
 ||

296 
	`PQ°©us
(*
id_sql_£rvî
Ë=
CONNECTION_BAD
) {

297 i‡(
£rvî_down
 == 0) {

298 
£rvî_down
++;

299 
	`logfûe
(
LOG_ERR
, 
MSG_SQL_DOWN
);

301 
bye
;

303 
£rvî_down
 = 0;

304 
ªt
 = 0;

306 
bye
:

307 
	`‰ì
(
c⁄nöfo
);

308 
	`‰ì
(
esˇ≥d_£rvî
);

309 
	`‰ì
(
esˇ≥d_db
);

310 
	`‰ì
(
esˇ≥d_u£r
);

311 
	`‰ì
(
esˇ≥d_pw
);

313  
ªt
;

314 
	}
}

316 
	$pw_pgsql_sim∂equîy
(
PGc⁄n
 * c⁄° 
id_sql_£rvî
,

317 c⁄° * c⁄° 
quîy
)

319 
PGªsu…
 *
ªsu…
;

321 i‡((
ªsu…
 = 
	`PQexec
(
id_sql_£rvî
, 
quîy
)Ë=
NULL
) {

324 i‡(
	`PQªsu…Sètus
(
ªsu…
Ë!
PGRES_COMMAND_OK
) {

325 
	`PQ˛ór
(
ªsu…
);

328 
	`PQ˛ór
(
ªsu…
);

331 
	}
}

333 *
	$pw_pgsql_gëquîy
(
PGc⁄n
 * c⁄° 
id_sql_£rvî
,

334 c⁄° * c⁄° 
‹ig_quîy
,

335 c⁄° * c⁄° 
accou¡
,

336 c⁄° * c⁄° 
ù
,

337 c⁄° * c⁄° 
p‹t
,

338 c⁄° * c⁄° 
≥î_ù
,

339 c⁄° * c⁄° 
decimÆ_ù
)

341 
PGªsu…
 *
qªsu…
 = 
NULL
;

342 
size_t
 
Àngth
;

343 *
™swî
 = 
NULL
;

344 
quîy
[
PGSQL_MAX_REQUEST_LENGTH
];

346 i‡(
‹ig_quîy
 =
NULL
 || *orig_query == 0) {

347 
bye
;

349 i‡(
	`sqlsub°
(
‹ig_quîy
, 
quîy
,  query,

350 
accou¡
, 
ù
, 
p‹t
, 
≥î_ù
, 
decimÆ_ù
Ë=
NULL
) {

351 
bye
;

353 i‡((
qªsu…
 = 
	`PQexec
(
id_sql_£rvî
, 
quîy
)Ë=
NULL
) {

354 
	`logfûe
(
LOG_WARNING
, 
MSG_SQL_WRONG_PARMS
 " : [%s]", 
quîy
);

355 
bye
;

357 i‡(
	`PQªsu…Sètus
(
qªsu…
Ë!
PGRES_TUPLES_OK
 ||

358 
	`PQnfõlds
(
qªsu…
) != 1 ||

359 
	`PQ¡u∂es
(
qªsu…
) != 1 ||

360 
	`PQgëi¢uŒ
(
qªsu…
, 0, 0)) {

361 
bye
;

363 i‡((
Àngth
 = (
size_t
Ë
	`PQgëÀngth
(
qªsu…
, 0, 0) + (size_t) 1U)

364 <(
size_t
Ë1U || (
™swî
 = 
	`mÆloc
(
Àngth
)Ë=
NULL
) {

365 
bye
;

367 
	`°∫˝y
(
™swî
, 
	`PQgëvÆue
(
qªsu…
, 0, 0), 
Àngth
 - (
size_t
) 1U);

368 
™swî
[
Àngth
 - (
size_t
) 1U] = 0;

370 
bye
:

371 i‡(
qªsu…
 !
NULL
) {

372 
	`PQ˛ór
(
qªsu…
);

375  
™swî
;

376 
	}
}

378 
	$pw_pgsql_check
(
AuthResu…
 * c⁄° 
ªsu…
,

379 c⁄° *
accou¡
, c⁄° *
∑ssw‹d
,

380 c⁄° 
sockaddr_°‹age
 * c⁄° 
ß
,

381 c⁄° 
sockaddr_°‹age
 * c⁄° 
≥î
)

383 
PGc⁄n
 *
id_sql_£rvî
 = 
NULL
;

384 c⁄° *
•wd
 = 
NULL
;

385 c⁄° *
uid
 = 
sql_deÁu…_uid
;

386 c⁄° *
gid
 = 
sql_deÁu…_gid
;

387 c⁄° *
dú
 = 
NULL
;

388 #ifde‡
QUOTAS


389 c⁄° *
sqè_fs
 = 
NULL
;

390 c⁄° *
sqè_sz
 = 
NULL
;

392 #ifde‡
RATIOS


393 c⁄° *
øtio_ul
 = 
NULL
;

394 c⁄° *
øtio_dl
 = 
NULL
;

396 #ifde‡
THROTTLING


397 c⁄° *
b™dwidth_ul
 = 
NULL
;

398 c⁄° *
b™dwidth_dl
 = 
NULL
;

400 *
esˇ≥d_accou¡
 = 
NULL
;

401 *
esˇ≥d_ù
 = 
NULL
;

402 *
esˇ≥d_p‹t
 = 
NULL
;

403 *
esˇ≥d_≥î_ù
 = 
NULL
;

404 *
esˇ≥d_decimÆ_ù
 = 
NULL
;

405 *
s¸ambÀd_∑ssw‹d
 = 
NULL
;

406 
commôãd
 = 1;

407 
¸y±o_¸y±
 = 0, 
¸y±o_md5
 = 0, 
¸y±o_sha1
 = 0, 
¸y±o_∂aö
 = 0;

408 
decimÆ_ù_num
 = 0UL;

409 
decimÆ_ù
[42];

410 
hbuf
[
NI_MAXHOST
];

411 
pbuf
[
NI_MAXSERV
];

412 
phbuf
[
NI_MAXHOST
];

414 
ªsu…
->
auth_ok
 = 0;

415 i‡(
	`pw_pgsql_vÆid©e_«me
(
accou¡
) != 0) {

416 
bye
;

418 i‡(
	`gë«meöfo
((c⁄° 
sockaddr
 *Ë
ß
, 
	`STORAGE_LEN
(*sa),

419 
hbuf
,  hbuf, 
pbuf
, Öbuf,

420 
NI_NUMERICHOST
 | 
NI_NUMERICSERV
) != 0 ||

421 
	`gë«meöfo
((c⁄° 
sockaddr
 *Ë
≥î
, 
	`STORAGE_LEN
(*peer),

422 
phbuf
, Öhbuf, 
NULL
, (
size_t
) 0U,

423 
NI_NUMERICHOST
) != 0) {

424 
bye
;

426 *
decimÆ_ù
 = 0;

427 i‡(
	`STORAGE_FAMILY
(*
≥î
Ë=
AF_INET
) {

428 c⁄° *
decimÆ_ù_øw
 =

429 (c⁄° *Ë&(
	`STORAGE_SIN_ADDR
(*
≥î
));

430 
decimÆ_ù_num
 = (
decimÆ_ù_øw
[0] << 24) |

431 (
decimÆ_ù_øw
[1] << 16) | (decimal_ip_raw[2] << 8) |

432 
decimÆ_ù_øw
[3];

433 i‡(
	`SNCHECK
(
	`¢¥ötf
(
decimÆ_ù
,  decimal_ip,

434 "%lu", 
decimÆ_ù_num
),  
decimÆ_ù
)) {

435 
bye
;

438 i‡(
	`pw_pgsql_c⁄√˘
(&
id_sql_£rvî
) != 0) {

439 
bye
;

441 i‡((
esˇ≥d_accou¡
 =

442 
	`pw_pgsql_esˇ≥_°rög
(
id_sql_£rvî
, 
accou¡
)Ë=
NULL
) {

443 
bye
;

445 i‡((
esˇ≥d_ù
 =

446 
	`pw_pgsql_esˇ≥_°rög
(
id_sql_£rvî
, 
hbuf
)Ë=
NULL
) {

447 
bye
;

449 i‡((
esˇ≥d_p‹t
 =

450 
	`pw_pgsql_esˇ≥_°rög
(
id_sql_£rvî
, 
pbuf
)Ë=
NULL
) {

451 
bye
;

453 i‡((
esˇ≥d_≥î_ù
 =

454 
	`pw_pgsql_esˇ≥_°rög
(
id_sql_£rvî
, 
phbuf
)Ë=
NULL
) {

455 
bye
;

457 i‡((
esˇ≥d_decimÆ_ù
 =

458 
	`pw_pgsql_esˇ≥_°rög
(
id_sql_£rvî
, 
decimÆ_ù
)Ë=
NULL
) {

459 
bye
;

461 i‡(
	`pw_pgsql_sim∂equîy
(
id_sql_£rvî
, 
PGSQL_TRANSACTION_START
) == 0) {

462 
commôãd
 = 0;

464 i‡((
•wd
 = 
	`pw_pgsql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëpw
,

465 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

466 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

467 
esˇ≥d_decimÆ_ù
)Ë=
NULL
) {

468 
bye
;

470 i‡(
uid
 =
NULL
) {

471 
uid
 = 
	`pw_pgsql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëuid
,

472 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

473 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

474 
esˇ≥d_decimÆ_ù
);

476 i‡(
uid
 =
NULL
) {

477 
bye
;

479 i‡(
gid
 =
NULL
) {

480 
gid
 = 
	`pw_pgsql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëgid
,

481 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

482 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

483 
esˇ≥d_decimÆ_ù
);

485 i‡(
gid
 =
NULL
) {

486 
bye
;

488 i‡((
dú
 = 
	`pw_pgsql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëdú
,

489 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

490 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

491 
esˇ≥d_decimÆ_ù
)Ë=
NULL
) {

492 
bye
;

494 
ªsu…
->
auth_ok
--;

495 i‡(
	`°rˇ£cmp
(
¸y±o
, 
PASSWD_SQL_ANY
) == 0) {

496 
¸y±o_¸y±
++;

497 
¸y±o_md5
++;

498 
¸y±o_sha1
++;

499 } i‡(
	`°rˇ£cmp
(
¸y±o
, 
PASSWD_SQL_CRYPT
) == 0) {

500 
¸y±o_¸y±
++;

501 } i‡(
	`°rˇ£cmp
(
¸y±o
, 
PASSWD_SQL_MD5
) == 0) {

502 
¸y±o_md5
++;

503 } i‡(
	`°rˇ£cmp
(
¸y±o
, 
PASSWD_SQL_SHA1
) == 0) {

504 
¸y±o_sha1
++;

506 
¸y±o_∂aö
++;

508 i‡(
¸y±o_¸y±
 != 0) {

509 c⁄° *
¸y±ed
;

511 i‡((
¸y±ed
 = (c⁄° *Ë
	`¸y±
(
∑ssw‹d
, 
•wd
)Ë!
NULL
 &&

512 
	`°rcmp
(
¸y±ed
, 
•wd
) == 0) {

513 
auth_ok
;

516 i‡(
¸y±o_md5
 != 0) {

517 c⁄° *
¸y±ed
;

519 i‡((
¸y±ed
 = (c⁄° *Ë
	`¸y±o_hash_md5
(
∑ssw‹d
, 1)Ë!
NULL
 &&

520 
	`°rcmp
(
¸y±ed
, 
•wd
) == 0) {

521 
auth_ok
;

524 i‡(
¸y±o_sha1
 != 0) {

525 c⁄° *
¸y±ed
;

527 i‡((
¸y±ed
 = (c⁄° *Ë
	`¸y±o_hash_sha1
(
∑ssw‹d
, 1)Ë!
NULL
 &&

528 
	`°rcmp
(
¸y±ed
, 
•wd
) == 0) {

529 
auth_ok
;

532 i‡(
¸y±o_∂aö
 != 0) {

533 i‡(*
∑ssw‹d
 != 0 &&

534 
	`°rcmp
(
∑ssw‹d
, 
•wd
) == 0) {

535 
auth_ok
;

538 
bye
;

540 
auth_ok
:

545 
ªsu…
->
uid
 = (
uid_t
Ë
	`°πoul
(uid, 
NULL
, 10);

546 i‡(
ªsu…
->
uid
 <(
uid_t
) 0) {

547 
∑sswd
 *
pw
;

549 i‡((
pw
 = 
	`gëpw«m
(
uid
)Ë=
NULL
 ||Öw->
pw_uid
 <(
uid_t
) 0) {

550 
bye
;

552 
ªsu…
->
uid
 = 
pw
->
pw_uid
;

554 
ªsu…
->
gid
 = (
gid_t
Ë
	`°πoul
(gid, 
NULL
, 10);

555 i‡(
ªsu…
->
gid
 <(
gid_t
) 0) {

556 
group
 *
gr
;

558 i‡((
gr
 = 
	`gëg∫am
(
gid
)Ë=
NULL
 || gr->
gr_gid
 <(
gid_t
) 0) {

559 
bye
;

561 
ªsu…
->
gid
 = 
gr
->
gr_gid
;

563 
ªsu…
->
dú
 = dir;

564 
dú
 = 
NULL
;

565 #ifde‡
QUOTAS


566 i‡((
sqè_fs
 = 
	`pw_pgsql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëqè_fs
,

567 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

568 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

569 
esˇ≥d_decimÆ_ù
)Ë!
NULL
) {

570 c⁄° 
q
 = 
	`°πouŒ
(
sqè_fs
, 
NULL
, 10);

572 i‡(
q
 > 0ULL) {

573 
ªsu…
->
u£r_quŸa_fûes
 = 
q
;

574 
ªsu…
->
quŸa_fûes_ch™ged
 = 1;

577 i‡((
sqè_sz
 = 
	`pw_pgsql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëqè_sz
,

578 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

579 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

580 
esˇ≥d_decimÆ_ù
)Ë!
NULL
) {

581 c⁄° 
q
 = 
	`°πouŒ
(
sqè_sz
, 
NULL
, 10);

583 i‡(
q
 > 0ULL) {

584 
ªsu…
->
u£r_quŸa_size
 = 
q
 * (1024UL * 1024UL);

585 
ªsu…
->
quŸa_size_ch™ged
 = 1;

589 #ifde‡
RATIOS


590 i‡((
øtio_ul
 = 
	`pw_pgsql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëøtio_ul
,

591 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

592 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

593 
esˇ≥d_decimÆ_ù
)Ë!
NULL
) {

594 c⁄° 
q
 = (Ë
	`°πoul
(
øtio_ul
, 
NULL
, 10);

596 i‡(
q
 > 0U) {

597 
ªsu…
->
øtio_u∂ﬂd
 = 
q
;

598 
ªsu…
->
øtio_ul_ch™ged
 = 1;

601 i‡((
øtio_dl
 = 
	`pw_pgsql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëøtio_dl
,

602 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

603 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

604 
esˇ≥d_decimÆ_ù
)Ë!
NULL
) {

605 c⁄° 
q
 = (Ë
	`°πoul
(
øtio_dl
, 
NULL
, 10);

607 i‡(
q
 > 0U) {

608 
ªsu…
->
øtio_dow∆ﬂd
 = 
q
;

609 
ªsu…
->
øtio_dl_ch™ged
 = 1;

613 #ifde‡
THROTTLING


614 i‡((
b™dwidth_ul
 = 
	`pw_pgsql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëb™dwidth_ul
,

615 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

616 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

617 
esˇ≥d_decimÆ_ù
)Ë!
NULL
) {

618 c⁄° 
q
 = (Ë
	`°πoul
(
b™dwidth_ul
, 
NULL
, 10);

620 i‡(
q
 > 0UL) {

621 
ªsu…
->
thrŸéög_b™dwidth_ul
 = 
q
 * 1024UL;

622 
ªsu…
->
thrŸéög_ul_ch™ged
 = 1;

625 i‡((
b™dwidth_dl
 = 
	`pw_pgsql_gëquîy
(
id_sql_£rvî
, 
sqÃeq_gëb™dwidth_dl
,

626 
esˇ≥d_accou¡
, 
esˇ≥d_ù
,

627 
esˇ≥d_p‹t
, 
esˇ≥d_≥î_ù
,

628 
esˇ≥d_decimÆ_ù
)Ë!
NULL
) {

629 c⁄° 
q
 = (Ë
	`°πoul
(
b™dwidth_dl
, 
NULL
, 10);

631 i‡(
q
 > 0UL) {

632 
ªsu…
->
thrŸéög_b™dwidth_dl
 = 
q
 * 1024UL;

633 
ªsu…
->
thrŸéög_dl_ch™ged
 = 1;

637 
ªsu…
->
¶ow_tûde_ex∑nsi⁄
 = 1;

638 
ªsu…
->
auth_ok
 = -result->auth_ok;

639 
bye
:

640 i‡(
commôãd
 == 0) {

641 (Ë
	`pw_pgsql_sim∂equîy
(
id_sql_£rvî
, 
PGSQL_TRANSACTION_END
);

643 i‡(
id_sql_£rvî
 !
NULL
) {

644 
	`PQföish
(
id_sql_£rvî
);

646 
	`‰ì
((*Ë
•wd
);

647 i‡(
uid
 !
sql_deÁu…_uid
) {

648 
	`‰ì
((*Ë
uid
);

650 i‡(
gid
 !
sql_deÁu…_gid
) {

651 
	`‰ì
((*Ë
gid
);

653 
	`‰ì
((*Ë
dú
);

654 
	`‰ì
(
s¸ambÀd_∑ssw‹d
);

655 #ifde‡
QUOTAS


656 
	`‰ì
((*Ë
sqè_fs
);

657 
	`‰ì
((*Ë
sqè_sz
);

659 #ifde‡
RATIOS


660 
	`‰ì
((*Ë
øtio_ul
);

661 
	`‰ì
((*Ë
øtio_dl
);

663 #ifde‡
THROTTLING


664 
	`‰ì
((*Ë
b™dwidth_ul
);

665 
	`‰ì
((*Ë
b™dwidth_dl
);

667 
	`‰ì
((*Ë
esˇ≥d_accou¡
);

668 
	`‰ì
((*Ë
esˇ≥d_ù
);

669 
	`‰ì
((*Ë
esˇ≥d_p‹t
);

670 
	`‰ì
((*Ë
esˇ≥d_≥î_ù
);

671 
	`‰ì
((*Ë
esˇ≥d_decimÆ_ù
);

672 
	}
}

674 
	$pw_pgsql_∑r£
(c⁄° * c⁄° 
fûe
)

676 i‡(
	`gíîic_∑r£r
(
fûe
, 
pgsql_c⁄fig_keyw‹ds
) != 0) {

677 
	`dõ
(421, 
LOG_ERR
, 
MSG_CONF_ERR
 ": " 
MSG_ILLEGAL_CONFIG_FILE_SQL
 ": %s" , 
fûe
);

679 i‡(
£rvî
 =
NULL
 ) {

680 
	`dõ
(421, 
LOG_ERR
, 
MSG_SQL_MISSING_SERVER
);

682 i‡(
p‹t_s
 !
NULL
) {

683 
p‹t
 = 
	`©oi
(
p‹t_s
);

684 i‡(
p‹t
 <= 0 ||Öort > 65535) {

685 
p‹t
 = 
PGSQL_DEFAULT_PORT
;

687 
	`‰ì
(
p‹t_s
);

688 
p‹t_s
 = 
NULL
;

690 
	}
}

692 
	#ZFREE
(
X
Ëdÿ{ 
	`‰ì
(X); (XË
NULL
; } 0)

	)

694 
	$pw_pgsql_exô
()

696 
	`ZFREE
(
£rvî
);

697 
	`ZFREE
(
p‹t_s
);

698 
p‹t
 = -1;

699 
	`ZFREE
(
u£r
);

700 
	`ZFREE
(
pw
);

701 
	`ZFREE
(
db
);

702 
	`ZFREE
(
¸y±o
);

703 
	`ZFREE
(
sqÃeq_gëpw
);

704 
	`ZFREE
(
sqÃeq_gëuid
);

705 
	`ZFREE
(
sql_deÁu…_uid
);

706 
	`ZFREE
(
sqÃeq_gëgid
);

707 
	`ZFREE
(
sql_deÁu…_gid
);

708 
	`ZFREE
(
sqÃeq_gëdú
);

709 #ifde‡
QUOTAS


710 
	`ZFREE
(
sqÃeq_gëqè_fs
);

711 
	`ZFREE
(
sqÃeq_gëqè_sz
);

713 #ifde‡
RATIOS


714 
	`ZFREE
(
sqÃeq_gëøtio_ul
);

715 
	`ZFREE
(
sqÃeq_gëøtio_dl
);

717 #ifde‡
THROTTLING


718 
	`ZFREE
(
sqÃeq_gëb™dwidth_ul
);

719 
	`ZFREE
(
sqÃeq_gëb™dwidth_dl
);

721 
	}
}

723 sig√d 
v6ªady
;

	@src/log_pgsql.h

1 #i‚de‡
__LOG_PGSQL_H__


2 
	#__LOG_PGSQL_H__
 1

	)

4 
	#PASSWD_SQL_CRYPT
 "¸y±"

	)

5 
	#PASSWD_SQL_CLEARTEXT
 "˛óπext"

	)

6 
	#PASSWD_SQL_PGSQL
 "∑ssw‹d"

	)

7 
	#PASSWD_SQL_MD5
 "md5"

	)

8 
	#PASSWD_SQL_SHA1
 "sha1"

	)

9 
	#PASSWD_SQL_ANY
 "™y"

	)

10 
	#PGSQL_DEFAULT_SERVER
 "loˇlho°"

	)

11 
	#PGSQL_DEFAULT_PORT
 5432

	)

12 
	#PGSQL_MAX_REQUEST_LENGTH
 ((
size_t
Ë8192U)

	)

13 
	#PGSQL_TRANSACTION_START
 "BEGIN"

	)

14 
	#PGSQL_TRANSACTION_END
 "COMMIT"

	)

16 
pw_pgsql_∑r£
(c⁄° * c⁄° 
fûe
);

18 
pw_pgsql_check
(
AuthResu…
 * c⁄° 
ªsu…
,

19 c⁄° *
accou¡
, c⁄° *
∑ssw‹d
,

20 c⁄° 
sockaddr_°‹age
 * c⁄° 
ß
,

21 c⁄° 
sockaddr_°‹age
 * c⁄° 
≥î
);

23 
pw_pgsql_exô
();

	@src/log_pgsql_p.h

1 #i‚de‡
__LOG_PGSQL_P_H__


2 
	#__LOG_PGSQL_P_H__
 1

	)

4 
	~<libpq-„.h
>

6 *
	g£rvî
;

7 *
	gp‹t_s
;

8 
	gp‹t
;

9 *
	gu£r
;

10 *
	gpw
;

11 *
	gdb
;

12 *
	g¸y±o
;

13 *
	gsqÃeq_gëpw
;

14 *
	gsqÃeq_gëuid
;

15 *
	gsqÃeq_gëgid
;

16 *
	gsqÃeq_gëdú
;

17 *
	gsql_deÁu…_uid
;

18 *
	gsql_deÁu…_gid
;

19 #ifde‡
QUOTAS


20 *
	gsqÃeq_gëqè_sz
;

21 *
	gsqÃeq_gëqè_fs
;

23 #ifde‡
RATIOS


24 *
	gsqÃeq_gëøtio_ul
;

25 *
	gsqÃeq_gëøtio_dl
;

27 #ifde‡
THROTTLING


28 *
	gsqÃeq_gëb™dwidth_ul
;

29 *
	gsqÃeq_gëb™dwidth_dl
;

31 sig√d 
	g£rvî_down
;

33 
C⁄figKeyw‹ds
 
	gpgsql_c⁄fig_keyw‹ds
[] = {

34 { "PGSQLSîvî", &
£rvî
 },

35 { "PGSQLP‹t", &
p‹t_s
 },

36 { "PGSQLU£r", &
u£r
 },

37 { "PGSQLPassw‹d", &
pw
 },

38 { "PGSQLD©aba£", &
db
 },

39 { "PGSQLCry±", &
¸y±o
 },

40 { "PGSQLGëPW", &
sqÃeq_gëpw
 },

41 { "PGSQLGëUID", &
sqÃeq_gëuid
 },

42 { "PGSQLDeÁu…UID", &
sql_deÁu…_uid
 },

43 { "PGSQLGëGID", &
sqÃeq_gëgid
 },

44 { "PGSQLDeÁu…GID", &
sql_deÁu…_gid
 },

45 { "PGSQLGëDú", &
sqÃeq_gëdú
 },

46 #ifde‡
QUOTAS


47 { "PGSQLGëQTAFS", &
sqÃeq_gëqè_fs
 },

48 { "PGSQLGëQTASZ", &
sqÃeq_gëqè_sz
 },

50 #ifde‡
RATIOS


51 { "PGSQLGëR©ioUL", &
sqÃeq_gëøtio_ul
 },

52 { "PGSQLGëR©ioDL", &
sqÃeq_gëøtio_dl
 },

54 #ifde‡
THROTTLING


55 { "PGSQLGëB™dwidthUL", &
sqÃeq_gëb™dwidth_ul
 },

56 { "PGSQLGëB™dwidthDL", &
sqÃeq_gëb™dwidth_dl
 },

58 { 
NULL
, NULL }

	@src/log_puredb.c

1 
	~<c⁄fig.h
>

3 #ifde‡
WITH_PUREDB


5 
	~"·pd.h
"

6 
	~"mesßges.h
"

7 
	~"log_puªdb.h
"

8 
	~"puª-pw.h
"

9 
	~"../puªdb/§c/puªdb_ªad.h
"

11 #ifde‡
WITH_DMALLOC


12 
	~<dmÆloc.h
>

15 *
	gpdb_fûíame
;

17 
	$pw_puªdb_∑r£
(c⁄° * c⁄° 
fûe
)

19 i‡(
fûe
 =
NULL
 || *file == 0) {

20 
	`dõ
(421, 
LOG_ERR
, 
MSG_NO_VIRTUAL_FILE
);

22 i‡((
pdb_fûíame
 = 
	`°rdup
(
fûe
)Ë=
NULL
) {

23 
	`dõ_mem
();

25 
	}
}

27 
	$pw_puªdb_exô
()

29 
	`‰ì
(
pdb_fûíame
);

30 
	}
}

39 *
	$my_°πok2
(*
°r
, c⁄° 
dñim
)

41 *
s
;

42 
ßve
;

44 i‡(
°r
 !
NULL
) {

45 i‡(*
°r
 == 0) {

46  
NULL
;

48 
s
 = 
°r
;

49 
sˇn
:

50 *
s
 !0 && *†!
dñim
) {

51 
s
++;

53 
ßve
 = *
s
;

54 *
s
 = 0;

56  
°r
;

58 i‡(
s
 =
NULL
 || 
ßve
 == 0) {

59  
NULL
;

61 
s
++;

62 
°r
 = 
s
;

64 
sˇn
;

65 
	}
}

69 
	$ac˚ss_ù_m©ch
(c⁄° 
sockaddr_°‹age
 * c⁄° 
ß
,

70 * 
∑âîn
)

72 
ù0
, 
ù1
, 
ù2
, 
ù3
;

73 
√tbôs
;

74 
ù
;

75 
mask
;

76 
ßù
;

77 c⁄° *
ßù_øw
;

78 *
com≠oöt
;

80 i‡(*
∑âîn
 == 0) {

83 i‡(
	`STORAGE_FAMILY
(*
ß
Ë!
AF_INET
) {

87 i‡((
com≠oöt
 = 
	`°rchr
(
∑âîn
, ',')Ë!
NULL
) {

88 *
com≠oöt
 = 0;

90 i‡(
	`ssˇnf
(
∑âîn
, "%u.%u.%u.%u/%u",

91 &
ù0
, &
ù1
, &
ù2
, &
ù3
, &
√tbôs
) == 5) {

92 
ùcheck
:

93 i‡(
	`STORAGE_FAMILY
(*
ß
Ë!
AF_INET
 || 
√tbôs
 == 0U) {

96 
ù
 = (
ù0
 << 24Ë| (
ù1
 << 16Ë| (
ù2
 << 8Ë| 
ù3
;

97 
ùcheck_ùd⁄e
:

98 
mask
 = ~((0x80000000 >> (
√tbôs
 - 1U)) - 1U);

99 
ßù_øw
 = (c⁄° *Ë&(
	`STORAGE_SIN_ADDR
(*
ß
));

100 
ßù
 = (
ßù_øw
[0] << 24) | (saip_raw[1] << 16) |

101 (
ßù_øw
[2] << 8) | saip_raw[3];

102 i‡((
ù
 & 
mask
Ë=(
ßù
 & mask)) {

105 } i‡(
	`ssˇnf
(
∑âîn
, "%u.%u.%u.%u",

106 &
ù0
, &
ù1
, &
ù2
, &
ù3
) == 4) {

107 
√tbôs
 = 32U;

108 
ùcheck
;

110 
addröfo
 
höts
, *
ªs
;

111 
⁄
;

113 
	`mem£t
(&
höts
, 0,  hints);

114 
höts
.
ai_Ámûy
 = 
AF_INET
;

115 
höts
.
ai_addr
 = 
NULL
;

116 i‡((
⁄
 = 
	`gëaddröfo
(
∑âîn
, 
NULL
, &
höts
, &
ªs
)) != 0 ||

117 
ªs
->
ai_Ámûy
 !
AF_INET
) {

118 
	`logfûe
(
LOG_WARNING
, "puªdb: [%s] => [%d]", 
∑âîn
, 
⁄
);

120 c⁄° * c⁄° 
ù_øw
 =

122 (((c⁄° 
sockaddr_ö
 *) (*)

123 (
ªs
->
ai_addr
))->
sö_addr
.
s_addr
);

125 
ù
 = (
ù_øw
[0] << 24) | (ip_raw[1] << 16) |

126 (
ù_øw
[2] << 8) | ip_raw[3];

127 
√tbôs
 = 32U;

128 
	`‰ìaddröfo
(
ªs
);

129 
ùcheck_ùd⁄e
;

132 i‡(
com≠oöt
 =
NULL
) {

135 *
com≠oöt
 = ',';

136 
∑âîn
 = 
com≠oöt
 + 1;

137 } *
∑âîn
 != 0);

140 
	}
}

144 
	$ac˚ss_ù_check
(c⁄° 
sockaddr_°‹age
 * c⁄° 
ß
,

145 * c⁄° 
Ælow
, * c⁄° 
díy
)

147 i‡(
ß
 =
NULL
) {

150 i‡(*
Ælow
 == 0) {

151 i‡(*
díy
 == 0) {

154 i‡(
	`ac˚ss_ù_m©ch
(
ß
, 
díy
) != 0) {

159 i‡(*
díy
 == 0) {

160 i‡(
	`ac˚ss_ù_m©ch
(
ß
, 
Ælow
) != 0) {

165 i‡(
	`ac˚ss_ù_m©ch
(
ß
, 
Ælow
Ë!0 &&ác˚ss_ù_m©ch(ß, 
díy
) == 0) {

169 
	}
}

171 
	$time_ª°ri˘i⁄s_check
(c⁄° * c⁄° 
ª°ri˘i⁄s
)

173 c⁄° 
tm
 *tm;

174 
time_t
 
now_t
;

175 
time_begö
, 
time_íd
;

176 
now
;

178 i‡(*
ª°ri˘i⁄s
 == 0) {

181 i‡(
	`ssˇnf
(
ª°ri˘i⁄s
, "%u-%u", &
time_begö
, &
time_íd
) != 2 ||

182 (
now_t
 = 
	`time
(
NULL
)Ë=(
time_t
) -1 ||

183 (
tm
 = 
	`loˇ…ime
(&
now_t
)Ë=
NULL
) {

186 
now
 = (Ë
tm
->
tm_hour
 * 100U + (Ëtm->
tm_mö
;

187 i‡(
time_begö
 <
time_íd
) {

188 i‡(
time_begö
 <
now
 &&Çow <
time_íd
) {

193 i‡(
now
 >
time_begö
 ||Çow <
time_íd
) {

197 
	}
}

199 
	$pw_puªdb_∑r£löe
(*
löe
, c⁄° * c⁄° 
pwd
,

200 c⁄° 
sockaddr_°‹age
 * c⁄° 
ß
,

201 c⁄° 
sockaddr_°‹age
 * c⁄° 
≥î
,

202 
AuthResu…
 * c⁄° 
ªsu…
)

204 *
Ælow_loˇl_ù
, *
díy_loˇl_ù
;

205 *
Ælow_ªmŸe_ù
, *
díy_ªmŸe_ù
;

206 c⁄° *
time_ª°ri˘i⁄s
;

208 i‡((
löe
 = 
	`my_°πok2
÷öe, *
PW_LINE_SEP
)Ë=
NULL
 || *line == 0) {

212 c⁄° *
¸y±ed
;

214 i‡((
¸y±ed
 = (c⁄° *Ë
	`¸y±
(
pwd
, 
löe
)Ë=
NULL
 ||

215 
	`°rcmp
(
löe
, 
¸y±ed
) != 0) {

220 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL || *line == 0) {

223 
ªsu…
->
uid
 = (
uid_t
Ë
	`°πoul
(
löe
, 
NULL
, 10);

224 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL || *line == 0) {

227 
ªsu…
->
gid
 = (
gid_t
Ë
	`°πoul
(
löe
, 
NULL
, 10);

228 #i‚de‡
ACCEPT_ROOT_VIRTUAL_USERS


229 i‡(
ªsu…
->
uid
 <(
uid_t
Ë0 ||Ñesu…->
gid
 <(
gid_t
) 0) {

233 i‡(
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
) == NULL) {

236 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL || *line == 0) {

239 i‡((
ªsu…
->
dú
 = 
	`°rdup
(
löe
)Ë=
NULL
 || *result->dir != '/') {

242 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

245 #ifde‡
THROTTLING


246 i‡(*
löe
 != 0) {

247 
ªsu…
->
thrŸéög_ul_ch™ged
 = 1;

248 
ªsu…
->
thrŸéög_b™dwidth_ul
 = 
	`°πoul
(
löe
, 
NULL
, 10);

251 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

254 #ifde‡
THROTTLING


255 i‡(*
löe
 != 0) {

256 
ªsu…
->
thrŸéög_dl_ch™ged
 = 1;

257 
ªsu…
->
thrŸéög_b™dwidth_dl
 = 
	`°πoul
(
löe
, 
NULL
, 10);

260 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

263 #ifde‡
RATIOS


264 i‡(*
löe
 != 0) {

265 
ªsu…
->
øtio_u∂ﬂd
 = (Ë
	`°πoul
(
löe
, 
NULL
, 10);

266 i‡(
ªsu…
->
øtio_u∂ﬂd
 > 0U) {

267 
ªsu…
->
øtio_ul_ch™ged
 = 1;

271 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

274 #ifde‡
RATIOS


275 i‡(*
löe
 != 0) {

276 
ªsu…
->
øtio_dow∆ﬂd
 = (Ë
	`°πoul
(
löe
, 
NULL
, 10);

277 i‡(
ªsu…
->
øtio_dow∆ﬂd
 > 0U) {

278 
ªsu…
->
øtio_dl_ch™ged
 = 1;

282 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

285 #ifde‡
PER_USER_LIMITS


286 i‡(*
löe
 != 0) {

287 
ªsu…
->
≥r_u£r_max
 = (Ë
	`°πouŒ
(
löe
, 
NULL
, 10);

290 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

293 #ifde‡
QUOTAS


294 i‡(*
löe
 != 0) {

295 
ªsu…
->
quŸa_fûes_ch™ged
 = 1;

296 
ªsu…
->
u£r_quŸa_fûes
 = 
	`°πouŒ
(
löe
, 
NULL
, 10);

299 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

302 #ifde‡
QUOTAS


303 i‡(*
löe
 != 0) {

304 
ªsu…
->
quŸa_size_ch™ged
 = 1;

305 
ªsu…
->
u£r_quŸa_size
 = 
	`°πouŒ
(
löe
, 
NULL
, 10);

308 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

311 
Ælow_loˇl_ù
 = 
löe
;

312 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

315 
díy_loˇl_ù
 = 
löe
;

316 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

319 
Ælow_ªmŸe_ù
 = 
löe
;

320 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

323 
díy_ªmŸe_ù
 = 
löe
;

324 i‡(
	`ac˚ss_ù_check
(
ß
, 
Ælow_loˇl_ù
, 
díy_loˇl_ù
) != 0 ||

325 
	`ac˚ss_ù_check
(
≥î
, 
Ælow_ªmŸe_ù
, 
díy_ªmŸe_ù
) != 0) {

328 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

331 
time_ª°ri˘i⁄s
 = 
löe
;

332 i‡(
	`time_ª°ri˘i⁄s_check
(
time_ª°ri˘i⁄s
) != 0) {

337 
	}
}

339 
	$pw_puªdb_check
(
AuthResu…
 * c⁄° 
ªsu…
,

340 c⁄° *
accou¡
, c⁄° *
∑ssw‹d
,

341 c⁄° 
sockaddr_°‹age
 * c⁄° 
ß
,

342 c⁄° 
sockaddr_°‹age
 * c⁄° 
≥î
)

344 *
löe
 = 
NULL
;

345 
PuªDB
 
db
;

346 
off_t
 
ªços
;

347 
size_t
 
ªéí
;

349 
ªsu…
->
auth_ok
 = 0;

350 (Ë
ß
;

351 (Ë
≥î
;

352 i‡(
	`puªdb_›í
(&
db
, 
pdb_fûíame
) != 0) {

353 
	`dõ
(421, 
LOG_ERR
, 
MSG_PDB_BROKEN
);

355 i‡(
	`puªdb_föd_s
(&
db
, 
accou¡
, &
ªços
, &
ªéí
) != 0) {

356 
bye
;

358 i‡((
löe
 = 
	`puªdb_ªad
(&
db
, 
ªços
, 
ªéí
)Ë=
NULL
) {

359 
bye
;

361 
ªsu…
->
auth_ok
--;

362 i‡(
	`pw_puªdb_∑r£löe
(
löe
, 
∑ssw‹d
, 
ß
, 
≥î
, 
ªsu…
) != 0) {

363 
bye
;

365 
ªsu…
->
¶ow_tûde_ex∑nsi⁄
 = 1;

366 
ªsu…
->
auth_ok
 = -result->auth_ok;

367 
bye
:

368 
	`puªdb_ªad_‰ì
(
löe
);

369 
	`puªdb_˛o£
(&
db
);

370 
	}
}

	@src/log_puredb.h

1 #i‚de‡
__LOG_PUREDB_H__


2 
	#__LOG_PUREDB_H__
 1

	)

4 
pw_puªdb_check
(
AuthResu…
 * c⁄° 
ªsu…
,

5 c⁄° *
accou¡
, c⁄° *
∑ssw‹d
,

6 c⁄° 
sockaddr_°‹age
 * c⁄° 
ß
,

7 c⁄° 
sockaddr_°‹age
 * c⁄° 
≥î
);

9 
pw_puªdb_∑r£
(c⁄° * c⁄° 
fûe
);

11 
pw_puªdb_exô
();

	@src/log_unix.c

1 
	~<c⁄fig.h
>

3 
	~"·pd.h
"

4 
	~"log_unix.h
"

6 #ifde‡
WITH_DMALLOC


7 
	~<dmÆloc.h
>

10 
	$pw_unix_check
(
AuthResu…
 * c⁄° 
ªsu…
,

11 c⁄° *
accou¡
, c⁄° *
∑ssw‹d
,

12 c⁄° 
sockaddr_°‹age
 * c⁄° 
ß
,

13 c⁄° 
sockaddr_°‹age
 * c⁄° 
≥î
)

15 c⁄° *
˝wd
 = 
NULL
;

16 
∑sswd
 
pw
, *
pw_
;

17 #ifde‡
USE_SHADOW


18 
•wd
 *
•w
;

20 *
dú
 = 
NULL
;

22 (Ë
ß
;

23 (Ë
≥î
;

24 
ªsu…
->
auth_ok
 = 0;

25 i‡((
pw_
 = 
	`gëpw«m
(
accou¡
)Ë=
NULL
) {

28 
pw
 = *
pw_
;

29 
ªsu…
->
auth_ok
--;

30 #ifde‡
HAVE_SETUSERSHELL


31 i‡(
pw
.
pw_shñl
 =
NULL
) {

34 i‡(
	`°rˇ£cmp
(
pw
.
pw_shñl
, 
FAKE_SHELL
) != 0) {

35 c⁄° *
shñl
;

37 
	`£tu£rshñl
();

38 (
shñl
 = (*Ë
	`gëu£rshñl
()Ë!
NULL
 &&

39 
	`°rcmp
(
pw
.
pw_shñl
, 
shñl
) != 0);

40 
	`ídu£rshñl
();

41 i‡(
shñl
 =
NULL
) {

46 i‡((
dú
 = 
	`°rdup
(
pw
.
pw_dú
)Ë=
NULL
) {

49 #ifde‡
USE_SHADOW


50 i‡((((
pw
.
pw_∑sswd
)[0] == 'x' && (pw.pw_passwd)[1] == 0) ||

51 ((
pw
.
pw_∑sswd
)[0] == '#' && (pw.pw_passwd)[1] == '#' &&

52 
	`°rcmp
(
pw
.
pw_∑sswd
 + 2, 
accou¡
) == 0)) &&

53 (
•w
 = 
	`gë•«m
(
accou¡
)Ë!
NULL
 && spw->
•_pwdp
 != NULL) {

54 
˝wd
 = 
•w
->
•_pwdp
[0] ='@' ? 
NULL
 : spw->sp_pwdp;

55 i‡(
•w
->
•_expúe
 > 0 || spw->
•_max
 > 0) {

56 
today
 = 
	`time
(
NULL
) / (24L * 60L * 60L);

58 i‡(
•w
->
•_expúe
 > 0 && spw->•_expúê< 
today
) {

59 
bye
;

61 i‡(
•w
->
•_max
 > 0 && spw->
•_l°chg
 > 0 &&

62 (
•w
->
•_l°chg
 + spw->
•_max
 < 
today
)) {

63 
bye
;

69 
˝wd
 = 
pw
.
pw_∑sswd
;

72 c⁄° *
¸y±ed
;

74 i‡(
˝wd
 =
NULL
 ||

75 (
¸y±ed
 = (c⁄° *Ë
	`¸y±
(
∑ssw‹d
, 
˝wd
)Ë=
NULL
 ||

76 
	`°rcmp
(
˝wd
, 
¸y±ed
) != 0) {

77 
bye
;

80 
ªsu…
->
uid
 = 
pw
.
pw_uid
;

81 
ªsu…
->
gid
 = 
pw
.
pw_gid
;

82 
ªsu…
->
dú
 = dir;

83 
ªsu…
->
¶ow_tûde_ex∑nsi⁄
 = 0;

84 
ªsu…
->
auth_ok
 = -result->auth_ok;

87 
bye
:

88 
	`‰ì
(
dú
);

89 
	}
}

	@src/log_unix.h

1 #i‚de‡
__LOG_UNIX_H__


2 
	#__LOG_UNIX_H__
 1

	)

4 
pw_unix_check
(
AuthResu…
 * c⁄° 
ªsu…
,

5 c⁄° *
accou¡
, c⁄° *
∑ssw‹d
,

6 c⁄° 
sockaddr_°‹age
 * c⁄° 
ß
,

7 c⁄° 
sockaddr_°‹age
 * c⁄° 
≥î
);

9 
	#pw_unix_∑r£
 
NULL


	)

10 
	#pw_unix_exô
 
NULL


	)

	@src/ls.c

1 
	~<c⁄fig.h
>

3 
	~"·pd.h
"

4 
	~"ls_p.h
"

5 
	~"bsd-glob.h
"

6 
	~"mesßges.h
"

7 
	~"dy«mic.h
"

8 
	~"·pwho-upd©e.h
"

9 
	~"globÆs.h
"

10 
	~"ß„_rw.h
"

11 #ifde‡
WITH_TLS


12 
	~"és.h
"

15 #ifde‡
WITH_DMALLOC


16 
	~<dmÆloc.h
>

19 
	$wr°r
(c⁄° 
f
, * c⁄° 
és_fd
, c⁄° *
s
)

21 
outbuf
[
CONF_TCP_SO_SNDBUF
];

22 
size_t
 
out˙t
;

23 
size_t
 
l
;

25 i‡(
s
 =
NULL
) {

26 i‡(
out˙t
 > (
size_t
) 0U) {

27 #ifde‡
WITH_TLS


28 i‡(
és_fd
 !
NULL
) {

29 i‡(
	`£cuª_ß„_wrôe
(
és_fd
, 
outbuf
, 
out˙t
) !=

30 (
ssize_t
Ë
out˙t
) {

36 (Ë
és_fd
;

37 i‡(
	`ß„_wrôe
(
f
, 
outbuf
, 
out˙t
, -1Ë!(
ssize_t
) outcnt) {

42 
out˙t
 = (
size_t
) 0U;

45 i‡((
l
 = 
	`°æí
(
s
)Ë<(
size_t
) 0U) {

48 i‡(
l
 <( 
outbuf
 - 
out˙t
)) {

49 
	`mem˝y
(
outbuf
 + 
out˙t
, 
s
, 
l
);

50 
out˙t
 +
l
;

53 i‡(
out˙t
 <  
outbuf
) {

54 c⁄° 
size_t
 
ª°
 =  
outbuf
 - 
out˙t
;

56 
	`mem˝y
(
outbuf
 + 
out˙t
, 
s
, 
ª°
);

57 
s
 +
ª°
;

58 
l
 -
ª°
;

60 #ifde‡
WITH_TLS


61 i‡(
d©a_¥Ÿe˘i⁄_Àvñ
 =
CPL_PRIVATE
) {

62 i‡(
	`£cuª_ß„_wrôe
(
és_fd
, 
outbuf
,  outbuf) !=

63 (
ssize_t
Ë 
outbuf
) {

69 i‡(
	`ß„_wrôe
(
f
, 
outbuf
,  outbuf, -1) !=

70 (
ssize_t
Ë 
outbuf
) {

74 #ifde‡
WITH_TLS


75 i‡(
d©a_¥Ÿe˘i⁄_Àvñ
 =
CPL_PRIVATE
) {

76 
l
 >  
outbuf
) {

77 i‡(
	`£cuª_ß„_wrôe
(
és_fd
, 
s
,  
outbuf
) !=

78 (
ssize_t
Ë 
outbuf
) {

81 
s
 + 
outbuf
;

82 
l
 - 
outbuf
;

87 
l
 >  
outbuf
) {

88 i‡(
	`ß„_wrôe
(
f
, 
s
,  
outbuf
, -1) !=

89 (
ssize_t
Ë 
outbuf
) {

92 
s
 + 
outbuf
;

93 
l
 - 
outbuf
;

96 i‡(
l
 > (
size_t
) 0U) {

97 
	`mem˝y
(
outbuf
, 
s
, 
l
);

98 
out˙t
 = 
l
;

100 
	}
}

102 #ifde‡
NO_FTP_USERS


103 c⁄° *
	$gë«me
(c⁄° 
uid_t
 
uid
)

105 
numbî
[11];

107 
	`¢¥ötf
(
numbî
, Çumbî, "%-10d", 
uid
);

108  
numbî
;

109 
	}
}

111 c⁄° *
	$gëgroup
(c⁄° 
gid_t
 
gid
)

113 
numbî
[11];

115 
	`¢¥ötf
(
numbî
, Çumbî, "%-10d", 
gid
);

116  
numbî
;

117 
	}
}

120 c⁄° *
	$gë«me
(c⁄° 
uid_t
 
uid
)

122 
u£rid
 *
p
;

123 
∑sswd
 *
pwd
 = 
NULL
;

125 
p
 = 
u£r_hód
;Ö;Ö =Ö->
√xt
) {

126 i‡(
p
->
uid
 == uid) {

127  
p
->
«me
;

131 #i‚de‡
ALWAYS_RESOLVE_IDS


132 
chroŸed
 == 0 &&

134 
authªsu…
.
¶ow_tûde_ex∑nsi⁄
 == 0) {

135 
pwd
 = 
	`gëpwuid
(
uid
);

137 i‡((
p
 = 
	`mÆloc
( *p)Ë=
NULL
) {

138 
	`dõ_mem
();

140 
p
->
uid
 = uid;

141 i‡((
p
->
«me
 = 
	`mÆloc
((
size_t
Ë11U)Ë=
NULL
) {

142 
	`dõ_mem
();

144 i‡(
pwd
 !
NULL
) {

145 i‡(
	`SNCHECK
(
	`¢¥ötf
(
p
->
«me
, (
size_t
) 11U,

146 "%-10.10s", 
pwd
->
pw_«me
), (
size_t
) 11U)) {

147 
	`_EXIT
(
EXIT_FAILURE
);

150 i‡(
	`SNCHECK
(
	`¢¥ötf
(
p
->
«me
, (
size_t
Ë11U, "%-10d", 
uid
),

151 (
size_t
) 11U)) {

152 
	`_EXIT
(
EXIT_FAILURE
);

155 
p
->
√xt
 = 
u£r_hód
;

156 
u£r_hód
 = 
p
;

158  
p
->
«me
;

159 
	}
}

162 c⁄° *
	$gëgroup
(c⁄° 
gid_t
 
gid
)

164 
groupid
 *
p
;

165 
group
 *
pwd
 = 
NULL
;

167 
p
 = 
group_hód
;Ö;Ö =Ö->
√xt
) {

168 i‡(
p
->
gid
 == gid) {

169  
p
->
«me
;

172 #i‚de‡
ALWAYS_RESOLVE_IDS


173 i‡(
chroŸed
 == 0)

176 
pwd
 = 
	`gëgrgid
(
gid
);

178 i‡((
p
 = 
	`mÆloc
( *p)Ë=
NULL
) {

179 
	`dõ_mem
();

181 
p
->
gid
 = gid;

182 i‡((
p
->
«me
 = 
	`mÆloc
((
size_t
Ë11U)Ë=
NULL
) {

183 
	`dõ_mem
();

185 i‡(
pwd
 !
NULL
) {

186 i‡(
	`SNCHECK
(
	`¢¥ötf
(
p
->
«me
, (
size_t
) 11U, "%-10.10s",

187 
pwd
->
gr_«me
), (
size_t
) 11U)) {

188 
	`_EXIT
(
EXIT_FAILURE
);

191 i‡(
	`SNCHECK
(
	`¢¥ötf
(
p
->
«me
, (
size_t
Ë11U, "%-10d", 
gid
),

192 (
size_t
) 11U)) {

193 
	`_EXIT
(
EXIT_FAILURE
);

196 
p
->
√xt
 = 
group_hód
;

197 
group_hód
 = 
p
;

199  
p
->
«me
;

200 
	}
}

203 
	$addfûe
(c⁄° *
«me
, c⁄° *
suffix
)

205 
fûíame
 *
p
;

206 
l
;

208 i‡(!
«me
 || !
suffix
) {

211 i‡(
m©ches
 >
max_ls_fûes
) {

214 
m©ches
++;

215 
l
 = (Ë(
	`°æí
(
«me
Ë+ såÀn(
suffix
));

216 i‡(
l
 > 
cﬁwidth
) {

217 
cﬁwidth
 = 
l
;

219 i‡((
p
 = 
	`mÆloc
(
	`off£tof
(
fûíame
, 
löe
Ë+ 
l
 + 1U)Ë=
NULL
) {

222 i‡(
	`SNCHECK
(
	`¢¥ötf
(
p
->
löe
, 
l
 + 1U, "%s%s", 
«me
, 
suffix
),Ü + 1U)) {

223 
	`_EXIT
(
EXIT_FAILURE
);

225 i‡(
èû
 !
NULL
) {

226 
èû
->
down
 = 
p
;

228 
hód
 = 
p
;

230 
èû
 = 
p
;

231 
fûíames
++;

232 
	}
}

235 
	$li°fûe
(c⁄° 
PuªFûeInfo
 * c⁄° 
fi
, c⁄° *
«me
)

237 
rvÆ
 = 0;

238 
°©
 
°
;

239 
tm
 *
t
;

240 
suffix
[2] = { 0, 0 };

241 
m
[
MAXPATHLEN
 + 1U];

242 c⁄° *
f‹m©
;

244 #i‚de‡
MINIMAL


245 i‡(
modîn_li°ögs
 != 0) {

246 c⁄° *
n
;

247 *
Æloˇ_«mñöe
;

248 c⁄° 
size_t
 
sizeof_«mñöe
 = 
MAXPATHLEN
 + 256U;

250 i‡(
fi
 =
NULL
) {

251 
n
 = 
«me
;

253 
n
 = 
	`FI_NAME
(
fi
);

255 i‡((
Æloˇ_«mñöe
 = 
	`ALLOCA
(
sizeof_«mñöe
)Ë=
NULL
) {

258 i‡((
rvÆ
 = 
	`modînf‹m©
(
n
, 
Æloˇ_«mñöe
,

259 
sizeof_«mñöe
, "")) < 0) {

260 
	`ALLOCA_FREE
(
Æloˇ_«mñöe
);

263 
	`addfûe
(
Æloˇ_«mñöe
, 
suffix
);

264 
	`ALLOCA_FREE
(
Æloˇ_«mñöe
);

266  
rvÆ
;

269 i‡(
fi
 =
NULL
) {

270 i‡(
	`l°©
(
«me
, &
°
) < 0) {

274 
°
.
°_size
 = 
fi
->
size
;

275 
°
.
°_mtime
 = 
fi
->
mtime
;

276 
°
.
°_mode
 = 
fi
->
mode
;

277 
°
.
°_∆ök
 = 
fi
->
∆ök
;

278 
°
.
°_uid
 = 
fi
->
uid
;

279 
°
.
°_gid
 = 
fi
->
gid
;

280 
«me
 = 
	`FI_NAME
(
fi
);

282 #i‡
	`deföed
(
WITH_VIRTUAL_CHROOT
Ë&& deföed(
S_IFLNK
Ë&& deföed(
S_IFDIR
)

283 i‡(
	`S_ISLNK
(
°
.
°_mode
Ë&& 
«me
[0] == '.' &&

284 
«me
[1] == '.' &&Çame[2] == 0) {

285 
°
.
°_mode
 &~
S_IFLNK
;

286 
°
.
°_mode
 |
S_IFDIR
;

289 #i‡!
	`deföed
(
MINIMAL
Ë&& !deföed(
ALWAYS_SHOW_SYMLINKS_AS_SYMLINKS
)

291 #i‚de‡
ALWAYS_SHOW_RESOLVED_SYMLINKS


292 
brokí_˛õ¡_com∑t
 != 0 &&

294 
	`S_ISLNK
(
°
.
°_mode
)) {

295 
°©
 
°s
;

297 i‡(
	`°©
(
«me
, &
°s
Ë=0 && !
	`S_ISLNK
(°s.
°_mode
)) {

298 
°
 = 
°s
;

302 #ifde‡
DISPLAY_FILES_IN_UTC_TIME


303 
t
 = 
	`gmtime
((
time_t
 *Ë&
°
.
°_mtime
);

305 
t
 = 
	`loˇ…ime
((
time_t
 *Ë&
°
.
°_mtime
);

307 i‡(
t
 =
NULL
) {

308 
	`logfûe
(
LOG_ERR
, "{gm,loˇl}gtime(Ëf‹ [%s]", 
«me
);

311 i‡(
›t_F
) {

312 i‡(
	`S_ISLNK
(
°
.
°_mode
))

313 
suffix
[0] = '@';

314 i‡(
	`S_ISDIR
(
°
.
°_mode
)) {

315 
suffix
[0] = '/';

316 
rvÆ
 = 1;

317 } i‡(
°
.
°_mode
 & 010101) {

318 
suffix
[0] = '*';

321 i‡(
›t_l
) {

322 
	`°∫˝y
(
m
, " ---------", ( mË- (
size_t
) 1U);

323 
m
[( mË- (
size_t
) 1U] = 0;

324 
°
.
°_mode
 & 
S_IFMT
) {

325 
S_IFREG
:

326 
m
[0] = '-';

328 
S_IFLNK
:

329 
m
[0] = 'l';

331 
S_IFDIR
:

332 
m
[0] = 'd';

333 
rvÆ
 = 1;

336 i‡(
m
[0] != ' ') {

337 *
Æloˇ_«mñöe
;

338 c⁄° 
size_t
 
sizeof_«mñöe
 = 
MAXPATHLEN
 + MAXPATHLEN + 128U;

339 
timñöe
[6U];

341 i‡(
°
.
°_mode
 & 0400) {

342 
m
[1] = 'r';

344 i‡(
°
.
°_mode
 & 0200) {

345 
m
[2] = 'w';

347 i‡(
°
.
°_mode
 & 0100) {

348 
m
[3] = (Ë(
°
.
°_mode
 & 04000 ? 's' : 'x');

349 } i‡(
°
.
°_mode
 & 04000) {

350 
m
[3] = 'S';

352 i‡(
°
.
°_mode
 & 040) {

353 
m
[4] = 'r';

355 i‡(
°
.
°_mode
 & 020) {

356 
m
[5] = 'w';

358 i‡(
°
.
°_mode
 & 010) {

359 
m
[6] = (Ë(
°
.
°_mode
 & 02000 ? 's' : 'x');

360 } i‡(
°
.
°_mode
 & 02000) {

361 
m
[6] = 'S';

363 i‡(
°
.
°_mode
 & 04) {

364 
m
[7] = 'r';

366 i‡(
°
.
°_mode
 & 02) {

367 
m
[8] = 'w';

369 i‡(
°
.
°_mode
 & 01) {

370 
m
[9] = (Ë(
°
.
°_mode
 & 01000 ? 't' : 'x');

371 } i‡(
°
.
°_mode
 & 01000) {

372 
m
[9] = 'T';

374 i‡(
	`time
(
NULL
Ë- 
°
.
°_mtime
 > 180 * 24 * 60 * 60) {

375 i‡(
	`SNCHECK
(
	`¢¥ötf
(
timñöe
, Åimeline, "%5d",

376 
t
->
tm_yór
 + 1900),  
timñöe
)) {

377 
	`_EXIT
(
EXIT_FAILURE
);

380 i‡(
	`SNCHECK
(
	`¢¥ötf
(
timñöe
, Åimeline, "%02d:%02d",

381 
t
->
tm_hour
,Å->
tm_mö
),  
timñöe
)) {

382 
	`_EXIT
(
EXIT_FAILURE
);

385 i‡((
Æloˇ_«mñöe
 = 
	`ALLOCA
(
sizeof_«mñöe
)Ë=
NULL
) {

388 i‡(
°
.
°_size
 < 10000000000U) {

389 
f‹m©
 = "%s %4u %s %s %10llu %s %2d %s %s";

391 
f‹m©
 = "%s %4u %s %s %18llu %s %2d %s %s";

393 i‡(
	`SNCHECK
(
	`¢¥ötf
(
Æloˇ_«mñöe
, 
sizeof_«mñöe
,

394 
f‹m©
,

395 
m
, (Ë
°
.
°_∆ök
,

396 
	`gë«me
(
°
.
°_uid
),

397 
	`gëgroup
(
°
.
°_gid
),

398 (Ë
°
.
°_size
,

399 
m⁄ths
[
t
->
tm_m⁄
],

400 
t
->
tm_mday
, 
timñöe
, 
«me
),

401 
sizeof_«mñöe
)) {

402 
	`ALLOCA_FREE
(
Æloˇ_«mñöe
);

403 
	`_EXIT
(
EXIT_FAILURE
);

405 i‡(
	`S_ISLNK
(
°
.
°_mode
)) {

406 *
p
 = 
Æloˇ_«mñöe
 + 
	`°æí
(alloca_nameline);

408 
ssize_t
 
sx
;

410 i‡((
sx
 = 
	`ªadlök
(
«me
, 
m
,  m - 1U)) > 0) {

411 
m
[
sx
] = 0;

413 
m
[0] = m[1] = '.';

414 
m
[2] = 0;

417 
suffix
[0] = 0;

418 i‡(
›t_F
 && 
	`°©
(
«me
, &
°
) == 0) {

419 i‡(
	`S_ISLNK
(
°
.
°_mode
)) {

420 
suffix
[0] = '@';

421 } i‡(
	`S_ISDIR
(
°
.
°_mode
)) {

422 
suffix
[0] = '/';

423 } i‡(
°
.
°_mode
 & 010101) {

424 
suffix
[0] = '*';

428 i‡(
SNCHECK


429 (
	`¢¥ötf
(
p
, (
sizeof_«mñöe
Ë- 
	`°æí
(
Æloˇ_«mñöe
),

430 " -> %s", 
m
),

431 (
sizeof_«mñöe
Ë- 
	`°æí
(
Æloˇ_«mñöe
))) {

432 
	`ALLOCA_FREE
(
Æloˇ_«mñöe
);

433 
	`_EXIT
(
EXIT_FAILURE
);

436 
	`addfûe
(
Æloˇ_«mñöe
, 
suffix
);

437 
	`ALLOCA_FREE
(
Æloˇ_«mñöe
);

440 i‡(
	`S_ISREG
(
°
.
°_mode
) ||

441 
	`S_ISDIR
(
°
.
°_mode
Ë|| 
	`S_ISLNK
(st.st_mode)) {

442 
	`addfûe
(
«me
, 
suffix
);

445  
rvÆ
;

446 
	}
}

448 
	$ouçutfûes
(
f
, * c⁄° 
és_fd
)

450 
n
;

451 
fûíame
 *
p
;

452 
fûíame
 *
q
;

453 *
c_buf
;

455 i‡(!
hód
) {

458 
èû
->
down
 = 
NULL
;

459 
èû
 = 
NULL
;

460 
cﬁwidth
 = (colwidth | 7U) + 1U;

461 i‡(
›t_l
 !0 || 
›t_C
 == 0) {

462 
cﬁwidth
 = 75U;

465 
p
 = 
hód
;

466 
p
->
t›
 = 1;

467 i‡(
cﬁwidth
 > 75U) {

468 
n
 = 
fûíames
;

470 
n
 = (
fûíames
 + (75U / 
cﬁwidth
) - 1U) / (75U / colwidth);

472 
n
 && 
p
) {

473 
p
 =Ö->
down
;

474 i‡(
p
 !
NULL
) {

475 
p
->
t›
 = 0;

477 
n
--;

481 
q
 = 
hód
;

482 
p
) {

483 
p
->
t›
 = 
q
->top;

484 
q
->
right
 = 
p
;

485 
q
 = q->
down
;

486 
p
 =Ö->
down
;

490 
q
) {

491 
q
->
right
 = 
NULL
;

492 
q
 = q->
down
;

496 
p
 = 
hód
;

497 
p
 &&Ö->
down
 && !p->down->
t›
) {

498 
p
 =Ö->
down
;

500 i‡(
p
 &&Ö->
down
) {

501 
p
->
down
 = 
NULL
;

505 
p
 = 
hód
;

506 
p
) {

507 
q
 = 
p
;

508 
p
 =Ö->
down
;

509 
q
) {

510 
∑d
[6];

511 *
tmp
 = (*Ë
q
;

513 i‡(
q
->
right
) {

514 
	`mem£t
(
∑d
, '\t', Öad - 1U);

515 
∑d
[(Öad) - 1] = 0;

516 
∑d
[(
cﬁwidth
 + 7U - 
	`°æí
(
q
->
löe
)) / 8] = 0;

518 
∑d
[0] = '\r';

519 
∑d
[1] = '\n';

520 
∑d
[2] = 0;

522 #ifde‡
WITH_RFC2640


523 
c_buf
 = 
	`ch¨£t_fs2˛õ¡
(
q
->
löe
);

524 
	`wr°r
(
f
, 
és_fd
, 
c_buf
);

525 
	`‰ì
(
c_buf
);

527 (Ë
c_buf
;

528 
	`wr°r
(
f
, 
és_fd
, 
q
->
löe
);

530 
	`wr°r
(
f
, 
és_fd
, 
∑d
);

531 
q
 = q->
right
;

532 
	`‰ì
(
tmp
);

537 
hód
 = 
èû
 = 
NULL
;

538 
cﬁwidth
 = 0U;

539 
fûíames
 = 0U;

540 
	}
}

543 
	$cmp
(c⁄° * c⁄° 
a
, c⁄° * c⁄° 
b
)

545  
	`°rcmp
(
	`FI_NAME
((c⁄° 
PuªFûeInfo
 *Ë
a
),

546 
	`FI_NAME
((c⁄° 
PuªFûeInfo
 *Ë
b
));

547 
	}
}

549 
	$cmp_r
(c⁄° * c⁄° 
a
, c⁄° * c⁄° 
b
)

551  
	`°rcmp
(
	`FI_NAME
((c⁄° 
PuªFûeInfo
 *Ë
b
),

552 
	`FI_NAME
((c⁄° 
PuªFûeInfo
 *Ë
a
));

553 
	}
}

555 
	$cmp_t
(c⁄° * c⁄° 
a
, c⁄° * c⁄° 
b
)

557 i‡(((c⁄° 
PuªFûeInfo
 *Ë
a
)->
mtime
 < ((c⁄° PuªFûeInfÿ*Ë
b
)->mtime) {

560 i‡(((c⁄° 
PuªFûeInfo
 *Ë
a
)->
mtime
 > ((c⁄° PuªFûeInfÿ*Ë
b
)->mtime) {

564 
	}
}

566 
	$cmp_π
(c⁄° * c⁄° 
a
, c⁄° * c⁄° 
b
)

568  
	`cmp_t
(
b
, 
a
);

569 
	}
}

571 
	$cmp_S
(c⁄° * c⁄° 
a
, c⁄° * c⁄° 
b
)

573 i‡(((c⁄° 
PuªFûeInfo
 *Ë
a
)->
size
 < ((c⁄° PuªFûeInfÿ*Ë
b
)->size) {

576 i‡(((c⁄° 
PuªFûeInfo
 *Ë
a
)->
size
 > ((c⁄° PuªFûeInfÿ*Ë
b
)->size) {

580 
	}
}

582 
	$cmp_rS
(c⁄° * c⁄° 
a
, c⁄° * c⁄° 
b
)

584  
	`cmp_S
(
b
, 
a
);

585 
	}
}

587 
PuªFûeInfo
 *
	$§óddú
(**
«mes_≤t
)

589 
°©
 
°
;

590 
DIR
 *
d
;

591 
dúít
 *
de
;

592 
PuªFûeInfo
 *
fûes_öfo
;

593 
PuªFûeInfo
 *
fûe_öfo
;

594 
size_t
 
fûes_öfo_size
;

595 
size_t
 
fûes_öfo_cou¡î
 = (size_t) 0U;

596 *
«mes
;

597 
size_t
 
«mes_size
;

598 
size_t
 
«mes_cou¡î
 = (size_t) 0U;

599 
size_t
 
«me_Àn
;

600 (*
cmp_func
)(const * const, const * const);

602 i‡((
d
 = 
	`›ídú
(".")Ë=
NULL
) {

603  
NULL
;

605 
«mes_size
 = 
CHUNK_SIZE
;

606 i‡((
«mes
 = 
	`mÆloc
(
«mes_size
)Ë=
NULL
) {

607 
	`˛o£dú
(
d
);

608  
NULL
;

610 
fûes_öfo_size
 = 
CHUNK_SIZE
 /  *
fûes_öfo
;

611 i‡((
fûes_öfo
 = 
	`mÆloc
(
fûes_öfo_size
 *  *fûes_öfo)Ë=
NULL
) {

612 
	`˛o£dú
(
d
);

613 
	`‰ì
(
«mes
);

614  
NULL
;

616 (
de
 = 
	`ªaddú
(
d
)Ë!
NULL
) {

617 i‡(
	`check¥öèbÀ
(
de
->
d_«me
Ë!0 || 
	`l°©
(de->d_«me, &
°
) < 0) {

620 
«me_Àn
 = 
	`°æí
(
de
->
d_«me
Ë+ (
size_t
) 1U;

621 
«mes_cou¡î
 + 
«me_Àn
 >
«mes_size
) {

622 *
√w_«mes
;

624 i‡(
«me_Àn
 >
CHUNK_SIZE
) {

625 
«mes_size
 +
«me_Àn
 + 
CHUNK_SIZE
;

627 
«mes_size
 +
CHUNK_SIZE
;

629 i‡((
√w_«mes
 = 
	`ªÆloc
(
«mes
, 
«mes_size
)Ë=
NULL
) {

630 
nomem
:

631 
	`˛o£dú
(
d
);

632 
	`‰ì
(
«mes
);

633 
	`‰ì
(
fûes_öfo
);

634  
NULL
;

636 
«mes
 = 
√w_«mes
;

638 (
fûes_öfo_cou¡î
 + (
size_t
Ë1UË>
fûes_öfo_size
) {

639 
PuªFûeInfo
 *
√w_fûes_öfo
;

641 
fûes_öfo_size
 +(
CHUNK_SIZE
 /  *
fûes_öfo
);

642 i‡((
√w_fûes_öfo
 = 
	`ªÆloc
(
fûes_öfo
,

643 
fûes_öfo_size
 *  *
fûes_öfo
)Ë=
NULL
) {

644 
nomem
;

646 
fûes_öfo
 = 
√w_fûes_öfo
;

648 
	`mem˝y
(&
«mes
[
«mes_cou¡î
], 
de
->
d_«me
, 
«me_Àn
);

649 
«mes
[
«mes_cou¡î
 + 
«me_Àn
 - 1] = 0;

650 
fûe_öfo
 = &
fûes_öfo
[
fûes_öfo_cou¡î
];

651 
fûe_öfo
->
«mes_≤t
 =Çames_pnt;

652 
fûe_öfo
->
«me_off£t
 = 
«mes_cou¡î
;

653 
fûe_öfo
->
size
 = 
°
.
°_size
;

654 
fûe_öfo
->
mtime
 = 
°
.
°_mtime
;

655 
fûe_öfo
->
mode
 = 
°
.
°_mode
;

656 
fûe_öfo
->
∆ök
 = 
°
.
°_∆ök
;

657 
fûe_öfo
->
uid
 = 
°
.
°_uid
;

658 
fûe_öfo
->
gid
 = 
°
.
°_gid
;

659 
«mes_cou¡î
 +
«me_Àn
;

660 
fûes_öfo_cou¡î
++;

662 
	`˛o£dú
(
d
);

663 
fûes_öfo
[
fûes_öfo_cou¡î
].
«me_off£t
 = (
size_t
) -1;

664 *
«mes_≤t
 = 
«mes
;

666 i‡(
›t_t
) {

667 i‡(
›t_r
) {

668 
cmp_func
 = 
cmp_π
;

670 
cmp_func
 = 
cmp_t
;

672 } i‡(
›t_S
) {

673 i‡(
›t_r
) {

674 
cmp_func
 = 
cmp_rS
;

676 
cmp_func
 = 
cmp_S
;

678 } i‡(
›t_r
) {

679 
cmp_func
 = 
cmp_r
;

681 
cmp_func
 = 
cmp
;

683 
	`qs‹t
(
fûes_öfo
, 
fûes_öfo_cou¡î
,  fûes_öfo[0], 
cmp_func
);

685  
fûes_öfo
;

686 
	}
}

689 
	$li°dú
(
dïth
, 
f
, * c⁄° 
és_fd
,

690 c⁄° *
«me
)

692 
PuªFûeInfo
 *
dú
;

693 *
«mes
;

694 
PuªFûeInfo
 *
s
;

695 
PuªFûeInfo
 *
r
;

696 *
c_buf
;

697 
d
;

699 i‡(
dïth
 >
max_ls_dïth
 || 
m©ches
 >
max_ls_fûes
) {

702 i‡((
dú
 = 
	`§óddú
(&
«mes
)Ë=
NULL
) {

703 
	`addª∂y
(226, 
MSG_CANT_READ_FILE
, 
«me
);

706 
s
 = 
dú
;

707 
s
->
«me_off£t
 !(
size_t
) -1) {

708 
d
 = 0;

709 i‡(
	`FI_NAME
(
s
)[0] != '.') {

710 
d
 = 
	`li°fûe
(
s
, 
NULL
);

711 } i‡(
›t_a
) {

712 i‡(
	`FI_NAME
(
s
)[1] == 0 ||

713 (
	`FI_NAME
(
s
)[1] == '.' && FI_NAME(s)[2] == 0)) {

714 
	`li°fûe
(
s
, 
NULL
);

715 #i‚de‡
DONT_LIE_ABOUT_DOT_FILES


716 } i‡(
dŸ_ªad_ok
 != 0) {

717 
d
 = 
	`li°fûe
(
s
, 
NULL
);

720 
d
 = 
	`li°fûe
(
s
, 
NULL
);

724 i‡(!
d
) {

725 
s
->
«me_off£t
 = (
size_t
) -1;

727 
s
++;

729 
	`ouçutfûes
(
f
, 
és_fd
);

730 
r
 = 
dú
;

731 
›t_R
 && 
r
 !
s
) {

732 i‡(
r
->
«me_off£t
 !(
size_t
Ë-1 && !
	`chdú
(
	`FI_NAME
(r))) {

733 *
Æloˇ_subdú
;

734 c⁄° 
size_t
 
sizeof_subdú
 = 
MAXPATHLEN
 + 1U;

736 i‡((
Æloˇ_subdú
 = 
	`ALLOCA
(
sizeof_subdú
)Ë=
NULL
) {

737 
toom™y
;

739 i‡(
	`SNCHECK
(
	`¢¥ötf
(
Æloˇ_subdú
, 
sizeof_subdú
, "%s/%s",

740 
«me
, 
	`FI_NAME
(
r
)), 
sizeof_subdú
)) {

741 
nﬁi°
;

743 #ifde‡
WITH_RFC2640


744 
c_buf
 = 
	`ch¨£t_fs2˛õ¡
(
Æloˇ_subdú
);

746 
c_buf
 = 
Æloˇ_subdú
;

748 #i‚de‡
MINIMAL


749 i‡(
modîn_li°ögs
 == 0) {

751 #ifde‡
FANCY_LS_DIRECTORY_HEADERS


752 
	`wr°r
(
f
, 
és_fd
, "\r\n>----------------[");

753 
	`wr°r
(
f
, 
és_fd
, 
c_buf
);

754 
	`wr°r
(
f
, 
és_fd
, "]----------------<\r\n\r\n");

756 
	`wr°r
(
f
, 
és_fd
, "\r\n\r\n");

757 
	`wr°r
(
f
, 
és_fd
, 
c_buf
);

758 
	`wr°r
(
f
, 
és_fd
, ":\r\n\r\n");

760 #i‚de‡
MINIMAL


763 #ifde‡
WITH_RFC2640


764 
	`‰ì
(
c_buf
);

766 
	`li°dú
(
dïth
 + 1U, 
f
, 
és_fd
, 
Æloˇ_subdú
);

767 
nﬁi°
:

768 
	`ALLOCA_FREE
(
Æloˇ_subdú
);

769 i‡(
m©ches
 >
max_ls_fûes
) {

770 
toom™y
;

772 i‡(
	`chdú
("..")) {

773 
	`chdú
(
wd
);

774 i‡(
	`chdú
(
«me
)) {

775 
	`dõ
(421, 
LOG_ERR
, "chdir: %s" ,

776 
	`°ªº‹
(
î∫o
));

780 
r
++;

782 
toom™y
:

783 
	`‰ì
(
«mes
);

784 
	`‰ì
(
dú
);

785 
«mes
 = 
NULL
;

788 *
	`u√sˇ≥_™d_ªtu∫_√xt_fûe
(* c⁄° 
°r
) {

789 *
≤t
 = 
°r
;

790 sig√d 
£í_back¶ash
 = 0;

792 *
≤t
 != 0) {

793 i‡(
£í_back¶ash
 == 0) {

794 i‡(*
≤t
 == '\\') {

795 
£í_back¶ash
 = 1;

796 } i‡(*
≤t
 == ' ') {

797 *
≤t
++ = 0;

798 i‡(*
≤t
 != 0) {

799  
≤t
;

803 
≤t
++;

805 
£í_back¶ash
 = 0;

806 i‡(*
≤t
 == ' ' || *pnt == '\\' || *pnt == '{' || *pnt == '}') {

807 
	`memmove
(
≤t
 - 1,Ö¡, 
	`°æí
’¡Ë+ (
size_t
) 1U);

811  
NULL
;

814 
	`d⁄li°
(*
¨g
, c⁄° 
⁄_˘æ_c⁄n
, c⁄° 
›t_l_
,

815 c⁄° 
›t_a_
, c⁄° 
•lô_¨gs
)

817 
c
;

818 *
és_fd
 = 
NULL
;

819 *
c_buf
;

821 
m©ches
 = 0U;

823 
›t_C
 = 
›t_d
 = 
›t_F
 = 
›t_R
 = 
›t_r
 = 
›t_t
 = 
›t_S
 = 0;

824 
›t_l
 = 
›t_l_
;

825 i‡(
f‹˚_ls_a
 != 0) {

826 
›t_a
 = 1;

828 
›t_a
 = 
›t_a_
;

830 i‡(
•lô_¨gs
 != 0) {

831 
	`is•a˚
((Ë*
¨g
)) {

832 
¨g
++;

834 
¨g
 && *arg == '-') {

835 
¨g
++ && 
	`iß um
(() *arg)) {

836 *
¨g
) {

838 
›t_a
 = 1;

841 
›t_l
 = 1;

842 
›t_C
 = 0;

845 
›t_l
 = 
›t_C
 = 0;

848 
›t_l
 = 0;

849 
›t_C
 = 1;

852 
›t_F
 = 1;

855 
›t_R
 = 1;

858 
›t_d
 = 1;

861 
›t_r
 = 1;

864 
›t_t
 = 1;

865 
›t_S
 = 0;

868 
›t_S
 = 1;

869 
›t_t
 = 0;

873 
	`is•a˚
((Ë*
¨g
)) {

874 
¨g
++;

878 i‡(
⁄_˘æ_c⁄n
 == 0) {

879 
	`›íd©a
();

880 i‡((
c
 = 
x„rfd
) == -1) {

883 
	`d‹ïly
();

884 #ifde‡
WITH_TLS


885 i‡(
d©a_¥Ÿe˘i⁄_Àvñ
 =
CPL_PRIVATE
) {

886 
	`és_öô_d©a_£ssi⁄
(
x„rfd
, 
∑ssive
);

887 
és_fd
 = 
és_d©a_˙x
;

891 
c
 = 
˛õ¡fd
;

892 #ifde‡
WITH_TLS


893 i‡(
d©a_¥Ÿe˘i⁄_Àvñ
 =
CPL_PRIVATE
) {

894 
	`£cuª_ß„_wrôe
(
és_˙x
, "213-STAT" 
CRLF
,

895  "213-STAT" 
CRLF
 - 1U);

896 
és_fd
 = 
és_˙x
;

901 
	`ß„_wrôe
(
c
, "213-STAT" 
CRLF
,  "213-STAT" CRLF - 1U, -1);

904 i‡(
¨g
 !
NULL
 && *arg != 0) {

905 
ju°⁄e
;

907 
ju°⁄e
 = 1;

910 
glob_t
 
g
;

911 
a
;

912 *
íd¨g
;

914 i‡(
•lô_¨gs
 == 0) {

915 
íd¨g
 = 
NULL
;

916 } i‡((
íd¨g
 = 
	`u√sˇ≥_™d_ªtu∫_√xt_fûe
(
¨g
)Ë!
NULL
) {

917 
ju°⁄e
 = 0;

919 #ifde‡
DEBUG


920 i‡(
debug
 != 0) {

921 
	`addª∂y
(226, "Glob: %s", 
¨g
);

927 
	`Æ¨m
(
GLOB_TIMEOUT
);

928 
a
 = 
	`sglob
(
¨g
,

929 
›t_a
 ? (
GLOB_PERIOD
 | 
GLOB_LIMIT
) : GLOB_LIMIT,

930 
NULL
, &
g
, 
max_ls_fûes
 + 2, 
max_ls_dïth
 * 2);

931 
	`Æ¨m
(0);

932 i‡(
a
 == 0) {

933 **
∑th
;

935 i‡(
g
.
gl_∑thc
 <= 0) {

936 
∑th
 = 
NULL
;

938 
∑th
 = 
g
.
gl_∑thv
;

940 i‡(
∑th
 !
NULL
 &&Öath[0] != NULL &&Öath[1] != NULL) {

941 
ju°⁄e
 = 0;

943 
∑th
 !
NULL
 && *path != NULL) {

944 
°©
 
°
;

946 i‡(
	`°©
(*
∑th
, &
°
) == 0) {

947 i‡(
›t_d
 || !(
	`S_ISDIR
(
°
.
°_mode
))) {

948 
	`li°fûe
(
NULL
, *
∑th
);

949 **
∑th
 = 0;

952 **
∑th
 = 0;

954 
∑th
++;

956 
	`ouçutfûes
(
c
, 
és_fd
);

957 
∑th
 = 
g
.
gl_∑thv
;

958 
∑th
 !
NULL
 && *path != NULL) {

959 i‡(
m©ches
 >
max_ls_fûes
) {

962 i‡(**
∑th
 != 0) {

963 i‡(!
ju°⁄e
) {

964 #ifde‡
WITH_RFC2640


965 
c_buf
 = 
	`ch¨£t_fs2˛õ¡
(*
∑th
);

967 
c_buf
 = *
∑th
;

969 #ifde‡
FANCY_LS_DIRECTORY_HEADERS


970 
	`wr°r
(
c
, 
és_fd
, "\r\n>-----------------[");

971 
	`wr°r
(
c
, 
és_fd
, 
c_buf
);

972 
	`wr°r
(
c
, 
és_fd
, "]-----------------<\r\n\r\n");

974 
	`wr°r
(
c
, 
és_fd
, "\r\n\r\n");

975 
	`wr°r
(
c
, 
és_fd
, 
c_buf
);

976 
	`wr°r
(
c
, 
és_fd
, ":\r\n\r\n");

978 #ifde‡
WITH_RFC2640


979 
	`‰ì
(
c_buf
);

982 i‡(!
	`chdú
(*
∑th
)) {

983 
	`li°dú
(0U, 
c
, 
és_fd
, *
∑th
);

984 
	`chdú
(
wd
);

987 
∑th
++;

990 i‡(
a
 =
GLOB_NOSPACE
) {

991 
	`addª∂y
(226, 
MSG_GLOB_NO_MEMORY
, 
¨g
);

992 
	`addª∂y_nof‹m©
(0, 
MSG_PROBABLY_DENIED
);

993 } i‡(
a
 =
GLOB_ABEND
) {

994 
	`addª∂y
(226, 
MSG_GLOB_READ_ERROR
, 
¨g
);

995 } i‡(
a
 !
GLOB_NOMATCH
) {

996 
	`addª∂y
(226, 
MSG_GLOB_READ_ERROR
, 
¨g
);

997 
	`addª∂y_nof‹m©
(0, 
MSG_PROBABLY_DENIED
);

1000 
	`glob‰ì
(&
g
);

1001 
¨g
 = 
íd¨g
;

1002 } 
¨g
 !
NULL
);

1004 i‡(
›t_d
) {

1005 
	`li°fûe
(
NULL
, ".");

1007 
	`li°dú
(0U, 
c
, 
és_fd
, ".");

1009 
	`ouçutfûes
(
c
, 
és_fd
);

1011 
	`wr°r
(
c
, 
és_fd
, 
NULL
);

1012 i‡(
⁄_˘æ_c⁄n
 == 0) {

1013 #ifde‡
WITH_TLS


1014 
	`˛o£d©a
();

1016 
	`˛o£
(
c
);

1018 
	`addª∂y_nof‹m©
(213, "End.");

1019 
íd
;

1021 i‡(
›t_a
 || 
›t_C
 || 
›t_d
 || 
›t_F
 || 
›t_l
 || 
›t_r
 || 
›t_R
 ||

1022 
›t_t
 || 
›t_S
)

1023 
	`addª∂y
(0, "Options: %s%s%s%s%s%s%s%s%s",

1024 
›t_a
 ? "-a " : "",

1025 
›t_C
 ? "-C " : "",

1026 
›t_d
 ? "-d " : "",

1027 
›t_F
 ? "-F " : "",

1028 
›t_l
 ? "-l " : "",

1029 
›t_r
 ? "-r " : "",

1030 
›t_R
 ? "-R " : "", 
›t_S
 ? "-S " : "",

1031 
›t_t
 ? "-t" : "");

1032 i‡(
m©ches
 >
max_ls_fûes
) {

1033 
	`addª∂y
(226, 
MSG_LS_TRUNCATED
, 
m©ches
);

1035 
	`addª∂y
(226, 
MSG_LS_SUCCESS
, 
m©ches
);

1037 
íd
:

1038 
	`chdú
(
wd
);

	@src/ls_p.h

1 #i‚de‡
__LS_P_H__


2 
	#__LS_P_H__
 1

	)

4 #i‡
deföed
(
GLOB_ABORTED
Ë&& !deföed(
GLOB_ABEND
)

5 
	#GLOB_ABEND
 
GLOB_ABORTED


	)

8 
	#CHUNK_SIZE
 
∑ge_size


	)

10 
	gcﬁwidth
;

11 
	gfûíames
;

13 
	sfûíame
 {

14 
fûíame
 *
	mdown
;

15 
fûíame
 *
	mright
;

16 
	mt›
;

17 
	mlöe
[1];

20 
fûíame
 *
	ghód
;

21 
fûíame
 *
	gèû
;

22 
	gm©ches
;

24 
	su£rid
 {

25 
u£rid
 *
	m√xt
;

26 
uid_t
 
	muid
;

27 *
	m«me
;

30 
	sgroupid
 {

31 
groupid
 *
	m√xt
;

32 
gid_t
 
	mgid
;

33 *
	m«me
;

36 #i‚de‡
NO_FTP_USERS


37 
u£rid
 *
	gu£r_hód
;

38 
groupid
 *
	ggroup_hód
;

42 
	g›t_a
, 
	g›t_C
, 
	g›t_d
, 
	g›t_F
, 
	g›t_l
, 
	g›t_R
, 
	g›t_r
, 
	g›t_t
, 
	g›t_S
;

	@src/main.c

1 
	~<c⁄fig.h
>

2 
	~"·pd.h
"

4 
	$maö
(
¨gc
, *
¨gv
[])

6  
	`puª·pd_°¨t
(
¨gc
, 
¨gv
, 
NULL
);

7 
	}
}

	@src/messages.h

1 #i‚de‡
__MESSAGES_H__


2 
	#__MESSAGES_H__
 1

	)

4 #ifde‡
MESSAGES_DE


5 
	#MESSAGES_LOCALE
 "de_DE"

	)

6 
	~"mesßges_de.h
"

8 #ñi‡
deföed
(
MESSAGES_RO
)

9 
	#MESSAGES_LOCALE
 "ro_RO"

	)

10 
	~"mesßges_ro.h
"

12 #ñi‡
deföed
(
MESSAGES_FR
)

13 
	#MESSAGES_LOCALE
 "‰_FR"

	)

14 
	~"mesßges_‰.h
"

16 #ñi‡
deföed
(
MESSAGES_PL
)

17 
	#MESSAGES_LOCALE
 "∂_PL"

	)

18 
	~"mesßges_∂.h
"

20 #ñi‡
deföed
(
MESSAGES_ES
)

21 
	#MESSAGES_LOCALE
 "es_ES"

	)

22 
	~"mesßges_es.h
"

24 #ñi‡
deföed
(
MESSAGES_DA
)

25 
	#MESSAGES_LOCALE
 "da_DK"

	)

26 
	~"mesßges_da.h
"

28 #ñi‡
deföed
(
MESSAGES_NL
)

29 
	#MESSAGES_LOCALE
 "∆_NL"

	)

30 
	~"mesßges_∆.h
"

32 #ñi‡
deföed
(
MESSAGES_IT
)

33 
	#MESSAGES_LOCALE
 "ô_IT"

	)

34 
	~"mesßges_ô.h
"

36 #ñi‡
deföed
(
MESSAGES_PT_BR
)

37 
	#MESSAGES_LOCALE
 "±_BR"

	)

38 
	~"mesßges_±_br.h
"

40 #ñi‡
deföed
(
MESSAGES_SK
)

41 
	#MESSAGES_LOCALE
 "sk_SK"

	)

42 
	~"mesßges_sk.h
"

44 #ñi‡
deföed
(
MESSAGES_KR
)

45 
	#MESSAGES_LOCALE
 "ko_KO"

	)

46 
	~"mesßges_kr.h
"

48 #ñi‡
deföed
(
MESSAGES_FR_FUNNY
)

49 
	#MESSAGES_LOCALE
 "‰_FR"

	)

50 
	~"mesßges_‰_fu¬y.h
"

52 #ñi‡
deföed
(
MESSAGES_SV
)

53 
	#MESSAGES_LOCALE
 "sv_SE"

	)

54 
	~"mesßges_sv.h
"

56 #ñi‡
deföed
(
MESSAGES_NO
)

57 
	#MESSAGES_LOCALE
 "no_NO"

	)

58 
	~"mesßges_no.h
"

60 #ñi‡
deföed
(
MESSAGES_RU
)

61 
	#MESSAGES_LOCALE
 "ru_RU"

	)

62 
	~"mesßges_ru.h
"

64 #ñi‡
deföed
(
MESSAGES_ZH_CN
)

65 
	#MESSAGES_LOCALE
 "zh_CN"

	)

66 
	~"mesßges_zh_˙.h
"

68 #ñi‡
deföed
(
MESSAGES_ZH_TW
)

69 
	#MESSAGES_LOCALE
 "zh_TW"

	)

70 
	~"mesßges_zh_tw.h
"

72 #ñi‡
deföed
(
MESSAGES_CS_CZ
)

73 
	#MESSAGES_LOCALE
 "cs_CZ"

	)

74 
	~"mesßges_cs_cz.h
"

76 #ñi‡
deföed
(
MESSAGES_TR
)

77 
	#MESSAGES_LOCALE
 "å_TR"

	)

78 
	~"mesßges_å.h
"

80 #ñi‡
deföed
(
MESSAGES_HU
)

81 
	#MESSAGES_LOCALE
 "hu_HU"

	)

82 
	~"mesßges_hu.h
"

84 #ñi‡
deföed
(
MESSAGES_CA_ES
)

85 
	#MESSAGES_LOCALE
 "ˇ_ES"

	)

86 
	~"mesßges_ˇ_es.h
"

89 
	#MESSAGES_LOCALE
 "í_GB"

	)

90 
	~"mesßges_í.h
"

91 #i‚de‡
MESSAGES_EN


92 
	#MESSAGES_EN
 1

	)

97 #ifde‡
PARANOID_MESSAGES


98 #unde‡
MSG_NOTRUST


99 
	#MSG_NOTRUST
 
MSG_AUTH_FAILED


	)

	@src/messages_cs_cz.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: InvÆid TLSCùhîSuôê•ecifõd '%s'"

	)

2 
	#MSG_TIMEOUT
 "Ëa†vy¥πñ"

	)

3 
	#MSG_CAPABILITIES
 "Nemohu zmÏnôÖrivûegü"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "Klõ¡ uzav¯ñ spojíÌ"

	)

5 
	#MSG_CLIENT_READ_ERR
 "Chyb®p¯òËãnÌ od klõ¡a"

	)

6 
	#MSG_CANT_OPEN_CNX
 "Nem˘æu vytvo¯ô spojíÌ"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "Nem˘æu vytvo¯ô d©ov˝ sockë"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "Klõ¡ov®adªß je"

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "Sy¡aktick· chyb®v IPádª£"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "P¯Ìkaz PORT ˙•Ïπ√ vyk⁄·n"

	)

11 
	#MSG_ONLY_IPV4V6
 "JsouÖodp‹ov·nyÖouzêIPv4á IPv6 (1,2)"

	)

12 
	#MSG_ONLY_IPV4
 "Podp‹ov·¿jêpouzêIPv4 (1)"

	)

13 
	#MSG_TIMEOUT_PARSER
 "Ëa†vy¥πñ,Ö¯ÌπtÏ zku°êps·àrychÀji"

	)

14 
	#MSG_LINE_TOO_LONG
 "¯·dek jêp¯Ìliπ dlouh˝"

	)

15 
	#MSG_LOG_OVERFLOW
 "Klõ¡ sêpokusûÖ¯ï ô buf„∏¥ÿp¯Ìkazov˝ ¯·dek"

	)

16 
	#MSG_GOODBYE
 "NashÀd™ou. U∂ﬂdlòj°ê%Œuá dow∆ﬂdlò%Œu kûobajt˘."

	)

17 
	#MSG_DEBUG_COMMAND
 "P¯Ìkaz"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 "jêvaπêsouËa¢·Üoˇti⁄"

	)

19 
	#MSG_NOT_LOGGED_IN
 "Nej°êp¯ihl·πí"

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "Bez≥Ëno°nÌÑozπÌ¯íÌÇejsou im∂emítov·ny"

	)

21 
	#MSG_NO_FILE_NAME
 "æ·dnÈ jmÈnÿsoub‹u"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "æ·dnÈ jmÈnÿadªs·¯e"

	)

23 
	#MSG_NO_RESTART_POINT
 "æ·dn˝ zaË·ãkÑe°¨tu"

	)

24 
	#MSG_ABOR_SUCCESS
 "VidÌã-lòtohÀ,ÖakÖ¯Ìkaz ABOR by»u•Ïπn˝"

	)

25 
	#MSG_MISSING_ARG
 "ChybÏjÌcÌárgumít"

	)

26 
	#MSG_GARBAGE_FOUND
 "Z®hodnŸou sê«ch·zÌ smëÌ"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "P¯Ìliπ vysok· hodnŸa"

	)

28 
	#MSG_IDLE_TIME
 "Ëa†√Ëöno°ò«°avíÇ®%lu sekund"

	)

29 
	#MSG_SITE_HELP
 "Na¶edujÌcÌ SITEÖ¯Ìkazy jsouÑozezn·ny"

	)

30 
	#MSG_BAD_CHMOD
 "Chybn·Ö¯Ì°upov·Ör·va"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "jê√zn·mÈÑozπÌ¯íÌ"

	)

32 
	#MSG_XDBG_OK
 "P¯Ìkaz XDBG by»˙•Ïπn˝, debug ˙roveÚÇa°aví®« %d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "Nezn·m˝Ö¯Ìkaz"

	)

34 
	#MSG_TIMEOUT_NOOP
 "Ëa†vy¥πñ (æ·d« o≥ø˚ vÖr˘bÏhu %lu sekund)"

	)

35 
	#MSG_TIMEOUT_DATA
 "Ëa†vy¥πñ (æ·dn·Çov· d©®vÖr˘bÏhu %lu sekund)"

	)

36 
	#MSG_SLEEPING
 "Zzz..."

	)

37 
	#MSG_ALREADY_LOGGED
 "Uæ j°êp¯ihl·πíej"

	)

38 
	#MSG_ANY_PASSWORD
 "M˘æëêz©©ÜibovﬁnÈ he¶o"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "P¯ihl·πí jakÿ™⁄ymnÌ uæiv©ñ"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "An⁄ymnÌ uæiv©ñ sêp¯ihl·sû vêvútu· Ìm FTP"

	)

41 
	#MSG_USER_OK
 "Uæiv©ñ %†jêOK. He¶ÿjêpovönÈ"

	)

42 
	#MSG_CANT_DO_TWICE
 "BÏhemÅohŸÿ£zíÌÅÿ√mohuÖrovÈ°"

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "NemohuÇa°avô bez≥ËnÈán⁄ymnÌ FTP"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "Vaπêp¯íosov·Ñychlo° jêomezía"

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 
MSG_ANY_PASSWORD


	)

46 
	#MSG_NOTRUST
 "Lôuji,áÀÇemohu V·m d˘vÏ¯ov©"

	)

47 
	#MSG_WHOAREYOU
 "ProsÌm ¯eknÏã mi, kdÿj°e"

	)

48 
	#MSG_AUTH_FAILED
 "Lôuji,áÀáuã¡ifika˚ zlyhÆa"

	)

49 
	#MSG_AUTH_TOOMANY
 "P¯Ìliπ mnohÿzlyh™Ìáuã¡ifika˚"

	)

50 
	#MSG_NO_HOMEDIR
 "Domovsk˝ádªs·¯ jê√p¯Ì°u≤˝ - k⁄ec"

	)

51 
	#MSG_NO_HOMEDIR2
 "%†√exi°ujê√bÿ√nÌ doßæôñn˝"

	)

52 
	#MSG_START_SLASH
 "ZaËÌn·m v /"

	)

53 
	#MSG_USER_GROUP_ACCESS
 "Uæiv©ñ %†m· skupöov˝Ö¯Ì°u∞do"

	)

54 
	#MSG_FXP_SUPPORT
 "Títÿ£rvîÖodp‹ujêFXPÖ¯íosy"

	)

55 
	#MSG_RATIO
 "MusÌã dodræov©ÖomÏ∏%u:%u (UL/DL)"

	)

56 
	#MSG_CHROOT_FAILED
 "Nemohu vytvo¯ô bez≥Ënou chroŸ(ËkÀc"

	)

57 
	#MSG_CURRENT_DIR_IS
 "OK. AktuÆnÌádªs·¯ jê%s"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "OK. AktuÆnÌ omezí˝ádªs·¯ jê%s"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†jê¥avÏÖ¯ihl·πí"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "Nem˘æuÖ¯ejÌàdÿadªs·¯ê%s"

	)

61 
	#MSG_PATH_TOO_LONG
 "Ce°®jêp¯Ìliπ dlouh·"

	)

62 
	#MSG_CANT_PASV
 "Nem˘æëêpouæÌv© PASVÇ®IPv4Ö¯ío£ch. Pouæijã EPSV."

	)

63 
	#MSG_CANT_PASSIVE
 "Nemohu vytvo¯ôÖasivnÌ spojíÌ"

	)

64 
	#MSG_PORTS_BUSY
 "VπechnyÑezîvov™È TCPÖ‹ty jsouÖouæÌv·ny"

	)

65 
	#MSG_GETSOCKNAME_DATA
 "Nemohu idítifikov©ÜokÆnÌ d©ov˝ sockë"

	)

66 
	#MSG_GETPEERNAME
 "Nemohu idítifikov©ÜokÆnÌ sockë"

	)

67 
	#MSG_INVALID_IP
 "Lôuji,áÀ zadÆòj°êchybnouádªsu"

	)

68 
	#MSG_NO_EPSV
 "ProsÌmÖouæijã klõ¡®kom∑tiblöÌhÿ†IPv6 sÖodp‹ou EPSV"

	)

69 
	#MSG_BAD_PORT
 "Lôuji,áÀÇï¯ùojÌm sê«Ö‹àniæπÌÇeæ 1024"

	)

70 
	#MSG_NO_FXP
 "NeŸev¯u spojíÌÇ®%†’ouzêdÿ%s)"

	)

71 
	#MSG_FXP
 "FXPÖ¯ío†: z %†« %s"

	)

72 
	#MSG_NO_DATA_CONN
 "Æ·dnÈ d©ovÈ spojíÌ"

	)

73 
	#MSG_ACCEPT_FAILED
 "SpojíÌÇemohlÿb˝àak˚±ov·no"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "D©ovÈ spojíÌÖ¯ij©È"

	)

75 
	#MSG_CNX_PORT_FAILED
 "Nemohu vytvo¯ô d©ovÈ spojíÌÇ®p‹à%d"

	)

76 
	#MSG_CNX_PORT
 "P¯ù·jÌm sê«Ö‹à%d"

	)

77 
	#MSG_ANON_CANT_MKD
 "Lôuji,áÀán⁄ymnÌ uæiv©ñÇem˘æêvytv·¯ëádªs·¯e"

	)

78 
	#MSG_ANON_CANT_RMD
 "Lôuji,áÀán⁄ymnÌ uæiv©ñÇem˘æêmaz©ádªs·¯e"

	)

79 
	#MSG_ANON_CANT_RENAME
 "An⁄ymnÌ uæiv©ñÇem˘æêp¯esuv©/p¯ejmíov·v© soub‹y"

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "An⁄ymnÌ uæiv©ñÇem˘æêmÏnôÖ¯Ì°upov·Ör·va"

	)

81 
	#MSG_GLOB_NO_MEMORY
 "BÏhem globbögu %†doπœÖamÏª"

	)

82 
	#MSG_PROBABLY_DENIED
 "(TohÀÖøvdÏpodobnÏ z«mí· \"OdmÌäut˝Ö¯Ì°up\")"

	)

83 
	#MSG_GLOB_READ_ERROR
 "Chyb®ËãnÌÖ¯òglobbov™Ì %s"

	)

84 
	#MSG_GLOB_NO_MATCH
 "Æ·dn· shod®mezò%†v %s"

	)

85 
	#MSG_CHMOD_FAILED
 "Nemohu zmÏnôÖ¯Ì°upov·Ör·v®« %s"

	)

86 
	#MSG_CHMOD_SUCCESS
 "P¯Ì°upov·Ör·v®zmÏnÏ«Ç®%s"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "Lôuji,áÀÇemoh»j£m zmÏnô æ·dn·Ö¯Ì°upov·Ör·va"

	)

88 
	#MSG_ANON_CANT_DELETE
 "An⁄ymnÌ uæiv©ñÇem˘æêmaz© soub‹y"

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "An⁄ymnÌ uæiv©ñÇem˘æêp¯ïisov©Éxi°ujÌcÌ soub‹y"

	)

90 
	#MSG_DELE_FAILED
 "%†√lzêsmaz©"

	)

91 
	#MSG_DELE_SUCCESS
 "Soub‹ %s%s%s%†smaz·n"

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "Æ·dn˝ soub‹Çeby»smaz·n"

	)

93 
	#MSG_LOAD_TOO_HIGH
 \

95 "™⁄ymnÌm uæiv©ñ˘mÖ¯òèk vysokÈ z·tÏæi. U∂ﬂdy jsou vædyÖovﬁíy\n"

	)

97 
	#MSG_OPEN_FAILURE
 "Nemohu oãv¯Ìà%s"

	)

98 
	#MSG_OPEN_FAILURE2
 "Nemohu oãv¯Ìàã¿soub‹"

	)

99 
	#MSG_STAT_FAILURE
 "Nemohu zji°ô vñiko° soub‹u"

	)

100 
	#MSG_STAT_FAILURE2
 "Nemohu ovÏ¯ôÉxi°ícòsoub‹u"

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "Off£à%ŒdÖrÿª°¨à°ahov·nÌ jêp¯Ìliπ vysok˝, soub‹ m· vñiko°Öouzê%Œd."

	)

102 
	#MSG_REST_RESET
 "ZaË·ãkÑe°¨tuÇa°avíÇ®0"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "Soub‹ÇíÌ bÏæn˝"

	)

104 
	#MSG_NOT_MODERATED
 \

106 "hÿ¥ÿdow∆ﬂd z©ÌmÇeschv·lû."

	)

107 
	#MSG_RATIO_DENIAL
 \

110 "Je°lòn·mÅu u∂ﬂd√ãÇÏcÿhezkÈho, m˘æëêsò∑kÇ®›l·tkuÅakyÇÏcÿhezkÈhÿ°·hnout."

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "N®dow∆ﬂdÅu uæÇi¯√nÌ"

	)

112 
	#MSG_WINNER
 "PoËÌèË jêtv˘jÖ¯Ìãl. D˘vÏ¯uj mu!"

	)

113 
	#MSG_KBYTES_LEFT
 "%.1‡kûobajt˘Ç®dow∆ﬂd"

	)

114 
	#MSG_ABORTED
 "P¯ío†p¯îuπí"

	)

115 
	#MSG_DATA_WRITE_FAILED
 "Chyb®bÏhem z·pisu dÿd©ovÈhÿ•ojíÌ"

	)

116 
	#MSG_DATA_READ_FAILED
 "Chyb®bÏhem ËãnÌ z d©ovÈhÿ•ojíÌ"

	)

117 
	#MSG_MMAP_FAILED
 "Nem˘æuÇam≠ov© soub‹ dÿ∑mÏti"

	)

118 
	#MSG_WRITE_FAILED
 "Chyb®bÏhem z·pisu dÿsoub‹u"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡£kund (mÏ¯íÿzde), %.2‡megabajt˘ z®£kundu"

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡£kund (mÏ¯íÿzde), %.2‡kûobajt˘ z®£kundu"

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡£kund (mÏ¯íÿzde), %.2‡bajt˘ z®£kundu"

	)

122 
	#MSG_SPACE_FREE_M
 "%.1‡megabajt˘ vﬁnÈhÿdiskovÈhÿ¥o°‹u"

	)

123 
	#MSG_SPACE_FREE_K
 "%‡kûobj©˘ vﬁnÈhÿdiskovÈhÿ¥o°‹u"

	)

124 
	#MSG_DOWNLOADED
 "dow∆ﬂdnut"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "REST vyæadujêËÌ£ ˝Ö¨amër"

	)

126 
	#MSG_REST_ASCII_STRICT
 "Oz«ËíÌ odpovÏdòmusÌ b˝à0 v ASCIIÑeæimu"

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "PokøËujòod %Œd. AÀ jsmêv ASCIIÑeæimu"

	)

128 
	#MSG_REST_SUCCESS
 "PokøËujòod %Œd"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "Zak·z™˝Ç·zevádªs·¯e"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "Zak·z™˝Ç·zev soub‹u: %s"

	)

131 
	#MSG_MKD_FAILURE
 "Nemohu vytvo¯ôádªs·¯"

	)

132 
	#MSG_MKD_SUCCESS
 "Adªs·¯ by»˙•ÏπnÏ vytvo¯í"

	)

133 
	#MSG_RMD_FAILURE
 "Nemohu smaz©ádªs·¯"

	)

134 
	#MSG_RMD_SUCCESS
 "Adªs·¯ by»˙•ÏπnÏ smaz·n"

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "Nemohu zÌsk© Ëasovu z«Ëku"

	)

136 
	#MSG_MODE_ERROR
 "Podp‹ov·¿jêpouzêASCIIá bö·∫ÌÑeæim"

	)

137 
	#MSG_CREATE_FAILURE
 "Nemohu vytvo¯ô soub‹"

	)

138 
	#MSG_ABRT_ONLY
 "P¯Ìkaz ABRT jêmoænÈÖouæÌàpouzêbÏhem u∂ﬂdu."

	)

139 
	#MSG_UPLOAD_PARTIAL
 "Ë·°ÏËnÏ u∂ﬂdnut"

	)

140 
	#MSG_REMOVED
 "od°ønÏn"

	)

141 
	#MSG_UPLOADED
 "u∂ﬂdnut"

	)

142 
	#MSG_GMTIME_FAILURE
 "Nemohu zji°ôÜok· Ì Ëas"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "Podp‹ujuÖouzê8 bôovÈ bajty, odkud j°êp¯iπñ, ËlovÏËe??"

	)

144 
	#MSG_TYPE_UNKNOWN
 "Nezn·m˝ TYPE"

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPE jênynÌ"

	)

146 
	#MSG_STRU_FAILURE
 "PouzêF(ûeËjêpodp‹ov·n"

	)

147 
	#MSG_MODE_FAILURE
 "ProsÌmÖouæijã S—ªamËªæim"

	)

148 
	#MSG_RENAME_ABORT
 "P¯îuπujòp¯edeπlÈÖ¯ejmíov·nÌ"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "P¯Ìkaz RNFR by»ak˚±ov·n, soub‹Éxi°uje, oËek·v·m cÌl"

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "Lôuji,áÀ zad™˝ soub‹Çìxi°uje"

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "P¯Ìkaz RENAME sñhÆ - cÌlov˝ soub‹ jiæÉxi°uje"

	)

152 
	#MSG_RENAME_NORNFR
 "PŸ¯ebujòRNFRÖ¯ed RNTO"

	)

153 
	#MSG_RENAME_FAILURE
 "Chyb®p¯emíov·nÌ/p¯esunu"

	)

154 
	#MSG_RENAME_SUCCESS
 "Soub‹ ˙•nÏπnÏÖ¯esunut/p¯emíov·n"

	)

155 
	#MSG_NO_SUPERSERVER
 "ProsÌm spouπtÏjãÖuª-·pd zêsu≥r-£rvîu («p¯Ìkœd zÅ˝£rvî)"

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "NemohuÇajÌà˙Ëë '·p'"

	)

157 
	#MSG_CONF_ERR
 "Chyb®k⁄figuø˚"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "ChybÏjÌcÌ soub‹ vútuÆnÌch uæiv©ñ˘"

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "Chybn· hodnŸ®πkr˚nÌÑychlo°òp¯íosu"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "Chybn· d˘vÏ¯ov™· gidÖrÿchroŸ"

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "Chybn˝Üimô uæiv©ñ˘"

	)

162 
	#MSG_ILLEGAL_FACILITY
 "Nezn·mÈ jmÈnÿ¶uæby"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "Chybn˝ k⁄figuøËnÌ soub‹ LDAPu"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "Chyn˝Üimô mezêz·tÏæêsy°Èmu"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "Chybn˝ÑozßhÖ‹t˘"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "Chybn˝ÜimôÖrÿ'ls'"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "Chybn· vnu˚n· IPÖrÿ∑sivnÌÖ¯íosy"

	)

168 
	#MSG_ILLEGAL_RATIO
 "Chybn˝ u∂ﬂd/dow∆ﬂdÖomÏr"

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "Chybn˝ uidÜimô"

	)

170 
	#MSG_ILLEGAL_OPTION
 "Nezn·m·Ñun-timêvﬁba"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "ChybÏjÌcÌ LDAPBa£DN v k⁄figuøËnÌm soub‹u LDAPu"

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "ChybnÈ LDAPÖ¨amëry"

	)

173 
	#MSG_NEW_CONNECTION
 "NovÈ spojíÌ z %s"

	)

174 
	#MSG_WELCOME_TO
 "VÌãjãÇa"

	)

175 
	#MSG_MAX_USERS
 "Lôuji,áÀ %lu (maximumËuæiv©ñ˘ jêjiæÖ¯ihl·πí˝ch"

	)

176 
	#MSG_NB_USERS
 "J°êuæiv©ñem ËÌ¶ÿ%u z %uÖovﬁí˝ch"

	)

177 
	#MSG_WELCOME_TIME
 "LokÆnÌ Ëa†jê%02d:%02d. P‹à£rvîu jê%u."

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "ZdêjêpovﬁíÖouzê™⁄ymnÌÖ¯Ì°up"

	)

179 
	#MSG_RATIOS_EVERYONE
 "V©ICHNI UÆIVATELE MUSI DODRÆET POMER UL/DL :"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "ANONYMNI UÆIVATELE MUSI DODRÆET POMER UL/DL :"

	)

181 
	#MSG_RATIOS_RULE
 "« dow∆ﬂd %u MB musÌã u∂ﬂdnuà%u MB."

	)

182 
	#MSG_INFO_IDLE_M
 "Budëêodpojíòpÿ%lu möut·chÇeËöno°i."

	)

183 
	#MSG_INFO_IDLE_S
 "Budëêodpojíòpÿ%lu sekund·chÇeËöno°i."

	)

184 
	#MSG_CANT_READ_FILE
 "Lôuji,Çeby»j£m sch›n˝Ö¯eËÌ° [%s]"

	)

185 
	#MSG_LS_TRUNCATED
 "V˝°u∞zkr·˚¿« %u shod"

	)

186 
	#MSG_LS_SUCCESS
 "Spﬁu %u shod"

	)

187 
	#MSG_LOGOUT
 "Logout."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "Auã¡ifika˚ uæiv©ñê£lhÆ®[%s]"

	)

189 
	#MSG_ILLEGAL_UMASK
 "Nïœä· maska"

	)

190 
	#MSG_STANDALONE_FAILED
 "Nemohu spu°ô samo°©n˝ sîvî"

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "TohÀ jêsoukrom˝ sy°Èm -án⁄ymnÌ uæiv©ñÈ jsou zak·z·ni"

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "M˘æëêzad©ÜibovﬁnÈ he¶o"

	)

193 
	#MSG_MAX_USERS_IP
 "P¯Ìliπ mnohÿaktivnÌch spojíÌ (%luËz vaπÌ IP"

	)

194 
	#MSG_ACTIVE_DISABLED
 "AktivnÌÑeæim jêvy≤ut"

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "Soub‹ by»˙•ÏπnÏÖ¯íe£n"

	)

196 
	#MSG_NO_DISK_SPACE
 "Disk jê∂n˝, zku°êpozdÏji"

	)

197 
	#MSG_OUT_OF_MEMORY
 "Nedo°©ekÖamÏti"

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "Nïœä· d˘vÏ¯ov™· IPádªß"

	)

199 
	#MSG_NO_ASCII_RESUME
 "PokøËov·nÌÖ¯íosu v ASCIIÑeæimê√nÌ bez≥ËnÈ, soub‹Çejd¯Ìv smaæã,ÖrosÌm"

	)

200 
	#MSG_UNKNOWN_ALTLOG
 "Nezn·m˝ÜogovacÌ f‹m·t"

	)

201 
	#MSG_ACCOUNT_DISABLED
 "Nem˘æëê£Ö¯ihl·sô jakÿ[%s] : ˙Ëë jêdóktivov·n"

	)

202 
	#MSG_SQL_WRONG_PARMS
 "ChybnÈ SQLÖ¨amëry"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "Chybn˝ k⁄figuøËnÌ soub‹ SQL"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "V k⁄figuøËnÌm soub‹u chybÌ SQL sîvî"

	)

205 
	#MSG_SQL_DOWN
 "Vy∑d·Åo, æêSQL sîvî s∑dl"

	)

206 
	#MSG_ILLEGAL_QUOTA
 "Chybn· kvŸa"

	)

207 
	#MSG_QUOTA_FILES
 "%Œu soub‹˘Öouæô˝ch (%d%%Ë-áut‹izov™˝ch: %Œu soub‹˘"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu kûobajt˘Öouæô˝ch (%d%%Ë-áut‹izov™˝ch: %Œu kûobajt˘"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "KvŸ®p¯ekroËía: [%s]Çebudêuloæí"

	)

210 
	#MSG_AUTH_UNKNOWN
 "Nezn·m·áuã¡ifikaËnÌ mëoda"

	)

211 
	#MSG_PDB_BROKEN
 "NebylÿmoænÈÖ¯eËÌ° indexov™˝ soub‹Öuªdb (√bÿbyœ dëekov·« sèr· vîzeË- Vyzkouπejã spu°ôÖuª-pw mkdb"

	)

212 
	#MSG_ALIASES_ALIAS
 "%†jêÆü†¥ÿ%s."

	)

213 
	#MSG_ALIASES_UNKNOWN
 "Nezn·m˝álü†%s."

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "Poπkozí soub‹ sálüsy"

	)

215 
	#MSG_ALIASES_LIST
 "Jsou do°u≤ÈÇa¶edujÌcÌálüsy:"

	)

216 
	#MSG_PERUSER_MAX
 "Nemohuák˚±ov© vÌ¯√æ %luÖ¯ùojíÌ sãjnÈhÿuæiv©ñe"

	)

217 
	#MSG_IPV6_OK
 "N®ã¡ÿ£rvî sêlzêrovnÏæÖ¯ùojov©ÖouæôÌm IPv6ÖrŸokﬁu"

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: E«bÀd %†wôh %s, %d se¸ë bô†cùhî"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: CùhîÅoÿwók"

	)

220 
	#MSG_TLS_NEEDED
 "Sorry, cleartext sessionsáreÇotáccepted onÅhis server.\n" \

221 "PÀa£Ñec⁄√˘ usög SSL/TLS securôy mech™isms."

	)

222 
	#MSG_ILLEGAL_CHARSET
 "IŒegÆ ch¨£t"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: C⁄ãxànŸ found. Exôög."

	)

224 
	#MSG_PROT_OK
 "D©®¥Ÿe˘i⁄Üevñ sëÅÿ\"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "D©®c⁄√˘i⁄ c™nŸ bê›íed wôhÅhi†PROT sëtög."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "PrŸe˘i⁄Üevñ %†nŸ undî°ood. FÆlbackÅÿ\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT mu° bê¥e˚ded byá suc˚ssfu»PBSZ comm™d"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÑëu∫edÇÿu£rPassw‹dáâribuã, check LDAPác˚s†rights."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "InvÆid LDAPAuthMëhod i¿thêc⁄figuøti⁄ fûe. Should bê'böd' o∏'∑ssw‹d'."

	)

	@src/messages_da.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: InvÆid TLSCùhîSuôê•ecifõd '%s'"

	)

2 
	#MSG_TIMEOUT
 "Timeout"

	)

3 
	#MSG_CAPABILITIES
 "K™ ikkêÊndª mulighedî"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "Klõ¡áfbr¯d f‹bödñ£n"

	)

5 
	#MSG_CLIENT_READ_ERR
 "LÊ£„j»‰®klõ¡í"

	)

6 
	#MSG_CANT_OPEN_CNX
 "K™ ikkêÂb√ f‹bödñ£"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "K™ ikkê›ªâêd©®sokkñ"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "Klõ¡í†adªs£Ér"

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "Sy¡ak†„j»òIPádªs£"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "PORT komm™dÿlykkedes"

	)

11 
	#MSG_ONLY_IPV4V6
 "Ku¿IPv4 og IPv6É∏undî°¯âë (1,2)"

	)

12 
	#MSG_ONLY_IPV4
 "Ku¿IPv4É∏undî°¯âë (1)"

	)

13 
	#MSG_TIMEOUT_PARSER
 "Timeouà-Ör¯váàskrivêlidàhuπigîênÊ°êg™g"

	)

14 
	#MSG_LINE_TOO_LONG
 "Löõ f‹Ü™g"

	)

15 
	#MSG_LOG_OVERFLOW
 "Klõ¡íÖr¯vedê© ovîfyldêkomm™dﬁöõ buf„ªn"

	)

16 
	#MSG_GOODBYE
 "F¨vñ, du h¨ u∂ﬂded %Œu og dow∆ﬂded %Œu kbyãs."

	)

17 
	#MSG_DEBUG_COMMAND
 "Komm™do"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 "î döÇuvÊªndêpossôi⁄"

	)

19 
	#MSG_NOT_LOGGED_IN
 "DuÉ∏ikkêloggëÖÂ"

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "Sikkîhedsudvidñ£∏î ikkêim∂emíãªt"

	)

21 
	#MSG_NO_FILE_NAME
 "I¡ë fû«vn"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "I¡ë m≠≥«vn"

	)

23 
	#MSG_NO_RESTART_POINT
 "I¡ë gí°¨t•unkt"

	)

24 
	#MSG_ABOR_SUCCESS
 "Sidí du sî dí√ ABOR,É∏dëÇokÜykkedes"

	)

25 
	#MSG_MISSING_ARG
 "M™gÀndêbesked"

	)

26 
	#MSG_GARBAGE_FOUND
 "SkidàfundëÉ·î vÊrdi"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "VÊrdòf‹ st‹"

	)

28 
	#MSG_IDLE_TIME
 "LedigÅid s©Åû %lu sekundî"

	)

29 
	#MSG_SITE_HELP
 "Dis£ SITE komm™d€∏kídes"

	)

30 
	#MSG_BAD_CHMOD
 "F‹kîãÅûœdñ£r"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "îÉ¿ukídàudvidñ£"

	)

32 
	#MSG_XDBG_OK
 "XDBG komm™dÿlykkedes, debugÇivóÿîÇu %d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "Ukídàkomm™do"

	)

34 
	#MSG_TIMEOUT_NOOP
 "Timeouà(öãàudf¯π i %lu sekundî)"

	)

35 
	#MSG_TIMEOUT_DATA
 "Timeouà(ögíÇy d©®ò%lu sekundî)"

	)

36 
	#MSG_SLEEPING
 "Zzz..."

	)

37 
	#MSG_ALREADY_LOGGED
 "DuÉ∏ÆÀªdêloggëÖÂ"

	)

38 
	#MSG_ANY_PASSWORD
 "EàhvûkësomhÀ° kode‹d vúkî"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "An⁄ym brugîÉ∏loggëÖÂ"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "An⁄ym brugîÉ∏loggëÖÂ vútuñ FTP"

	)

41 
	#MSG_USER_OK
 "Brugî %†OK. Dî skÆ bruge†kode‹d"

	)

42 
	#MSG_CANT_DO_TWICE
 "Dë k™ vòikkêòdí√ f‹bödñ£"

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "Ku¬êikkê›ªâêsikkîán⁄ym FTP f‹bödñ£"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "Dô bÂndbªddêf‹brugÉ∏begrÊn£t"

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 "Jeg be¯ve†öãàkode‹d, kÊªán⁄ymêko"

	)

46 
	#MSG_NOTRUST
 "DesvÊºe, jeg stﬁî ikkêpÂ dig"

	)

47 
	#MSG_WHOAREYOU
 "F‹tÊ»mig vílig° hvem duÉr"

	)

48 
	#MSG_AUTH_FAILED
 "Godkídñ£ mi¶ykkedes"

	)

49 
	#MSG_AUTH_TOOMANY
 "F‹ m™gêmi¶ykkede†godkídñ£†f‹s¯g"

	)

50 
	#MSG_NO_HOMEDIR
 "Hjemmem≠≥ ikkêtûgÊngñig -áfbryddî"

	)

51 
	#MSG_NO_HOMEDIR2
 "%†k™ ikkêföde†"

	)

52 
	#MSG_START_SLASH
 "Sèπî i /"

	)

53 
	#MSG_USER_GROUP_ACCESS
 "Brugî %†h¨ gruµódg™gÅû"

	)

54 
	#MSG_FXP_SUPPORT
 "Dí√ sîvî undî°¯âî FXP ovîf¯r¶î"

	)

55 
	#MSG_RATIO
 "Du mÂÑe•ekãª %u:%u (›/√dËøti€n"

	)

56 
	#MSG_CHROOT_FAILED
 "Ku¬êikkêsÊâêí sikkî chroŸ(ËsÊŒe"

	)

57 
	#MSG_CURRENT_DIR_IS
 "OK. NuvÊªndêm≠≥É∏%s"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "OK. NuvÊªndêbegrÊn£dêm≠≥É∏%s"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†îÜoggëÖÂÇu"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "K™ ikkêÊndª m≠≥¿tû %s"

	)

61 
	#MSG_PATH_TOO_LONG
 "Stòf‹Ü™g"

	)

62 
	#MSG_CANT_PASV
 "Jeg k™ ikkê›ªâêíÖassiv f‹bödñ£ med dí f‹Êldedêkomm™do"

	)

63 
	#MSG_CANT_PASSIVE
 "Ku¬êikkê›ªâêíÖassiv f‹bödñ£"

	)

64 
	#MSG_PORTS_BUSY
 "AŒêª£rvîedêTCPÖ‹ãÉ∏›ègë"

	)

65 
	#MSG_GETSOCKNAME_DATA
 "Ku¬êikkêidítifi˚ª díÜokÆêd©®sokkñ"

	)

66 
	#MSG_GETPEERNAME
 "Ku¬êikkêidítifi˚ª díÜokÆêsokkñ"

	)

67 
	#MSG_INVALID_IP
 "DesvÊºe, ugyldigádªs£"

	)

68 
	#MSG_NO_EPSV
 "Brug vílig°É¿klõ¡ dî undî°¯âî IPv6 med EPSV"

	)

69 
	#MSG_BAD_PORT
 "Jeg vû desvÊºêikkêf‹bödêtûÖ‹ã < 1024"

	)

70 
	#MSG_NO_FXP
 "Jeg vû ikkêÂb√É¿f‹bödñ£Åû %†(ku¿tû %s)"

	)

71 
	#MSG_FXP
 "FXP ovîf¯r£»: fø %†tû %s"

	)

72 
	#MSG_NO_DATA_CONN
 "Ingí d©êf‹bödñ£"

	)

73 
	#MSG_ACCEPT_FAILED
 "F‹bödñ£¿ku¬êikkêblivêgodkídt"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "D©af‹bödñ£ godkídt"

	)

75 
	#MSG_CNX_PORT_FAILED
 "Ku¬êikkêÂb√ f‹ d©af‹bödñ£¿tûÖ‹à%d"

	)

76 
	#MSG_CNX_PORT
 "F‹bödîÅûÖ‹à%d"

	)

77 
	#MSG_ANON_CANT_MKD
 "An⁄ymêbrugîêmÂ ikkê›ªâêm≠≥r"

	)

78 
	#MSG_ANON_CANT_RMD
 "An⁄ymêbrugîêmÂ ikkê¶ëã m≠≥r"

	)

79 
	#MSG_ANON_CANT_RENAME
 "An⁄ymêbrugîêmÂ ikkêÊyâe/omd¯bêfûî"

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "An⁄ymêbrugîêk™ ikkêÊndªÅûœdñ£r"

	)

81 
	#MSG_GLOB_NO_MEMORY
 "L¯bÅ¯∏f‹ hukommñ£ undî gí√mg™gá‡%s"

	)

82 
	#MSG_PROBABLY_DENIED
 "(Dë hî bëyddî sikkîà'Ingíádg™g')"

	)

83 
	#MSG_GLOB_READ_ERROR
 "LÊ£„j»undî gí√mg™gá‡%s"

	)

84 
	#MSG_GLOB_NO_MATCH
 "Ingí %†ò%s"

	)

85 
	#MSG_CHMOD_FAILED
 "Ku¬êikkêÊndªÅûœdñ£∏pÂ %s"

	)

86 
	#MSG_CHMOD_SUCCESS
 "Tûœdñ£∏pÂ %†Êndªt"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "DesvÊºe, jeg ku¬êikkêÊndªÇogíÅûœdñ£r"

	)

88 
	#MSG_ANON_CANT_DELETE
 "An⁄ymêbrugîêk™ ikkê¶ëã fûî"

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "An⁄ymêbrugîêmÂ ikkêovîskivêfûî"

	)

90 
	#MSG_DELE_FAILED
 "Ku¬êikkê¶ëã %s"

	)

91 
	#MSG_DELE_SUCCESS
 "SÀâedê%s%s%s%s"

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "Ingí fû sÀâë"

	)

93 
	#MSG_LOAD_TOO_HIGH
 \

95 "© dow∆ﬂdênÂ∏bña°ngögíÉ∏sÂ h¯j. U∂ﬂd†îá…idÅûœdt"

	)

97 
	#MSG_OPEN_FAILURE
 "K™ ikkêÂb√ %s"

	)

98 
	#MSG_OPEN_FAILURE2
 "K™ ikkêÂb√ dí fû"

	)

99 
	#MSG_STAT_FAILURE
 "K™ ikkêfödêfû°¯ºñ£"

	)

100 
	#MSG_STAT_FAILURE2
 "K™ ikkêcheckêom fûí födes"

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "Gí°¨àoff£à%ŒdÉ∏f‹ st‹ f‹ fû°¯ºñ£ %Œd."

	)

102 
	#MSG_REST_RESET
 "gí°¨àoff£àßàtû 0"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "Jeg k™ ku¿híãálmödñig fûî"

	)

104 
	#MSG_NOT_MODERATED
 \

106 "bÀvë godkídàa‡admöi°øt‹î√Åû dow∆ﬂd."

	)

107 
	#MSG_RATIO_DENIAL
 \

110 "U∂ﬂd vílig°ÇogÀ godã∏og komÅûbagêog sny… síîe."

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "DîÉ∏öãàtûbagê© dow∆ﬂde"

	)

112 
	#MSG_WINNER
 "Compuãª¿î dö ví. StﬁÖÂ compuãªn"

	)

113 
	#MSG_KBYTES_LEFT
 "%.1‡kbyã†© híã"

	)

114 
	#MSG_ABORTED
 "Ovîf¯ªl£áfbrudt"

	)

115 
	#MSG_DATA_WRITE_FAILED
 "Fej»undî skrivnögÅû d©af‹bödñ£n"

	)

116 
	#MSG_DATA_READ_FAILED
 "Fej»undîÜÊ¢ög fø d©af‹bödñ£n"

	)

117 
	#MSG_MMAP_FAILED
 "Ku¬êikkêlÊggêfûí i RAM"

	)

118 
	#MSG_WRITE_FAILED
 "Fej»undî skrivnögÅû fû"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡£kundî (mÂ… hî), %.2‡Mbyã†¥ sekund"

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡£kundî (mÂ… hî), %.2‡Kbyã†¥ sekund"

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡£kundî (mÂ… hî), %.2‡byã†¥ sekund"

	)

122 
	#MSG_SPACE_FREE_M
 "%.1‡Mbyã†‰òdiskÖœds"

	)

123 
	#MSG_SPACE_FREE_K
 "%‡Kbyã†‰òdiskÖœds"

	)

124 
	#MSG_DOWNLOADED
 "dow∆ﬂded"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "REST skÆ brugêíÇumîeiskÖ¨amëî"

	)

126 
	#MSG_REST_ASCII_STRICT
 "Sv¨ m¨k¯∏skÆ vÊª 0 i ASCII mode"

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "Gí°¨ã∏ved %Œd. Mí vòî i ASCII mode"

	)

128 
	#MSG_REST_SUCCESS
 "Gí°¨ã∏ved %Œd"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "F‹budàm≠≥«vn"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "F‹budàfû«vn: %s"

	)

131 
	#MSG_MKD_FAILURE
 "K™ ikkê›ªâêm≠≥"

	)

132 
	#MSG_MKD_SUCCESS
 "M≠≥¿bÀv o¥ëãt"

	)

133 
	#MSG_RMD_FAILURE
 "K™ ikkêfjî√ m≠≥n"

	)

134 
	#MSG_RMD_SUCCESS
 "M≠≥¿bÀv fjî√t"

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "K™ ikkêhíãÅids°em≥l"

	)

136 
	#MSG_MODE_ERROR
 "Ku¿ASCII og böÊ∏ovîf¯r£»î undî°¯âë"

	)

137 
	#MSG_CREATE_FAILURE
 "Ku¬êikkê›ªâêfû"

	)

138 
	#MSG_ABRT_ONLY
 "ABRTÉ∏díÉ√°êlovligêkomm™dÿundî u∂ﬂd"

	)

139 
	#MSG_UPLOAD_PARTIAL
 "Dñvi° u∂ﬂded"

	)

140 
	#MSG_REMOVED
 "fjî√t"

	)

141 
	#MSG_UPLOADED
 "u∂ﬂded"

	)

142 
	#MSG_GMTIME_FAILURE
 "Ku¬êikkêhíã díÜokÆêtid"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "Ku¿8 bôÉ∏undî°¯âë, vòî ikkê10 Â∏tûbage"

	)

144 
	#MSG_TYPE_UNKNOWN
 "UkídàTYPE"

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPEÉ∏nu"

	)

146 
	#MSG_STRU_FAILURE
 "Ku¿F(ûËî undî°¯âë"

	)

147 
	#MSG_MODE_FAILURE
 "Brug vílig° S—ªamËmode"

	)

148 
	#MSG_RENAME_ABORT
 "Afbryddî f‹igêomd¯b opgave"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "RNFR godkídà- fû födes, kœ∏tû de°ö©i⁄"

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "Dí fû föde†ikke"

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "OMDÿB mi¶ykkede†- de°ö©i⁄†fû föde†ÆÀªde"

	)

152 
	#MSG_RENAME_NORNFR
 "SkÆ brugêRNFR f¯∏RNTO"

	)

153 
	#MSG_RENAME_FAILURE
 "Omd¯b/Êyà„jl"

	)

154 
	#MSG_RENAME_SUCCESS
 "Fû bÀv omd¯bàñÀ∏Êyâë"

	)

155 
	#MSG_NO_SUPERSERVER
 "K¯∏vílig°Öuª-·pd føÉ¿su≥r-£rvî (f.Éks.Å˝£rvî)"

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "Ku¬êikkêfödê'·p' k⁄t€n"

	)

157 
	#MSG_CONF_ERR
 "K⁄figuøti⁄†„jl"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "VútuñÀ brugî†fû«v¿m™gÀr"

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "Ulovlig vÊrdòf‹ÅhrŸée"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "Ulovlig gid f‹ chroŸ"

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "Ulovlig grÊn£ f‹ brugî"

	)

162 
	#MSG_ILLEGAL_FACILITY
 "UkídàÁcûôë†«vn"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "F‹kîàLDAP k⁄figuøti⁄†fû"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "UlovligÜÊ£ grÊn£"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "F‹kîàp‹àomrÂde"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "F‹kîã 'ls' grÊn£r"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "UlovligÅvungí IPÅûÖassivêf‹bödñ£r"

	)

168 
	#MSG_ILLEGAL_RATIO
 "Ulovlig u∂ﬂd/dow∆ﬂd f‹hﬁd"

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "Ulovlig uid grÊn£"

	)

170 
	#MSG_ILLEGAL_OPTION
 "Ukídàrun-timêvÆg"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "M™gÀndêLDAPBa£DN i LDAP k⁄figuøti⁄†fûí"

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "F‹kîã LDAPÖ¨amëª"

	)

173 
	#MSG_NEW_CONNECTION
 "Ny f‹bödñ£ fø %s"

	)

174 
	#MSG_WELCOME_TO
 "VñkommíÅû"

	)

175 
	#MSG_MAX_USERS
 "%lu brugîê(dë maksimÆeËîáŒîedêloggëÖÂ, desvÊºe"

	)

176 
	#MSG_NB_USERS
 "DuÉ∏brugîÇ∏%uá‡%uÅûœdã"

	)

177 
	#MSG_WELCOME_TIME
 "LokÆÅidÉ∏nu %02d:%02d. SîvîÖ‹t: %u."

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "Ku¿™⁄ym FTPÉ∏tûœdàhî"

	)

179 
	#MSG_RATIOS_EVERYONE
 "FORHOLD ER SL≈ET TIL FOR ALLE :"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "ANONUME BRUGERE F≈R ET UL/DL FORHOLD :"

	)

181 
	#MSG_RATIOS_RULE
 "f‹áàdow∆ﬂdê%u Mb, skÆ du u∂ﬂdê%u Mb godãr."

	)

182 
	#MSG_INFO_IDLE_M
 "Du blivî kobÀàa‡e·î %lu möuâî†öaktivôë."

	)

183 
	#MSG_INFO_IDLE_S
 "Du blivî kobÀàa‡e·î %lu sekundî†öaktivôë."

	)

184 
	#MSG_CANT_READ_FILE
 "Ku¬êikkêlÊ£ [%s]"

	)

185 
	#MSG_LS_TRUNCATED
 "D©®a‰undëÅû %u sammíÁld"

	)

186 
	#MSG_LS_SUCCESS
 "%u sammíÁldÅŸÆt"

	)

187 
	#MSG_LOGOUT
 "Logout."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "Godkídñ£ mi¶ykkede†f‹ [%s]"

	)

189 
	#MSG_ILLEGAL_UMASK
 "F‹kîàumask"

	)

190 
	#MSG_STANDALONE_FAILED
 "Ku¬êikkê°¨ãÅ™dÆ⁄ê£rvî"

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "DëãÉ∏ëÖriv© sy°em - Ingíán⁄ymêlogös"

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "EàhvûkësomhÀ° kode‹d vúkî"

	)

193 
	#MSG_MAX_USERS_IP
 "F‹ m™gêf‹bödñ£r(%luË‰®dí√ IP"

	)

194 
	#MSG_ACTIVE_DISABLED
 "Aktiv modêî slÂë fø"

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "Fûovîf¯r£»lykkedes"

	)

196 
	#MSG_NO_DISK_SPACE
 "DiskíÉ∏fuld - u∂ﬂd vílig° síîe"

	)

197 
	#MSG_OUT_OF_MEMORY
 "E∏l¯bëÅ¯∏f‹ hukommñ£"

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "UlovligÖÂlidñig IPádªs£"

	)

199 
	#MSG_NO_ASCII_RESUME
 "ASCII gí›ègnögÉ∏usikkî, sÀàvílig° fûí f¯r°"

	)

200 
	#MSG_UNKNOWN_ALTLOG
 "Ukídàlog f‹m©"

	)

201 
	#MSG_ACCOUNT_DISABLED
 "Du k™ ikkêloggêpÂ som [%s]: k⁄tÿî dóktivîë"

	)

202 
	#MSG_SQL_WRONG_PARMS
 "F‹kîã SQL ind°ûlögî"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "F‹kîàSQL k⁄figuøti⁄†fû"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "Sîvî i SQL k⁄figuøti⁄sfû m™gÀr"

	)

205 
	#MSG_SQL_DOWN
 "DëÜaddîÅûáàSQL sîvîíÉ∏√de"

	)

206 
	#MSG_ILLEGAL_QUOTA
 "F‹kîàquŸa"

	)

207 
	#MSG_QUOTA_FILES
 "%Œu fûî blivî brugà(%d%%Ë-áut‹i£ªt: %Œu fûî"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu KbyãÉ∏brugà(%d%%Ë-áut‹i£ªt: %Œu Kb"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "QuŸ®grÊn£ ovîskªdë : [%s] blivî ikkêgemt"

	)

210 
	#MSG_AUTH_UNKNOWN
 "Ukídàgodkídñ£†mëode"

	)

211 
	#MSG_PDB_BROKEN
 "Ku¬êikkêlÊ£ dí indexîedêpuªdb fû (ñÀ∏gammñàf‹m© fundëË- Pr¯vÖuª-pw mkdb"

	)

212 
	#MSG_ALIASES_ALIAS
 "%†îÉàÆü†f‹ %s."

	)

213 
	#MSG_ALIASES_UNKNOWN
 "UkídàÆü†%s."

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "ÿdñagàÆü†fû"

	)

215 
	#MSG_ALIASES_LIST
 "Des†Æü£∏îÅûgÊngñigê:"

	)

216 
	#MSG_PERUSER_MAX
 "Jeg k™ ikkêÂb√ mîêí %lu f‹bödñ£∏f‹ dí sammêbrugî"

	)

217 
	#MSG_IPV6_OK
 "IPv6 f‹bödñ£∏î ogsÂ vñkom√ÖÂ dí√ sîvî"

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: E«bÀd %†wôh %s, %d se¸ë bô†cùhî"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: CùhîÅoÿwók"

	)

220 
	#MSG_TLS_NEEDED
 "Sorry, cleartext sessionsáreÇotáccepted onÅhis server.\n" \

221 "PÀa£Ñec⁄√˘ usög SSL/TLS securôy mech™isms."

	)

222 
	#MSG_ILLEGAL_CHARSET
 "IŒegÆ ch¨£t"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: C⁄ãxànŸ found. Exôög."

	)

224 
	#MSG_PROT_OK
 "D©®¥Ÿe˘i⁄Üevñ sëÅÿ\"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "D©®c⁄√˘i⁄ c™nŸ bê›íed wôhÅhi†PROT sëtög."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "PrŸe˘i⁄Üevñ %†nŸ undî°ood. FÆlbackÅÿ\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT mu° bê¥e˚ded byá suc˚ssfu»PBSZ comm™d"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÑëu∫edÇÿu£rPassw‹dáâribuã, check LDAPác˚s†rights."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "InvÆid LDAPAuthMëhod i¿thêc⁄figuøti⁄ fûe. Should bê'böd' o∏'∑ssw‹d'."

	)

	@src/messages_de.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: InvÆid TLSCùhîSuôê•ecifõd '%s'"

	)

2 
	#MSG_TIMEOUT
 "Zeô¸bîschªôung"

	)

3 
	#MSG_CAPABILITIES
 "K⁄¡êBîechtigungí (CAPABILITESËnichàwech£ ."

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "Dõ Gegí°ñÀ h© dõ Vîbödung geschlos£n."

	)

5 
	#MSG_CLIENT_READ_ERR
 "Le£„hÀ∏v⁄ Gegí°ñÀ."

	)

6 
	#MSG_CANT_OPEN_CNX
 "K™¿dõ VîbödungÇichàîˆf‚í."

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "K™¿dõ D©ívîbödungÇichàaufbauí."

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "Addªs£ dî Gegí°ñÀ: "

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "Sy¡ax„hÀ∏ö IP-Addªs£."

	)

10 
	#MSG_PORT_SUCCESSFUL
 "PORT-Komm™dÿîfﬁgªich."

	)

11 
	#MSG_ONLY_IPV4V6
 "E†wîdíÇu∏IPv4 und IPv6 u¡î°¸tzà(1,2)."

	)

12 
	#MSG_ONLY_IPV4
 "E†wúdÇu∏IPv4 u¡î°¸tzà(1)."

	)

13 
	#MSG_TIMEOUT_PARSER
 "Zeô¸bîschªôung - Vîsuchí Sõ, da†n‰ch°êmÆÉtwa†sch√Œî zu schªibí."

	)

14 
	#MSG_LINE_TOO_LONG
 "Dõ Zeûêi° zuÜ™g."

	)

15 
	#MSG_LOG_OVERFLOW
 "Dõ Gegí°ñÀ h© vîsucht, dí Komm™dozeûíbuf„∏zu ¸bîÊuãn."

	)

16 
	#MSG_GOODBYE
 "Tsch¸ﬂ. Tøns„r: u∂ﬂd %Œu und dow∆ﬂd %Œu kbyãs."

	)

17 
	#MSG_DEBUG_COMMAND
 "Be„hl"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 "i° da†aktuñÀ Vîzeichnis."

	)

19 
	#MSG_NOT_LOGGED_IN
 "Sõ södÇichà™gemñdë."

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "Sichîheô£rweôîungÇichàim∂emítõπ."

	)

21 
	#MSG_NO_FILE_NAME
 "Keö D©eöame."

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "Keö Vîzeichni¢ame."

	)

23 
	#MSG_NO_RESTART_POINT
 "KeöêNeu°¨t-Posôi⁄."

	)

24 
	#MSG_ABOR_SUCCESS
 "Wí¿Sõ da†hõ∏À£n, wurdêof„nb¨Érfﬁgªichábgebrochí."

	)

25 
	#MSG_MISSING_ARG
 "FehÀnde†Argumít."

	)

26 
	#MSG_GARBAGE_FOUND
 "M¸ŒÇach dem Wîàgefundí."

	)

27 
	#MSG_VALUE_TOO_LARGE
 "Wîài° zu groﬂ."

	)

28 
	#MSG_IDLE_TIME
 "Lìæaufzeôáu‡%lu Sekundí ge£tzt."

	)

29 
	#MSG_SITE_HELP
 "Dõ fﬁgídí SITE-Be„hÀ wîdí u¡î°¸tzt"

	)

30 
	#MSG_BAD_CHMOD
 "Ung¸…igêRechã."

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "i°Éöêunbek™¡êErweôîung."

	)

32 
	#MSG_XDBG_OK
 "XDBG-Be„h»îfﬁgªich, debug-Àvñ i° jëzà%d."

	)

33 
	#MSG_UNKNOWN_COMMAND
 "Unbek™¡î Be„hl."

	)

34 
	#MSG_TIMEOUT_NOOP
 "Zeô¸bîschªôung (keöêAkti⁄ seô %lu Sekundí)."

	)

35 
	#MSG_TIMEOUT_DATA
 "Zeô¸bîschªôung (keöê√uí D©í seô %lu Sekundí)."

	)

36 
	#MSG_SLEEPING
 "Sch«rch..."

	)

37 
	#MSG_ALREADY_LOGGED
 "Sõ söd bîeô†™gemñdë."

	)

38 
	#MSG_ANY_PASSWORD
 "Jede†Paﬂw‹àwúdákzïtõπ."

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "An⁄ymî Bíutzîángemñdë."

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "An⁄ymî Bíutzî im vútuñÀ¿FTPÉögñoggt."

	)

41 
	#MSG_USER_OK
 "Bíutzî %†OK. Paﬂw‹àîf‹dîlich."

	)

42 
	#MSG_CANT_DO_TWICE
 "Wú kˆ¬í da†nichàö dîáktuñÀ¿SôzungÅun."

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "Sichîe†™⁄yme†FTP k⁄¡ênichàbîeôge°ñ… wîdí."

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "Ihª B™dbªôíbíutzung i°Üimôõπ."

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 "WozuÉö Paﬂw‹t, kÀöîán⁄ymî Feiglög?"

	)

46 
	#MSG_NOTRUST
 "K™¿ich Ih√¿vîåauí?"

	)

47 
	#MSG_WHOAREYOU
 "Wî söd Sõ ?"

	)

48 
	#MSG_AUTH_FAILED
 "Authítifizõrung fehlgeschœgí, s‹ry."

	)

49 
	#MSG_AUTH_TOOMANY
 "Zu võÀ Authítifizõrungs„hÀr."

	)

50 
	#MSG_NO_HOMEDIR
 "Home-Vîzeichni†nichàîªichb¨ - Abbruch."

	)

51 
	#MSG_NO_HOMEDIR2
 "%†exi°õπÇichàodî i°Çichàîªichb¨."

	)

52 
	#MSG_START_SLASH
 "Sèπêö /."

	)

53 
	#MSG_USER_GROUP_ACCESS
 "Bíutzî %†h© Gruµízug™g zu"

	)

54 
	#MSG_FXP_SUPPORT
 "Dõ£∏Sîvî u¡î°¸tzàFXP."

	)

55 
	#MSG_RATIO
 "Sõ m¸s£¿eö %u:%u (UL/DLË- Vîh‰…ni†akzïtõªn."

	)

56 
	#MSG_CHROOT_FAILED
 "K⁄¡êkeö sichîe†chroŸ()-Gef‰ngni†eörichãn."

	)

57 
	#MSG_CURRENT_DIR_IS
 "OK. AktuñÀ†Vîzeichni†i° %s."

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "OK. AktuñÀs, beschr‰nkã†Vîzeichni†i° %s."

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†i° jëzàeögñoggt."

	)

60 
	#MSG_CANT_CHANGE_DIR
 "K™¿nichàö†Vîzeichni†%†wech£ "

	)

61 
	#MSG_PATH_TOO_LONG
 "PÁd i° zuÜ™g."

	)

62 
	#MSG_CANT_PASV
 "PASV i°Çichàgìig√àf¸∏IPv6. Nehmí Sõ EPSV."

	)

63 
	#MSG_CANT_PASSIVE
 "K™¿keöê∑ssivêVîbödung hî°ñÀn."

	)

64 
	#MSG_PORTS_BUSY
 "AŒêª£rvõπí TCP-p‹t†söd bñegt."

	)

65 
	#MSG_GETSOCKNAME_DATA
 "K™¿díÜokÆí D©í-SockëÇichàidítifizõªn."

	)

66 
	#MSG_GETPEERNAME
 "K™¿díÜokÆí SockëÇichàidítifizõªn."

	)

67 
	#MSG_INVALID_IP
 "Ung¸…igêAdªs£."

	)

68 
	#MSG_NO_EPSV
 "Bôã bíutzí SõÉöí IPv6-k⁄f‹mí Klõ¡í mô EPSV-U¡î°¸tzung."

	)

69 
	#MSG_BAD_PORT
 "Ich vîbödênichàzuÖ‹t†kÀöîál†1024."

	)

70 
	#MSG_NO_FXP
 "Ich wîdêkeöêVîbödung mô %†hî°ñÀ¿“u∏zu %s)."

	)

71 
	#MSG_FXP
 "FXP-Tøns„r: v⁄ %†tÿ%s."

	)

72 
	#MSG_NO_DATA_CONN
 "KeöêD©ívîbödung."

	)

73 
	#MSG_ACCEPT_FAILED
 "Dõ Vîbödung wúdÇichàakzïtõπ."

	)

74 
	#MSG_ACCEPT_SUCCESS
 "Vîbödungákzïtõπ."

	)

75 
	#MSG_CNX_PORT_FAILED
 "K™¿keöêD©ívîbödung zu P‹à%dáufbauí."

	)

76 
	#MSG_CNX_PORT
 "Vîbödêmô P‹à%d."

	)

77 
	#MSG_ANON_CANT_MKD
 "S‹ry,án⁄ymêBíutzî d¸r„¿keöêVîzeichnis£á∆egí."

	)

78 
	#MSG_ANON_CANT_RMD
 "S‹ry,án⁄ymêBíutzî d¸r„¿keöêVîzeichnis£Üˆschí."

	)

79 
	#MSG_ANON_CANT_RENAME
 "An⁄ymêBíutzî d¸r„¿keöêD©eõ¿vîschõbí odî umbíí√n."

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "An⁄ymêBíutzî d¸r„¿dõ RechãÇichàvî‰ndîí."

	)

81 
	#MSG_GLOB_NO_MEMORY
 "Nichàgíug S≥ichî beim Vîvﬁl°‰ndigí v⁄ %s."

	)

82 
	#MSG_PROBABLY_DENIED
 "(Da†bedeuãàevítuñ»\"Eæaubni†vîweigît\")."

	)

83 
	#MSG_GLOB_READ_ERROR
 "Le£„hÀ∏beim Vîvﬁl°‰ndigí v⁄ %s."

	)

84 
	#MSG_GLOB_NO_MATCH
 "Keö Erfﬁg f¸∏%†ö %s."

	)

85 
	#MSG_CHMOD_FAILED
 "K⁄¡êdõ Zugriff§echã v⁄ %†nichàvî‰ndîn."

	)

86 
	#MSG_CHMOD_SUCCESS
 "Zugriff§echã v⁄ %†ge‰ndît."

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "S‹ry, ich k™¿¸bîhau± keöêRechã ‰ndîn."

	)

88 
	#MSG_ANON_CANT_DELETE
 "An⁄ymêBíutzî d¸r„¿keöêD©eõ¿lˆschí."

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "An⁄ymêBíutzî d¸r„¿keöêexi°õªndí D©eõ¿¸bîschªibí."

	)

90 
	#MSG_DELE_FAILED
 "K⁄¡ê%†nichàlˆschí."

	)

91 
	#MSG_DELE_SUCCESS
 "%s%s%s%†gñˆscht."

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "KeöêD©eògñˆscht."

	)

93 
	#MSG_LOAD_TOO_HIGH
 \

96 "immîÉæaubt."

	)

97 
	#MSG_OPEN_FAILURE
 "K™¿%†nichàˆf‚í"

	)

98 
	#MSG_OPEN_FAILURE2
 "K™¿dõ£ D©eònichàˆf‚í."

	)

99 
	#MSG_STAT_FAILURE
 "K™¿D©eigrˆﬂênichàîmôã ."

	)

100 
	#MSG_STAT_FAILURE2
 "K™¿dõ Exi°íz dî D©eònichà¸bî¥¸„n."

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "Neu°¨t-Posôi⁄ %Œd i° zu groﬂ f¸∏D©eigrˆﬂê%Œd."

	)

102 
	#MSG_REST_RESET
 "Neu°¨t-Posôi⁄áu‡0 zur¸ckge£tzt."

	)

103 
	#MSG_NOT_REGULAR_FILE
 "Ich k™¿nu∏ªgul‰ª D©eõ¿empÁngí."

	)

104 
	#MSG_NOT_MODERATED
 \

106 "nichàdurch dõ Admöi°øt‹í zum Dow∆ﬂd fªigegebí."

	)

107 
	#MSG_RATIO_DENIAL
 \

110 "BôãÜadí Sõ meh∏hoch undÖrobõª¿SõÉ†•‰ã∏nochÉömÆ."

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "Nicht†meh∏¸brig zum Hîu¡îœdí."

	)

112 
	#MSG_WINNER
 "Dî Compuã∏i° Ih∏Fªund. Tøuí Sõ ihªm Compuãr."

	)

113 
	#MSG_KBYTES_LEFT
 "noch %.1‡kbyãs."

	)

114 
	#MSG_ABORTED
 "Tøns„∏abgebrochí."

	)

115 
	#MSG_DATA_WRITE_FAILED
 "FehÀ∏w‰hªnd Schªibv‹g™g zu∏D©ívîbödung."

	)

116 
	#MSG_DATA_READ_FAILED
 "FehÀ∏w‰hªnd Le£v‹g™g v⁄ dî D©ívîbödung."

	)

117 
	#MSG_MMAP_FAILED
 "K™¿dõ D©eònichàim S≥ichî hÆãn."

	)

118 
	#MSG_WRITE_FAILED
 "FehÀ∏beim Ab•eichî¿Æ†D©ei."

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡†(hõ∏gemes£n), %.2‡Mbyã†¥ÿSekunde."

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡†(hõ∏gemes£n), %.2‡Kbyã†¥ÿSekunde."

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡†(hõ∏gemes£n), %.2‡byã†¥ÿSekunde."

	)

122 
	#MSG_SPACE_FREE_M
 "%.1‡Mbyã†‰eõ∏Fe°∂©ã≈œtz."

	)

123 
	#MSG_SPACE_FREE_K
 "%‡Kbyã†‰eõ∏Fe°∂©ã≈œtz."

	)

124 
	#MSG_DOWNLOADED
 "hîu¡îgñadí."

	)

125 
	#MSG_REST_NOT_NUMERIC
 "REST bíˆtigàeöíÇumîischí P¨amãr."

	)

126 
	#MSG_REST_ASCII_STRICT
 "A¡w‹t-M¨kõrung muﬂ im ASCII-Modu†0 seö."

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "Neu°¨àbeò%Œd. Abî im ASCII-Modus."

	)

128 
	#MSG_REST_SUCCESS
 "Neu°¨àbeò%Œd."

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "Unzul‰ssigî Vîzeichni¢ame."

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "VîbŸíî D©eöame: %s."

	)

131 
	#MSG_MKD_FAILURE
 "K™¿Vîzeichni†nichàî°ñÀn."

	)

132 
	#MSG_MKD_SUCCESS
 "Da†Vîzeichni†wurdêîfﬁgªichángñegt."

	)

133 
	#MSG_RMD_FAILURE
 "K™¿Vîzeichni†nichàít„∫í."

	)

134 
	#MSG_RMD_SUCCESS
 "Da†Vîzeichni†wurdêîfﬁgªichÉ¡„∫t."

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "K™¿keöí Zeô°em≥»îzeugí."

	)

136 
	#MSG_MODE_ERROR
 "Nu∏ASCII- und Bö‰rmodu†wîdí u¡î°¸tzt."

	)

137 
	#MSG_CREATE_FAILURE
 "K™¿dõ D©eònichàî°ñÀn."

	)

138 
	#MSG_ABRT_ONLY
 "ABRT i° da†eözig g¸…igêKomm™dÿw‰hªnd de†Hochœdís."

	)

139 
	#MSG_UPLOAD_PARTIAL
 "ãûwei£ hochgñadí."

	)

140 
	#MSG_REMOVED
 "ít„∫t."

	)

141 
	#MSG_UPLOADED
 "hochgñadí."

	)

142 
	#MSG_GMTIME_FAILURE
 "K⁄¡êlokÆêZeôÇichàîmôã ."

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "E†wîdíÇu∏8-bô Byã†u¡î°¸tzt."

	)

144 
	#MSG_TYPE_UNKNOWN
 "Unbek™¡î TYPE."

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPE i° jëzt"

	)

146 
	#MSG_STRU_FAILURE
 "E†wúdÇu∏F(ûeËu¡î°¸tzt."

	)

147 
	#MSG_MODE_FAILURE
 "Bôã dí S—ªam)-Modu†bíutzí."

	)

148 
	#MSG_RENAME_ABORT
 "Bªchêv‹hîige†Umbíí√¿ab."

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "RNFRákzïtõπ - D©eòexi°õπ, bîeô f¸∏√uí Namí."

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "S‹ry, dõ D©eòexi°õπÇicht."

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "Umbíí√¿„hlgeschœgí - Zõld©eòexi°õπ bîeôs."

	)

152 
	#MSG_RENAME_NORNFR
 "KeöêQuñld©eòzum Umbíí√¿™gegebí (BøuchêRNFR v‹ RNTO)."

	)

153 
	#MSG_RENAME_FAILURE
 "FehÀ∏beim Umbíí√n/Vîschõbí."

	)

154 
	#MSG_RENAME_SUCCESS
 "D©eòîfﬁgªich umbí™¡ odî vîschobí."

	)

155 
	#MSG_NO_SUPERSERVER
 "BôãÜas£¿SõÖuª-·pd v⁄Éöem su≥r-£rvî (t˝£rvî, xöëd, ...Ë°¨ãn."

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "K™¿da†'·p' - Nutzîk⁄tÿnichàfödí."

	)

157 
	#MSG_CONF_ERR
 "K⁄figuøti⁄s„hÀr."

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "D©eòf¸∏vútuñÀ Bíutzî feh…."

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "Ung¸…igî Wîàf¸∏dõ B™dbªôíbegªnzung."

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "Ung¸…igêGruµíid f¸∏chroŸ."

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "Ung¸…igêBíutzîgªnze."

	)

162 
	#MSG_ILLEGAL_FACILITY
 "Namêdî facûôy unbek™¡."

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "Ung¸…igêLDAP-K⁄figuøti⁄sd©ei."

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "Ung¸…igêLa°gªnze."

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "Ung¸…igî P‹tbîeich."

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "Ung¸…igêBeschr‰nkungí f¸∏'ls'."

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "DõÉrzwungíêIP-Adªs£ f¸∏∑ssivêVîbödungí i° ung¸…ig."

	)

168 
	#MSG_ILLEGAL_RATIO
 "Ung¸…igêU∂ﬂd/Dow∆ﬂd - Beschr‰nkung."

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "Ung¸…igêuid-Beschr‰nkung."

	)

170 
	#MSG_ILLEGAL_OPTION
 "Unbek™¡êLaufzeô›ti⁄."

	)

171 
	#MSG_LDAP_MISSING_BASE
 "FehÀnde†LDAP-Ba£DN i¿dî LDAP-K⁄figuøti⁄sd©ei."

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "FÆschêLDAP-P¨amëî."

	)

173 
	#MSG_NEW_CONNECTION
 "NeuêVîbödung v⁄ %s."

	)

174 
	#MSG_WELCOME_TO
 "Hîzlich wûlkommíáuf"

	)

175 
	#MSG_MAX_USERS
 "%lu Bíutzî (maximÆËsöd sch⁄Éögñoggt, s‹ry."

	)

176 
	#MSG_NB_USERS
 "Sõ söd Bíutzî %u v⁄ %uÉæaubãn."

	)

177 
	#MSG_WELCOME_TIME
 "LokÆêZeô: %02d:%02d. Sîvîp‹t: %u."

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "Nu∏™⁄yme†FTPÉæaubt."

	)

179 
	#MSG_RATIOS_EVERYONE
 "RATIOS SIND F‹R JEDEN AKTIVIERT:"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "ANONYME NUTZER UNTERLIEGEN EINER UPLOAD/DOWNLOAD-QUOTE:"

	)

181 
	#MSG_RATIOS_RULE
 "um %u Mb hîu¡îzuœdí, m¸s£¿%u Mb hochgñadí wîdí."

	)

182 
	#MSG_INFO_IDLE_M
 "Sõ wîdíÇach %lu Möuã¿I«ktivô‰àgëª¬t."

	)

183 
	#MSG_INFO_IDLE_S
 "Sõ wîdíÇach %lu Sekundí I«ktivô‰àgëª¬t."

	)

184 
	#MSG_CANT_READ_FILE
 "k⁄¡ê[%s]ÇichàÀ£n."

	)

185 
	#MSG_LS_TRUNCATED
 "Anzeigêau‡%u Eöå‰gêbeschr‰nkt."

	)

186 
	#MSG_LS_SUCCESS
 "%u Eöå‰gêgeßmt."

	)

187 
	#MSG_LOGOUT
 "Logout."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "Authítifizõrung fehlgeschœgí f¸∏Bíutzî [%s]."

	)

189 
	#MSG_ILLEGAL_UMASK
 "Ung¸…igêumask."

	)

190 
	#MSG_STANDALONE_FAILED
 "K™¿keöíáuèrkí Sîvî sèπí"

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "Dõ†i°ÉöÖriv©e†Sy°em - Keöê™⁄ymêAnmñdung mˆglich."

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "jede†Paﬂw‹àfunkti⁄õπ."

	)

193 
	#MSG_MAX_USERS_IP
 "ZuvõÀ Vîbödungí (%luËv⁄ dõ£∏IP-Adªs£."

	)

194 
	#MSG_ACTIVE_DISABLED
 "Aktive†FTP i°áu‡dõ£m Sîvî vîbŸí."

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "D©eòîfﬁgªich ¸bîåagí."

	)

196 
	#MSG_NO_DISK_SPACE
 "Fe°∂©ã vﬁ»- bôã sp‰ã∏hochœdí."

	)

197 
	#MSG_OUT_OF_MEMORY
 "Nichàgíug Arbeôs•eichî."

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "Ung¸…igêvîåauã IP-Adªs£."

	)

199 
	#MSG_NO_ASCII_RESUME
 "Wõdîau‚ahmêim ASCII-Modu†i° unsichî, bôãÜˆschí Sõ dõ D©eòzuî°."

	)

200 
	#MSG_UNKNOWN_ALTLOG
 "Unbek™¡e†F‹m© f¸∏Logd©ei."

	)

201 
	#MSG_ACCOUNT_DISABLED
 "Eöloggíál†[%s]Çichàmˆglich: K⁄tÿdóktivõπ."

	)

202 
	#MSG_SQL_WRONG_PARMS
 "FÆschêSQL-P¨amëî."

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "Ung¸…igêSQL-K⁄figuøti⁄sd©ei."

	)

204 
	#MSG_SQL_MISSING_SERVER
 "Keö SQL-Sîvî i¿K⁄figuøti⁄sd©eò™gegebí."

	)

205 
	#MSG_SQL_DOWN
 "Dî SQL-Sîvî i°Çichàîªichb¨."

	)

206 
	#MSG_ILLEGAL_QUOTA
 "QuŸ®ung¸…ig."

	)

207 
	#MSG_QUOTA_FILES
 "%Œu D©eõ¿bíutzà(%d%%Ë-Éæaubt: %Œu D©eõn."

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu Kûobyã bíutzà(%d%%Ë-Éæaubt: %Œu Kb."

	)

209 
	#MSG_QUOTA_EXCEEDED
 "QuŸ®¸bîschrôãn: [%s] wúdÇichàge•eichît."

	)

210 
	#MSG_AUTH_UNKNOWN
 "Unbek™¡êAuthítifizõrungsmëhode."

	)

211 
	#MSG_PDB_BROKEN
 "K⁄¡êödizõπêpuªdb-D©eònichàÀ£¿(odîá…e†F‹m© gefundíË- Vîsuchêpuª-pw mkdb"

	)

212 
	#MSG_ALIASES_ALIAS
 "%†i°Éö Alü†f¸∏%s."

	)

213 
	#MSG_ALIASES_UNKNOWN
 "Unbek™¡î Alü†%s."

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "Besch‰digã Alüsd©ei"

	)

215 
	#MSG_ALIASES_LIST
 "FﬁgídêAlü£ sãhí zu∏Vîf¸gung:"

	)

216 
	#MSG_PERUSER_MAX
 "Meh∏Æ†%lu Vîbödungí vom sñbí Bíutzî södÇichàîœubt"

	)

217 
	#MSG_IPV6_OK
 "Au‡dõ£m Sîvî södáuch IPv6-Vîbödungí wûlkommí"

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: %†Vîschl¸s£lung mô %s, %d bô Schl¸s£Œ‰nge"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: Vîschl¸s£lung zu schwach"

	)

220 
	#MSG_TLS_NEEDED
 "Sorry, unverschl¸sselte Sitzungen werdenáuf diesem ServerÇichtákzeptiert.\n" \

221 "Bôã vîbödí Sõ sich môãl†SSL/TLS-Vîschl¸s£lung"

	)

222 
	#MSG_ILLEGAL_CHARSET
 "IŒegÆ ch¨£t"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: C⁄ãxànŸ found. Exôög."

	)

224 
	#MSG_PROT_OK
 "D©®¥Ÿe˘i⁄Üevñ sëÅÿ\"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "D©®c⁄√˘i⁄ c™nŸ bê›íed wôhÅhi†PROT sëtög."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "PrŸe˘i⁄Üevñ %†nŸ undî°ood. FÆlbackÅÿ\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT mu° bê¥e˚ded byá suc˚ssfu»PBSZ comm™d"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÑëu∫edÇÿu£rPassw‹dáâribuã, check LDAPác˚s†rights."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "InvÆid LDAPAuthMëhod i¿thêc⁄figuøti⁄ fûe. Should bê'böd' o∏'∑ssw‹d'."

	)

	@src/messages_en.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: InvÆid TLSCùhîSuôê•ecifõd '%s'"

	)

2 
	#MSG_TIMEOUT
 "Timeout"

	)

3 
	#MSG_CAPABILITIES
 "U«bÀÅÿswôch c≠abûôõs"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "Clõ¡ clo£dÅhêc⁄√˘i⁄"

	)

5 
	#MSG_CLIENT_READ_ERR
 "RódÉº‹ fromÅhê˛õ¡"

	)

6 
	#MSG_CANT_OPEN_CNX
 "C™'à›í c⁄√˘i⁄"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "C™'à¸óãÅhêd©®sockë"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "Thê˛õ¡áddªs†is"

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "Sy¡axÉº‹ i¿IPáddªss"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "PORT comm™d suc˚ssful"

	)

11 
	#MSG_ONLY_IPV4V6
 "O∆y IPv4ánd IPv6áª suµ‹ãd (1,2)"

	)

12 
	#MSG_ONLY_IPV4
 "O∆y IPv4 i†suµ‹ãd (1)"

	)

13 
	#MSG_TIMEOUT_PARSER
 "Timeouà-ÅryÅypögáÜôéêÁ°îÇexàtime"

	)

14 
	#MSG_LINE_TOO_LONG
 "Löêtoÿl⁄g"

	)

15 
	#MSG_LOG_OVERFLOW
 "Thê˛õ¡ÅrõdÅÿovîÊowÅhêcomm™dÜöêbuf„r"

	)

16 
	#MSG_GOODBYE
 "Goodbye. You u∂ﬂded %Œuánd dow∆ﬂded %Œu kbyãs."

	)

17 
	#MSG_DEBUG_COMMAND
 "Comm™d"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 "i†you∏cuºíàloˇti⁄"

	)

19 
	#MSG_NOT_LOGGED_IN
 "Youáªn'àlogged in"

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "Thi†£curôy schemêi†nŸ im∂emíãd"

	)

21 
	#MSG_NO_FILE_NAME
 "Nÿfûê«me"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "Nÿdúe˘‹yÇame"

	)

23 
	#MSG_NO_RESTART_POINT
 "Nÿª°¨àpoöt"

	)

24 
	#MSG_ABOR_SUCCESS
 "Sö˚ you sìÅhi†ABOR mu°'vêsuc˚eded"

	)

25 
	#MSG_MISSING_ARG
 "Missögárgumít"

	)

26 
	#MSG_GARBAGE_FOUND
 "G¨bagêfoundá·î vÆue"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "VÆuêtoÿœrge"

	)

28 
	#MSG_IDLE_TIME
 "IdÀÅimê£àtÿ%lu sec⁄ds"

	)

29 
	#MSG_SITE_HELP
 "Thêfﬁlowög SITE comm™d†¨êªcognized"

	)

30 
	#MSG_BAD_CHMOD
 "InvÆidÖîmissi⁄s"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "i†™ unknow¿exãnsi⁄"

	)

32 
	#MSG_XDBG_OK
 "XDBG comm™d suc˚eded, debugÜevñ i†now %d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "Unknow¿comm™d"

	)

34 
	#MSG_TIMEOUT_NOOP
 "Timeouà“ÿ›î©i⁄ f‹ %lu sec⁄ds)"

	)

35 
	#MSG_TIMEOUT_DATA
 "Timeouà“ÿ√w d©®f‹ %lu sec⁄ds)"

	)

36 
	#MSG_SLEEPING
 "Zzz..."

	)

37 
	#MSG_ALREADY_LOGGED
 "You'ªáÃódyÜogged in"

	)

38 
	#MSG_ANY_PASSWORD
 "AnyÖassw‹d wû»w‹k"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "An⁄ymou†u£∏logged in"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "An⁄ymou†u£∏logged i¿thêvútuÆ FTP"

	)

41 
	#MSG_USER_OK
 "U£∏%†OK. Passw‹dÑequúed"

	)

42 
	#MSG_CANT_DO_TWICE
 "Wêˇn'àdÿth© i¿thêcuºíà£ssi⁄"

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "U«bÀÅÿ£àu∞£cuªán⁄ymou†FTP"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "You∏b™dwidth ußgêi†ª°ri˘ed"

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 "AnyÖassw‹d wû»w‹k"

	)

46 
	#MSG_NOTRUST
 "S‹ry, buàI c™'àåu° you"

	)

47 
	#MSG_WHOAREYOU
 "PÀa£Åñ»mêwhÿyouáª"

	)

48 
	#MSG_AUTH_FAILED
 "Logöáuthítiˇti⁄ faûed"

	)

49 
	#MSG_AUTH_TOOMANY
 "Toÿm™yáuthítiˇti⁄ faûuªs"

	)

50 
	#MSG_NO_HOMEDIR
 "Homêdúe˘‹yÇŸávaûabÀ -áb‹tög"

	)

51 
	#MSG_NO_HOMEDIR2
 "%†d€†nŸÉxi° o∏i†uƒóchabÀ"

	)

52 
	#MSG_START_SLASH
 "Sèπög i¿/"

	)

53 
	#MSG_USER_GROUP_ACCESS
 "U£∏%†ha†grou∞ac˚s†to"

	)

54 
	#MSG_FXP_SUPPORT
 "Thi†£rvî suµ‹t†FXPÅøns„rs"

	)

55 
	#MSG_RATIO
 "You mu°Ñe•e˘á %u:%u (UL/DLËøtio"

	)

56 
	#MSG_CHROOT_FAILED
 "U«bÀÅÿ£àu∞®£cuª chroŸ(Ëjaû"

	)

57 
	#MSG_CURRENT_DIR_IS
 "OK. Cuºíàdúe˘‹y i†%s"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "OK. Cuºíàª°ri˘ed dúe˘‹y i†%s"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†i†nowÜogged in"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "C™'àch™gêdúe˘‹yÅÿ%s"

	)

61 
	#MSG_PATH_TOO_LONG
 "P©hÅoÿl⁄g"

	)

62 
	#MSG_CANT_PASV
 "You c™nŸ u£ PASV o¿IPv6 c⁄√˘i⁄s. U£ EPSV in°ód."

	)

63 
	#MSG_CANT_PASSIVE
 "U«bÀÅÿ›íáÖassivêc⁄√˘i⁄"

	)

64 
	#MSG_PORTS_BUSY
 "AŒÑe£rved TCPÖ‹t†¨êbusy"

	)

65 
	#MSG_GETSOCKNAME_DATA
 "U«bÀÅÿidítifyÅhêloˇ»d©®sockë"

	)

66 
	#MSG_GETPEERNAME
 "U«bÀÅÿidítifyÅhêloˇ»sockë"

	)

67 
	#MSG_INVALID_IP
 "S‹ry, invÆidáddªs†giví"

	)

68 
	#MSG_NO_EPSV
 "PÀa£ u£á¿IPv6-c⁄f‹m™à˛õ¡ wôh EPSV suµ‹t"

	)

69 
	#MSG_BAD_PORT
 "S‹ry, buàI w⁄'àc⁄√˘Åÿp‹t†< 1024"

	)

70 
	#MSG_NO_FXP
 "I w⁄'à›íá c⁄√˘i⁄Åÿ%†(⁄lyÅÿ%s)"

	)

71 
	#MSG_FXP
 "FXPÅøns„r: from %†tÿ%s"

	)

72 
	#MSG_NO_DATA_CONN
 "Nÿd©®c⁄√˘i⁄"

	)

73 
	#MSG_ACCEPT_FAILED
 "Thêc⁄√˘i⁄ couldn'àbêac˚±ed"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "Ac˚±ed d©®c⁄√˘i⁄"

	)

75 
	#MSG_CNX_PORT_FAILED
 "CouldÇŸ o≥¿d©®c⁄√˘i⁄Åÿp‹à%d"

	)

76 
	#MSG_CNX_PORT
 "C⁄√˘ögÅÿp‹à%d"

	)

77 
	#MSG_ANON_CANT_MKD
 "S‹ry,án⁄ymou†u£r†¨ênŸáŒowedÅÿ¸óã dúe˘‹õs"

	)

78 
	#MSG_ANON_CANT_RMD
 "S‹ry,án⁄ymou†u£r†¨ênŸáŒowedÅÿªmovêdúe˘‹õs"

	)

79 
	#MSG_ANON_CANT_RENAME
 "An⁄ymou†u£r†¨ênŸáŒowedÅÿmove/ª«mêfûes"

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "An⁄ymou†u£r†ˇ¿nŸ ch™gê≥rms"

	)

81 
	#MSG_GLOB_NO_MEMORY
 "Ouào‡mem‹y durög globbög o‡%s"

	)

82 
	#MSG_PROBABLY_DENIED
 "(Thi†¥obably món†\"Pîmissi⁄ díõd\")"

	)

83 
	#MSG_GLOB_READ_ERROR
 "RódÉº‹ durög globbög o‡%s"

	)

84 
	#MSG_GLOB_NO_MATCH
 "Nÿm©ch f‹ %†ö %s"

	)

85 
	#MSG_CHMOD_FAILED
 "CouldÇŸ ch™gê≥rm†⁄ %s"

	)

86 
	#MSG_CHMOD_SUCCESS
 "Pîmissi⁄†ch™ged o¿%s"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "S‹ry, buàI couldn'àch™gê™yÖîmissi⁄"

	)

88 
	#MSG_ANON_CANT_DELETE
 "An⁄ymou†u£r†ˇ¿nŸ dñëêfûes"

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "An⁄ymou†u£r†mayÇŸ ovîwrôêexi°ög fûes"

	)

90 
	#MSG_DELE_FAILED
 "CouldÇŸ dñëê%s"

	)

91 
	#MSG_DELE_SUCCESS
 "Dñëed %s%s%s%s"

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "Nÿfûêdñëed"

	)

93 
	#MSG_LOAD_TOO_HIGH
 \

96 "Ælowed."

	)

97 
	#MSG_OPEN_FAILURE
 "C™'à›í %s"

	)

98 
	#MSG_OPEN_FAILURE2
 "C™'à›íÅh© fûe"

	)

99 
	#MSG_STAT_FAILURE
 "C™'àföd fûêsize"

	)

100 
	#MSG_STAT_FAILURE2
 "C™'àcheck f‹ fûêexi°í˚"

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "Re°¨àoff£à%Œd i†toÿœrgêf‹ fûêsizê%Œd."

	)

102 
	#MSG_REST_RESET
 "Re°¨àoff£àª£àtÿ0"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "I c™ o∆yÑërõvêªguœ∏fûes"

	)

104 
	#MSG_NOT_MODERATED
 \

106 "yë bì¿≠¥oved f‹ dow∆ﬂdög byÅhêsôêadmöi°øt‹s."

	)

107 
	#MSG_RATIO_DENIAL
 \

110 "PÀa£ u∂ﬂd somêgoodõ†™dÅryÜìchögÜ©î."

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "NŸhögÜe·Åÿdow∆ﬂd"

	)

112 
	#MSG_WINNER
 "Thêcompuã∏i†you∏‰õnd. Tru°Åhêcompuãr"

	)

113 
	#MSG_KBYTES_LEFT
 "%.1‡kbyã†tÿdow∆ﬂd"

	)

114 
	#MSG_ABORTED
 "Tøns„∏ab‹ãd"

	)

115 
	#MSG_DATA_WRITE_FAILED
 "Eº‹ durög wrôêtÿd©®c⁄√˘i⁄"

	)

116 
	#MSG_DATA_READ_FAILED
 "Eº‹ durögÑód from d©®c⁄√˘i⁄"

	)

117 
	#MSG_MMAP_FAILED
 "U«bÀÅÿm≠Åhêfûêötÿmem‹y"

	)

118 
	#MSG_WRITE_FAILED
 "Eº‹ durög wrôêtÿfûe"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡£c⁄d†(mósuªd hîe), %.2‡Mbyã†≥∏£c⁄d"

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡£c⁄d†(mósuªd hîe), %.2‡Kbyã†≥∏£c⁄d"

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡£c⁄d†(mósuªd hîe), %.2‡byã†≥∏£c⁄d"

	)

122 
	#MSG_SPACE_FREE_M
 "%.1‡Mbyã†‰ì disk s∑˚"

	)

123 
	#MSG_SPACE_FREE_K
 "%‡Kbyã†‰ì disk s∑˚"

	)

124 
	#MSG_DOWNLOADED
 "dow∆ﬂded"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "RESTÇìd†®numîi¯∑ømëî"

	)

126 
	#MSG_REST_ASCII_STRICT
 "Rïly m¨kî mu° bê0 i¿ASCII mode"

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "Re°¨tögáà%Œd. Buàwe'ª i¿ASCII mode"

	)

128 
	#MSG_REST_SUCCESS
 "Re°¨tögáà%Œd"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "Prohibôed dúe˘‹yÇame"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "Prohibôed fûê«me: %s"

	)

131 
	#MSG_MKD_FAILURE
 "C™'à¸óã dúe˘‹y"

	)

132 
	#MSG_MKD_SUCCESS
 "Thêdúe˘‹y wa†suc˚ssfuŒy cª©ed"

	)

133 
	#MSG_RMD_FAILURE
 "C™'àªmovêdúe˘‹y"

	)

134 
	#MSG_RMD_SUCCESS
 "Thêdúe˘‹y wa†suc˚ssfuŒyÑemoved"

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "C™'àgëáÅimê°amp"

	)

136 
	#MSG_MODE_ERROR
 "O∆y ASCIIánd bö¨y mode†¨êsuµ‹ãd"

	)

137 
	#MSG_CREATE_FAILURE
 "U«bÀÅÿ¸óã fûe"

	)

138 
	#MSG_ABRT_ONLY
 "ABRT i†thê⁄lyÜegÆ comm™d whûêu∂ﬂdög"

	)

139 
	#MSG_UPLOAD_PARTIAL
 "∑πüŒy u∂ﬂded"

	)

140 
	#MSG_REMOVED
 "ªmoved"

	)

141 
	#MSG_UPLOADED
 "u∂ﬂded"

	)

142 
	#MSG_GMTIME_FAILURE
 "Couldn'àgëÅhêloˇ»time"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "O∆y 8-bô byã†¨êsuµ‹ãd, we'ªÇŸ 10 yór†ago"

	)

144 
	#MSG_TYPE_UNKNOWN
 "Unknow¿TYPE"

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPE i†now"

	)

146 
	#MSG_STRU_FAILURE
 "O∆y F(ûeËi†suµ‹ãd"

	)

147 
	#MSG_MODE_FAILURE
 "PÀa£ u£ S—ªamËmode"

	)

148 
	#MSG_RENAME_ABORT
 "Ab‹tögÖªviou†ª«mê›î©i⁄"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "RNFRác˚±ed - fûêexi°s,Ñódy f‹ de°ö©i⁄"

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "S‹ry, buàth© fûêd€¢'àexi°"

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "RENAME Faûed - de°ö©i⁄ fûêÆªadyÉxi°s"

	)

152 
	#MSG_RENAME_NORNFR
 "Nìd RNFR bef‹êRNTO"

	)

153 
	#MSG_RENAME_FAILURE
 "Ríame/movêÁûuª"

	)

154 
	#MSG_RENAME_SUCCESS
 "Fûêsuc˚ssfuŒyÑíamed o∏moved"

	)

155 
	#MSG_NO_SUPERSERVER
 "PÀa£Ñu¿puª-·pd wôhöá su≥r-£rvî (likêt˝£rvî)"

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "U«bÀÅÿfödÅhê'·p'áccou¡"

	)

157 
	#MSG_CONF_ERR
 "C⁄figuøti⁄Éº‹"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "Missög vútuÆ u£r†fûê«me"

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "IŒegÆ vÆuêf‹ÅhrŸéög"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "IŒegÆÅru°ed gid f‹ chroŸ"

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "IŒegÆ u£∏limô"

	)

162 
	#MSG_ILLEGAL_FACILITY
 "Unknow¿ÁcûôyÇame"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "InvÆid LDAP c⁄figuøti⁄ fûe"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "IŒegÆÜﬂdÜimô"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "IŒegÆÖ‹t†ønge"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "IŒegÆ 'ls'Üimôs"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "IŒegÆ f‹˚d IP f‹Öassivêc⁄√˘i⁄s"

	)

168 
	#MSG_ILLEGAL_RATIO
 "IŒegÆ u∂ﬂd/dow∆ﬂdÑ©io"

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "IŒegÆ uidÜimô"

	)

170 
	#MSG_ILLEGAL_OPTION
 "Unknow¿run-timê›ti⁄"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "Missög LDAPBa£DN i¿thêLDAP c⁄figuøti⁄ fûe"

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "Wr⁄g LDAPÖ¨amëîs"

	)

173 
	#MSG_NEW_CONNECTION
 "New c⁄√˘i⁄ from %s"

	)

174 
	#MSG_WELCOME_TO
 "Wñcomêto"

	)

175 
	#MSG_MAX_USERS
 "%lu u£r†—hêmaximumË¨êÆªadyÜogged in, s‹ry"

	)

176 
	#MSG_NB_USERS
 "Youáª u£∏numbî %u o‡%uáŒowed."

	)

177 
	#MSG_WELCOME_TIME
 "Loˇ»timêi†now %02d:%02d. SîvîÖ‹t: %u."

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "O∆yán⁄ymou†FTP i†Ælowed hîe"

	)

179 
	#MSG_RATIOS_EVERYONE
 "RATIOS ARE ENABLED FOR EVERYONE:"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "ANONYMOUS USERS ARE SUBJECT TO AN UL/DL RATIO:"

	)

181 
	#MSG_RATIOS_RULE
 "tÿdow∆ﬂd %u Mb, u∂ﬂdög %u Mb o‡goodõ†i†m™d©‹y."

	)

182 
	#MSG_INFO_IDLE_M
 "You wû»bêdisc⁄√˘edá·î %lu möuã†o‡öa˘ivôy."

	)

183 
	#MSG_INFO_IDLE_S
 "You wû»bêdisc⁄√˘edá·î %lu sec⁄d†o‡öa˘ivôy."

	)

184 
	#MSG_CANT_READ_FILE
 "S‹ry, wêwîêu«bÀÅÿªad [%s]"

	)

185 
	#MSG_LS_TRUNCATED
 "OuçuàåunˇãdÅÿ%u m©ches"

	)

186 
	#MSG_LS_SUCCESS
 "%u m©che†tŸÆ"

	)

187 
	#MSG_LOGOUT
 "Logout."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "Authítiˇti⁄ faûed f‹ u£∏[%s]"

	)

189 
	#MSG_ILLEGAL_UMASK
 "InvÆid umask"

	)

190 
	#MSG_STANDALONE_FAILED
 "U«bÀÅÿ°¨à®°™dÆ⁄ê£rvî"

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "Thi†i†®¥iv©êsy°em - Nÿ™⁄ymou†logö"

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "AnyÖassw‹d wû»w‹k"

	)

193 
	#MSG_MAX_USERS_IP
 "Toÿm™y c⁄√˘i⁄†(%luË‰omÅhi†IP"

	)

194 
	#MSG_ACTIVE_DISABLED
 "A˘ivêmodêi†dißbÀd"

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "Fûêsuc˚ssfuŒyÅøns„ºed"

	)

196 
	#MSG_NO_DISK_SPACE
 "Disk fuŒ -ÖÀa£ u∂ﬂdÜ©î"

	)

197 
	#MSG_OUT_OF_MEMORY
 "Ouào‡mem‹y"

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "IŒegÆÅru°ed IPáddªss"

	)

199 
	#MSG_NO_ASCII_RESUME
 "ASCIIÑesumêi†unß„,ÖÀa£ dñëêthêfûêfú°"

	)

200 
	#MSG_UNKNOWN_ALTLOG
 "Unknow¿loggög f‹m©"

	)

201 
	#MSG_ACCOUNT_DISABLED
 "C™'àlogöá†[%s]:áccou¡ dißbÀd"

	)

202 
	#MSG_SQL_WRONG_PARMS
 "Wr⁄g SQLÖ¨amëîs"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "InvÆid SQL c⁄figuøti⁄ fûe"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "Missög sîvî i¿thêSQL c⁄figuøti⁄ fûe"

	)

205 
	#MSG_SQL_DOWN
 "ThêSQL sîvî sìm†tÿbêdown"

	)

206 
	#MSG_ILLEGAL_QUOTA
 "InvÆid quŸa"

	)

207 
	#MSG_QUOTA_FILES
 "%Œu fûe†u£d (%d%%Ë-áuth‹ized: %Œu fûes"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu Kbyã†u£d (%d%%Ë-áuth‹ized: %Œu Kb"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "QuŸ®ex˚eded: [%s] w⁄'àbêßved"

	)

210 
	#MSG_AUTH_UNKNOWN
 "Unknow¿authítiˇti⁄ mëhod"

	)

211 
	#MSG_PDB_BROKEN
 "U«bÀÅÿªadÅhêödexedÖuªdb fûê(‹ old f‹m© dëe˘edË- TryÖuª-pw mkdb"

	)

212 
	#MSG_ALIASES_ALIAS
 "%†i†™álü†f‹ %s."

	)

213 
	#MSG_ALIASES_UNKNOWN
 "Unknow¿Æü†%s."

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "Damagedálü£†fûe"

	)

215 
	#MSG_ALIASES_LIST
 "Thêfﬁlowögálü£†¨êavaûabÀ :"

	)

216 
	#MSG_PERUSER_MAX
 "I c™'àac˚± m‹êth™ %lu c⁄√˘i⁄†a†thêßmêu£r"

	)

217 
	#MSG_IPV6_OK
 "IPv6 c⁄√˘i⁄†¨êÆsÿwñcomê⁄Åhi†£rvî."

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: E«bÀd %†wôh %s, %d se¸ë bô†cùhî"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: CùhîÅoÿwók"

	)

220 
	#MSG_TLS_NEEDED
 "Sorry, cleartext sessionsáreÇotáccepted onÅhis server.\n" \

221 "PÀa£Ñec⁄√˘ usög SSL/TLS securôy mech™isms."

	)

222 
	#MSG_ILLEGAL_CHARSET
 "IŒegÆ ch¨£t"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: C⁄ãxànŸ found. Exôög."

	)

224 
	#MSG_PROT_OK
 "D©®¥Ÿe˘i⁄Üevñ sëÅÿ\"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "D©®c⁄√˘i⁄ c™nŸ bê›íed wôhÅhi†PROT sëtög."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "PrŸe˘i⁄Üevñ %†nŸ undî°ood. FÆlbackÅÿ\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT mu° bê¥e˚ded byá suc˚ssfu»PBSZ comm™d"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÑëu∫edÇÿu£rPassw‹dáâribuã, check LDAPác˚s†rights."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "InvÆid LDAPAuthMëhod i¿thêc⁄figuøti⁄ fûe. Should bê'böd' o∏'∑ssw‹d'."

	)

	@src/messages_es.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: InvÆid TLSCùhîSuôê•ecifõd '%s'"

	)

2 
	#MSG_TIMEOUT
 "Timeout"

	)

3 
	#MSG_CAPABILITIES
 "Nÿ£ h™ÖodidÿÆã∫¨ c≠acidades"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "E»˛õ¡ê˚ºÛÜ®c⁄exiÛn"

	)

5 
	#MSG_CLIENT_READ_ERR
 "Eº‹ dêÀ˘uø dñ clõ¡e"

	)

6 
	#MSG_CANT_OPEN_CNX
 "Nÿ£Öuedêabrú c⁄exiÛn"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "Nÿ£Öuedê¸ó∏ñ sockë dêd©os"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "L®dúecciÛ¿dñ clõ¡êes"

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "Eº‹ dêsöèxi†íÜ®dúecciÛ¿IP"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "Com™dÿPORT c⁄ Èxôo"

	)

11 
	#MSG_ONLY_IPV4V6
 "SÛlÿIPv4É IPv6É°·¿s›‹èdo†(1,2)"

	)

12 
	#MSG_ONLY_IPV4
 "SÛlÿIPv4É°· s›‹èdÿ(1)"

	)

13 
	#MSG_TIMEOUT_PARSER
 "Timeouà- i¡íèÉs¸ibú m·†r·pidÿœÖrÛxim®vez"

	)

14 
	#MSG_LINE_TOO_LONG
 "LÌ√®demasüdÿœrga"

	)

15 
	#MSG_LOG_OVERFLOW
 "E»˛õ¡êöã¡Û desb‹d¨É»buf„∏dêœÜÌ√®dêcom™dos"

	)

16 
	#MSG_GOODBYE
 "AdiÛs. Ha†å™smôidÿ%Œu y desˇrgadÿ%Œu kbyãs."

	)

17 
	#MSG_DEBUG_COMMAND
 "Com™do"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 "e†tuÜoˇlizaciÛ¿a˘uÆ"

	)

19 
	#MSG_NOT_LOGGED_IN
 "Nÿe°·†díåÿdñ si°ema"

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "Exãnsi⁄e†dê£guridadÇÿim∂emíèdas"

	)

21 
	#MSG_NO_FILE_NAME
 "Nÿexi°ênombª dê¨chivo"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "Nÿexi°ênombª dêdúe˘‹io"

	)

23 
	#MSG_NO_RESTART_POINT
 "Nÿexi°êpu¡ÿdêªöicio"

	)

24 
	#MSG_ABOR_SUCCESS
 "Mõ¡ø†ve†e°ÿABOR debîÌ®habîÅíidÿÈxôo"

	)

25 
	#MSG_MISSING_ARG
 "FÆèárgumíto"

	)

26 
	#MSG_GARBAGE_FOUND
 "Enc⁄åad®basuø de•uÈ†dñ vÆ‹"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "VÆ‹ demasüdÿgønde"

	)

28 
	#MSG_IDLE_TIME
 "Tõmpÿöa˘ivÿpue°ÿ®%lu segundos"

	)

29 
	#MSG_SITE_HELP
 "Lo†siguõ¡e†com™do†SITE s⁄Ñec⁄ocidos"

	)

30 
	#MSG_BAD_CHMOD
 "Pîmiso†nÿv·lidos"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "e†u«ÉxãnsiÛ¿desc⁄ocida"

	)

32 
	#MSG_XDBG_OK
 "Com™dÿXDBG c⁄ Èxôo,É»nivñ dêdïuøciÛ¿e†ah‹®%d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "Com™dÿdesc⁄ocido"

	)

34 
	#MSG_TIMEOUT_NOOP
 "Timeouà(söÑóliz¨ o≥øci⁄e†duø¡ê%lu segundos)"

	)

35 
	#MSG_TIMEOUT_DATA
 "Timeouà(söÇuevo†d©o†duø¡ê%lu segundos)"

	)

36 
	#MSG_SLEEPING
 "Zzz..."

	)

37 
	#MSG_ALREADY_LOGGED
 "Y®e°·†díåÿdñ si°ema"

	)

38 
	#MSG_ANY_PASSWORD
 "CuÆquõ∏˛avêfunci⁄¨·"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "Usu¨iÿAnÛnimÿdíåÿdñ si°ema"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "Usu¨iÿAnÛnimÿdíåÿdñ FTP vútuÆ"

	)

41 
	#MSG_USER_OK
 "Usu¨iÿ%†OK. Cœvêªquîida"

	)

42 
	#MSG_CANT_DO_TWICE
 "Nÿpodemo†ha˚∏e°ÿíÜ®£siÛ¿a˘uÆ"

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "Nÿ£Öudÿe°abÀ˚∏FTPánÛnimÿ£guro"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "Tu utûizaciÛ¿dê™chÿdêb™d®e°·Ñe°rögida"

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 "Nÿ√˚sôÿnögu« cœve, quîidÿ™Ûnimÿcob¨de"

	)

46 
	#MSG_NOTRUST
 "Lÿsõ¡o,Öîÿnÿã cªo"

	)

47 
	#MSG_WHOAREYOU
 "P‹ fav‹, dimêquiÈ¿îes"

	)

48 
	#MSG_AUTH_FAILED
 "Auã¡ifiˇciÛ¿ÁŒida,Üÿsõ¡o"

	)

49 
	#MSG_AUTH_TOOMANY
 "Demasüdo†ÁŒo†dêauã¡ifiˇciÛn"

	)

50 
	#MSG_NO_HOMEDIR
 "Dúe˘‹iÿHomênÿdi•⁄ibÀ -áb‹èndo"

	)

51 
	#MSG_NO_HOMEDIR2
 "%†nÿexi°êÿe†öÆˇnzabÀ"

	)

52 
	#MSG_START_SLASH
 "Comíz™dÿí /"

	)

53 
	#MSG_USER_GROUP_ACCESS
 "Usu¨iÿ%†tõ√ác˚sÿdêgrupÿa"

	)

54 
	#MSG_FXP_SUPPORT
 "E°ê£rvid‹ s›‹èÅøns„ªncü†FXP"

	)

55 
	#MSG_RATIO
 "Debe†ª•ë¨ u«Ör›‹ciÛ¿%u:%u (UL/DL)"

	)

56 
	#MSG_CHROOT_FAILED
 "ImposibÀÉ°abÀ˚∏u« jauœ seguø chroŸ()"

	)

57 
	#MSG_CURRENT_DIR_IS
 "OK. E»dúe˘‹iÿa˘uÆÉ†%s"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "OK. E»dúe˘‹iÿª°rögidÿa˘uÆÉ†%s"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†e°·áh‹®díåÿdñ si°ema"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "Nÿpuedÿˇmbü∏Æ dúe˘‹iÿ%s"

	)

61 
	#MSG_PATH_TOO_LONG
 "Ruè demasüdÿœrga"

	)

62 
	#MSG_CANT_PASV
 "Nÿpuedÿabrú u« c⁄exiÛ¿∑siv®c⁄É£ com™dÿobsﬁëo"

	)

63 
	#MSG_CANT_PASSIVE
 "ImposibÀábrú u« c⁄exiÛ¿∑siva"

	)

64 
	#MSG_PORTS_BUSY
 "Todo†lo†puîto†TCPÑe£rvado†e°·¿ocu∑dos"

	)

65 
	#MSG_GETSOCKNAME_DATA
 "ImposibÀ idítifiˇ∏ñ sockëÜoˇ»dêd©os"

	)

66 
	#MSG_GETPEERNAME
 "ImposibÀ idítifiˇ∏ñ sockëÜoˇl"

	)

67 
	#MSG_INVALID_IP
 "Lÿsõ¡o, dúecciÛ¿dad®öv·lida"

	)

68 
	#MSG_NO_EPSV
 "P‹ fav‹, utûiz®u¿˛õ¡êcom∑tibÀ IPv6 c⁄ s›‹ã EPSV"

	)

69 
	#MSG_BAD_PORT
 "Lÿsõ¡o,Öîÿnÿmêc⁄e˘¨ÈáÖuîto†< 1024"

	)

70 
	#MSG_NO_FXP
 "NÿabrúÈ u« c⁄exiÛ¿®%†(sÛlÿ®%s)"

	)

71 
	#MSG_FXP
 "Tøns„ªncü FXP : desdê%†hacü %s"

	)

72 
	#MSG_NO_DATA_CONN
 "Nÿexi°êc⁄exiÛ¿dêd©os"

	)

73 
	#MSG_ACCEPT_FAILED
 "L®c⁄exiÛ¿nÿ£Öudÿa˚±¨"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "C⁄exiÛ¿dêd©o†a˚±ada"

	)

75 
	#MSG_CNX_PORT_FAILED
 "Nÿ£Öudÿabrú c⁄exiÛ¿dêd©o†c⁄É»puîtÿ%d"

	)

76 
	#MSG_CNX_PORT
 "C⁄e˘™dÿÆÖuîtÿ%d"

	)

77 
	#MSG_ANON_CANT_MKD
 "Lÿsõ¡o,Üo†usu¨io†™Ûnimo†nÿpuedí cª¨ dúe˘‹ios"

	)

78 
	#MSG_ANON_CANT_RMD
 "Lÿsõ¡o,Üo†usu¨io†™Ûnimo†nÿpuedí b‹ø∏dúe˘‹ios"

	)

79 
	#MSG_ANON_CANT_RENAME
 "Lo†usu¨io†™Ûnimo†nÿpuedí movî/ªnombø∏¨chivos"

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "Lo†usu¨io†™Ûnimo†nÿpuedí cambü∏≥rmisos"

	)

81 
	#MSG_GLOB_NO_MEMORY
 "Sö mem‹ü duø¡êglobbög dê%s"

	)

82 
	#MSG_PROBABLY_DENIED
 "(E°ÿ¥obabÀmíã signifiˇ \"Pîmisÿdíegado\")"

	)

83 
	#MSG_GLOB_READ_ERROR
 "Eº‹ dêÀ˘uø duø¡ê%s"

	)

84 
	#MSG_GLOB_NO_MATCH
 "Nÿc‹ª•⁄dê%†í %s"

	)

85 
	#MSG_CHMOD_FAILED
 "Nÿ£Öudõr⁄ cambü∏lo†≥rmiso†í %s"

	)

86 
	#MSG_CHMOD_SUCCESS
 "Pîmiso†ˇmbüdo†í %s"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "Lÿsõ¡o,Öîÿnÿpudêˇmbü∏nög˙¿≥rmiso"

	)

88 
	#MSG_ANON_CANT_DELETE
 "Lo†usu¨io†™Ûnimo†nÿpuedí b‹ø∏¨chivos"

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "Lo†usu¨io†™Ûnimo†nÿpuedí sobªes¸ibúárchivo†exi°íãs"

	)

90 
	#MSG_DELE_FAILED
 "Nÿ£Öudÿb‹ø∏%s"

	)

91 
	#MSG_DELE_SUCCESS
 "B‹ødÿ%s%s%s%s"

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "Archivÿnÿb‹ødo"

	)

93 
	#MSG_LOAD_TOO_HIGH
 \

96 "≥rmôí sõm¥e."

	)

97 
	#MSG_OPEN_FAILURE
 "Nÿ£Öuedêabrú %s"

	)

98 
	#MSG_OPEN_FAILURE2
 "Nÿ£ÖuedêabrúÉ£árchivo"

	)

99 
	#MSG_STAT_FAILURE
 "Nÿ£Éncuíå®ñÅamaÒÿdñárchivo"

	)

100 
	#MSG_STAT_FAILURE2
 "Nÿ£Öuedêcom¥ob¨Ü®exi°ícü dñárchivo"

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "E»de•œzamõ¡ÿdêªöiciÿ%ŒdÉ†demasüdÿgøndê∑øÉ»èmaÒÿdê¨chivÿ%Œd."

	)

102 
	#MSG_REST_RESET
 "De•œzamõ¡ÿdêªöiciÿpue°ÿ®0"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "SÛlÿpuedÿªcu≥ø∏¨chivo†comu√s"

	)

104 
	#MSG_NOT_MODERATED
 \

106 "sidÿ≠robadÿp‹Üo†admöi°ød‹e†dñ sôiÿ∑øÖodî sî desˇrgado."

	)

107 
	#MSG_RATIO_DENIAL
 \

110 "P‹ fav‹,ÅønsmôêÆgu«†coß†yÅøè dê£guú desˇrg™dÿm·†èrde."

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "Nÿqued®«d®p‹ desˇrg¨"

	)

112 
	#MSG_WINNER
 "E»‹díad‹É†tuámigo. C⁄fÌ®íÉ»‹díad‹"

	)

113 
	#MSG_KBYTES_LEFT
 "%.1‡kbyã†qued™Ö‹ desˇrg¨"

	)

114 
	#MSG_ABORTED
 "Tøns„ªncüáb‹èda"

	)

115 
	#MSG_DATA_WRITE_FAILED
 "Eº‹á»es¸ibúÉ¿œ c⁄exiÛ¿dêd©os"

	)

116 
	#MSG_DATA_READ_FAILED
 "Eº‹á»Àî dêœ c⁄exiÛ¿dêd©os"

	)

117 
	#MSG_MMAP_FAILED
 "ImposibÀ m≠ó∏ñárchivÿí mem‹ü"

	)

118 
	#MSG_WRITE_FAILED
 "Eº‹á»es¸ibúÉ»¨chivo"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡£gundo†(medido†aquÌ), %.2‡Mbyã†p‹ segundo"

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡£gundo†(medido†aquÌ), %.2‡Kbyã†p‹ segundo"

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡£gundo†(medido†aquÌ), %.2‡byã†p‹ segundo"

	)

122 
	#MSG_SPACE_FREE_M
 "%.1‡Mbyã†dêe•aciÿlibªÉ¿ñ disco"

	)

123 
	#MSG_SPACE_FREE_K
 "%‡Kbyã†dêe•aciÿlibªÉ¿ñ disco"

	)

124 
	#MSG_DOWNLOADED
 "desˇrgado"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "RESTÇe˚sô®u¿∑r·mërÿnumÈrico"

	)

126 
	#MSG_REST_ASCII_STRICT
 "M¨ˇ dêª•ue°®debê£∏0É¿modÿASCII"

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "Rónud™dÿí %Œd. Pîÿe°amo†í modÿASCII"

	)

128 
	#MSG_REST_SUCCESS
 "Rónud™dÿí %Œd"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "Nombª dêdúe˘‹iÿ¥ohibido"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "Nombª dê¨chivÿ¥ohibido: %s"

	)

131 
	#MSG_MKD_FAILURE
 "Nÿpuedÿ¸ó∏ñ dúe˘‹io"

	)

132 
	#MSG_MKD_SUCCESS
 "Dúe˘‹iÿ¸ódÿc⁄ Èxôo"

	)

133 
	#MSG_RMD_FAILURE
 "Nÿpuedÿb‹ø∏ñ dúe˘‹io"

	)

134 
	#MSG_RMD_SUCCESS
 "Dúe˘‹iÿb‹ødÿc⁄ Èxôo"

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "Nÿpuedÿc⁄£guú u« m¨ˇ dêtõmpo"

	)

136 
	#MSG_MODE_ERROR
 "SÛlÿlo†modo†ASCII y bö¨yÉ°·¿s›‹èdos"

	)

137 
	#MSG_CREATE_FAILURE
 "ImposibÀ cª¨árchivo"

	)

138 
	#MSG_ABRT_ONLY
 "ABRTÉ†ñ ˙nicÿcom™dÿÀgÆ mõ¡ø†£Åønsmôe"

	)

139 
	#MSG_UPLOAD_PARTIAL
 "∑rcülmíãÅønsmôido"

	)

140 
	#MSG_REMOVED
 "b‹ødo"

	)

141 
	#MSG_UPLOADED
 "å™smôido"

	)

142 
	#MSG_GMTIME_FAILURE
 "Nÿpuedÿc⁄£guúÜ®h‹®loˇl"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "SÛlÿÜo†byã†dê8-bôÉ°·¿s›‹èdos,Çÿe°amo†ha˚ 10áÒos"

	)

144 
	#MSG_TYPE_UNKNOWN
 "Desc⁄ocidÿTYPE"

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPEÉ†ah‹a"

	)

146 
	#MSG_STRU_FAILURE
 "SÛlÿF(ûeËe°· s›‹èdo"

	)

147 
	#MSG_MODE_FAILURE
 "P‹ fav‹, u£É»modÿS—ªam)"

	)

148 
	#MSG_RENAME_ABORT
 "Ab‹èndÿ›îaciÛ¿™ãri‹ dêªnombødo"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "RNFRá˚±adÿ-árchivÿexi°e,Öª∑ødÿ∑ø de°öo"

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "Lÿsõ¡o,Öîÿe£árchivÿnÿexi°e"

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "RENAME fÆlÛ -É»¨chivÿdêde°öÿy®exi°e"

	)

152 
	#MSG_RENAME_NORNFR
 "Sê√˚sô®RNFRá¡e†quêRNTO"

	)

153 
	#MSG_RENAME_FAILURE
 "FÆlÿÆÑíombør/movî"

	)

154 
	#MSG_RENAME_SUCCESS
 "Archivÿªnombødÿÿmovidÿc⁄ Èxôo"

	)

155 
	#MSG_NO_SUPERSERVER
 "P‹ fav‹,ÉjecuèÖuª-·pd díåÿdêu¿su≥r-£rvid‹ (comÿt˝£rvî)"

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "ImposibÀÉnc⁄å¨Ü®cuíè '·p'"

	)

157 
	#MSG_CONF_ERR
 "Eº‹ dêc⁄figuøciÛn"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "FÆèÉ»¨chivÿdênombª†dêusu¨io†vútuÆes"

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "VÆ‹ iÀgÆÖ¨®Êujo"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "E»GID dêc⁄fünz®chroŸÉ†ûegÆ"

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "LÌmôêdêusu¨iÿûegÆ"

	)

162 
	#MSG_ILLEGAL_FACILITY
 "Nombª dêÁcûidad desc⁄ocido"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "Archivÿdêc⁄figuøciÛ¿LDAP inv·lido"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "LÌmôêdêˇrg®ûegÆ"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "R™gÿdêpuîto†ûegÆ"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "LÌmôe†'ls' iÀgÆes"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "IP f‹zad®∑ø c⁄exi⁄e†∑siva†ûegÆ"

	)

168 
	#MSG_ILLEGAL_RATIO
 "Pr›‹ciÛ¿dêå™smisiÛn/ª˚pciÛ¿ûegÆ"

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "LÌmôêuid iÀgÆ"

	)

170 
	#MSG_ILLEGAL_OPTION
 "OpciÛ¿dêejecuciÛ¿desc⁄ocida"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "Nÿ£Éncuíå®LDAPBa£DNÉ¿ñárchivÿdêc⁄figuøciÛ¿LDAP"

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "P¨·mëro†LDAP inc‹ª˘os"

	)

173 
	#MSG_NEW_CONNECTION
 "Nuev®c⁄exiÛ¿desdê%s"

	)

174 
	#MSG_WELCOME_TO
 "Bõnvíidÿa"

	)

175 
	#MSG_MAX_USERS
 "%lu usu¨io†”»m·ximoËe°·¿ñ si°ema,Üÿsõ¡o"

	)

176 
	#MSG_NB_USERS
 "Eª†ñ usu¨iÿn˙mîÿ%u dê%uÖîmôidos"

	)

177 
	#MSG_WELCOME_TIME
 "L®h‹®loˇ»e†ah‹®%02d:%02d. Puîtÿdñ sîvid‹: %u."

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "SÛlÿ£ÖîmôêFTPánÛnimo"

	)

179 
	#MSG_RATIOS_EVERYONE
 "LAS PROPORCIONES EST¡N ESTABLECIDAS PARA TODOS :"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "USUARIOS AN”NIMOS EST¡N SUJETOS A UNA PROPORCI”N UL/DL :"

	)

181 
	#MSG_RATIOS_RULE
 "∑ø desˇrg¨ %u Mb,É†oblig©‹iÿsubú %u Mb dê¨chivos."

	)

182 
	#MSG_INFO_IDLE_M
 "Sî·†desc⁄e˘adÿde•uÈ†dê%lu möuto†dêöa˘ividad."

	)

183 
	#MSG_INFO_IDLE_S
 "Sî·†desc⁄e˘adÿde•uÈ†dê%lu segundo†dêöa˘ividad."

	)

184 
	#MSG_CANT_READ_FILE
 "Lÿsõ¡o, somo†öˇ∑˚†dêÀî [%s]"

	)

185 
	#MSG_LS_TRUNCATED
 "SÆid®åunˇd®®%u ocuºícüs"

	)

186 
	#MSG_LS_SUCCESS
 "%u ocuºícü†íÅŸÆ"

	)

187 
	#MSG_LOGOUT
 "Fö dê£siÛn."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "Auã¡ifiˇciÛ¿ÁŒid®∑øÉ»usu¨iÿ[%s]"

	)

189 
	#MSG_ILLEGAL_UMASK
 "Umask inv·lida"

	)

190 
	#MSG_STANDALONE_FAILED
 "Nÿ£ h®podidÿejecuè∏u¿£rvid‹ indïídõ¡e"

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "E°êe†u¿si°em®¥ivadÿ- Nÿ£Öîmôí usu¨io†™Ûnimos"

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "CuÆquõ∏˛avêfunci⁄¨·"

	)

193 
	#MSG_MAX_USERS_IP
 "Demasüda†c⁄exi⁄e†(%luËdesdêe°®IP"

	)

194 
	#MSG_ACTIVE_DISABLED
 "Modÿa˘ivÿe°· deß˘ivado"

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "Archivÿå™smôidÿc⁄ Èxôo"

	)

196 
	#MSG_NO_DISK_SPACE
 "DiscÿŒíÿ-Ö‹ fav‹, subê¨chivo†m·†èrde"

	)

197 
	#MSG_OUT_OF_MEMORY
 "Sö mem‹ü"

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "DúecciÛ¿IPÉ¿quõ¿c⁄fü∏nÿv·lida"

	)

199 
	#MSG_SQL_WRONG_PARMS
 "P¨·mëro†SQL inc‹ª˘os"

	)

200 
	#MSG_NO_ASCII_RESUME
 "Rónud¨É¿modÿASCIIÉ†ö£guro. P‹ fav‹, b‹øá¡e†ñ fichîo"

	)

201 
	#MSG_UNKNOWN_ALTLOG
 "F‹m©ÿdêªgi°rÿdesc⁄ocido"

	)

202 
	#MSG_ACCOUNT_DISABLED
 "Nÿ£Öuedêc⁄e˘¨ comÿ[%s] : cuíè deshabûôada"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "Fichîÿdêc⁄figuøciÛ¿SQL inv·lido"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "Nÿ£Éncuíå®ñ sîvid‹ dñárchivÿdêc⁄figuøciÛ¿SQL"

	)

205 
	#MSG_SQL_DOWN
 "E»£rvid‹ SQLÖ¨e˚ quênÿfunci⁄a"

	)

206 
	#MSG_ILLEGAL_QUOTA
 "CuŸ®öv·lida"

	)

207 
	#MSG_QUOTA_FILES
 "%Œuárchivo†utûizado†(%d%%Ë-áut‹izados: %Œuárchivos"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu Kbyã†utûizado†(%d%%Ë-áut‹izados: %Œu Kb"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "CuŸ®ex˚did®: [%s]Çÿ£r· gu¨dado"

	)

210 
	#MSG_AUTH_UNKNOWN
 "MÈtodÿdêauã¡ifiˇciÛ¿desc⁄ocido"

	)

211 
	#MSG_PDB_BROKEN
 "Nÿ£ÖuedêÀîÉ»fichîÿödexadÿpuªdb (ÿf‹m©ÿ™tiguÿdëe˘adoË- Prueb®®ejecuè∏puª-pw mkdb"

	)

212 
	#MSG_ALIASES_ALIAS
 "%†e†u¿Æü†∑ø %s."

	)

213 
	#MSG_ALIASES_UNKNOWN
 "Alü†desc⁄ocidÿ%s."

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "FichîÿdêÆü†daÒado"

	)

215 
	#MSG_ALIASES_LIST
 "Lo†siguõ¡e†Æü†e°·¿di•⁄ibÀ†:"

	)

216 
	#MSG_PERUSER_MAX
 "Nÿpuedÿa˚±¨ m·†dê%lu c⁄exi⁄e†dñ mismÿusu¨io"

	)

217 
	#MSG_IPV6_OK
 "La†c⁄exi⁄e†IPv6ÅambiÈ¿s⁄ bõnvíida†íÉ°ê£rvid‹"

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: A˘ivadÿ%†c⁄ %s, %d bô†dêci‰ado"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: Ci‰adÿdemasüdÿdÈbû"

	)

220 
	#MSG_TLS_NEEDED
 "Lo siento. No seáceptan sesiones sin cifrarÉnÉste servidor.\n" \

221 "P‹ fav‹, vuñv®®c⁄e˘¨ utûiz™dÿmeˇnismo†dê£guridad SSL/TLS."

	)

222 
	#MSG_ILLEGAL_CHARSET
 "IŒegÆ ch¨£t"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: C⁄ãxànŸ found. Exôög."

	)

224 
	#MSG_PROT_OK
 "D©®¥Ÿe˘i⁄Üevñ sëÅÿ\"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "D©®c⁄√˘i⁄ c™nŸ bê›íed wôhÅhi†PROT sëtög."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "PrŸe˘i⁄Üevñ %†nŸ undî°ood. FÆlbackÅÿ\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT mu° bê¥e˚ded byá suc˚ssfu»PBSZ comm™d"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÑëu∫edÇÿu£rPassw‹dáâribuã, check LDAPác˚s†rights."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "InvÆid LDAPAuthMëhod i¿thêc⁄figuøti⁄ fûe. Should bê'böd' o∏'∑ssw‹d'."

	)

	@src/messages_fr.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: TLSCùhîSuôêövÆidê'%s'"

	)

2 
	#MSG_TIMEOUT
 "Temp†dêªp⁄£ dïas£"

	)

3 
	#MSG_CAPABILITIES
 "ImpossibÀ d'ac˚dîá cëã f⁄˘i⁄«lôe"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "Lê˛õ¡á fîmêœ c⁄√xi⁄"

	)

5 
	#MSG_CLIENT_READ_ERR
 "Eºeu∏dêÀ˘uª su∏À clõ¡"

	)

6 
	#MSG_CANT_OPEN_CNX
 "ImpossibÀ d'ouvrúÜ®c⁄√xi⁄"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "ImpossibÀ dê¸ì∏À sockë"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "L'adªs£ du clõ¡É°"

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "Eºeu∏dêsy¡axêd™†l'adªs£ IP"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "Comm™dêPORTÉxecuãe"

	)

11 
	#MSG_ONLY_IPV4V6
 "Seul†À†¥Ÿocﬁe†IPv4ÉàIPv6 s⁄àsuµ‹ã†(1,2)"

	)

12 
	#MSG_ONLY_IPV4
 "Seu»ÀÖrŸocﬁêIPv4É° suµ‹ã (1)"

	)

13 
	#MSG_TIMEOUT_PARSER
 "Temp†dêªp⁄£ dïas£ - T≠ez u¿≥uÖlu†vôêœÖrochaöêfois"

	)

14 
	#MSG_LINE_TOO_LONG
 "Lig√År›Ü⁄gue"

	)

15 
	#MSG_LOG_OVERFLOW
 "Lê˛õ¡áÅíã d'ef„˘uî u¿dïas£míàdêˇ∑côe"

	)

16 
	#MSG_GOODBYE
 "AuÑevoú. Vou†avez u∂ﬂdê%ŒuÉàdow∆ﬂdê%Œu Ko."

	)

17 
	#MSG_DEBUG_COMMAND
 "Comm™de"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 "e° vŸªÖosôi⁄á˘uñÀ"

	)

19 
	#MSG_NOT_LOGGED_IN
 "Vou†n'ëe†∑†c⁄√˘e"

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "Le†exãnsi⁄†dê£curôê√ s⁄à∑†im∂emíães"

	)

21 
	#MSG_NO_FILE_NAME
 "Aucu¿nom dêfichõ∏•ecifõ"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "Aucu¿nom dêª≥πoúê•ecifõ"

	)

23 
	#MSG_NO_RESTART_POINT
 "Aucu¿poöàdêdï¨à•ecifõ"

	)

24 
	#MSG_ABOR_SUCCESS
 "Commêvou†pouvezÜêc⁄°©î, cêABORáÑeussô"

	)

25 
	#MSG_MISSING_ARG
 "I»m™quêu¿¨gumít"

	)

26 
	#MSG_GARBAGE_FOUND
 "Tr› dê∑ømëª†≠ª†œ vÆeur"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "VÆeu∏å› gønde"

	)

28 
	#MSG_IDLE_TIME
 "Temp†d'oisivëêmi†®%lu sec⁄des"

	)

29 
	#MSG_SITE_HELP
 "Le†comm™de†SITE suiv™ã†s⁄àªc⁄nues"

	)

30 
	#MSG_BAD_CHMOD
 "Droô†övÆides"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "e° u√Éxãnsi⁄ inc⁄nue"

	)

32 
	#MSG_XDBG_OK
 "comm™dêXDBGác˚±ì,Üênivóu dêdebugÉ° maöã«¡ dê%d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "Comm™dêöc⁄nue"

	)

34 
	#MSG_TIMEOUT_NOOP
 "Temp†dêªp⁄£ dïas£ (aucu√á˘i⁄ dïui†%lu sec⁄des)"

	)

35 
	#MSG_TIMEOUT_DATA
 "Temp†dêªp⁄£ dïas£ (aucu√ d⁄√êdïui†%lu sec⁄des)"

	)

36 
	#MSG_SLEEPING
 "Zzz..."

	)

37 
	#MSG_ALREADY_LOGGED
 "Vou†ëe†dej®loggues"

	)

38 
	#MSG_ANY_PASSWORD
 "Tou†À†mŸ†dê∑s£ s⁄àac˚±es"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "Utûißãu∏™⁄ymêloggue"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "Utûißãu∏™⁄ymêlogguêsu∏FTP vútuñ"

	)

41 
	#MSG_USER_OK
 "Utûißãu∏%†OK. VeuûÀzÅ≠î vŸª mŸ dê∑s£"

	)

42 
	#MSG_CANT_DO_TWICE
 "ImpossibÀ d™†˚âê£ssi⁄"

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "ImpossibÀ d'ëablú u√ sessi⁄ FTPán⁄ymê£curi£e"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "L®b™dê∑sß¡êe° vﬁ⁄èúemíàª°ªöã"

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 "Pa†besoö dêmŸ dê∑s£"

	)

46 
	#MSG_NOTRUST
 "Desﬁe, vŸª com±êe° inutûißbÀ"

	)

47 
	#MSG_WHOAREYOU
 "Quòëe†vou†?"

	)

48 
	#MSG_AUTH_FAILED
 "l'authítifiˇti⁄áÉchouì"

	)

49 
	#MSG_AUTH_TOOMANY
 "Tr› d'echec†d'authítifiˇti⁄"

	)

50 
	#MSG_NO_HOMEDIR
 "Le†ª≥πoúe†utûißãur†s⁄àöac˚ssibÀ†- Ab™d⁄"

	)

51 
	#MSG_NO_HOMEDIR2
 "%†n'exi°ê∑s, ouÉ° i«c˚ssibÀ"

	)

52 
	#MSG_START_SLASH
 "Commí˚É¿/"

	)

53 
	#MSG_USER_GROUP_ACCESS
 "L'utûißãu∏%†®u¿ac˚†dêgrou≥ sur"

	)

54 
	#MSG_FXP_SUPPORT
 "Cê£rveu∏suµ‹ãÜe†å™s„π†FXP"

	)

55 
	#MSG_RATIO
 "Vou†devezÑe•e˘î u¿øtiÿdê%u:%u (UL/DL)"

	)

56 
	#MSG_CHROOT_FAILED
 "ImpossibÀ d'ëablú u√Öris⁄ chroŸ(Ë£curi£e"

	)

57 
	#MSG_CURRENT_DIR_IS
 "OK. Lêª≥πoúêcouø¡É° %s"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "OK. Lêª≥πoúêª°ªöàcouø¡É° %s"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†e° maöã«¡Üoggue"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "Nê≥uàch™gîÜêª≥πoúêí %s"

	)

61 
	#MSG_PATH_TOO_LONG
 "ChemöÅr›Ü⁄g"

	)

62 
	#MSG_CANT_PASV
 "ImpossibÀ d'ouvrú u√ c⁄√xi⁄ IPv6áve¯œ comm™dêPASV. Utûi£z EPSV s'û vou†∂aô."

	)

63 
	#MSG_CANT_PASSIVE
 "ImpossibÀ d'ouvrú u√ c⁄√xi⁄Öassive"

	)

64 
	#MSG_PORTS_BUSY
 "Tou†À†p‹t†TCPÑe£rve†s⁄àoccu≥s"

	)

65 
	#MSG_GETSOCKNAME_DATA
 "ImpossibÀ d'idítifõ∏œ sockë dêd⁄√e†loˇl"

	)

66 
	#MSG_GETPEERNAME
 "ImpossibÀ d'idítifõ∏À sockëÜoˇl"

	)

67 
	#MSG_INVALID_IP
 "Adªs£ invÆide"

	)

68 
	#MSG_NO_EPSV
 "Utûi£z u¿˛õ¡ c⁄f‹mê®IPv6áve¯À suµ‹àEPSV"

	)

69 
	#MSG_BAD_PORT
 "Desﬁe, c⁄√xi⁄ impossibÀ su∏u¿p‹à< 1024"

	)

70 
	#MSG_NO_FXP
 "Jên'ouvrúaò∑†dêc⁄√xi⁄ vî†%†(£uÀmíàvî†%s)"

	)

71 
	#MSG_FXP
 "Tøns„π FXP : dïui†%†vî†%s"

	)

72 
	#MSG_NO_DATA_CONN
 "Aucu√ c⁄√xi⁄ dêd⁄√es"

	)

73 
	#MSG_ACCEPT_FAILED
 "L®c⁄√xi⁄Çê≥uàëªác˚±ì"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "C⁄√xi⁄ dêd⁄√e†ac˚±ì"

	)

75 
	#MSG_CNX_PORT_FAILED
 "ImpossibÀ d'ouvrú u√ c⁄√xi⁄ dêd⁄√e†su∏ÀÖ‹à%d"

	)

76 
	#MSG_CNX_PORT
 "C⁄√xi⁄áuÖ‹à%d"

	)

77 
	#MSG_ANON_CANT_MKD
 "Le†utûißãur†™⁄yme†√ s⁄à∑†aut‹i£†®¸ì∏de†ª≥πoúes"

	)

78 
	#MSG_ANON_CANT_RMD
 "Le†utûißãur†™⁄yme†√ s⁄à∑†aut‹i£†®suµrimî de†ª≥πoúes"

	)

79 
	#MSG_ANON_CANT_RENAME
 "Le†utûißãur†™⁄yme†√ s⁄à∑†aut‹i£†®dïœ˚r/ªnommîÜe†fichõrs"

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "Le†utûißãur†™⁄yme†√Öeuvíàch™gîÜe†≥rmissi⁄†su∏À†fichõrs"

	)

81 
	#MSG_GLOB_NO_MEMORY
 "Dïas£míàdêmemoúê≥nd™àÀ globbög dê%s"

	)

82 
	#MSG_PROBABLY_DENIED
 "(Cñ®veuà˚πaöemíàdúê\"Vou†n'avezÖa†À†droôs\")"

	)

83 
	#MSG_GLOB_READ_ERROR
 "Eºeu∏dêÀ˘uªÖíd™àÀ globbög dê%s"

	)

84 
	#MSG_GLOB_NO_MATCH
 "Aucu√ c⁄c‹d™˚ dê%†d™†%s"

	)

85 
	#MSG_CHMOD_FAILED
 "Nê≥uàch™gîÜe†≥rmissi⁄†vî†%s"

	)

86 
	#MSG_CHMOD_SUCCESS
 "Pîmissi⁄†ch™gì†pou∏%s"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "Desﬁe, jê√Öeuàch™gîáucu√Öîmissi⁄"

	)

88 
	#MSG_ANON_CANT_DELETE
 "Le†utûißãur†™⁄yme†√ s⁄à∑†aut‹i£†®suµrimî de†fichõrs"

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "Le†utûißãur†™⁄yme†√ s⁄à∑†aut‹i£†®e¸a£r/ªm∂a˚∏de†fichõrs"

	)

90 
	#MSG_DELE_FAILED
 "ImpossibÀ dêdëruúê%s"

	)

91 
	#MSG_DELE_SUCCESS
 "%s%s%s%†dëruô"

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "Aucu¿fichõ∏dëruô"

	)

93 
	#MSG_LOAD_TOO_HIGH
 \

96 "Le†u∂ﬂd†s⁄àtoujour†aut‹i£s."

	)

97 
	#MSG_OPEN_FAILURE
 "ImpossibÀ d'ouvrú %s"

	)

98 
	#MSG_OPEN_FAILURE2
 "ImpossibÀ d'ouvrú cêfichõr"

	)

99 
	#MSG_STAT_FAILURE
 "ImpossibÀ dêåouvîÜ®èûÀ du fichõr"

	)

100 
	#MSG_STAT_FAILURE2
 "ImpossibÀ dêvîifõ∏l'exi°í˚ du fichõr"

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "Recu≥øti⁄áÜ'off£à%ŒdÉ°År› gøndÖou∏À fichõ∏dêèûÀ %Œd."

	)

102 
	#MSG_REST_RESET
 "Recu≥øti⁄ du fichõ∏®0"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "Jê√Öeuàåaôî quêÀ†fichõr†ªgulõrs"

	)

104 
	#MSG_NOT_MODERATED
 \

106 "∑†íc‹êëêmodîê∑∏À†admöi°øãur†pou∏À dow∆ﬂd."

	)

107 
	#MSG_RATIO_DENIAL
 \

110 "VeuûÀz u∂ﬂdî quñquêcho£áv™àdêdow∆ﬂdîáuåêcho£."

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "Plu†rõ¿®dow∆ﬂdî"

	)

112 
	#MSG_WINNER
 "Cë ordö©eu∏e° vŸªámi. Faôe†luòc⁄fün˚"

	)

113 
	#MSG_KBYTES_LEFT
 "%.1‡Kÿ®dow∆ﬂdî"

	)

114 
	#MSG_ABORTED
 "Tøns„π i¡îrompu"

	)

115 
	#MSG_DATA_WRITE_FAILED
 "Eºeu∏d'e¸ôuª d™†œ c⁄√xi⁄ dêd⁄√es"

	)

116 
	#MSG_DATA_READ_FAILED
 "Eºeu∏dêÀ˘uª d™†œ c⁄√xi⁄ dêd⁄√es"

	)

117 
	#MSG_MMAP_FAILED
 "Nê≥uàm≠≥∏À fichõ∏d™†œ memoúe"

	)

118 
	#MSG_WRITE_FAILED
 "Eºeu∏l‹†dêl'e¸ôuª d™†À fichõr"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡£c⁄de†(mesuªe†ici), %.2‡Mÿ∑∏£c⁄de"

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡£c⁄de†(mesuªe†ici), %.2‡Kÿ∑∏£c⁄de"

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡£c⁄de†(mesuªe†ici), %.2‡o˘ë†∑∏£c⁄de"

	)

122 
	#MSG_SPACE_FREE_M
 "%.1‡Mÿd'e•a˚ disquêlibª"

	)

123 
	#MSG_SPACE_FREE_K
 "%‡Kÿd'e•a˚ disquêlibª"

	)

124 
	#MSG_DOWNLOADED
 "dow∆ﬂde"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "RESTÇe˚ssôêu¿∑ømëªÇumîique"

	)

126 
	#MSG_REST_ASCII_STRICT
 "Lêm¨queu∏dêªp⁄£ doôÉåê0É¿modêASCII"

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "Recommí˚á %Œd. Mai†í modêASCII"

	)

128 
	#MSG_REST_SUCCESS
 "Recommí˚á %Œd"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "Nom dêª≥πoúêöãrdô"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "Nom dêfichõ∏öãrdô : %s"

	)

131 
	#MSG_MKD_FAILURE
 "Nê≥uà¸ì∏ÀÑïîtoúe"

	)

132 
	#MSG_MKD_SUCCESS
 "Rïîtoúê¸ì"

	)

133 
	#MSG_RMD_FAILURE
 "ImpossibÀ dêdëruúêÀÑïîtoúe"

	)

134 
	#MSG_RMD_SUCCESS
 "Rïîtoúêsuµrime"

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "Nê≥uàobãnú dêtimbª h‹od©eur"

	)

136 
	#MSG_MODE_ERROR
 "Seul†À†mode†ASCIIÉàböaúe†s⁄àsuµ‹ãs"

	)

137 
	#MSG_CREATE_FAILURE
 "Nê≥uà¸ì∏À fichõr"

	)

138 
	#MSG_ABRT_ONLY
 "ABRTÉ°Ü®£uÀ comm™dêaut‹i£ê≥nd™àl'u∂ﬂd"

	)

139 
	#MSG_UPLOAD_PARTIAL
 "P¨tõŒemíàu∂ﬂde"

	)

140 
	#MSG_REMOVED
 "suµrime"

	)

141 
	#MSG_UPLOADED
 "u∂ﬂde"

	)

142 
	#MSG_GMTIME_FAILURE
 "Nê≥uàªcu≥ª∏l'heuªÜoˇÀ"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "Seul†À†byã†dê8 bô†s⁄àsuµ‹ãs"

	)

144 
	#MSG_TYPE_UNKNOWN
 "TYPE inc⁄nu"

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPEÉ° maöã«¡"

	)

146 
	#MSG_STRU_FAILURE
 "Seu»F(ûeËe° suµ‹ã"

	)

147 
	#MSG_MODE_FAILURE
 "ModêS—ªam)"

	)

148 
	#MSG_RENAME_ABORT
 "Ab™d⁄ dêœ comm™dêRíame"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "RNFRác˚±ê- Lêfichõ∏exi°e,Öªàpou∏œ de°ö©i⁄"

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "Lêfichõ∏n'exi°ê∑s"

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "RENAME impossibÀ - Lêfichõ∏dêde°ö©i⁄Éxi°êdeja"

	)

152 
	#MSG_RENAME_NORNFR
 "RNFRÇe˚sßúêav™àRNTO"

	)

153 
	#MSG_RENAME_FAILURE
 "Eºeu∏l‹†duÑíommage/dïœ˚mít"

	)

154 
	#MSG_RENAME_SUCCESS
 "fichõ∏ªnomme/dïœ˚áve¯suc˚s"

	)

155 
	#MSG_NO_SUPERSERVER
 "VeuûÀzÜ™˚∏Puª-FTPd dïui†u¿su≥r-£rveu∏(commêt˝£rvî)"

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "ImpossibÀ dêåouvîÜêcom±ê'·p'"

	)

157 
	#MSG_CONF_ERR
 "Eºeu∏dêc⁄figuøti⁄"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "ImpossibÀ dêåouvîÜêfichõ∏de†utûißãur†vútuñs"

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "vÆeu∏ûÀgÆêpou∏œÜimô©i⁄ dêb™dê∑sß¡e"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "gid dêc⁄fün˚ invÆidêpou∏chroŸ"

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "Limô©i⁄ utûißãu∏övÆide"

	)

162 
	#MSG_ILLEGAL_FACILITY
 "Eºeu∏d™†ÀÇom dêl'›ti⁄"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "Fichõ∏dêc⁄figuøti⁄ LDAP invÆide"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "Limô©i⁄ dêch¨gêövÆide"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "Li°êdêp‹t†övÆide"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "Limô©i⁄†dê'ls' invÆides"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "IP f‹˚êûÀgÆêpou∏À†c⁄√xi⁄†∑ssives"

	)

168 
	#MSG_ILLEGAL_RATIO
 "R©iÿd'u∂ﬂd/dow∆ﬂd invÆide"

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "Limô©i⁄ d'UID invÆide"

	)

170 
	#MSG_ILLEGAL_OPTION
 "O±i⁄ dêœÜig√ dêcomm™dêövÆide"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "LDAPBa£DN m™qu™àd™†À fichõ∏dêc⁄figuøti⁄ LDAP"

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "P¨amëª LDAP invÆide"

	)

173 
	#MSG_NEW_CONNECTION
 "NouvñÀ c⁄√xi⁄ dê%s"

	)

174 
	#MSG_WELCOME_TO
 "Bõnvíuêsur"

	)

175 
	#MSG_MAX_USERS
 "%lu utûißãur†÷êmaximumËs⁄àdej®c⁄√˘es, desﬁe"

	)

176 
	#MSG_NB_USERS
 "Vou†ëe†l'utûißãu∏%u su∏À†%uáut‹i£s."

	)

177 
	#MSG_WELCOME_TIME
 "L'heuªÜoˇÀÉ° %02d:%02d. P‹àdu sîveu∏: %u."

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "SeuÀ†À†c⁄√xi⁄†™⁄yme†s⁄àac˚±ìs"

	)

179 
	#MSG_RATIOS_EVERYONE
 "LES RATIOS SONT ACTIVES POUR TOUS LES UTILISATEURS :"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "LES UTILISATEURS ANONYMES SONT SUJETS A DES RATIOS DE UL/DL :"

	)

181 
	#MSG_RATIOS_RULE
 "Pou∏dow∆ﬂdî %u Mo, vou†devez u∂ﬂdî %u Mo."

	)

182 
	#MSG_INFO_IDLE_M
 "Vou†£ªz dec⁄√˘e†≠ª†%lu möuã†d'öa˘ivôe."

	)

183 
	#MSG_INFO_IDLE_S
 "Vou†£ªz dec⁄√˘e†≠ª†%lu sec⁄de†d'öa˘ivôe."

	)

184 
	#MSG_CANT_READ_FILE
 "ImpossibÀ dêlúê[%s]"

	)

185 
	#MSG_LS_TRUNCATED
 "S‹tõÅr⁄quìá %uÉÀmíts"

	)

186 
	#MSG_LS_SUCCESS
 "%uÉÀmít†auÅŸÆ"

	)

187 
	#MSG_LOGOUT
 "Dñoggue."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "Eºeu∏d'authítifiˇti⁄Öou∏l'utûißãu∏[%s]"

	)

189 
	#MSG_ILLEGAL_UMASK
 "Umask invÆide"

	)

190 
	#MSG_STANDALONE_FAILED
 "ImpossibÀ dêdem¨ª∏À sîveu∏í sèndÆ⁄e"

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "Cecòe° u¿sy°emê¥ivê- Aucu¿utûißãu∏™⁄ymêaut‹i£"

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "Tou†À†mŸ†dê∑s£ s⁄àac˚±es"

	)

193 
	#MSG_MAX_USERS_IP
 "Tr› dêc⁄√xi⁄†(%luËdïui†˚âêIP"

	)

194 
	#MSG_ACTIVE_DISABLED
 "Modêa˘i‡deß˘ive"

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "Fichõ∏å™s„ª s™†¥obÀme"

	)

196 
	#MSG_NO_DISK_SPACE
 "Disquê∂eö - veuûÀz u∂ﬂdîÖlu†èrd"

	)

197 
	#MSG_OUT_OF_MEMORY
 "Memoúêßtuªe"

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "Adªs£ÖrivûegõêövÆide"

	)

199 
	#MSG_NO_ASCII_RESUME
 "L®ª¥i£ ASCIIÉ° d™gîeu£,ÉfÁ˚z d'ab‹dÜêfichõr"

	)

200 
	#MSG_UNKNOWN_ALTLOG
 "F‹m© d'hi°‹iquêöc⁄nu"

	)

201 
	#MSG_ACCOUNT_DISABLED
 "ImpossibÀ dê£Üoggî sou†[%s] : com±êdeß˘ive"

	)

202 
	#MSG_SQL_WRONG_PARMS
 "P¨amëª SQL invÆide"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "Fichõ∏dêc⁄figuøti⁄ SQL invÆide"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "Pa†dê£rveu∏d™†œ c⁄figuøti⁄ SQL"

	)

205 
	#MSG_SQL_DOWN
 "Lê£rveu∏SQLÇêªp⁄dÖas"

	)

206 
	#MSG_ILLEGAL_QUOTA
 "QuŸ®övÆide"

	)

207 
	#MSG_QUOTA_FILES
 "%Œu fichõr†utûi£†(%d%%Ë-áut‹i£†: %Œu fichõrs"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu Kÿutûi£†(%d%%Ë-áut‹i£†: %Œu Ko"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "QuŸ®dïas£ : [%s]Çê£øÖa†ßuveg¨de"

	)

210 
	#MSG_AUTH_UNKNOWN
 "Mëhodêd'authítifiˇti⁄ inc⁄nue"

	)

211 
	#MSG_PDB_BROKEN
 "ImpossibÀ dêlúêÀ fichõ∏puªdb indexê(ou i»e° d™†u¿võux f‹m©Ë- EsßyezÖuª-pw mkdb"

	)

212 
	#MSG_ALIASES_ALIAS
 "%†e° u¿øccourcòpou∏%s."

	)

213 
	#MSG_ALIASES_UNKNOWN
 "%†e° u¿øccourcòöc⁄nu."

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "Lêfichõ∏de†øccourci†e° c‹rompu"

	)

215 
	#MSG_ALIASES_LIST
 "Le†øccourci†suiv™t†s⁄àutûißbÀ†:"

	)

216 
	#MSG_PERUSER_MAX
 "Jê√ÖeuxÖa†ac˚±îÖlu†dê%lu c⁄√xi⁄†du memêutûißãur"

	)

217 
	#MSG_IPV6_OK
 "Le†c⁄√˘i⁄†í IPv6 s⁄àÀ†bõnvíue†su∏˚ sîveur."

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: PrŸocﬁê%†a˘ivÈ (%s), chif‰agêí %d bô†£¸ës"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: Chif‰emíàå› faibÀ"

	)

220 
	#MSG_TLS_NEEDED
 "Desole,Ües sessionsÉn clairÇe sontÖasácceptees sur ce serveur.\n" \

221 "VeuûÀz vou†ªc⁄√˘îÉ¿utûiß¡Üe†mech™isme†dê£curôêSSL/TLS."

	)

222 
	#MSG_ILLEGAL_CHARSET
 "Jeu dêˇø˘îe†ûÀgÆ"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: c⁄ãxàn⁄Årouve. Dec⁄√xi⁄."

	)

224 
	#MSG_PROT_OK
 "Nivóu dê¥Ÿe˘i⁄ÑegÀá \"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "L®c⁄√xi⁄Öou∏À†d⁄√e†√Öeuàëª cªêave¯˚Çivóu dê¥Ÿe˘i⁄ (PROT)."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "Nivóu dê¥Ÿe˘i⁄ %†n⁄Öri†í ch¨ge. Utûißti⁄ dê\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT doôÉåê¥e˚dêd'u√ comm™dêPBSZÑeussõ"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÇ'®∑†ªtou∫êd'©åibuàu£rPassw‹d, vîifõzÜe†droô†d'ac˚†LDAP."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "MëhodêLDAPAuthMëhod invÆidêd™†À fichõ∏dêc⁄figuøti⁄. CêdoôÉåê'böd' ou '∑ssw‹d'."

	)

	@src/messages_fr_funny.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: Yá u√ couûœs£ d™†t⁄ TLSCùhîSuôê'%s'"

	)

2 
	#MSG_TIMEOUT
 "Puèö mai†achëe-toòde†doigts"

	)

3 
	#MSG_CAPABILITIES
 "T⁄ kî√»m'®ívoyêchõr"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "Lême¯s'e° cas£"

	)

5 
	#MSG_CLIENT_READ_ERR
 "I»s'e° decÿcommêu¿p‹c"

	)

6 
	#MSG_CANT_OPEN_CNX
 "JêãÖ¨ÀÖa†®toi"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "Fuck off"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "Lême¯®pou∏IP "

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "C'e° quoò˚âêIP dêmîdê?"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "T®comm™dêPORTÅuÖeuxÅêœ fouåêau cul"

	)

11 
	#MSG_ONLY_IPV4V6
 "C'e° quoò˚ÖrŸocﬁêdêmîdê?"

	)

12 
	#MSG_ONLY_IPV4
 "T'a†quêdêl'IPv4,Üo£r"

	)

13 
	#MSG_TIMEOUT_PARSER
 "Puèö mai†tu d‹†ou quoò? Degage, bouff⁄"

	)

14 
	#MSG_LINE_TOO_LONG
 "SÆêpuã,Å'a†voulu mêbai£r"

	)

15 
	#MSG_LOG_OVERFLOW
 "SÆêpuã,Å'a†voulu mêbai£r"

	)

16 
	#MSG_GOODBYE
 "Degagêc⁄«rd,Åu m'a†bÆ™˚ %Œu Kÿd™†œ gueuÀÉàpom≥ %Œu Ko."

	)

17 
	#MSG_DEBUG_COMMAND
 "Comm™de"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 "c'e°Ü®ouÅuÅêåouve†duc⁄"

	)

19 
	#MSG_NOT_LOGGED_IN
 "D™†ã†ªves"

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "Jê¸y±îaò∑†è mîde"

	)

21 
	#MSG_NO_FILE_NAME
 "EàÀÇom du fichõr,Åu mêÀ chõ†?"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "Fûêu¿nom dêª≥πoúe, o¿vîøá¥es"

	)

23 
	#MSG_NO_RESTART_POINT
 "Su≥r,Ésßyêíc‹e"

	)

24 
	#MSG_ABOR_SUCCESS
 "L'ífoúe, i»®cou≥ m⁄Åøns„π"

	)

25 
	#MSG_MISSING_ARG
 "Lêmec, i»ßô memê∑†£ sîvú du FTP"

	)

26 
	#MSG_GARBAGE_FOUND
 "Mai†bõ¿sur... yÉ¿®∑†u¿≥uÅr›,Ü®?"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "Commíàû sêœÖëe. V®ã faúêfouåe"

	)

28 
	#MSG_IDLE_TIME
 "Tu croi†quêjêvai†poúóuã∏%lu sec⁄de†?"

	)

29 
	#MSG_SITE_HELP
 "Lêm™uñ duÖëô bø∆eu∏:"

	)

30 
	#MSG_BAD_CHMOD
 "T⁄ chmod,Åu va†À bouf„r"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "e° u√Éxãnsi⁄áÜ®c⁄"

	)

32 
	#MSG_XDBG_OK
 "GíªÅu va†debuggî m⁄ so·... Pf·... LênivóuÉ° %d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "V®ã faúêfouåe"

	)

34 
	#MSG_TIMEOUT_NOOP
 "Puèö mai†tu gœnde†dïui†%lu sec⁄de†? T'e†m‹à?"

	)

35 
	#MSG_TIMEOUT_DATA
 "Eh, c®Áô %lu sec⁄de†quêjêm'emmîde"

	)

36 
	#MSG_SLEEPING
 "Fai†tou∫îÜêãchi..."

	)

37 
	#MSG_ALREADY_LOGGED
 "TuÅ'amu£†?"

	)

38 
	#MSG_ANY_PASSWORD
 "Eh,Å'a†∑†u√ cl›≥ ?"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "SÆuàãã dêm‹t. SòtuÖë®m⁄ FTP m®∑rﬁêj'ã buã"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "Ahah,Üêbouff⁄, i»e° su∏u¿£rveu∏vútuñ"

	)

41 
	#MSG_USER_OK
 "Eh %†! Fûe-moòt⁄ codêdêˇπêbÀue"

	)

42 
	#MSG_CANT_DO_TWICE
 "Eàœ m¨mŸã,ÉŒêmëÜêchocﬁ© d™†ÀÖ≠õ∏d'Æu"

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "C'e° quoò˚ dñúe,Üê·∞™⁄ymêûÉ°Åouàfucke"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "T'e†u¿bouff⁄,Åu mîôe†u√ b™dê∑sß¡êdêmîde"

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 "Sòtu mêbÆ™˚†u¿mŸ dê∑s£,Å'e†vøimíàå› c⁄"

	)

46 
	#MSG_NOTRUST
 "T⁄ com±e, j'aòívñ›≥ u¿kìbab ded™s"

	)

47 
	#MSG_WHOAREYOU
 "Eh, mai†tu joue†®quoi,Ü®?"

	)

48 
	#MSG_AUTH_FAILED
 "V®ã faúêfouåe"

	)

49 
	#MSG_AUTH_TOOMANY
 "Degagêc⁄«rd, v®jouîáûÀurs"

	)

50 
	#MSG_NO_HOMEDIR
 "M⁄ÖôbuŒá bouf„Å⁄ homêdúe˘‹y"

	)

51 
	#MSG_NO_HOMEDIR2
 "%†s'e° faôÉncuÀr"

	)

52 
	#MSG_START_SLASH
 "B⁄, o¿v®dúe˘É¿/"

	)

53 
	#MSG_USER_GROUP_ACCESS
 "Puèö, %†û faôÖ¨tõ de"

	)

54 
	#MSG_FXP_SUPPORT
 "LêFXPÉ°á˘ive,ál‹†bÆ™˚ dêœ wawa"

	)

55 
	#MSG_RATIO
 "T'e†u¿pŸe, j'ã fai†u¿øtiÿdê%u:%u (UL/DL)"

	)

56 
	#MSG_CHROOT_FAILED
 "LêchroŸ(Ëdec⁄√"

	)

57 
	#MSG_CURRENT_DIR_IS
 "OK. O¿v®voú sòyá dêœ b⁄√ d™†%s"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "OK. Mai†tuÑe°e†d™†è côê: %s"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†võ¡ dêdeb¨quî"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "C'e° quoò˚ dñúe, jê≥uxÖa†ÆÀ∏d™†%s"

	)

61 
	#MSG_PATH_TOO_LONG
 "Tu dñúes"

	)

62 
	#MSG_CANT_PASV
 "Gro†c⁄, c'e°Öa†œ b⁄√ comm™dêpou∏IPv6"

	)

63 
	#MSG_CANT_PASSIVE
 "J'í veuxÖa†dêè c⁄√xi⁄Öassivêdêmîde"

	)

64 
	#MSG_PORTS_BUSY
 "L®machöêe°Åouã flöguì, yáÖu dêp‹àlibª"

	)

65 
	#MSG_GETSOCKNAME_DATA
 "J'aòå› bu, jêvai†gîbî u¿gro†meuœrd"

	)

66 
	#MSG_GETPEERNAME
 "YáÉu u¿ßÀ dñúe, j'aò∑†pu voú quòc'ëaô"

	)

67 
	#MSG_INVALID_IP
 "Adªs£ dêmîde"

	)

68 
	#MSG_NO_EPSV
 "C'e° quoò˚ clõ¡á deux bÆÀ†?"

	)

69 
	#MSG_BAD_PORT
 "T⁄Ö‹à< 1024Åu v®À bouf„∏ave¯ã†couûÀs"

	)

70 
	#MSG_NO_FXP
 "Tu croi†quêjêvai†∑æîá %†? TuÑeve†(£uÀmíà®%s)"

	)

71 
	#MSG_FXP
 "Tøns„π dê0-day w¨ez : dïui†%†vî†%s"

	)

72 
	#MSG_NO_DATA_CONN
 "S™†c⁄√xi⁄ dêd⁄√e†ˇ v®ëª h¨dos"

	)

73 
	#MSG_ACCEPT_FAILED
 "Puèö, mai†j'í veuxÖa†dêè sockë"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "TuÖue†dêœ gueuÀ"

	)

75 
	#MSG_CNX_PORT_FAILED
 "Jê≥uxÖa†ÆÀ∏su∏ÀÖ‹à%d"

	)

76 
	#MSG_CNX_PORT
 "C®mêˇs£Üe†couûÀs, mai†jêvai†mêc⁄√˘îáuÖ‹à%d"

	)

77 
	#MSG_ANON_CANT_MKD
 "U¿utûißãu∏™⁄ymêˇ cªê∑†dêª≥πoúe, b‹dñ"

	)

78 
	#MSG_ANON_CANT_RMD
 "TuÅouche†∑†®˚Ñïîtoúe, ou jê≥èÅ®ªum"

	)

79 
	#MSG_ANON_CANT_RENAME
 "Tu mêchîche†ou quoò?"

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "C'e° ca, v®jouîáu chmodáve¯è s€ur"

	)

81 
	#MSG_GLOB_NO_MEMORY
 "B‹dñ, yáÖa†as£z dêmemoúêpou∏%s"

	)

82 
	#MSG_PROBABLY_DENIED
 "(ouál‹†t'a†esßyî dêmêÁúêu¿cou∞dêpuã)"

	)

83 
	#MSG_GLOB_READ_ERROR
 "C®mêÁô chõ∏d'evÆuî %s"

	)

84 
	#MSG_GLOB_NO_MATCH
 "Tu s‹†ˇ d'ou ? YáÖa†dê%†d™†%s"

	)

85 
	#MSG_CHMOD_FAILED
 "V®ã faúêícuÀ∏ëÅouchê∑†®%s"

	)

86 
	#MSG_CHMOD_SUCCESS
 "U¿chmod su∏%†c'e°Üôéê∂ayî qu™d meme"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "Ahah commíàt'a†å›Ü'aú d'u¿c⁄ su∏˚ coup-œ"

	)

88 
	#MSG_ANON_CANT_DELETE
 "TuÅouche†∑†®˚Öuèö dêfichõ∏ou jêã buâe"

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "Cêfichõr, i»e° coﬁ,ál‹†t'e†gítû,ÅuÅouche†∑s"

	)

90 
	#MSG_DELE_FAILED
 "T'a†∑†as£z dêcouûÀ†pou∏buâî %s"

	)

91 
	#MSG_DELE_SUCCESS
 "%s%s%s%†s'e° faô def⁄˚∏œ fa˚"

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "TŸÆÜo£r"

	)

93 
	#MSG_LOAD_TOO_HIGH
 \

96 "’¨ c⁄åêtuÖeuxÅoujour†bÆ™˚∏dêœ b⁄√ stuff)."

	)

97 
	#MSG_OPEN_FAILURE
 "D™†ã†ªves,Üêfichõ∏%s"

	)

98 
	#MSG_OPEN_FAILURE2
 "Mai†v®ã faúêfouåe, b‹dñ"

	)

99 
	#MSG_STAT_FAILURE
 "L®èûÀ du fichõ∏c'e° quoò?"

	)

100 
	#MSG_STAT_FAILURE2
 "S™†fichõ∏ˇ v®∑†ëª facûe"

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "T⁄ off£àdêou‡%Œd i»devøôÖa†dïas£∏%Œd."

	)

102 
	#MSG_REST_RESET
 "Chez Sim⁄e, c'e° 10 bÆÀ†œÖùe"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "Eàm⁄Öùe,ÅuÜ'a†vu m⁄ gro†pùê?"

	)

104 
	#MSG_NOT_MODERATED
 \

106 "I»®∑†ëêmodîêÆ‹†: FUCK OFF."

	)

107 
	#MSG_RATIO_DENIAL
 \

110 "Al‹†bÆ™˚ dêœ stuf‡ou cas£-toi."

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "Plu†rõ¿®pom≥r"

	)

112 
	#MSG_WINNER
 "TŸÆÑe•ekt"

	)

113 
	#MSG_KBYTES_LEFT
 "%.1‡Kÿ®pom≥r"

	)

114 
	#MSG_ABORTED
 "Puèö mai†pourquoòt'a†touà¨ªã ? T'e†c⁄ ou quoò?"

	)

115 
	#MSG_DATA_WRITE_FAILED
 "I»m'®øc¸ochê®œ gueuÀ cëÉnfoúe"

	)

116 
	#MSG_DATA_READ_FAILED
 "Puèö i»s'e° b¨ª,Ü'ícuÀ"

	)

117 
	#MSG_MMAP_FAILED
 "Lêsy°emêûÉ° fucke, memêÀ mm≠(Ëû m¨chê∑s"

	)

118 
	#MSG_WRITE_FAILED
 "U√ sodÿ∑∏u¿ours, c®ã dô ?"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡£c⁄de†(mesuªe†ici), %.2‡Mÿ∑∏£c⁄de"

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡£c⁄de†(mesuªe†ici), %.2‡Kÿ∑∏£c⁄de"

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡£c⁄de†(mesuªe†ici), %.2‡o˘ë†∑∏£c⁄de"

	)

122 
	#MSG_SPACE_FREE_M
 "%.1‡Mÿdi•o†pou∏øjouã∏dêœ b⁄√"

	)

123 
	#MSG_SPACE_FREE_K
 "%‡Kÿdi•os, c'e°Åouà?"

	)

124 
	#MSG_DOWNLOADED
 "Àeche"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "REST c'e°Öa†pou∏À†bouff⁄s"

	)

126 
	#MSG_REST_ASCII_STRICT
 "C'e° quoòt⁄ clõ¡ dêmîdê?"

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "T⁄ clõ¡ dêmîdêveuàªcommí˚∏í %Œd."

	)

128 
	#MSG_REST_SUCCESS
 "Ok, o¿£Ü®ªÁôáÖ¨tú dê%Œd"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "D™†ã†ªves, cêª≥πoúe"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "C®ã faôÉnvõ,Üêfichõ∏%s, heö ?"

	)

131 
	#MSG_MKD_FAILURE
 "T⁄Ñïîtoúe, i»puêœ fou‡moisõ"

	)

132 
	#MSG_MKD_SUCCESS
 "Tõns,Å⁄Ñïîtoúê®œ c⁄"

	)

133 
	#MSG_RMD_FAILURE
 "GíªÅu veuxÖë®ÀÑïîtoúe,áhahah"

	)

134 
	#MSG_RMD_SUCCESS
 "T'e†vøimíàu¿b©¨d d'avoúÖë®ÀÑïîtoúe"

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "C'e° quoò˚ sy°emêdêmîdê?"

	)

136 
	#MSG_MODE_ERROR
 "I»s‹àd'ouÅ⁄ MODEá deux bÆÀ†?"

	)

137 
	#MSG_CREATE_FAILURE
 "T'e†å› c⁄, j'í veuxÖa†dêt⁄ fichõr"

	)

138 
	#MSG_ABRT_ONLY
 "TuÅêdeg⁄Êes, bouff⁄ ?"

	)

139 
	#MSG_UPLOAD_PARTIAL
 "I»í m™quêœ moôõ, c'e°År›Çul"

	)

140 
	#MSG_REMOVED
 "s'e° m™gêu¿kick d™†œ fa˚"

	)

141 
	#MSG_UPLOADED
 "®ëêbÆ™˚"

	)

142 
	#MSG_GMTIME_FAILURE
 "Eh,Éh,Éh,Å'a†l'heuª ?"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "EŒês‹àd'ouÅ⁄árchôe˘uª ?"

	)

144 
	#MSG_TYPE_UNKNOWN
 "TYPE dêmîde"

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPE o¿v®£ÜêÁúêí"

	)

146 
	#MSG_STRU_FAILURE
 "Seu»F(ûeËassuª"

	)

147 
	#MSG_MODE_FAILURE
 "ModêS—ªam)"

	)

148 
	#MSG_RENAME_ABORT
 "Jêªnommêrõn, c®mêÁô chõr"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "Puèö moòj'aimai†bõ¿l'™cõ¿nom"

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "Ouais, sau‡quêÀ fichõ∏ûÉxi°ê∑s"

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "Yá dej®u¿åu¯quòs'≠≥Œêcommêˇ"

	)

152 
	#MSG_RENAME_NORNFR
 "T'a†rõ¿com¥i†®œ võ"

	)

153 
	#MSG_RENAME_FAILURE
 "AhØhaha, c®®foúe, bõ¿Áô"

	)

154 
	#MSG_RENAME_SUCCESS
 "B⁄ voûa, c'e° faô"

	)

155 
	#MSG_NO_SUPERSERVER
 "Puª-FTPd fauàÀÜ™˚∏®∑πú d'u¿su≥r-£rveur"

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "Yá memê∑†dêcom±ê'·p' su∏˚âêbeˇ√ dêmîde"

	)

157 
	#MSG_CONF_ERR
 "T®c⁄‡ñÀÉ°Öouºõ"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "EàÀ fichõ∏dêc⁄‡ave¯À†u£rs, i»e° ou ?"

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "C'e° quoòt⁄ dñúêave¯œ b™dê∑sß¡ê?"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "gid dêc⁄fün˚Åouã def⁄˚e"

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "Limô©i⁄ utûißãu∏dêmîde"

	)

162 
	#MSG_ILLEGAL_FACILITY
 "Tu sai†memê∑†ã sîvú du sy¶og"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "Eàœ c⁄fòLDAP jêmêœ fou†au cu»?"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "Eh,Åu sai†∑†c'e° quoòu√Üimôêdêch¨gê?"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "Li°êdêp‹t†touã fuckì"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "Limô©i⁄†dê'ls'Åouã†mîdiques"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "Tu f‹˚†À†c⁄√xi⁄†vî†n'imp‹ãÇawak"

	)

168 
	#MSG_ILLEGAL_RATIO
 "R©iÿd'u∂ﬂd/dow∆ﬂdÅouàpouºave"

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "Limô©i⁄ d'UID mîdique"

	)

170 
	#MSG_ILLEGAL_OPTION
 "FauàlúêÀ m™uñ, bouff⁄"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "LDAPBa£DN m™qu™àd™†À fichõ∏dêc⁄figuøti⁄ LDAP"

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "P¨amëª LDAPÖouºave"

	)

173 
	#MSG_NEW_CONNECTION
 "%†ømíês⁄ cul"

	)

174 
	#MSG_WELCOME_TO
 "C'e° dêœ b⁄√ :"

	)

175 
	#MSG_MAX_USERS
 "%luÑñou†÷êmaximumËs⁄àdej®c⁄√˘es, degage"

	)

176 
	#MSG_NB_USERS
 "T'e†ÀÇumîÿ%u su∏À†%u max."

	)

177 
	#MSG_WELCOME_TIME
 "L'heuªÜoˇÀÉ° %02d:%02d. P‹àdu sîveu∏: %u."

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "Jê¥íd quêÀ†mec†™⁄ymes"

	)

179 
	#MSG_RATIOS_EVERYONE
 "Y A DES RATIOS POUR TOUS LES UTILISATEURS :"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "LES UTILISATEURS ANONYMES ONT DES RATIOS DE UL/DL :"

	)

181 
	#MSG_RATIOS_RULE
 "Pou∏Àechî %u Mo,Åu doi†bÆ™˚∏%u Mo."

	)

182 
	#MSG_INFO_IDLE_M
 "SòtuÖi⁄˚†∂u†dê%lu möuãs,ÅuÅêÁi†ãj."

	)

183 
	#MSG_INFO_IDLE_S
 "SòtuÖi⁄˚†∂u†dê%lu sec⁄de†tuÅêÁi†ãj."

	)

184 
	#MSG_CANT_READ_FILE
 "[%s] i»su˚ de†bôe†íÉn„r"

	)

185 
	#MSG_LS_TRUNCATED
 "Jêt'í fûê%uÉàc'e° dej®∑†mÆ"

	)

186 
	#MSG_LS_SUCCESS
 "%uÉÀmíts, yá dêœ stuff"

	)

187 
	#MSG_LOGOUT
 "Cassos."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "[%s] c'e° u¿b©¨d, i»c⁄«ôÖa†s⁄ code"

	)

189 
	#MSG_ILLEGAL_UMASK
 "UmaskÖouºave"

	)

190 
	#MSG_STANDALONE_FAILED
 "Lê£rveu∏í sèndÆ⁄ê? TuÑeves."

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "SoôÅ'a†u¿com±êici, soôÅuÅêˇs£†touàdêsuôe"

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "Eh,ÉŒêe° b⁄√Å®s€u∏?"

	)

193 
	#MSG_MAX_USERS_IP
 "Tr› dêªlou†(%luËdïui†˚âêIP"

	)

194 
	#MSG_ACTIVE_DISABLED
 "Modêa˘i‡∂u†a˘i‡duÅout"

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "C'e° b⁄,ÅuÜ'a†ªcu≥ªe,Å®mîdê?"

	)

196 
	#MSG_NO_DISK_SPACE
 "B‹dñ, m⁄ disquêe°ÖÀö !"

	)

197 
	#MSG_OUT_OF_MEMORY
 "B‹dñ, m®memoúêe°ÖÀöê!"

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "Fou†u√ IP vÆidêë c®ú®mõux"

	)

199 
	#MSG_NO_ASCII_RESUME
 "D'ab‹dÅu degage†À fichõr,á¥e†⁄ discuã"

	)

200 
	#MSG_UNKNOWN_ALTLOG
 "F‹m© d'hi°‹iquêdêmîde"

	)

201 
	#MSG_ACCOUNT_DISABLED
 "Lêcomã [%s] s'e° faô buãr"

	)

202 
	#MSG_SQL_WRONG_PARMS
 "P¨amëª SQLáÜ®c⁄"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "Fichõ∏dêc⁄figuøti⁄ SQL foúeux"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "Pa†dê£rveu∏d™†œ c⁄figuøti⁄ SQL"

	)

205 
	#MSG_SQL_DOWN
 "Lê£rveu∏SQLÉ°Åouàde°roy"

	)

206 
	#MSG_ILLEGAL_QUOTA
 "QuŸ®touàpouºi"

	)

207 
	#MSG_QUOTA_FILES
 "%Œu fichõr†utûi£†(%d%%Ë-áut‹i£†: %Œu fichõrs"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu Kÿutûi£†(%d%%Ë-áut‹i£†: %Œu Ko"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "T'a†ex∂o£Å⁄ quŸ®: [%s] v®ëªÖulvîi£"

	)

210 
	#MSG_AUTH_UNKNOWN
 "C'e° quoòè mëhodêd'authítifiˇti⁄á 2 bÆÀ†?"

	)

211 
	#MSG_PDB_BROKEN
 "ImpossibÀ dêlúêÀ fichõ∏puªdb indexê(ou i»e° d™†u¿võux f‹m©Ë- EsßyezÖuª-pw mkdb"

	)

212 
	#MSG_ALIASES_ALIAS
 "%†c'e° u¿åu¯dêÊemm¨dáÜ®∂a˚ dê%s."

	)

213 
	#MSG_ALIASES_UNKNOWN
 "Jêc⁄«i†∑†%s."

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "Ahahah gro†«ze,Å⁄ fichõ∏d'Æü†e°Åouàpouºave"

	)

215 
	#MSG_ALIASES_LIST
 "Sòt'a†œ fÀmme,ÅuÖeux utûi£∏˚†øccourci†:"

	)

216 
	#MSG_PERUSER_MAX
 "T'e†dej®œ %lu fois, j'íáòm¨ª dêvoúÅ®gueuÀ"

	)

217 
	#MSG_IPV6_OK
 "Sòt'e†∑†u¿b©¨d,ÅuÖeuxÅêc⁄√˘îÉ¿IPv6."

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: Dúe˘,Üêsˇæ®û dóÀ du %†(%sËí %d bô†!"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: C'e° quoò˚ chif‰emíàdêèfiﬁê?"

	)

220 
	#MSG_TLS_NEEDED
 "Ecoute-moi connard :Å'as 10 secondesÖour configurer\n" \

221 "t⁄ clõ¡ dêmîdêí SSL/TLS. E¿©ãnd™t, degage."

	)

222 
	#MSG_ILLEGAL_CHARSET
 "T⁄ jeu dêˇø˘îêûÖux‹êgøve."

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: c⁄ãxã i¡rouvabÀ. Cassos."

	)

224 
	#MSG_PROT_OK
 "Nivóu dêsu≥∏meg®¥Ÿe˘i⁄ : \"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "Lêªgœgêívoyêave¯PROTÉ° u√ gros£ daubêquêjêªfu£Öou∏å™smëåêde†d⁄√es."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "C'e° quoò˚Çivóu dê¥Ÿe˘i⁄ %†? Pa†com¥is. Jêvai†d⁄¯choisú \"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT c®m¨chêqu'≠ª†u¿PBSZÑeussi"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÇ'®∑†ªtou∫êd'©åibuàu£rPassw‹d,ÖãàquêÀ†droô†d'ac˚†LDAP chõ¡."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "LDAPAuthMëhod d™†À fichõ∏dêc⁄f, c®doôÉåê'böd' ou '∑ssw‹d'."

	)

	@src/messages_hu.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: InvÆid TLSCùhîSuôê•ecifõd '%s'"

	)

2 
	#MSG_TIMEOUT
 "Id?t˙ŒÈpÈs"

	)

3 
	#MSG_CAPABILITIES
 "KÈ≥ssÈg v·…·†sikîãÀn"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "A Klõn†b⁄tŸèá k≠csﬁ©Ÿ"

	)

5 
	#MSG_CLIENT_READ_ERR
 "Klõn†ﬁdÆòﬁvas·sòhiba"

	)

6 
	#MSG_CANT_OPEN_CNX
 "A k≠csﬁ©Çem jˆâÜÈåe"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "Azád©cßt‹«Çem jˆâÜÈåe"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "A Klõn†cÌme"

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "Szöèx hib®az IP cÌmbí"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "PORTÖ¨™c†sikîes"

	)

11 
	#MSG_ONLY_IPV4V6
 "Cßk IPv4 È†IPv6Å·mog©Ÿà(1,2)"

	)

12 
	#MSG_ONLY_IPV4
 "Cßk IPv4Å·mog©Ÿà(1)"

	)

13 
	#MSG_TIMEOUT_PARSER
 "Id?t˙ŒÈpÈ†-ÖrÛb·lj meg kicsô gy‹ßbb™ gÈ≥ òÀgkˆzñebb"

	)

14 
	#MSG_LINE_TOO_LONG
 "A s‹Å˙»hossz˙"

	)

15 
	#MSG_LOG_OVERFLOW
 "A Klõn†meg¥Ûb·…®t˙lcs‹dÌènò®∑øncsv⁄Æòbuf„π"

	)

16 
	#MSG_GOODBYE
 "Viszl·t. Tê„…ˆ…ˆâÈ»%Œu È†Àtˆ…ˆâÈ»%Œu kb·jtŸ."

	)

17 
	#MSG_DEBUG_COMMAND
 "P¨™cs"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 "®pûœ«äyòhñyzëed"

	)

19 
	#MSG_NOT_LOGGED_IN
 "Nemvagy bñÈpve"

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "Ezá bizt⁄s·gòsÈm®nöc£¿im∂emít·lva"

	)

21 
	#MSG_NO_FILE_NAME
 "Nöc†ûyí f·j Èv"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "Nöc†ûyí kˆnyvt·∫Èv"

	)

23 
	#MSG_NO_RESTART_POINT
 "Nöc†˙jøödÌt·sòp⁄t"

	)

24 
	#MSG_ABOR_SUCCESS
 "MegszakÌt·†(ABORËsikîe†vﬁt"

	)

25 
	#MSG_MISSING_ARG
 "Hi·nyzÛ megh©·roz·s"

	)

26 
	#MSG_GARBAGE_FOUND
 "SzemÈàèl·lh©Ûáz ÈπÈk ut·n"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "Az ÈπÈkÅ˙»«gy"

	)

28 
	#MSG_IDLE_TIME
 "‹ªsj·øtòid? be·ŒÌtv®%lu m·sod≥r¸e"

	)

29 
	#MSG_SITE_HELP
 "A kˆvëkez? SITEÖ¨™csok ismîhë?ek fñ"

	)

30 
	#MSG_BAD_CHMOD
 "…rvÈnyãÀ¿ígedÈlyek"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "egy ÈrvÈnyãÀ¿kôîjesztÈs"

	)

32 
	#MSG_XDBG_OK
 "XDBGÖ¨™c†sikîes, debug szöà%d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "IsmîëÀ¿∑øncs"

	)

34 
	#MSG_TIMEOUT_NOOP
 "Id?t˙ŒÈpÈ†“öc†m?vñë %lu m·sod≥r˚)"

	)

35 
	#MSG_TIMEOUT_DATA
 "Id?t˙ŒÈpÈ†“öc†˙jád© %lu m·sod≥r˚)"

	)

36 
	#MSG_SLEEPING
 "Zzz..."

	)

37 
	#MSG_ALREADY_LOGGED
 "M·∏bejñítkeztÈl"

	)

38 
	#MSG_ANY_PASSWORD
 "Ak·rmûyí jñszÛ meg„Àl"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "An⁄ymou†„lhaszn·lÛÜÈ≥â be"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "An⁄ymou†„lhaszn·lÛÜÈ≥â bê®vútu·li†FTP-¿kîeszt¸l"

	)

41 
	#MSG_USER_OK
 "Fñhaszn·lÛ %†ªndbí. KÈªmá jñszÛt"

	)

42 
	#MSG_CANT_DO_TWICE
 "Ez kÈ±ñísÈgá jñíÀgòfﬁyam©b™"

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "A bizt⁄s·go†™⁄ymou†FTP k≠csﬁ© fñÈpÌtÈ£ sikîãÀ¿vﬁt"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "A s·vszÈÀssÈg haszn·œtod k‹l·tozv®v™"

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 "Ak·rmûyí jñszÛ meg„Àl"

	)

46 
	#MSG_NOTRUST
 "Sajn·lom, dê√mtudok megbÌznòbí√d"

	)

47 
	#MSG_WHOAREYOU
 "KÈæek m⁄dd meg kòvagyÅe"

	)

48 
	#MSG_AUTH_FAILED
 "Az⁄osÌt·†sikîãÀn, sajn·lom"

	)

49 
	#MSG_AUTH_TOOMANY
 "T˙»sok sikîãÀ¿az⁄osÌt·s"

	)

50 
	#MSG_NO_HOMEDIR
 "A kezd?m≠∑ÇemÉlÈrhë?, megszakÌt·s"

	)

51 
	#MSG_NO_HOMEDIR2
 "%†√mÜÈãzik vagyÉlÈrhëëÀn"

	)

52 
	#MSG_START_SLASH
 "IndÌt·†ôà/"

	)

53 
	#MSG_USER_GROUP_ACCESS
 "A %†„lhaszn·lÛ cs›‹tja"

	)

54 
	#MSG_FXP_SUPPORT
 "Ezá szîvîÅ·mog©j®az FXP ·tvôñt"

	)

55 
	#MSG_RATIO
 "Tiszã ed kñ»az %u:%u (UL/DLË¨·nyok©"

	)

56 
	#MSG_CHROOT_FAILED
 "A bizt⁄s·go†chroŸ(ËjaûÜÈåehoz·ß sikîãÀn"

	)

57 
	#MSG_CURRENT_DIR_IS
 "Rídbí. %†®jñíÀgòkˆnyvt·r"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "Rídbí. %†®jñíÀgòk‹l·tozŸàkˆnyvt·r"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†bñÈ≥â"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "A %†kˆnyvt·rb®v·…·†sikîãÀn"

	)

61 
	#MSG_PATH_TOO_LONG
 "AzÉlÈrÈsò˙àt˙»hossz˙"

	)

62 
	#MSG_CANT_PASV
 "Nem haszn·lh©sz PASV-Ÿ IPv6 k≠csﬁ©n·l. Haszn·lj EPSV-àhñyëã."

	)

63 
	#MSG_CANT_PASSIVE
 "AÖassiv mÛd˙ k≠csﬁ©Çem jˆâÜÈåe"

	)

64 
	#MSG_PORTS_BUSY
 "Az ˆssze†„¬èπŸàTCPÖ‹àfogœ…"

	)

65 
	#MSG_GETSOCKNAME_DATA
 "A hñyòad©cßt‹«áz⁄osÌt·ß sikîãÀn"

	)

66 
	#MSG_GETPEERNAME
 "A hñyòcßt‹«áz⁄osÌt·ß sikîãÀn"

	)

67 
	#MSG_INVALID_IP
 "E zÈ°,á megadŸàcÌm ÈrvÈnyãÀn"

	)

68 
	#MSG_NO_EPSV
 "KÈªm haszn·lj⁄ IPv6-szîkezëu klõn° EPSVÅ·mog©·sßl"

	)

69 
	#MSG_BAD_PORT
 "Hiba,Çemtudokáz < 1024Ö‹tokhoz k≠csﬁÛdni"

	)

70 
	#MSG_NO_FXP
 "Nemtudok k≠csﬁ©Ÿ megnyônòmegnyônò®%†-«k (cßk %†-«k)"

	)

71 
	#MSG_FXP
 "FXPÅøns„r: f‹r·s: %†cÈl: %s"

	)

72 
	#MSG_NO_DATA_CONN
 "Nöc†ad©k≠csﬁ©"

	)

73 
	#MSG_ACCEPT_FAILED
 "A k≠csﬁ©ÇemÉlfogadh©Û"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "Ad©k≠csﬁ©Élfogadva"

	)

75 
	#MSG_CNX_PORT_FAILED
 "Azád©k≠csﬁ©ÜÈåehoz·ßá %dÖ‹å®sikîãÀn"

	)

76 
	#MSG_CNX_PORT
 "K≠csﬁÛd·†® %dÖ‹thoz"

	)

77 
	#MSG_ANON_CANT_MKD
 "Hiba,án⁄ymou†„lhaszn·lÛkÇem hozh©«kÜÈåêkˆnyvt·øk©"

	)

78 
	#MSG_ANON_CANT_RMD
 "Hiba,án⁄ymou†„lhaszn·lÛkÇemÅˆrˆlhë√k kˆnyvt·øk©"

	)

79 
	#MSG_ANON_CANT_RENAME
 "An⁄ymou†„lhaszn·lÛkÇem mozg©h©«k/√vezhë√k ·àkˆnyvt·øk©"

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "An⁄ymou†„lhaszn·lÛkÇem ·ŒÌth©«kÉngedÈlyekë"

	)

81 
	#MSG_GLOB_NO_MEMORY
 "ElfogyŸà®memÛrü %†ãljesÌtÈ£ kˆzbí"

	)

82 
	#MSG_PROBABLY_DENIED
 "(Ez vÆÛszÌnuÀgÉzàjñítò\"EngedÈly megègadva\"Ë"

	)

83 
	#MSG_GLOB_READ_ERROR
 "Olvas·sòhib®%†ãljesÌtÈ£ kˆzbí"

	)

84 
	#MSG_GLOB_NO_MATCH
 "Nöc†has⁄lÛs·g %†Ébbí: %†"

	)

85 
	#MSG_CHMOD_FAILED
 "EngedÈlyv·…·†sikîãÀ¿%s"

	)

86 
	#MSG_CHMOD_SUCCESS
 "EngedÈlyv·…·†sikîe†%s"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "Hiba, dê√mtudokÉngedÈlyàv·…™i"

	)

88 
	#MSG_ANON_CANT_DELETE
 "An⁄ymou†„lhaszn·lÛkÇemÅˆrˆlhë√k"

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "An⁄ymou†„lhaszn·lÛkÅÆ·¿√m Ìrh©«k fñ¸»meglÈvÿf·jlok©"

	)

90 
	#MSG_DELE_FAILED
 "NemÜehëÅˆrˆ ò%s"

	)

91 
	#MSG_DELE_SUCCESS
 "%s%s%s%†tˆrˆlve"

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "EgyëÀ¿f·j»£mÜëàtˆrˆlve"

	)

93 
	#MSG_LOAD_TOO_HIGH
 \

96 "mödÌgÉngedÈlyezvêv™«k."

	)

97 
	#MSG_OPEN_FAILURE
 "SikîãÀ¿megnyô·†%s"

	)

98 
	#MSG_OPEN_FAILURE2
 "A f·j»megnyô·ß sikîãÀn"

	)

99 
	#MSG_STAT_FAILURE
 "A f·j»mÈªãÇemÅÆ·lh©Û"

	)

100 
	#MSG_STAT_FAILURE2
 "A f·j»lÈãzÈsÈ√kÉŒí‹zÈ£ sikîãÀn"

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "Az ˙jøödÌt·sòÈπÈk %ŒdÅ˙»«gyá f·j»mÈªtÈhez %Œd."

	)

102 
	#MSG_REST_RESET
 "⁄jøödÌt·sòÈπÈk 0 -ø v·…ozètva"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "Cßk hagyom·nyo†f·j…ÅudÜëˆ…íi"

	)

104 
	#MSG_NOT_MODERATED
 \

106 "®f·j»Àtˆ…ÈsÈàazádmöiszå·t‹ok mÈgÇem hagyt·k jÛv·"

	)

107 
	#MSG_RATIO_DENIAL
 \

110 "KÈæekÅˆ…†„»vÆamòhasznoßàÈ†ut·«Üìch-ñj."

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "SemmòÀtˆ…íivÆÛÇem m¨adt"

	)

112 
	#MSG_WINNER
 "A sz·mÌtÛgÈ∞®b¨·tod. BÌzzá sz·mÌtÛgÈpbí."

	)

113 
	#MSG_KBYTES_LEFT
 "%.1‡kb·jà®h·åÆÈvÿÀtˆ…ídÿmínyisÈg"

	)

114 
	#MSG_ABORTED
 "¡tvôñ megszakÌtva"

	)

115 
	#MSG_DATA_WRITE_FAILED
 "Õr·shib®azád©k≠csﬁ©bÛl"

	)

116 
	#MSG_DATA_READ_FAILED
 "Olvas·sòhib®azád©k≠csﬁ©bÛl"

	)

117 
	#MSG_MMAP_FAILED
 "A f·j»memÛri·b®vÆÛ bejegyzÈ£ sikîãÀn"

	)

118 
	#MSG_WRITE_FAILED
 "F·jlb®Ìr·†kˆzbí hib®tˆπÈ¡"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡m·sod≥r¯(ôàmÈrve), %.2‡Mb·jà≥∏m·sod≥rc"

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡m·sod≥r¯(ôàmÈrve), %.2‡Kb·jà≥∏m·sod≥rc"

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡m·sod≥r¯(ôàmÈrve), %.2‡b·jà≥∏m·sod≥rc"

	)

122 
	#MSG_SPACE_FREE_M
 "%.1‡Mb·jà®szabadÜemezãr¸Àt"

	)

123 
	#MSG_SPACE_FREE_K
 "%‡Kb·jà®szabadÜemezãr¸Àt"

	)

124 
	#MSG_DOWNLOADED
 "Àtˆ…ve"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "RESTÇumîiku†∑ømÈã∏sz¸ksÈges"

	)

126 
	#MSG_REST_ASCII_STRICT
 "Rïly m¨kî mu° bê0 i¿ASCII mode"

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "⁄jøödÌt·†ezíáÖ⁄t⁄ %Œd. DêASCII mÛdb™ vagyunk."

	)

128 
	#MSG_REST_SUCCESS
 "⁄jøödÌt·†ezíáÖ⁄tom %Œd"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "Prohibôed dúe˘‹yÇame"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "TûtŸàf·j»nÈv: %s"

	)

131 
	#MSG_MKD_FAILURE
 "Kˆnyvt·∏lÈåehoz·†sikîãÀn"

	)

132 
	#MSG_MKD_SUCCESS
 "A kˆnyvt·∏sikîe£¿lÈåejˆâ"

	)

133 
	#MSG_RMD_FAILURE
 "Kˆnyvt·∏tˆæÈ£ sikîãÀn"

	)

134 
	#MSG_RMD_SUCCESS
 "A kˆnyvt·∏sikîe£¿tˆrˆlve"

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "Az idÿbÈlyegÇem megh©·rozh©Û"

	)

136 
	#MSG_MODE_ERROR
 "Cßk ASCII È†bö·ri†mÛdÅ·mog©Ÿt"

	)

137 
	#MSG_CREATE_FAILURE
 "F·j»lÈåehoz·ß sikîãÀn"

	)

138 
	#MSG_ABRT_ONLY
 "ABRTázÉgyëÀ¿jogo†∑ønc†„…ˆ…È†kˆzbí"

	)

139 
	#MSG_UPLOAD_PARTIAL
 "rÈszÀge£¿„…ˆ…ve"

	)

140 
	#MSG_REMOVED
 "ñt·vﬁÌtva"

	)

141 
	#MSG_UPLOADED
 "„…ˆ…ve"

	)

142 
	#MSG_GMTIME_FAILURE
 "Hñyòidÿmegh©·roz·ß sikîãÀn"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "Cßk 8-bôe†b·jtokÅ·mog©Ÿèk,Çem 10 ÈvvñÉzñŸàvagyunk"

	)

144 
	#MSG_TYPE_UNKNOWN
 "IsmîëÀ¿tÌpu†(TYPE)"

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPE mo°"

	)

146 
	#MSG_STRU_FAILURE
 "Cßk F(ûeËt·mog©Ÿt"

	)

147 
	#MSG_MODE_FAILURE
 "KÈªm haszn·lj⁄ S—ªamËmÛdŸ"

	)

148 
	#MSG_RENAME_ABORT
 "Elozÿ·äevezÈ†megszakÌtva"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "RNFRÉlfogadv®- f·j»lÈãzik, kÈszáz ˙jÇÈvª"

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "Hiba,á megadŸàf·j ÈvÇemÜÈãzik"

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "¡äevezÈ†(RENAMEËsikîãÀ¿-á cÈlf·j»m·∏lÈãzik"

	)

152 
	#MSG_RENAME_NORNFR
 "RNFR sz¸ksÈge†RNTOÉlŸt"

	)

153 
	#MSG_RENAME_FAILURE
 "¡äevezÈs/mozg©·†hiba"

	)

154 
	#MSG_RENAME_SUCCESS
 "A f·j»sikîe£¿·àÀâÇevezvêvagy mozg©va"

	)

155 
	#MSG_NO_SUPERSERVER
 "KÈªm fuâasßáÖuª-·pd -àegy szu≥∏szîvîí bñ¸»(möà®t˝£rvî)"

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "NemÅÆ·lom '·p'áz⁄osÌtÛt"

	)

157 
	#MSG_CONF_ERR
 "K⁄figur·ciÛ†hiba"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "A vútu·li†„lhaszn·lÛ f·j Èv hi·nyzik"

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "…rvÈnyãÀ¿s·vszÈÀssÈg fojtÛ ÈπÈk"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "…rvÈnyãÀ¿megbÌzh©Û gid chroŸ -«k"

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "…rvÈnyãÀ¿„lhaszn·lÛ k‹l·t"

	)

162 
	#MSG_ILLEGAL_FACILITY
 "IsmîëÀ¿kÈ≥ssÈgÇÈv"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "…rvÈnyãÀ¿LDAP k⁄figur·ciÛ†f·jl"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "…rvÈnyãÀ¿ãrhñÈsòk‹l·t"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "…rvÈnyãÀ¿p‹àèπom·ny"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "…rvÈnyãÀ¿'ls' k‹l·tok"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "…rvÈnyãÀ¿îﬁããâ IPÖasszÌv mÛd˙ k≠csﬁ©hoz"

	)

168 
	#MSG_ILLEGAL_RATIO
 "…rvÈnyãÀ¿„…ˆ…Èsi/Àtˆ…Èsòr·è"

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "…rvÈnyãÀ¿UID k‹l·t"

	)

170 
	#MSG_ILLEGAL_OPTION
 "IsmîëÀ¿fut·sò›ciÛ"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "Az LDAPBa£DN hi·nyzikáz LDAP k⁄figur·ciÛ†f·jlbÛl"

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "Rossz LDAPÖ¨amÈãªk"

	)

173 
	#MSG_NEW_CONNECTION
 "⁄j k≠csﬁ©á kˆvëkezÿcÌmrﬁ: %s"

	)

174 
	#MSG_WELCOME_TO
 "‹dvˆzlˆm"

	)

175 
	#MSG_MAX_USERS
 "%lu fñhaszn·lÛ (®maximumËm·∏bêv™ÜÈpve, sajn·lom"

	)

176 
	#MSG_NB_USERS
 "Têvagyá %uá %u fñhaszn·lÛ kˆz¸l,ákòbñÈphë."

	)

177 
	#MSG_WELCOME_TIME
 "A HñyòIdÿ%02d:%02d. szîvîÖ‹t: %u."

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "Cßkán⁄ymou†FTP megígedët"

	)

179 
	#MSG_RATIOS_EVERYONE
 "A R¡T¡K MINDENKIRE …RV…NYESEK:"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "ANONYMOUS FELHASZ¡L”K AZ UL/DL A K÷VETKEZO R¡T¡NAK VANNAK AL¡RENDELVE:"

	)

181 
	#MSG_RATIOS_RULE
 "ahhoz, hogyÜëˆ…†%u Mb-Ÿ, %u MbÇyÆ·nks·g fñtˆ…È£ kˆãÀzo."

	)

182 
	#MSG_INFO_IDLE_M
 "%luÖî¯öaktivô·†ut·¿®k≠csﬁ© megszakad."

	)

183 
	#MSG_INFO_IDLE_S
 "%lu m·sod≥r¯öaktivô·†ut·¿®k≠csﬁ© megszakad."

	)

184 
	#MSG_CANT_READ_FILE
 "Hiba,áz olvas·†ÀhëëÀ¿[%s]"

	)

185 
	#MSG_LS_TRUNCATED
 "Kimíë %uÑÈszª cs⁄kÌtva"

	)

186 
	#MSG_LS_SUCCESS
 "%uáz ˆssze†meg„Àlo"

	)

187 
	#MSG_LOGOUT
 "KijñítkezÈs."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "Az⁄osÌt·†sikîãÀ¿[%s] fñhaszn·lÛ«k"

	)

189 
	#MSG_ILLEGAL_UMASK
 "…rvÈnyãÀ¿umask"

	)

190 
	#MSG_STANDALONE_FAILED
 "Egyed¸l·ŒÛ szîvîÉlödÌt·ß sikîãÀn"

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "EzÉgyÖriv·àªndszî -Çöc†™⁄ymou†bejñítkezÈs"

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "B·rmûyí jñszÛ meg„Àl"

	)

193 
	#MSG_MAX_USERS_IP
 "T˙»sok k≠csﬁ©Éºﬁáz IP-rﬁ: (%luË"

	)

194 
	#MSG_ACTIVE_DISABLED
 "AktÌv mÛdÜëûtva"

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "A f·j»sikîe£¿·àÀâÅˆ…ve"

	)

196 
	#MSG_NO_DISK_SPACE
 "A DiszkÅñêv™ - kÈªm kÈsobbÅˆ…sˆ¿„l"

	)

197 
	#MSG_OUT_OF_MEMORY
 "ElfogyŸà®memÛrü"

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "…rvÈnyãÀ¿megbÌzh©Û IP cÌm"

	)

199 
	#MSG_NO_ASCII_RESUME
 "ASCII fﬁyèt·†√m bizt⁄s·gos, kÈªmÉloszˆ∏tˆrˆljê®f·j…"

	)

200 
	#MSG_UNKNOWN_ALTLOG
 "IsmîëÀ¿«∂Ûz·sòf‹m·tum"

	)

201 
	#MSG_ACCOUNT_DISABLED
 " Nemtud bñÈ≤òezzñá fñhaszn·lÛnÈvvñ: [%s]: bñÈpÈsònÈvÜëûtva"

	)

202 
	#MSG_SQL_WRONG_PARMS
 "Rossz SQLÖ¨amÈãªk"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "…rvÈnyãÀ¿SQL k⁄figur·ciÛ†f·jl"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "Hi·nyziká szîvîáz SQL k⁄figur·ciÛ†f·jlbÛl"

	)

205 
	#MSG_SQL_DOWN
 "Az SQL szîvî ˙gyl·tszikÇem mukˆdik"

	)

206 
	#MSG_ILLEGAL_QUOTA
 "…rvÈnyãÀ¿kvÛè"

	)

207 
	#MSG_QUOTA_FILES
 "%Œu f·j»haszn·… (%d%%Ë-ÉngedÈlyezve: %Œu f·jl"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu Kb·jàhaszn·… (%d%%Ë-ÉngedÈlyezve: %Œu Kb"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "KvÛèÉlÈrve: [%s] mítÈ†sikîãÀn"

	)

210 
	#MSG_AUTH_UNKNOWN
 "IsmîëÀ¿hôñesÌtÈsòmÛdszî"

	)

211 
	#MSG_PDB_BROKEN
 "Az indexñàpuªdb f·j»ﬁvas·ß sikîãÀ¿(vagyÑÈgòf‹m·tumË-ÖrÛb·lja:Öuª-pw mkdb"

	)

212 
	#MSG_ALIASES_ALIAS
 "%†egyálü†%†-«k."

	)

213 
	#MSG_ALIASES_UNKNOWN
 "IsmëîÀ¿Æü†%s."

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "SÈr¸…álü†f·jlok"

	)

215 
	#MSG_ALIASES_LIST
 "A kˆvëkezÿÆüsokÉlÈrhë€k :"

	)

216 
	#MSG_PERUSER_MAX
 "Nem fogadh©okÉ»tˆbb k≠csﬁ©Ÿ, möà%lu ugy™©tÛ»®„lhaszn·lÛtÛl"

	)

217 
	#MSG_IPV6_OK
 "IPv6 k≠csﬁ©ok szötÈ¿haszn·lh©Ûaká szîvîí."

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: EngedÈlyezvê%s, %s, %dÅôko†bôã»tôkosÌtva"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: TôkosÌt·†t˙»gyíge"

	)

220 
	#MSG_TLS_NEEDED
 "Hiba, cleartext belÈpÈsi formaÇemÉngedÈlyezett.\n" \

221 "KÈªm k≠csﬁÛdj⁄ ˙jø SSL/TLS bizt⁄s·gòmÛdŸ haszn·lva."

	)

222 
	#MSG_ILLEGAL_CHARSET
 "IŒegÆ ch¨£t"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: C⁄ãxànŸ found. Exôög."

	)

224 
	#MSG_PROT_OK
 "D©®¥Ÿe˘i⁄Üevñ sëÅÿ\"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "D©®c⁄√˘i⁄ c™nŸ bê›íed wôhÅhi†PROT sëtög."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "PrŸe˘i⁄Üevñ %†nŸ undî°ood. FÆlbackÅÿ\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT mu° bê¥e˚ded byá suc˚ssfu»PBSZ comm™d"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÑëu∫edÇÿu£rPassw‹dáâribuã, check LDAPác˚s†rights."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "InvÆid LDAPAuthMëhod i¿thêc⁄figuøti⁄ fûe. Should bê'böd' o∏'∑ssw‹d'."

	)

	@src/messages_it.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: InvÆid TLSCùhîSuôê•ecifõd '%s'"

	)

2 
	#MSG_TIMEOUT
 "Timeout"

	)

3 
	#MSG_CAPABILITIES
 "Impossibûêmodifiˇª iÖîmessi"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "I»˛õ¡ h®chiusÿœ c⁄√ssi⁄e"

	)

5 
	#MSG_CLIENT_READ_ERR
 "Eº‹êdòÀâuø dÆ clõ¡"

	)

6 
	#MSG_CANT_OPEN_CNX
 "Impossibûê≠rúêœ c⁄√ssi⁄e"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "Impossibûê¸óª i»sockë d©i"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "L'ödúizzÿdñ clõ¡ Ë"

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "Eº‹êdòsöèssò√Œ'ödúizzÿIP"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "Com™dÿPORTÉ£guôÿc⁄ suc˚sso"

	)

11 
	#MSG_ONLY_IPV4V6
 "S⁄ÿsuµ‹ètòsﬁÿIPv4É IPv6 (1,2)"

	)

12 
	#MSG_ONLY_IPV4
 "» suµ‹ètÿsﬁÿIPv4 (1)"

	)

13 
	#MSG_TIMEOUT_PARSER
 "Timeouà-Örov®®digô¨êpi˘ vño˚míãÜ®¥ossim®vﬁè"

	)

14 
	#MSG_LINE_TOO_LONG
 "LöóÅr›pÿlunga"

	)

15 
	#MSG_LOG_OVERFLOW
 "I»˛õ¡ h®˚rˇtÿdòm™d¨êö ovîÊow i»buf„∏dñœÜöó dòcom™do"

	)

16 
	#MSG_GOODBYE
 "Aºivedîci. Haòu∂ﬂd©ÿ%ŒuÉ dow∆ﬂd©ÿ%Œu kbyãs."

	)

17 
	#MSG_DEBUG_COMMAND
 "Com™do"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 "ËÜ®tu®loˇzi⁄êc‹ª¡e"

	)

19 
	#MSG_NOT_LOGGED_IN
 "N⁄Åò£òlogg©o"

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "E°ísi⁄òdòsicuªzz®n⁄ im∂emíèã"

	)

21 
	#MSG_NO_FILE_NAME
 "Nessu¿nomêdòfûe"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "Nessu¿nomêdòdúe˘‹y"

	)

23 
	#MSG_NO_RESTART_POINT
 "Nessu¿pu¡ÿdòrùªß"

	)

24 
	#MSG_ABOR_SUCCESS
 "Vi°ÿchêvedòque°o, ABOR devêes£ªÑiuscôo"

	)

25 
	#MSG_MISSING_ARG
 "Argomítÿm™ˇ¡e"

	)

26 
	#MSG_GARBAGE_FOUND
 "Trov©®•azz©uø d›ÿû vÆ‹e"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "VÆ‹êå›pÿgønde"

	)

28 
	#MSG_IDLE_TIME
 "Tempÿdòö©tivô‡ impo°©ÿ®%lu sec⁄di"

	)

29 
	#MSG_SITE_HELP
 "I seguítòcom™dòSITE s⁄ÿric⁄osciuti"

	)

30 
	#MSG_BAD_CHMOD
 "Pîmessòn⁄ vÆidi"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "Ë u«É°ísi⁄êsc⁄osciuè"

	)

32 
	#MSG_XDBG_OK
 "Com™dÿXDBGÑiuscôo, i»livñlÿdòdebug Ë oø %d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "Com™dÿsc⁄osciuto"

	)

34 
	#MSG_TIMEOUT_NOOP
 "Timeouà“essu« o≥øzi⁄ê≥∏%lu sec⁄di)"

	)

35 
	#MSG_TIMEOUT_DATA
 "Timeouà“essu¿nuovÿd©ÿ≥∏%lu sec⁄di)"

	)

36 
	#MSG_SLEEPING
 "Zzz..."

	)

37 
	#MSG_ALREADY_LOGGED
 "Seògü'Üogg©o"

	)

38 
	#MSG_ANY_PASSWORD
 "QuÆunquê∑ssw‹d funzi⁄î‡"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "Uã¡ê™⁄imÿlogg©o"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "Uã¡ê™⁄imÿlogg©ÿ√Œ'FTP vútuÆe"

	)

41 
	#MSG_USER_OK
 "Uã¡ê%†OK. Richõ°®∑ssw‹d"

	)

42 
	#MSG_CANT_DO_TWICE
 "N⁄ÖossümÿÁæÿ√Œ®£ssi⁄êc‹ª¡e"

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "Impossibûê©tiv¨êu¿FTPán⁄imÿsicuro"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "I»tuÿusÿdñœÜ¨ghezz®dòb™d®ËÑi°ëto"

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 "QuÆunquê∑ssw‹d funzi⁄î‡"

	)

46 
	#MSG_NOTRUST
 "Mòdi•ü˚, m®n⁄Öossÿfid¨mòdòã"

	)

47 
	#MSG_WHOAREYOU
 "Pî fav‹êdimmòchò£i"

	)

48 
	#MSG_AUTH_FAILED
 "Auã¡iˇzi⁄êÁŒôa, spü˚¡e"

	)

49 
	#MSG_AUTH_TOOMANY
 "Tr›≥áuã¡iˇzi⁄òÁŒôe"

	)

50 
	#MSG_NO_HOMEDIR
 "Homêdúe˘‹yÇ⁄ di•⁄ibûê-á¬uŒo"

	)

51 
	#MSG_NO_HOMEDIR2
 "%†n⁄Ési°êÿË iºaggiungibûe"

	)

52 
	#MSG_START_SLASH
 "P¨ãnz®ö /"

	)

53 
	#MSG_USER_GROUP_ACCESS
 "L'uã¡ê%†h®ac˚ssÿdògruµo"

	)

54 
	#MSG_FXP_SUPPORT
 "Que°ÿ£rvî suµ‹èÅøs„rimítòFXP"

	)

55 
	#MSG_RATIO
 "Devòri•ëèª u«Ñ©iÿdò%u:%u (UL/DL)"

	)

56 
	#MSG_CHROOT_FAILED
 "Impossibûêimpo°¨êu¿jaû chroŸ(Ësicuro"

	)

57 
	#MSG_CURRENT_DIR_IS
 "OK. L®dúe˘‹y c‹ª¡êË %s"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "OK. L®dúe˘‹yÜimô©®c‹ª¡êË %s"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†Ë oøÜogg©o"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "ImpossibûêˇmbüªÜ®dúe˘‹y i¿%s"

	)

61 
	#MSG_PATH_TOO_LONG
 "Pîc‹sÿå›pÿlungo"

	)

62 
	#MSG_CANT_PASV
 "N⁄Öuoòußª PASVÇñÀ c⁄√ssi⁄òIPv6. Uß EPSV inve˚."

	)

63 
	#MSG_CANT_PASSIVE
 "Impossibûê≠rúêu« c⁄√ssi⁄ê∑ssiva"

	)

64 
	#MSG_PORTS_BUSY
 "TuâêÀÖ‹ã TCPÑi£rv©ês⁄ÿoccu∑ã"

	)

65 
	#MSG_GETSOCKNAME_DATA
 "Impossibûêidítifiˇª i»sockë d©òloˇÀ"

	)

66 
	#MSG_GETPEERNAME
 "Impossibûêidítifiˇª i»sockëÜoˇÀ"

	)

67 
	#MSG_INVALID_IP
 "Spü˚¡e, indúizzÿf‹nôÿn⁄ vÆido"

	)

68 
	#MSG_NO_EPSV
 "Pªgo, ußª u¿˛õ¡ comf‹mê®IPv6 c⁄ suµ‹çÖî EPSV"

	)

69 
	#MSG_BAD_PORT
 "Spü˚¡e, m®n⁄ mòc⁄√âÿ®p‹ã < 1024"

	)

70 
	#MSG_NO_FXP
 "N⁄á¥úÚ u« c⁄√ssi⁄êvîsÿ%†(sﬁÿvîsÿ%s)"

	)

71 
	#MSG_FXP
 "Tøs„rimítÿFXP: d®%†®%s"

	)

72 
	#MSG_NO_DATA_CONN
 "Nessu« c⁄√ssi⁄êd©i"

	)

73 
	#MSG_ACCEPT_FAILED
 "L®c⁄√ssi⁄ên⁄ÖuÚÉs£ªác˚â©a"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "C⁄√ssi⁄êd©òac˚â©a"

	)

75 
	#MSG_CNX_PORT_FAILED
 "Impossibûê≠rúêu« c⁄√ssi⁄êd©òsuŒ®p‹è %d"

	)

76 
	#MSG_CNX_PORT
 "Mò°ÿcﬁÀg™dÿÆœÖ‹è %d"

	)

77 
	#MSG_ANON_CANT_MKD
 "Spü˚¡e, glòuã¡ò™⁄imòn⁄ h™nÿûÖîmessÿdò¸óª dúe˘‹õs"

	)

78 
	#MSG_ANON_CANT_RMD
 "Spü˚¡e, glòuã¡ò™⁄imòn⁄ h™nÿûÖîmessÿdòˇn˚Œ¨êdúe˘‹õs"

	)

79 
	#MSG_ANON_CANT_RENAME
 "Glòuã¡ò™⁄imòn⁄ h™nÿûÖîmessÿdò•o°¨e/röomö¨êfûes"

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "Glòuätò™⁄imòn⁄Öoss⁄ÿˇmbüª iÖîmessi"

	)

81 
	#MSG_GLOB_NO_MEMORY
 "Mem‹üÉßurô®duø¡êû globbög dò%s"

	)

82 
	#MSG_PROBABLY_DENIED
 "(Que°ÿ¥obabûmíã signifiˇ \"Pîmessÿ√g©o\")"

	)

83 
	#MSG_GLOB_READ_ERROR
 "Eº‹êdòÀâuø duø¡êû globbög dò%s"

	)

84 
	#MSG_GLOB_NO_MATCH
 "Nessu« c‹ri•⁄díz®dò%†ö %s"

	)

85 
	#MSG_CHMOD_FAILED
 "Impossibûêˇmbüª iÖîmessòsu %s"

	)

86 
	#MSG_CHMOD_SUCCESS
 "Pîmessòˇmbütòsu %s"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "Spü˚¡e, m®n⁄ÖossÿˇmbüªÇessu¿≥rmesso"

	)

88 
	#MSG_ANON_CANT_DELETE
 "Glòuã¡ò™⁄imòn⁄Öoss⁄ÿˇn˚Œ¨êfûes"

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "Glòuã¡ò™⁄imòn⁄Öoss⁄ÿsovøs¸ivîêfûe†esi°íti"

	)

90 
	#MSG_DELE_FAILED
 "Impossibûêˇn˚Œ¨ê%s"

	)

91 
	#MSG_DELE_SUCCESS
 "C™˚Œ©ÿ%s%s%s%s"

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "Nessu¿fûêˇn˚Œ©o"

	)

93 
	#MSG_LOAD_TOO_HIGH
 \

96 "≥rmessi."

	)

97 
	#MSG_OPEN_FAILURE
 "Impossibûê≠rúê%s"

	)

98 
	#MSG_OPEN_FAILURE2
 "Impossibûê≠rúêquñ fûe"

	)

99 
	#MSG_STAT_FAILURE
 "Impossibûêåov¨êœ dimísi⁄êdñ fûe"

	)

100 
	#MSG_STAT_FAILURE2
 "Impossibûêc⁄åﬁœªÜ'esi°íz®dñ fûe"

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "L'off£àdòrù¨ãnz®%Œd ËÅr›pÿgøndê≥∏œ dimísi⁄êdñ fûê%Œd."

	)

102 
	#MSG_REST_RESET
 "Off£àdòrù¨ãnz®ª£â©ÿ®0"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "Possÿ£rvúêsﬁÿn‹mÆòfûes"

	)

104 
	#MSG_NOT_MODERATED
 \

106 "°©ÿ™c‹®≠¥ov©ÿ≥∏û dow∆ﬂdög daglòammöi°øt‹êdñ sôo."

	)

107 
	#MSG_RATIO_DENIAL
 \

110 "Pî fav‹êu∂ﬂd®u¿po' dòrob®ê¥ov®®sˇriˇªÖi˘Å¨di."

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "Nõ¡êÆåÿd®dow∆ﬂd¨e"

	)

112 
	#MSG_WINNER
 "I»compuã∏ËÅuÿamico. Fid©òdñ compuãr"

	)

113 
	#MSG_KBYTES_LEFT
 "%.1‡kbyã†d®dow∆ﬂd¨e"

	)

114 
	#MSG_ABORTED
 "Tøs„rimítÿ™nuŒ©o"

	)

115 
	#MSG_DATA_WRITE_FAILED
 "Eº‹êduø¡êœ s¸ôtuø suŒ®c⁄√ssi⁄êd©i"

	)

116 
	#MSG_DATA_READ_FAILED
 "Eº‹êduø¡êœÜëtuø dÆœ c⁄√ssi⁄êd©i"

	)

117 
	#MSG_MMAP_FAILED
 "Impossibûêm≠∑ª i»fûêö mem‹ü"

	)

118 
	#MSG_WRITE_FAILED
 "Eº‹êduø¡êœ s¸ôtuø su»fûe"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡£c⁄dò(misuøtòqui), %.2‡Mbyã†Æ sec⁄do"

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡£c⁄dò(misuøtòqui), %.2‡Kbyã†Æ sec⁄do"

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡£c⁄dò(misuøtòqui), %.2‡byã†Æ sec⁄do"

	)

122 
	#MSG_SPACE_FREE_M
 "%.1‡Mbyã†dò•aziÿlibîÿsu disco"

	)

123 
	#MSG_SPACE_FREE_K
 "%‡Kbyã†dò•aziÿlibîÿsu disco"

	)

124 
	#MSG_DOWNLOADED
 "dow∆ﬂd©o"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "REST h®bisognÿdòu¿∑ømërÿnumîico"

	)

126 
	#MSG_REST_ASCII_STRICT
 "I»m¨ˇt‹êdòª∂y devêes£ª 0 i¿modÆô‡ ASCII"

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "Rù¨ãnz®®%Œd. M®sümÿö modÆô‡ ASCII"

	)

128 
	#MSG_REST_SUCCESS
 "Rù¨ãnz®®%Œd"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "Nomêdúe˘‹yÖroibôo"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "Nomêfûê¥oibôo: %s"

	)

131 
	#MSG_MKD_FAILURE
 "Impossibûê¸óªÜ®dúe˘‹y"

	)

132 
	#MSG_MKD_SUCCESS
 "L®dúe˘‹y Ë sèè cª©®c⁄ suc˚sso"

	)

133 
	#MSG_RMD_FAILURE
 "Impossibûêˇn˚Œ¨êœ dúe˘‹y"

	)

134 
	#MSG_RMD_SUCCESS
 "L®dúe˘‹y Ë sèè c™˚Œ©®c⁄ suc˚sso"

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "ImpossibûêŸã√ª u¿time°amp"

	)

136 
	#MSG_MODE_ERROR
 "S⁄ÿsuµ‹ètòsﬁÿÀ modÆô‡ ASCIIÉ bö¨y"

	)

137 
	#MSG_CREATE_FAILURE
 "Impossibûê¸óª i»fûe"

	)

138 
	#MSG_ABRT_ONLY
 "ABRT ËÜ'unicÿcom™dÿc⁄£¡ôÿduø¡êl'u∂ﬂd"

	)

139 
	#MSG_UPLOAD_PARTIAL
 "∑rzülmíã u∂ﬂd©o"

	)

140 
	#MSG_REMOVED
 "ˇn˚Œ©o"

	)

141 
	#MSG_UPLOADED
 "u∂ﬂd©o"

	)

142 
	#MSG_GMTIME_FAILURE
 "ImpossibûêŸã√ªÜ'‹®loˇÀ"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "S⁄ÿsuµ‹ètòsﬁÿbyã†dò8-bô,Ç⁄ sümÿrima°ò®10á¬òf‡"

	)

144 
	#MSG_TYPE_UNKNOWN
 "TYPE sc⁄osciuto"

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPE Ë oø"

	)

146 
	#MSG_STRU_FAILURE
 "» suµ‹ètÿsﬁÿF(ûe)"

	)

147 
	#MSG_MODE_FAILURE
 "Pî fav‹êußÜ®modÆô‡ S—ªam)"

	)

148 
	#MSG_RENAME_ABORT
 "A¬uŒÿœÖª˚díã o≥øzi⁄êdòröomöa"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "RNFRác˚â©ÿ- i»fûêesi°e,Ör⁄tÿ≥∏de°öazi⁄e"

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "Spü˚¡e, m®quñ fûên⁄Ési°e"

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "RENAME FÆlôÿ- i»fûêdòde°öazi⁄êesi°êgi‡"

	)

152 
	#MSG_RENAME_NORNFR
 "»Çe˚sßriÿRNFRÖrim®dòRNTO"

	)

153 
	#MSG_RENAME_FAILURE
 "Eº‹êöÑöomöa/•o°a"

	)

154 
	#MSG_RENAME_SUCCESS
 "Fûêröomö©ÿÿ•o°©ÿc⁄ suc˚sso"

	)

155 
	#MSG_NO_SUPERSERVER
 "L™cüÖuª-·pd d®u¿su≥r-£rvî (comêt˝£rvî)"

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "Impossibûêåov¨êl'accou¡ '·p'"

	)

157 
	#MSG_CONF_ERR
 "Eº‹êdòc⁄figuøzi⁄e"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "Nomêfûêdeglòuã¡òvútuÆòm™ˇ¡e"

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "VÆ‹ê≥∏thrŸéögÇ⁄ vÆido"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "GidÅru°edÖî chroŸÇ⁄ vÆido"

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "Limôêuã¡òn⁄ vÆido"

	)

162 
	#MSG_ILLEGAL_FACILITY
 "NomêÁcûôy sc⁄osciuto"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "Fûêdòc⁄figuøzi⁄êLDAPÇ⁄ vÆido"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "Limôêdòˇricÿn⁄ vÆido"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "R™gêdòp‹ãÇ⁄ vÆido"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "Limôò'ls'Ç⁄ vÆidi"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "IndúizzÿIP f‹z©ÿ≥∏c⁄√ssi⁄ò∑ssivên⁄ vÆido"

	)

168 
	#MSG_ILLEGAL_RATIO
 "R©iÿdòu∂ﬂd/dow∆ﬂdÇ⁄ vÆida"

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "LimôêuidÇ⁄ vÆido"

	)

170 
	#MSG_ILLEGAL_OPTION
 "Opzi⁄êrun-timêsc⁄osciuè"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "LDAPBa£DN m™ˇ¡ê√»fûêdòc⁄figuøzi⁄êLDAP"

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "P¨amëròLDAPÉº©i"

	)

173 
	#MSG_NEW_CONNECTION
 "Nuov®c⁄√ssi⁄êd®%s"

	)

174 
	#MSG_WELCOME_TO
 "Bívíutÿö"

	)

175 
	#MSG_MAX_USERS
 "%lu uã¡ò(û massimoËs⁄ÿgi‡ cﬁÀgg©i, spü˚¡e"

	)

176 
	#MSG_NB_USERS
 "Seòl'uã¡ênumîÿ%u dò%u c⁄£¡ôi"

	)

177 
	#MSG_WELCOME_TIME
 "L'‹®loˇÀ Ë %02d:%02d. P‹è dñ sîvî: %u."

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "QuòËÖîmessÿsﬁÿFTPán⁄imo"

	)

179 
	#MSG_RATIOS_EVERYONE
 "LE RATIOS SONO ABILITATE PER TUTTI:"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "GLI UTENTI ANONIMI SONO SOGGETTI A UNA RATIO DI UL/DL :"

	)

181 
	#MSG_RATIOS_RULE
 "≥∏dow∆ﬂd¨ê%u Mb, Ë obblig©‹iÿu∂ﬂd¨ê%u Mb dòroba."

	)

182 
	#MSG_INFO_IDLE_M
 "S¨aòdisc⁄√ssÿd›ÿ%lu möutòdòö©tivô‡."

	)

183 
	#MSG_INFO_IDLE_S
 "S¨aòdisc⁄√ssÿd›ÿ %lu sec⁄dòdòö©tivô‡."

	)

184 
	#MSG_CANT_READ_FILE
 "Spü˚¡e, impossibûêÀggîê[%s]"

	)

185 
	#MSG_LS_TRUNCATED
 "Ouçuàå⁄ˇtÿ®%u c‹ri•⁄díze"

	)

186 
	#MSG_LS_SUCCESS
 "%u c‹ri•⁄dízêtŸÆi"

	)

187 
	#MSG_LOGOUT
 "Logout."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "Auã¡iˇzi⁄êÁlô®≥∏l'uã¡ê[%s]"

	)

189 
	#MSG_ILLEGAL_UMASK
 "UmaskÇ⁄ vÆida"

	)

190 
	#MSG_STANDALONE_FAILED
 "Impossibûêavvüª i»£rvî i¿modÆô‡ sèndÆ⁄e"

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "Que°ÿË u¿si°em®¥iv©ÿ- Nessu¿logöán⁄imo"

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "QuÆunquê∑ssw‹d funzi⁄î‡"

	)

193 
	#MSG_MAX_USERS_IP
 "Tr›≥ c⁄√ssi⁄ò(%luËd®que°ÿIP"

	)

194 
	#MSG_ACTIVE_DISABLED
 "L®modÆô‡áâiv®Ë dißbûô©a"

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "Fûêåas„rôÿc⁄ suc˚sso"

	)

196 
	#MSG_NO_DISK_SPACE
 "Discÿpõnÿ- u∂ﬂd®pi˘Å¨di"

	)

197 
	#MSG_OUT_OF_MEMORY
 "Mem‹üÉßurôa"

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "IndúizzÿIPÅru°edÇ⁄ vÆido"

	)

199 
	#MSG_NO_ASCII_RESUME
 "I»ªsumêASCIIÇ⁄ Ë sicuro, c™˚Œ®¥im®û fûe"

	)

200 
	#MSG_UNKNOWN_ALTLOG
 "F‹m©ÿdòloggög sc⁄osciuto"

	)

201 
	#MSG_ACCOUNT_DISABLED
 "Impossibûêlogg¨sòcomê[%s] :áccou¡ dißbûô©o"

	)

202 
	#MSG_SQL_WRONG_PARMS
 "P¨amëròSQLÉº©i"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "Fûêdòc⁄figuøzi⁄êSQLÇ⁄ vÆidÿ"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "Sîvî m™ˇ¡ê√»fûêdòc⁄figuøzi⁄êSQL"

	)

205 
	#MSG_SQL_DOWN
 "I»£rvî SQL sembøÉs£ª down"

	)

206 
	#MSG_ILLEGAL_QUOTA
 "QuŸ®n⁄ vÆida"

	)

207 
	#MSG_QUOTA_FILES
 "%Œu fûe†ußtò(%d%%Ë-áut‹izz©i: %Œu fûes"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu Kbyã†ußtò(%d%%Ë-áut‹izz©i: %Œu Kb"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "QuŸ®su≥øè : [%s]Ç⁄ vîr‡ sÆv©o"

	)

210 
	#MSG_AUTH_UNKNOWN
 "Mëodÿdòauã¡iˇzi⁄êsc⁄osciuto"

	)

211 
	#MSG_PDB_BROKEN
 "ImpossibûêÀggîêû fûêpuªdb indicizz©ÿ(ÿË sètÿåov©ÿu¿vecchiÿf‹m©oË- Prov®c⁄Öuª-pw mkdb"

	)

212 
	#MSG_ALIASES_ALIAS
 "%†Ë u¿Æü†≥∏%s."

	)

213 
	#MSG_ALIASES_UNKNOWN
 "Alü†%†sc⁄osciuto."

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "FûêdeglòÆü£†d™√ggüto"

	)

215 
	#MSG_ALIASES_LIST
 "S⁄ÿdi•⁄ibûòò£guítòÆü£†:"

	)

216 
	#MSG_PERUSER_MAX
 "N⁄Öossÿac˚â¨êpi˘ dò%lu c⁄√ssi⁄òdÆlÿ°essÿuã¡e"

	)

217 
	#MSG_IPV6_OK
 "AnchêÀ c⁄√ssi⁄òIPv6 s⁄ÿbívíuã su que°ÿ£rvî"

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: Abûô©ÿ%†c⁄ ci‰©uø %†®%d bô"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: Ci‰©uøÅr›pÿdebﬁe"

	)

220 
	#MSG_TLS_NEEDED
 "Spiacente, su questo serverÇon sonoámmesse sessioni in chiaro.\n" \

221 "RicﬁÀg©òußndÿòsi°emòdòsicuªzz®SSL/TLS."

	)

222 
	#MSG_ILLEGAL_CHARSET
 "IŒegÆ ch¨£t"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: C⁄ãxànŸ found. Exôög."

	)

224 
	#MSG_PROT_OK
 "D©®¥Ÿe˘i⁄Üevñ sëÅÿ\"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "D©®c⁄√˘i⁄ c™nŸ bê›íed wôhÅhi†PROT sëtög."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "PrŸe˘i⁄Üevñ %†nŸ undî°ood. FÆlbackÅÿ\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT mu° bê¥e˚ded byá suc˚ssfu»PBSZ comm™d"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÑëu∫edÇÿu£rPassw‹dáâribuã, check LDAPác˚s†rights."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "InvÆid LDAPAuthMëhod i¿thêc⁄figuøti⁄ fûe. Should bê'böd' o∏'∑ssw‹d'."

	)

	@src/messages_kr.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: InvÆid TLSCùhîSuôê•ecifõd '%s'"

	)

2 
	#MSG_TIMEOUT
 "Ω√∞£ √ ∞˙"

	)

3 
	#MSG_CAPABILITIES
 "±‚¥… ¿¸»Ø ∫“∞°"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "≈¨∂Û¿Ãæ∆Æ∞° ¡¢º”¿ª ¥›¿Ω"

	)

5 
	#MSG_CLIENT_READ_ERR
 "≈¨∂Û¿Ãæ∆Æ ¿–±‚ ø¿∑˘"

	)

6 
	#MSG_CANT_OPEN_CNX
 "ø¨∞· ∫“∞°"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "µ•¿Ã≈Õ º“ƒœ¿ª ∏∏µÈºˆ æ¯¿Ω"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "¡¢º”¿⁄¿« ¡÷º“¥¬"

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "IP ¡÷º“ ±∏πÆø° πÆ¡¶∞° ¿÷¿Ω"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "PORT ∏Ì∑… º∫∞¯"

	)

11 
	#MSG_ONLY_IPV4V6
 "IPv4 øÕ IPv6 ∏∏ ¡ˆø¯«‘ (1,2)"

	)

12 
	#MSG_ONLY_IPV4
 "IPv4 ∏∏ ¡ˆø¯ (1)"

	)

13 
	#MSG_TIMEOUT_PARSER
 "Ω√∞£ √ ∞˙"

	)

14 
	#MSG_LINE_TOO_LONG
 "≥ π´ ±‰¡Ÿ"

	)

15 
	#MSG_LOG_OVERFLOW
 "¡¢º”¿⁄∞° ∏Ì∑…æÓ πˆ∆€¿« ovîÊow∏¶ Ω√µµ«‘"

	)

16 
	#MSG_GOODBYE
 "æ»≥Á»˜~ æ˜∑ŒµÂ %Œu / ¥ŸøÓ∑ŒµÂ %Œu kb"

	)

17 
	#MSG_DEBUG_COMMAND
 "∏Ì∑…æÓ"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 "ø° ¿ßƒ°«œ∞Ì ¿÷Ω¿¥œ¥Ÿ."

	)

19 
	#MSG_NOT_LOGGED_IN
 "∑Œ±◊¿Œ «œ¡ˆ æ æ“Ω¿¥œ¥Ÿ."

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "∫∏æ» µµ±∏∏¶ ªÁøÎ«“ºˆ æ¯¿Ω"

	)

21 
	#MSG_NO_FILE_NAME
 "∆ƒ¿œ∏Ì æ¯¿Ω"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "µ∑∫≈‰∏Æ ¿Ã∏ß æ¯¿Ω"

	)

23 
	#MSG_NO_RESTART_POINT
 "¿ÁΩ√¿€ ¿ßƒ°∞° æ¯¿Ω"

	)

24 
	#MSG_ABOR_SUCCESS
 "ABOR ∞° º∫∞¯«‘"

	)

25 
	#MSG_MISSING_ARG
 "∫Øºˆ∞™¿Ã æ¯¿Ω"

	)

26 
	#MSG_GARBAGE_FOUND
 "∫Øºˆ∞™µ⁄ø° æ≤∑π±‚ ∞™¿Ã ¿÷¿Ω"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "∫Øºˆ∞° ≥ π´ ≈≠"

	)

28 
	#MSG_IDLE_TIME
 "¥Î±‚ Ω√∞£ %lu √ ∑Œ º≥¡§µ "

	)

29 
	#MSG_SITE_HELP
 "¥Ÿ¿Ω SITE ∏Ì∑…æÓ∏¶ ¿ŒΩƒ«‘"

	)

30 
	#MSG_BAD_CHMOD
 "¿ﬂ∏¯µ» ±««—"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "¥¬ ∏∏£¥¬ ±‚¥…¿”"

	)

32 
	#MSG_XDBG_OK
 "XDBG ∏Ì∑… º∫∞¯, µπˆ±◊ ºˆ¡ÿ: %d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "∏∏£¥¬ ∏Ì∑…"

	)

34 
	#MSG_TIMEOUT_NOOP
 "Ω√∞£√ ∞˙ (%lu µøæ» ¿€µø«œ¡ˆ æ ¿Ω)"

	)

35 
	#MSG_TIMEOUT_DATA
 "Ω√∞£√ ∞˙ (%lu √  µøæ» ªı∑ŒøÓ µ•¿Ã≈Õ∏¶ πﬁ¡ˆ ∏¯«‘)"

	)

36 
	#MSG_SLEEPING
 "æ∆~ ¡π∑¡ Zzzz..."

	)

37 
	#MSG_ALREADY_LOGGED
 "¿ÃπÃ ∑Œ±◊¿Œ µ«æÓ¿÷Ω¿¥œ¥Ÿ."

	)

38 
	#MSG_ANY_PASSWORD
 "æ∆π´ ∆–Ω∫øˆµÂ∑Œµµ ∑Œ±◊¿Œ ∞°¥…«‘"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "An⁄ymou†¿Ø¿˙ ∑Œ±◊¿Œ"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "∞°ªÛ FTPø° An⁄ymou†¿Ø¿˙∞° ∑Œ±◊¿Œ«‘"

	)

41 
	#MSG_USER_OK
 "¿Ø¿˙ %†OK. æœ»£∞° « ø‰«’¥œ¥Ÿ."

	)

42 
	#MSG_CANT_DO_TWICE
 "«ˆ¿Á ººº«ø°º≠¥¬ ∫“∞°¥… «’¥œ¥Ÿ."

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "æ»¿¸«—án⁄ymou†FTP ∞° ∫“∞°¥…«‘"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "¥Îø™∆¯¿Ã ¡¶«—µ«æÓ ¿÷Ω¿¥œ¥Ÿ."

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 "æ∆π´ ∆–Ω∫øˆµÂ∑Œµµ ∑Œ±◊¿Œ ∞°¥…«‘"

	)

46 
	#MSG_NOTRUST
 "¡Àº€«’¥œ¥Ÿ∏∏, ¥ÁΩ≈¿ª πœ¿ª ºˆ æ¯±∫ø‰."

	)

47 
	#MSG_WHOAREYOU
 "¥ÁΩ≈¿Ã ¥©±∏Ω≈∞°ø‰?"

	)

48 
	#MSG_AUTH_FAILED
 "¿Œ¡ı Ω«∆–"

	)

49 
	#MSG_AUTH_TOOMANY
 "π›∫πµ» ¿Œ¡ı Ω«∆–"

	)

50 
	#MSG_NO_HOMEDIR
 "»® µ∑∫≈‰∏Æ∞° ¡∏¿Á«œ¡ˆ æ ¿Ω - √Îº“"

	)

51 
	#MSG_NO_HOMEDIR2
 "%†∞° ¡∏¿Á«œ¡ˆ æ ∞≈≥™ æÔººΩ∫ «“ºˆ æ¯¿Ω"

	)

52 
	#MSG_START_SLASH
 "/ ø°º≠ Ω√¿€«‘"

	)

53 
	#MSG_USER_GROUP_ACCESS
 "¿Ø¿˙ %†¥¬ ¥Ÿ¿Ω ±◊∑Ïø° ¡¢±Ÿ ∞°¥…"

	)

54 
	#MSG_FXP_SUPPORT
 "¿Ã º≠πˆ¥¬ FXP ¿¸º€¿Ã ªÁøÎ∞°¥… «’¥œ¥Ÿ."

	)

55 
	#MSG_RATIO
 "æ˜/¥ŸøÓ∑ŒµÂ (%u:%uË∫Ò¿≤¿ª ¡ˆƒ—¡÷ººø‰."

	)

56 
	#MSG_CHROOT_FAILED
 "chroŸ(Ë∏¶ º≥¡§«“ºˆ æ¯¿Ω"

	)

57 
	#MSG_CURRENT_DIR_IS
 "«ˆ¿Á µ∑∫≈‰∏Æ: %s"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "¡¶«—µ» µ∑∫≈‰∏Æ¥¬ %s"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†∞° ∑Œ±◊¿Œ"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "%†µ∑∫≈‰∏Æ∑Œ ¿Ãµø«“ºˆ æ¯¿Ω"

	)

61 
	#MSG_PATH_TOO_LONG
 "∆–Ω∫∞° ≥ π´ ±È¥œ¥Ÿ."

	)

62 
	#MSG_CANT_PASV
 "IPv6 ¡¢º”ø°º≠ PASV ∏¶ ªÁøÎ«“ºˆ æ¯Ω¿¥œ¥Ÿ. EPSV ∏¶ ªÁøÎ«œººø‰."

	)

63 
	#MSG_CANT_PASSIVE
 "∆–Ω√∫Í ¡¢º”¿ª ø≠ºˆ æ¯¿Ω"

	)

64 
	#MSG_PORTS_BUSY
 "øπæ‡µ» ∏µÁ TCP ∆˜∆Æ∞° ªÁøÎ¡ﬂ¿‘¥œ¥Ÿ."

	)

65 
	#MSG_GETSOCKNAME_DATA
 "≥ª∫Œ µ•¿Ã≈Õ º“ƒœ¿Ã »Æ¿Œ«“ºˆ æ¯¿Ω"

	)

66 
	#MSG_GETPEERNAME
 "≥ª∫Œ º“ƒœ¿ª »Æ¿Œ«“ºˆ æ¯¿Ω"

	)

67 
	#MSG_INVALID_IP
 "¿ﬂ∏¯µ» ¡÷º“"

	)

68 
	#MSG_NO_EPSV
 "EPSV ∏¶ ¡ˆø¯«œ¥¬ IPv6 ≈¨∂Û¿Ãæ∆Æ∏¶ ªÁøÎ«œººø‰."

	)

69 
	#MSG_BAD_PORT
 "¡Àº€«œ¡ˆ∏∏, 1024 ¿Ã«œ ∆˜∆Æ∑Œ¥¬ ¡¢º”«“ºˆ æ¯Ω¿¥œ¥Ÿ."

	)

70 
	#MSG_NO_FXP
 "%†∆˜∆Æ∑Œ¥¬ ¡¢º”«“ºˆ æ¯Ω¿¥œ¥Ÿ. (%†∏∏ ªÁøÎ∞°)"

	)

71 
	#MSG_FXP
 "FXP ¿¸º€ : %†- %s"

	)

72 
	#MSG_NO_DATA_CONN
 "µ•¿Ã≈Õ∞° æ¯¿Ω"

	)

73 
	#MSG_ACCEPT_FAILED
 "¡¢º”¿ª πﬁæ∆µÈ¿œºˆ æ¯æ˙¿Ω"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "µ•¿Ã≈Õ ¡¢º”¿ª πﬁ¿Ω"

	)

75 
	#MSG_CNX_PORT_FAILED
 "%d ∆˜∆Æ∑Œ ¡¢º”¿Ã ∫“∞°¥…"

	)

76 
	#MSG_CNX_PORT
 "%d ∆˜∆Æ∑Œ ¡¢º”¡ﬂ"

	)

77 
	#MSG_ANON_CANT_MKD
 "¡Àº€«’¥œ¥Ÿ.án⁄ymou†¿Ø¿˙¥¬ µ∑∫≈‰∏Æ∏¶ ∏∏µÈºˆ æ¯Ω¿¥œ¥Ÿ."

	)

78 
	#MSG_ANON_CANT_RMD
 "¡Àº€«’¥œ¥Ÿ.án⁄ymou†¿Ø¿˙¥¬ µ∑∫≈‰∏Æ∏¶ ªË¡¶«“ºˆ æ¯Ω¿¥œ¥Ÿ."

	)

79 
	#MSG_ANON_CANT_RENAME
 "An⁄ymou†¿Ø¿˙¿« ∆ƒ¿œ¿« ¿Ãµø, ∆ƒ¿œ∏Ì ∫Ø∞Ê¿Ã ¡¶«—µ«æÓ ¿÷Ω¿¥œ¥Ÿ."

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "An⁄ymou†¿Ø¿˙¥¬ ∆€πÃº« ∫Ø∞Ê¿Ã ∫“∞°¥… «’¥œ¥Ÿ."

	)

81 
	#MSG_GLOB_NO_MEMORY
 "%†∏¶ globbög «œ¥¯¡ﬂ ∏ﬁ∏∏Æ √ ∞˙"

	)

82 
	#MSG_PROBABLY_DENIED
 "(¿Ã∞Õ¿∫ \"«„∞° ∞≈∫Œ\")¿‘¥œ¥Ÿ."

	)

83 
	#MSG_GLOB_READ_ERROR
 "%†∏¶ globbög «œ¥¯¡ﬂ ¿–±‚ ø¿∑˘ πﬂª˝"

	)

84 
	#MSG_GLOB_NO_MATCH
 "√£¿ªºˆ æ¯¿Ω %†/ %s"

	)

85 
	#MSG_CHMOD_FAILED
 "%†ø°º≠ ∆€πÃº« ∫Ø∞Ê¿Ã ∫“∞°"

	)

86 
	#MSG_CHMOD_SUCCESS
 "%†∑Œ ∆€πÃº«¿Ã ∫Ø∞Êµ»"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "∆€πÃº« ∫Ø∞Ê¿Ã ∫“∞°¥…«’¥œ¥Ÿ."

	)

88 
	#MSG_ANON_CANT_DELETE
 "An⁄ymou†¿Ø¿˙¥¬ ∆ƒ¿œ¿ª ªË¡¶ «“ºˆ æ¯Ω¿¥œ¥Ÿ."

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "An⁄ymou†¿Ø¿˙¥¬ µ§æÓæ∫øÏ±‚∞° ∫“∞°¥… «’¥œ¥Ÿ."

	)

90 
	#MSG_DELE_FAILED
 "%†∏¶ ªË¡¶«“ºˆ æ¯¿Ω"

	)

91 
	#MSG_DELE_SUCCESS
 "%s%s%s%†ªË¡¶µ "

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "ªË¡¶µ» ∆ƒ¿œ æ¯¿Ω"

	)

93 
	#MSG_LOAD_TOO_HIGH
 \

95 "æ˜∑ŒµÂ¥¬ æ¡¶≥™ ∞°¥…«‘"

	)

97 
	#MSG_OPEN_FAILURE
 "%†∏¶ ø≠ºˆ æ¯¿Ω"

	)

98 
	#MSG_OPEN_FAILURE2
 "±◊ ∆ƒ¿œ¿ª ø≠ºˆ æ¯Ω¿¥œ¥Ÿ."

	)

99 
	#MSG_STAT_FAILURE
 "∆ƒ¿œ ≈©±‚∏¶ æÀºˆ æ¯Ω¿¥œ¥Ÿ."

	)

100 
	#MSG_STAT_FAILURE2
 "∆ƒ¿œ¿« ¡∏¿Áø©∫Œ∏¶ »Æ¿Œ«“ºˆ æ¯Ω¿¥œ¥Ÿ."

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "off£à%Œd ø°º≠ ¿ÁΩ√¿€ ∫“∞°. ∆ƒ¿œ ≈©±‚ %Œd"

	)

102 
	#MSG_REST_RESET
 "off£à0 ∫Œ≈Õ ¿ÁΩ√¿€"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "¿œπ›¿˚¿Œ ∆ƒ¿œ∏∏ ¥ŸøÓ∑ŒµÂ «“ºˆ ¿÷Ω¿¥œ¥Ÿ."

	)

104 
	#MSG_NOT_MODERATED
 \

105 "¿Ã ∆ƒ¿œ¿∫ ¥Ÿ∏•án⁄ymous∞° æ˜∑ŒµÂ«—∞Õ¿∏∑Œ ∞¸∏Æ¿⁄¿« »Æ¿Œ¿ª ∞≈√ƒæﬂ∏∏ ¥ŸøÓ∑ŒµÂ «“ºˆ ¿÷Ω¿¥œ¥Ÿ."

	)

107 
	#MSG_RATIO_DENIAL
 \

110 "¡¡¿∫ ∆ƒ¿œ¿ª æ˜∑ŒµÂ «ÿ¡÷ººø‰."

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "¥ŸøÓ∑ŒµÂ «“ ∞Õ¿Ã æ¯¿Ω"

	)

112 
	#MSG_WINNER
 "ƒƒ«ª≈Õ¥¬ ¥ÁΩ≈¿« ƒ£±∏¿Ã¥œ πœæÓæﬂ∏∏ «’¥œ¥Ÿ!"

	)

113 
	#MSG_KBYTES_LEFT
 "%.1‡kb ¥ŸøÓ∑ŒµÂ"

	)

114 
	#MSG_ABORTED
 "¿¸º€ √Îº“"

	)

115 
	#MSG_DATA_WRITE_FAILED
 "µ•¿Ã≈Õ∏¶ æ≤¥¬¡ﬂ ø¿∑˘ πﬂª˝"

	)

116 
	#MSG_DATA_READ_FAILED
 "µ•¿Ã≈Õ∏¶ ¿–¥¬¡ﬂ ø¿∑˘ πﬂª˝"

	)

117 
	#MSG_MMAP_FAILED
 "m≠ ∆ƒ¿œ¿ª ∏ﬁ∏∏Æø° ¿–æÓµÈ¿œºˆ æ¯¿Ω"

	)

118 
	#MSG_WRITE_FAILED
 "∆ƒ¿œ¿ª æ≤¥¬¡ﬂ ø¿∑˘ πﬂª˝"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡√ , %.2‡Mb/√ "

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡√ , %.2‡Kb/√ "

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡√ , %.2‡b/√ "

	)

122 
	#MSG_SPACE_FREE_M
 "ªÁøÎ∞°¥… µΩ∫≈© øÎ∑Æ %.1‡Mb"

	)

123 
	#MSG_SPACE_FREE_K
 "ªÁøÎ∞°¥… µΩ∫≈© øÎ∑Æ %‡Kb"

	)

124 
	#MSG_DOWNLOADED
 "¥ŸøÓ∑ŒµÂ ¡æ∑·"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "REST¥¬ º˝¿⁄ ∫Øºˆ∏¶ « ø‰∑Œ «‘"

	)

126 
	#MSG_REST_ASCII_STRICT
 "ASCII ∏µÂø°º≠¥¬ Rïly m¨kî ∞° 0 ø©æﬂ«‘"

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "%Œd ∫Œ≈Õ ¿ÁΩ√¿€. ±◊∑Ø≥™ ASCII ∏µÂ¿”"

	)

128 
	#MSG_REST_SUCCESS
 "%Œd ∫Œ≈Õ ¿ÁΩ√¿€"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "ªÁøÎ ∫“∞°¥…«— µ∑∫≈‰∏Æ∏Ì"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "ªÁøÎ ∫“∞°¥…«— ∆ƒ¿œ ¿Ã∏ß: %s"

	)

131 
	#MSG_MKD_FAILURE
 "µ∑∫≈‰∏Æ∏¶ ∏∏µÈºˆ æ¯¿Ω"

	)

132 
	#MSG_MKD_SUCCESS
 "µ∑∫≈‰∏Æ∏¶ º∫∞¯¿˚¿∏∑Œ ∏∏µÎ"

	)

133 
	#MSG_RMD_FAILURE
 "µ∑∫≈‰∏Æ∏¶ ªË¡¶«“ºˆ æ¯¿Ω"

	)

134 
	#MSG_RMD_SUCCESS
 "µ∑∫≈‰∏Æ∞° º∫∞¯¿˚¿∏∑Œ ªË¡¶µ "

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "timê°amp∏¶ ¿–¡ˆ ∏¯«‘"

	)

136 
	#MSG_MODE_ERROR
 "ASCII∞˙ πŸ¿Ã≥ ∏Æ ∏µÂ∏∏¿ª ¡ˆø¯«‘"

	)

137 
	#MSG_CREATE_FAILURE
 "∆ƒ¿œ ª˝º∫ ∫“∞°"

	)

138 
	#MSG_ABRT_ONLY
 "ABRT ∏Ì∑…¿∫ æ˜∑ŒµÂ∂ß∏∏ ªÁøÎ«“ºˆ ¿÷Ω¿¥œ¥Ÿ."

	)

139 
	#MSG_UPLOAD_PARTIAL
 "¿œ∫Œ∫–∏∏ æ˜∑ŒµÂµ "

	)

140 
	#MSG_REMOVED
 "ªË¡¶µ "

	)

141 
	#MSG_UPLOADED
 "æ˜∑ŒµÂµ "

	)

142 
	#MSG_GMTIME_FAILURE
 "«ˆ¿Á Ω√∞£¿ª æÀºˆ æ¯¿Ω"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "8-bô byãs∏∏¿ª ¡ˆø¯«’¥œ¥Ÿ. ¡ˆ±›¿∫ 10≥‚¿¸¿Ã æ∆¥œ¿›æ∆ø‰?"

	)

144 
	#MSG_TYPE_UNKNOWN
 "æÀºˆ æ¯¥¬ TYPE"

	)

145 
	#MSG_TYPE_SUCCESS
 "«ˆ¿Á TYPE ¿∫"

	)

146 
	#MSG_STRU_FAILURE
 "F(ûeË∏∏¿ª ¡ˆø¯«‘"

	)

147 
	#MSG_MODE_FAILURE
 "S—ªamË∏µÂ∏¶ ªÁøÎ«œººø‰"

	)

148 
	#MSG_RENAME_ABORT
 "¿Ã∏ß ∫Ø∞Ê ¿€æ˜¿ª √Îº“«‘"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "RNFR «„øÎµ  - ∆ƒ¿œ ¡∏¿Á, ¿¸º€ ¡ÿ∫Òµ "

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "¡Àº€«’¥œ¥Ÿ∏∏, ∆ƒ¿œ¿Ã æ¯Ω¿¥œ¥Ÿ."

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "RENAME Ω«∆– - ∆ƒ¿œ¿Ã ¿ÃπÃ ¡∏¿Á«’¥œ¥Ÿ."

	)

152 
	#MSG_RENAME_NORNFR
 "RNFR »ƒø° RNTO ªÁøÎ"

	)

153 
	#MSG_RENAME_FAILURE
 "¿Ã∏ß∫Ø∞Ê/¿Ãµø Ω«∆–"

	)

154 
	#MSG_RENAME_SUCCESS
 "∆ƒ¿œ¿Ã º∫∞¯¿˚¿∏∑Œ ∫Ø∞Ê/¿Ãµøµ "

	)

155 
	#MSG_NO_SUPERSERVER
 "puª-·pd∏¶ su≥r-£rvî (t˝£rvîøÕ ∞∞¿∫)∑Œ Ω««‡«œººø‰."

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "'·p' ∞Ë¡§¿Ã ¡∏¿Á«œ¡ˆ æ ¿Ω"

	)

157 
	#MSG_CONF_ERR
 "º≥¡§ ø¿∑˘"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "∞°ªÛ ¿Ø¿˙ ∆ƒ¿œ ¿Ã∏ß¿Ã æ¯¿Ω"

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "¿ﬂ∏¯µ» ¿¸º€ º”µµ∞™"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "chroŸ∏¶ ¿ß«— gid ∞™¿Ã ¿ﬂ∏¯µ "

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "¿ﬂ∏¯µ» √÷¥Î ¿Ø¿˙ºˆ∞™"

	)

162 
	#MSG_ILLEGAL_FACILITY
 "∏∏£¥¬ facûôy ¿Ã∏ß"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "¿ﬂ∏¯µ» LDAP º≥¡§ ∆ƒ¿œ"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "¿ﬂ∏¯µ» º≠πˆ∫Œ«œ ¡¶«—∞™"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "¿ﬂ∏¯µ» ∆˜∆Æ π¸¿ß"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "¿ﬂ∏¯µ» 'ls' ¡¶«—"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "∆–Ω√∫Í ø¨∞·¿ª ¿ß«— IP ∞™¿Ã º≥¡§ø° πÆ¡¶∞° ¿÷¿Ω"

	)

168 
	#MSG_ILLEGAL_RATIO
 "æ˜/¥ŸøÓ ∫Ò¿≤∞™¿Ã ¿ﬂ∏¯µ "

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "uid ¡¶«—∞™¿Ã ¿ﬂ∏¯µ "

	)

170 
	#MSG_ILLEGAL_OPTION
 "æÀºˆ æ¯¥¬ Ω««‡ ø…º«"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "LDAP º≥¡§∆ƒ¿œø° LDAPBa£DN ∞™¿Ã æ¯¿Ω"

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "¿ﬂ∏¯µ» LDAP º≥¡§"

	)

173 
	#MSG_NEW_CONNECTION
 "%†∫Œ≈Õ ªı∑ŒøÓ ø¨∞·"

	)

174 
	#MSG_WELCOME_TO
 "æÓº≠ø¿ººø‰!~"

	)

175 
	#MSG_MAX_USERS
 "%lu ∏Ì (√÷¥Î µøΩ√ ¡¢º” ¡¶«—)¿Ã ¿ÃπÃ ¡¢º”«ÿ ¿÷Ω¿¥œ¥Ÿ. ¡Àº€«’¥œ¥Ÿ."

	)

176 
	#MSG_NB_USERS
 "¥ÁΩ≈¿∫ %u π¯¬∞∑Œ ¡¢º”¡ﬂ¿‘¥œ¥Ÿ. √÷¥Î %u ∏Ì"

	)

177 
	#MSG_WELCOME_TIME
 "«ˆ¿Á Ω√∞¢¿∫ %02d:%02d, ªÁøÎ¡ﬂ¿Œ ∆˜∆Æ¥¬ %u ¿‘¥œ¥Ÿ."

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "™⁄ymou†¿Ø¿˙∏∏ ¡¢º” ∞°¥…«’¥œ¥Ÿ."

	)

179 
	#MSG_RATIOS_EVERYONE
 "∏µÁ ¿Ø¿˙ø°∞‘ æ˜/¥ŸøÓ ∫Ò¿≤¿Ã ¿˚øÎµ  :"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "™⁄ymou†¿Ø¿˙¥¬ æ˜/¥ŸøÓ ∫Ò¿≤¿Ã ¿˚øÎµ  :"

	)

181 
	#MSG_RATIOS_RULE
 "¥ŸøÓ∑ŒµÂ %u Mb, æ˜∑ŒµÂ %u Mb"

	)

182 
	#MSG_INFO_IDLE_M
 "%lu ∫– µøæ» æ∆π´∞Õµµ «œ¡ˆ æ ¿∏∏È ¡¢º”¿Ã ≤˜æÓ¡˝¥œ¥Ÿ."

	)

183 
	#MSG_INFO_IDLE_S
 "%lu √  µøæ» æ∆π´∞Õµµ «œ¡ˆ æ ¿∏∏È ¡¢º”¿Ã ≤˜æÓ¡˝¥œ¥Ÿ."

	)

184 
	#MSG_CANT_READ_FILE
 "[%s] ∆ƒ¿œ¿ª ¿–¿ªºˆ æ¯Ω¿¥œ¥Ÿ."

	)

185 
	#MSG_LS_TRUNCATED
 "%u ∞≥¿« ∞·∞˙ «•Ω√"

	)

186 
	#MSG_LS_SUCCESS
 "%u ∞° ¿œƒ°µ "

	)

187 
	#MSG_LOGOUT
 "∑Œ±◊æ∆øÙ."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "[%s] ¿Ø¿˙ ¿Œ¡ı Ω«∆–"

	)

189 
	#MSG_ILLEGAL_UMASK
 "¿ﬂ∏¯µ» umask"

	)

190 
	#MSG_STANDALONE_FAILED
 "°™dÆ⁄ê∏µÂ∑Œ º≠πˆ∏¶ Ω√¿€«“ºˆ æ¯Ω¿¥œ¥Ÿ."

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "™⁄ymou†¡¢º”¿∫ «„øÎ«œ¡ˆ æ Ω¿¥œ¥Ÿ."

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "æ∆π´ ∆–Ω∫øˆµÂ≥™ «„øÎµ "

	)

193 
	#MSG_MAX_USERS_IP
 "(%luË∑Œ ∫Œ≈Õ √ ∞˙µ» ¡¢º”ºˆ"

	)

194 
	#MSG_ACTIVE_DISABLED
 "A˘ivê∏µÂ¥¬ ªÁøÎ ∫“∞°µ "

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "∆ƒ¿œ¿Ã º∫∞¯¿˚¿∏∑Œ ¿¸º€µ "

	)

196 
	#MSG_NO_DISK_SPACE
 "µΩ∫≈© øÎ∑Æ ∫Œ¡∑ - ≥™¡ﬂø° æ˜∑ŒµÂ «ÿ¡÷ººø‰"

	)

197 
	#MSG_OUT_OF_MEMORY
 "∏ﬁ∏∏Æ √ ∞˙"

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "¿ﬂ∏¯µ» Ω≈∑⁄µ«¥¬ IP ¡÷º“"

	)

199 
	#MSG_NO_ASCII_RESUME
 "ASCII ∏µÂ∑Œ ¿Á¿¸º€¿∫ æ»¿¸«œ¡ˆ æ ¿∏¥œ, ∏’¿˙ ∆ƒ¿œ¿ª ªË¡¶ «œººø‰."

	)

200 
	#MSG_UNKNOWN_ALTLOG
 "¿ﬂ∏¯µ» ∑Œ±◊ «¸≈¬"

	)

201 
	#MSG_ACCOUNT_DISABLED
 "[%s] ∑Œ ∑Œ±◊¿Œ ∫“∞° : ∞Ë¡§ ªÁøÎ∫“∞°"

	)

202 
	#MSG_SQL_WRONG_PARMS
 "¿ﬂ∏¯µ» SQL ∫Øºˆ"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "SQL º≥¡§ ∆ƒ¿œø° πÆ¡¶∞° ¿÷¿Ω"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "SQL º≥¡§ ∆ƒ¿œø° º≠πˆ∞° æ¯¿Ω"

	)

205 
	#MSG_SQL_DOWN
 "SQL ∞° ¿€µøµ«¡ˆ æ ¥¬∞Õ ∞∞Ω¿¥œ¥Ÿ."

	)

206 
	#MSG_ILLEGAL_QUOTA
 "¿ﬂ∏¯µ» ƒı≈∏ º≥¡§"

	)

207 
	#MSG_QUOTA_FILES
 "%Œu ∞≥¿« ∆ƒ¿œ (%d%%Ë- √÷¥Î: %Œu fûes"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu Kbyã†ªÁøÎ¡ﬂ (%d%%Ë- √÷¥Î: %Œu Kb"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "ƒı≈∏∞° √ ∞˙µ«æ˙¿Ω : [%s] ¥¬ ¿˙¿Âµ«¡ˆ æ æ“¿Ω"

	)

210 
	#MSG_AUTH_UNKNOWN
 "¿ﬂ∏¯µ» ¿Œ¡ı πÊΩƒ"

	)

211 
	#MSG_PDB_BROKEN
 "puªdb ¿Œµ¶Ω∫ ∆ƒ¿œ¿ª ¿–¿ªºˆ æ¯¿Ω (∂«¥¬ ¿Ã¿¸ ∆˜∏À¿ª ¿ŒΩƒ«œ¡ˆ ∏¯«‘Ë-Öuª-pw mkdb ∏¶ Ω√µµ«ÿ ∫º∞Õ"

	)

212 
	#MSG_ALIASES_ALIAS
 "%s¿∫ %s¿« ∫∞ƒ™."

	)

213 
	#MSG_ALIASES_UNKNOWN
 "æÀ ºˆ æ¯¥¬ ∫∞ƒ™ %s."

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "º’ªÛµ» ∫∞ƒ™ ∆ƒ¿œ"

	)

215 
	#MSG_ALIASES_LIST
 "¥Ÿ¿Ω¿« ∫∞ƒ™¿Ã ¿÷¿Ω :"

	)

216 
	#MSG_PERUSER_MAX
 "∞∞¿∫ ¿Ø¿˙∑Œ %lu π¯ ¿ÃªÛ¿« ø¨∞·¿ª «„øÎ«œ¡ˆ æ Ω¿¥œ¥Ÿ."

	)

217 
	#MSG_IPV6_OK
 "¿Ã º≠πˆ¥¬ IPv6 ø¨∞·µµ «„øÎ«’¥œ¥Ÿ."

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: E«bÀd %†wôh %s, %d se¸ë bô†cùhî"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: CùhîÅoÿwók"

	)

220 
	#MSG_TLS_NEEDED
 "Sorry, cleartext sessionsáreÇotáccepted onÅhis server.\n" \

221 "PÀa£Ñec⁄√˘ usög SSL/TLS securôy mech™isms."

	)

222 
	#MSG_ILLEGAL_CHARSET
 "IŒegÆ ch¨£t"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: C⁄ãxànŸ found. Exôög."

	)

224 
	#MSG_PROT_OK
 "D©®¥Ÿe˘i⁄Üevñ sëÅÿ\"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "D©®c⁄√˘i⁄ c™nŸ bê›íed wôhÅhi†PROT sëtög."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "PrŸe˘i⁄Üevñ %†nŸ undî°ood. FÆlbackÅÿ\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT mu° bê¥e˚ded byá suc˚ssfu»PBSZ comm™d"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÑëu∫edÇÿu£rPassw‹dáâribuã, check LDAPác˚s†rights."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "InvÆid LDAPAuthMëhod i¿thêc⁄figuøti⁄ fûe. Should bê'böd' o∏'∑ssw‹d'."

	)

	@src/messages_nl.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: InvÆid TLSCùhîSuôê•ecifõd '%s'"

	)

2 
	#MSG_TIMEOUT
 "Ondîbªkög"

	)

3 
	#MSG_CAPABILITIES
 "Onmogñijk om dêö°ñlögÅêwis£Àn"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "Clõ¡ sloŸ dêvîbödög"

	)

5 
	#MSG_CLIENT_READ_ERR
 "Lìsfouàv™ dê˛õ¡"

	)

6 
	#MSG_CANT_OPEN_CNX
 "K™ gì¿vîbödög o≥√n"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "K™ gì¿d©®sockëá™makí"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "Hë clõ¡ádª†is: "

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "Sy¡ax fouàö IPádªs"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "PORT comm™dÿge¶Øgd"

	)

11 
	#MSG_ONLY_IPV4V6
 "AŒì¿IPv4É¿IPv6 w‹dí ondî°eund (1,2)"

	)

12 
	#MSG_ONLY_IPV4
 "AŒì¿IPv4 w‹dà⁄dî°eund (1)"

	)

13 
	#MSG_TIMEOUT_PARSER
 "Ondîbªkög - vﬁgídêkì∏w© s√ŒîÅy≥¿a.u.b."

	)

14 
	#MSG_LINE_TOO_LONG
 "Regñ i†ãÜ™g"

	)

15 
	#MSG_LOG_OVERFLOW
 "Dê˛õ¡Örobìrdêãvì»öÅêgeví i¿dêcomm™d‹egñ buf„r"

	)

16 
	#MSG_GOODBYE
 "TŸ zõns. U hì· %Œu kbyã†ge-u∂ﬂdÉ¿%Œu kbyã†ge-dow∆ﬂd"

	)

17 
	#MSG_DEBUG_COMMAND
 "Comm™do"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 "i†uw huidigêloˇtõ"

	)

19 
	#MSG_NOT_LOGGED_IN
 "U bíànõàögñogd"

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "Beveûigög†uôbªidögí zij¿nõà›gíomí"

	)

21 
	#MSG_NO_FILE_NAME
 "Gì¿be°™d†«am"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "Gì¿dúe˘‹yÇØm"

	)

23 
	#MSG_NO_RESTART_POINT
 "Gì¿nõuw begöpu¡"

	)

24 
	#MSG_ABOR_SUCCESS
 "Al†u dô zõài†ABOR ge¶Øgd"

	)

25 
	#MSG_MISSING_ARG
 "Argumíà⁄tbªekt"

	)

26 
	#MSG_GARBAGE_FOUND
 "Onbruikb¨êgegeví†gev⁄díÇ®ögegeví wØrde"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "WØrdêã groŸ"

	)

28 
	#MSG_IDLE_TIME
 "I«˘õvêtijd inge°ñd o∞%lu sec⁄dí"

	)

29 
	#MSG_SITE_HELP
 "DêvﬁgídêSITE comm™do'†wîdí hîkíd"

	)

30 
	#MSG_BAD_CHMOD
 "Ongñdigê≥rmissõs"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "i†ì¿⁄bekídêexãnsõ"

	)

32 
	#MSG_XDBG_OK
 "XDBG comm™dÿi†ge¶Øgd, debugÜevñ i†nu %d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "Onbekíd comm™do"

	)

34 
	#MSG_TIMEOUT_NOOP
 "Ondîbªkög (gì¿a˘ivôeô geduªndê%lu sec⁄dí)"

	)

35 
	#MSG_TIMEOUT_DATA
 "Ondîbªkög (gì¿nõuwêgegeví†geduªndê%lu sec⁄dí)"

	)

36 
	#MSG_SLEEPING
 "Zzz..."

	)

37 
	#MSG_ALREADY_LOGGED
 "U bíàªed†ögñogd!"

	)

38 
	#MSG_ANY_PASSWORD
 "Elk wûÀkeurig wachtwo‹d i†g€d"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "An⁄õmêgebruikî i†ögñogd"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "An⁄õmêgebruikî i†ögñogd i¿dêvútuñêFTP"

	)

41 
	#MSG_USER_OK
 "Gebruikî %†OK. Wachtwo‹d vîei°"

	)

42 
	#MSG_CANT_DO_TWICE
 "I¿dêhuidigê£ssõ ku¬í wêdôÇõàd€n"

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "Hë i†⁄mogñijk omÉí beveûigdê™⁄õmêFTP o∞ã zëãn"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "Uw b™dbªedã i†bïîkt"

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 "Ik heb gì¿wachtwo‹dÇodig!"

	)

46 
	#MSG_NOTRUST
 "Hë spijàme, mØ∏ik k™ uÇõàvîåouwí"

	)

47 
	#MSG_WHOAREYOU
 "Wõ bíàU?"

	)

48 
	#MSG_AUTH_FAILED
 "S‹ry,áut‹ißtõ i†mi¶ukt"

	)

49 
	#MSG_AUTH_TOOMANY
 "Aut‹ißtõ i†ã vØk mi¶ukt"

	)

50 
	#MSG_NO_HOMEDIR
 "Homêdúe˘‹yÇõàbeschikbØ∏- sessõ w‹dàafgebrokí"

	)

51 
	#MSG_NO_HOMEDIR2
 "%†be°Øànõào‡i†⁄bîeikbØr"

	)

52 
	#MSG_START_SLASH
 "U begöàö /"

	)

53 
	#MSG_USER_GROUP_ACCESS
 "Gebruikî %†hì· gr€p°€g™g vo‹"

	)

54 
	#MSG_FXP_SUPPORT
 "Dezê£rvî ondî°eu¡ FXP ovîdøcht"

	)

55 
	#MSG_RATIO
 "U m€àvﬁd€¿Ø¿ì¿%u:%u (UL/DLËvîhoudög"

	)

56 
	#MSG_CHROOT_FAILED
 "Hë i†nõàmogñijkÉí veûigêchroŸ(Ë›Åêzëãn"

	)

57 
	#MSG_CURRENT_DIR_IS
 "OK. Dêhuidigêdúe˘‹y i†%s"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "OK. Dêhuidigêbïîkã dúe˘‹y i†%s"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†i†nu ingñogd"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "K™ dêdúe˘‹yÇõàvî™dîíÇØ∏%s"

	)

61 
	#MSG_PATH_TOO_LONG
 "Pad i†ãÜ™g"

	)

62 
	#MSG_CANT_PASV
 "U k™ PASVÇõàgebruikí bij IPv6 vîbödögí. Gebruik EPSV."

	)

63 
	#MSG_CANT_PASSIVE
 "Hë i†⁄mogñijkÉíÖassõvêvîbödögÅê›íí"

	)

64 
	#MSG_PORTS_BUSY
 "AŒêgîe£rvìrdêTCPÖo‹ã¿zij¿ö gebruik"

	)

65 
	#MSG_GETSOCKNAME_DATA
 "Hë i†⁄mogñijk dêlokÆêd©®sockëÅêidítifi˚ªn"

	)

66 
	#MSG_GETPEERNAME
 "Hë i†⁄mogñijk dêlokÆêsockëÅêidítifi˚ª¿"

	)

67 
	#MSG_INVALID_IP
 "S‹ry, ongñdigádª†›gegeví"

	)

68 
	#MSG_NO_EPSV
 "Eí IPv6-c⁄f‹m™à˛õ¡ më EPSV ondî°eunög gebruikíá.u.b."

	)

69 
	#MSG_BAD_PORT
 "S‹ry, mØ∏ik gebruik gì¿po‹ã¿< 1024"

	)

70 
	#MSG_NO_FXP
 "Ik bíÇõàv™Öœ¿ì¿vîbödögÅê›íí më %†◊Œì¿më %s)"

	)

71 
	#MSG_FXP
 "FXP ovîdøcht: v™ %†«¨ %s"

	)

72 
	#MSG_NO_DATA_CONN
 "Gì¿d©®vîbödög"

	)

73 
	#MSG_ACCEPT_FAILED
 "Dêvîbödög k⁄ÇõàgemØkàw‹dí"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "D©®vîbödög gemØkt"

	)

75 
	#MSG_CNX_PORT_FAILED
 "K⁄ gì¿d©®vîbödög o≥√¿«¨Öo‹à%d"

	)

76 
	#MSG_CNX_PORT
 "BezigÅêvîbödí mëÖo‹à%d"

	)

77 
	#MSG_ANON_CANT_MKD
 "S‹ry,án⁄õmêgebruikî†ku¬í gì¿dúe˘‹õ†Ønmakí"

	)

78 
	#MSG_ANON_CANT_RMD
 "S‹ry,án⁄õmêgebruikî†ku¬í gì¿dúe˘‹õ†vîwijdîí"

	)

79 
	#MSG_ANON_CANT_RENAME
 "An⁄õmêgebruikî†ku¬í gì¿be°™dí vî∂Øt£n/hîbí€mí"

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "An⁄õmêgebruikî†ku¬í gì¿≥rmissõ†vî™dîí"

	)

81 
	#MSG_GLOB_NO_MEMORY
 "Nõàgí€g geheugíÅijdí†globbög v™ %s"

	)

82 
	#MSG_PROBABLY_DENIED
 "(Dô bëekíàschijnbØ∏\"Hõrvo‹ i†t€°emmögÇodig\")"

	)

83 
	#MSG_GLOB_READ_ERROR
 "Lìsfouàtijdí†globbög v™ %s"

	)

84 
	#MSG_GLOB_NO_MATCH
 "Gì¿ovîìn°emmög vo‹ %†ö %s"

	)

85 
	#MSG_CHMOD_FAILED
 "K⁄ dê≥rmissõ†› %†nõàvî™dîí"

	)

86 
	#MSG_CHMOD_SUCCESS
 "Pîmissõ†vî™dîd o∞%s"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "S‹ry, mØ∏ik k⁄ gì¿íkñê≥rmissõ vî™dîí"

	)

88 
	#MSG_ANON_CANT_DELETE
 "An⁄õmêgebruikî†ku¬í gì¿be°™dí wis£n"

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "An⁄õmêgebruikî†ku¬í gì¿be°Øndêbe°™dí ovîschrijví."

	)

90 
	#MSG_DELE_FAILED
 "K⁄ %†nõàwis£n"

	)

91 
	#MSG_DELE_SUCCESS
 "%s%s%s%†gewi°"

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "Gì¿be°™d gewi°"

	)

93 
	#MSG_LOAD_TOO_HIGH
 \

96 "U∂ﬂdí i†ÆtijdÅ€ge°Øn."

	)

97 
	#MSG_OPEN_FAILURE
 "K™ %†nõà›íí"

	)

98 
	#MSG_OPEN_FAILURE2
 "K™ d© be°™dÇõà›íí"

	)

99 
	#MSG_STAT_FAILURE
 "K™ dõ be°™dsgroŸãÇõàvödí"

	)

100 
	#MSG_STAT_FAILURE2
 "K™Çõàkijkí o‡d© be°™d be°Øt"

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "O≤õuw opge°¨àoff£à%Œd i†ã groŸ vo‹ be°™d groŸã %Œd."

	)

102 
	#MSG_REST_RESET
 "O≤õuw opge°¨t, off£ài†wì∏› 0 gezë"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "Ik k™áŒì¿°™dØrd be°™dí hî°ñÀn"

	)

104 
	#MSG_NOT_MODERATED
 \

106 "sôêbehìrdîÇog gì¿t€°emmög gegegeví om dõÅêdow∆ﬂdí.\n"

	)

107 
	#MSG_RATIO_DENIAL
 \

110 "U∂ﬂdÉí†w©Üeuk†íÖrobì∏hëÜ©îÇogÉís."

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "E∏i†nõt†mì∏omÅêdow∆ﬂdí"

	)

112 
	#MSG_WINNER
 "Dêcompuã∏i†uw vrõnd. Vîåouw mØ∏› dêcompuãr"

	)

113 
	#MSG_KBYTES_LEFT
 "%.1‡kbyã†omÅêdow∆ﬂdí"

	)

114 
	#MSG_ABORTED
 "Ovîdøchàafgebrokí"

	)

115 
	#MSG_DATA_WRITE_FAILED
 "Fouàtijdí†schrijvíÇØ∏d©®vîbödög"

	)

116 
	#MSG_DATA_READ_FAILED
 "Fouàtijdí†Àzí v™ d©®vîbödög "

	)

117 
	#MSG_MMAP_FAILED
 "Onmogñijk hë be°™d i¿hë geheugíÅê∂Øt£n"

	)

118 
	#MSG_WRITE_FAILED
 "Fouàtijdí†schrijvíÇØ∏be°™d"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡£c⁄dí (hõ∏gemëí), %.2‡Mbyã†≥∏£c⁄de"

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡£c⁄dí (hõ∏gemëí), %.2‡Kbyã†≥∏£c⁄de"

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡£c⁄dí (hõ∏gemëí), %.2‡byã†≥∏£c⁄de"

	)

122 
	#MSG_SPACE_FREE_M
 "%.1‡Mbyã†vrijêschij‰uimã"

	)

123 
	#MSG_SPACE_FREE_K
 "%‡Kbyã†vrijêschij‰uimã "

	)

124 
	#MSG_DOWNLOADED
 "gedow∆ﬂd"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "REST vîœngàì¿numîõkê∑ømëî"

	)

126 
	#MSG_REST_ASCII_STRICT
 "A¡wo‹dÅekí m€à0 zij¿ö ASCII mode"

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "Wêbegö√¿›nõuw bij %Œd. MØ∏wêzij¿ö ASCII mode"

	)

128 
	#MSG_REST_SUCCESS
 "Wêbegö√¿›nõuw bij %Œd"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "Vîbodí dúe˘‹yÇØm"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "Vîbodí be°™d¢Øm: %s"

	)

131 
	#MSG_MKD_FAILURE
 "K™ gì¿dúe˘‹yá™makí"

	)

132 
	#MSG_MKD_SUCCESS
 "Dêdúe˘‹y i†më suc˚†ØngemØkt"

	)

133 
	#MSG_RMD_FAILURE
 "K™ dêdúe˘‹yÇõàvîwijdîí"

	)

134 
	#MSG_RMD_SUCCESS
 "Dêdúe˘‹y i†vîwijdîd"

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "K™ gì¿tijdsödiˇtõ krijgí"

	)

136 
	#MSG_MODE_ERROR
 "AŒì¿ASCIIÉ¿bö¨y mode†w‹dí ondî°eund"

	)

137 
	#MSG_CREATE_FAILURE
 "Nõàmogñijk omÉí be°™dá™Åêmakí"

	)

138 
	#MSG_ABRT_ONLY
 "ABRT i†hëÉnigêgñdigêcomm™dÿtijdí†u∂ﬂdí"

	)

139 
	#MSG_UPLOAD_PARTIAL
 "gedì…ñijk ge-u∂ﬂd"

	)

140 
	#MSG_REMOVED
 "vîwijdîd"

	)

141 
	#MSG_UPLOADED
 "ge-u∂ﬂd"

	)

142 
	#MSG_GMTIME_FAILURE
 "K⁄ dêlokÆêtijdÇõàuôÀzí"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "AŒì¿8-bô byã†w‹dí ondî°eund, wêÀvíÇõàö dêv‹igêìuw"

	)

144 
	#MSG_TYPE_UNKNOWN
 "Onbekíd TYPE"

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPE i†nu"

	)

146 
	#MSG_STRU_FAILURE
 "AŒì¿F(ûeËw‹dà⁄dî°eund"

	)

147 
	#MSG_MODE_FAILURE
 "S—ªamËmodêgebruikíá.u.b."

	)

148 
	#MSG_RENAME_ABORT
 "Vo‹gØndê«amsvî™dîög w‹dàafgebrokí"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "RNFR góc˚±ìrd - be°™d be°Øàªeds, gîìd vo‹ be°emmög"

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "Hë spijàme, mØ∏d© be°™d be°Øànõt"

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "RENAME mi¶ukà- d€lbe°™d be°Øàªeds"

	)

152 
	#MSG_RENAME_NORNFR
 "RNFR i†nodig, vÛÛ∏RNTO"

	)

153 
	#MSG_RENAME_FAILURE
 "Hîbí€mögs/vî∂Øtsög†fout"

	)

154 
	#MSG_RENAME_SUCCESS
 "Be°™d i†më suc˚†hîn€md o‡vî∂Øt°"

	)

155 
	#MSG_NO_SUPERSERVER
 "Puª-·pd bö√¿ì¿su≥r-£rvî (zﬂl†t˝£rvîËœã¿døaõn"

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "Nõàö sè© om dê'·p'áccou¡Åêvödí"

	)

157 
	#MSG_CONF_ERR
 "C⁄figuøtõ fout"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "VútuÆ u£r†be°™d¢Øm o¡bªekt"

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "Nõàt€ge°™êwØrdêvo‹ÅhrŸéög"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "Nõàt€ge°™êåu°ed gid vo‹ chroŸ"

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "Nõàt€ge°™êgebruikîs-limõt"

	)

162 
	#MSG_ILLEGAL_FACILITY
 "OnbekídêÁcûôyÇØm"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "OngñdigêLDAP c⁄figuøtõbe°™d"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "Nõàt€ge°™êlﬂdÜimõt"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "Nõàt€ge°Ø¿po‹ã¿bîeik"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "Nõàt€ge°™ê'ls'Üimõãn"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "Nõàt€ge°Ø¿gedw⁄gí IP vo‹Öassõvêvîbödögí"

	)

168 
	#MSG_ILLEGAL_RATIO
 "Nõàt€ge°™êu∂ﬂd/dow∆ﬂd vîhoudög"

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "Nõàt€ge°™êuidÜimõt"

	)

170 
	#MSG_ILLEGAL_OPTION
 "Onbekídêrun-timê›tõ"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "O¡bªkídêLDAPBa£DN i¿dêLDAP c⁄figuøtõbe°™d "

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "VîkìrdêLDAPÖ¨amëîs"

	)

173 
	#MSG_NEW_CONNECTION
 "Nõuwêvîbödög v™a‡%s"

	)

174 
	#MSG_WELCOME_TO
 "Wñkom bij"

	)

175 
	#MSG_MAX_USERS
 "%lu gebruikî†(hë maximumËzij¿ªed†ögñogd, s‹ry"

	)

176 
	#MSG_NB_USERS
 "U bíàgebruikîÇummî %u v™ %uÅ€ge°™êgebruikîs"

	)

177 
	#MSG_WELCOME_TIME
 "LoˇÀÅijd i†nu %02d:%02d. SîvîÖo‹t: %u."

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "AŒì¿™⁄õmêFTP i†hõ∏t€ge°Øn"

	)

179 
	#MSG_RATIOS_EVERYONE
 "UL/DL VERHOUDINGEN ZIJN VOOR IEDEREEN INGESCHAKELD:"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "ANONIEME GEBRUIKERS KRIJGEN EEN UL/DL VERHOUDING :"

	)

181 
	#MSG_RATIOS_RULE
 "%u MbÅêdow∆ﬂdí, u∂ﬂdí v™ %u Mb i†vî∂icht."

	)

182 
	#MSG_INFO_IDLE_M
 "Dêvîbödög w‹dà« %lu möuã¿v™ i«˘ivôeô vîbrokí."

	)

183 
	#MSG_INFO_IDLE_S
 "Dêvîbödög w‹dà« %lu sec⁄dí v™ i«˘ivôeô vîbrokí."

	)

184 
	#MSG_CANT_READ_FILE
 "S‹ry, wêk⁄dí dôÇõàÀzí [%s]"

	)

185 
	#MSG_LS_TRUNCATED
 "Ouçuàafgek‹à«¨ %u ovîìn°emmögí"

	)

186 
	#MSG_LS_SUCCESS
 "öÅŸØ»%u ovîìn°emmögí"

	)

187 
	#MSG_LOGOUT
 "Logout."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "Aut‹ißtõ fØldêvo‹ gebruikî [%s]"

	)

189 
	#MSG_ILLEGAL_UMASK
 "Ongñdigêumask"

	)

190 
	#MSG_STANDALONE_FAILED
 "Nõàmogñijk omÉí sèndÆ⁄ê£rvîÅê°¨ãn"

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "Dô i†ì¿¥ivÈ sy°ìm - Gì¿™⁄õmêlogö mogñijk"

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "Elk wûÀkeurig wachtwo‹d i†g€d"

	)

193 
	#MSG_MAX_USERS_IP
 "Tevì»vîbödögí (%luËv™a‡dô IP"

	)

194 
	#MSG_ACTIVE_DISABLED
 "A˘ivêmodêi†uôgeschakñd"

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "Be°™d ovîdøchàwa†suc˚svﬁ"

	)

196 
	#MSG_NO_DISK_SPACE
 "Schij‡i†vﬁ -Ü©î u∂ﬂdíá.u.b."

	)

197 
	#MSG_OUT_OF_MEMORY
 "Gì¿geheugí mìr!"

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "IÀgØ»IPádªs"

	)

199 
	#MSG_NO_ASCII_RESUME
 "ASCII hîv©ã¿i†⁄veûig, vîwijdî hë be°™dÉî°"

	)

200 
	#MSG_UNKNOWN_ALTLOG
 "OnbekídÜog f‹mØt"

	)

201 
	#MSG_ACCOUNT_DISABLED
 "U k™Çõàöloggíál†[%s] : hëáccou¡ i†uôgeschakñd"

	)

202 
	#MSG_SQL_WRONG_PARMS
 "VîkìrdêSQLÖ¨amëîs"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "Ongñdig SQL c⁄figuøtõ be°™d"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "Dê£rvî o¡bªekàö hë SQL c⁄figuøtõ be°™d"

	)

205 
	#MSG_SQL_DOWN
 "DêSQL sîvîÜijkànõàa˘õ‡ã zijn"

	)

206 
	#MSG_ILLEGAL_QUOTA
 "OngñdigêquŸa"

	)

207 
	#MSG_QUOTA_FILES
 "%Œu Be°™dí i¿gebruik (%d%%Ë- g€dgekeurd: %Œu be°™dí"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu Kbyã†ö gebruik (%d%%Ë- g€dgekeurd: %Œu Kb"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "QuŸ®ovîschªdí: [%s] w‹díÇõà›ge¶agí"

	)

210 
	#MSG_AUTH_UNKNOWN
 "Onbekídêaut‹ißtõ mëhode"

	)

211 
	#MSG_PDB_BROKEN
 "K™ hë geödexìrdêÖuªdb be°™dÇõàÀzí (o‡oud f‹mØàgedëe˘ìrdË- Probì∏puª-pw mkdb"

	)

212 
	#MSG_ALIASES_ALIAS
 "%†i†ì¿Æü†vo‹ %s."

	)

213 
	#MSG_ALIASES_UNKNOWN
 "OnbekídêÆü†%s."

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "Beschadigdálüs£¿be°™d"

	)

215 
	#MSG_ALIASES_LIST
 "DêvﬁgídêÆüs£¿zij¿beschikbØ∏:"

	)

216 
	#MSG_PERUSER_MAX
 "Ik k™Çõàmì∏d™ %lu vîbödögí v™ dezñfdêgebruikîác˚±îí"

	)

217 
	#MSG_IPV6_OK
 "IPv6 vîbödögí zij¿ook wñkom o∞dezê£rvî"

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: E«bÀd %†wôh %s, %d se¸ë bô†cùhî"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: CùhîÅoÿwók"

	)

220 
	#MSG_TLS_NEEDED
 "Sorry, cleartext sessionsáreÇotáccepted onÅhis server.\n" \

221 "PÀa£Ñec⁄√˘ usög SSL/TLS securôy mech™isms."

	)

222 
	#MSG_ILLEGAL_CHARSET
 "IŒegÆ ch¨£t"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: C⁄ãxànŸ found. Exôög."

	)

224 
	#MSG_PROT_OK
 "D©®¥Ÿe˘i⁄Üevñ sëÅÿ\"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "D©®c⁄√˘i⁄ c™nŸ bê›íed wôhÅhi†PROT sëtög."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "PrŸe˘i⁄Üevñ %†nŸ undî°ood. FÆlbackÅÿ\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT mu° bê¥e˚ded byá suc˚ssfu»PBSZ comm™d"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "Gì¿u£rPassw‹dáâribuuàØngërof„n. C⁄åﬁì∏dêt€g™g§echãn."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "Onjui°êLDAPAuthMëhod i¿dêc⁄figuøtõ. M€à'böd' o‡'∑ssw‹d' zijn."

	)

	@src/messages_no.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: InvÆid TLSCùhîSuôê•ecifõd '%s'"

	)

2 
	#MSG_TIMEOUT
 "Timeout"

	)

3 
	#MSG_CAPABILITIES
 "K™ ikkêídªÉgísk≠î"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "Klõ¡íÜukkëÅûkoblögí"

	)

5 
	#MSG_CLIENT_READ_ERR
 "Le£„û fø klõ¡í"

	)

6 
	#MSG_CANT_OPEN_CNX
 "K™ ikkêÂ≤êtûkoblögí"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "K™ ikkê›¥ëã d©asokkñ"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "Klõ¡í†adªs£Ér"

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "Sy¡aks-„û i IP-adªs£"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "PORT-komm™dÿlykãs"

	)

11 
	#MSG_ONLY_IPV4V6
 "Ku¿IPv4 og IPv6É∏°¯âë (1,2)"

	)

12 
	#MSG_ONLY_IPV4
 "Ku¿IPv4É∏°¯âë (1)"

	)

13 
	#MSG_TIMEOUT_PARSER
 "Timeouà-Ör¯v Â skrivêlôàøskîê√°êg™g"

	)

14 
	#MSG_LINE_TOO_LONG
 "LöjíÉ∏f‹Ü™g"

	)

15 
	#MSG_LOG_OVERFLOW
 "Klõ¡íÖr¯vdêÂ ovîfyŒêkomm™dﬁöjí†buf„r"

	)

16 
	#MSG_GOODBYE
 "F¨vñ! DuÜa°ë oµ %Œu ogÜa°ëÇed %Œu kbyãs."

	)

17 
	#MSG_DEBUG_COMMAND
 "Komm™do"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 "î döÇÂvÊªndêposisj⁄"

	)

19 
	#MSG_NOT_LOGGED_IN
 "DuÉ∏ikkêloggë i¬"

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "Sikkîhësutvidñ£É∏ikkêim∂emíãπ"

	)

21 
	#MSG_NO_FILE_NAME
 "I¡ë fû«vn"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "I¡ë k©Æog«vn"

	)

23 
	#MSG_NO_RESTART_POINT
 "I¡ëÑe°¨çunkt"

	)

24 
	#MSG_ABOR_SUCCESS
 "Sidí du sî dëã, mÂ ABOR h®vÊπ vñlykkë"

	)

25 
	#MSG_MISSING_ARG
 "M™gÀndê¨gumít"

	)

26 
	#MSG_GARBAGE_FOUND
 "S¯µñ fu¬ëÉâî vîdi"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "Vîdòî f‹ st‹"

	)

28 
	#MSG_IDLE_TIME
 "I«ktivÅidÉ∏ßâÅû %lu sekundî"

	)

29 
	#MSG_SITE_HELP
 "F¯lgídêSITE-komm™d€∏îÅûgjígñige"

	)

30 
	#MSG_BAD_CHMOD
 "Ugyldigêªâighëî"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "îÉ¿ukjíàutvidñ£"

	)

32 
	#MSG_XDBG_OK
 "XDBG komm™dÿvñlykkë, debugÇivÂÉ∏nÂ %d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "Ukjíàkomm™do"

	)

34 
	#MSG_TIMEOUT_NOOP
 "Timeouà(ögítög utf¯πÖÂ %lu sekundî)"

	)

35 
	#MSG_TIMEOUT_DATA
 "Timeouà(ögíÇyêd©®pÂ %lu sekundî)"

	)

36 
	#MSG_SLEEPING
 "Zzz..."

	)

37 
	#MSG_ALREADY_LOGGED
 "DuÉ∏ÆÀªdêloggë i¬"

	)

38 
	#MSG_ANY_PASSWORD
 "Eàhvûkë som hñ°Öass‹d dugî"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "An⁄ym brukîÉ∏loggë i¬"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "An⁄ym brukîÉ∏loggëÖÂ vútuñ»FTP"

	)

41 
	#MSG_USER_OK
 "Brukî %†OK. Dë kªve†∑ss‹d"

	)

42 
	#MSG_CANT_DO_TWICE
 "Vòk™ ikkêgj¯ª dë i dí√ f‹bödñ£n"

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "K™ ikkê›¥ëãÉ¿sikkîán⁄ym FTP-f‹bödñ£"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "Dö bÂndbªddêî begªn£t."

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 "Hvûkë som hñ°Öass‹d vû fungîe"

	)

46 
	#MSG_NOTRUST
 "Bekœgî, mí jeg stﬁî ikkêpÂ deg"

	)

47 
	#MSG_WHOAREYOU
 "Ví∆ig° f‹ãŒ meg hvem duÉr"

	)

48 
	#MSG_AUTH_FAILED
 "Godkjínög mi¶ykãs, bekœgî"

	)

49 
	#MSG_AUTH_TOOMANY
 "F‹ m™gêmi¶ykkedêö∆oggögsf‹s¯k"

	)

50 
	#MSG_NO_HOMEDIR
 "Hjemmek©ÆogíÉ∏ikkêtûgjígñig -ávbryãr"

	)

51 
	#MSG_NO_HOMEDIR2
 "%†eksi°îî ikkêñÀ∏k™ ikkênÂs"

	)

52 
	#MSG_START_SLASH
 "Sèπî i /"

	)

53 
	#MSG_USER_GROUP_ACCESS
 "Brukîí %†h¨ gruµëûg™gÅû"

	)

54 
	#MSG_FXP_SUPPORT
 "Dí√ sîvîí st¯âî FXP-ovîf¯rög"

	)

55 
	#MSG_RATIO
 "Du mÂÑe•ekãªÉ¿%u:%u (UL/DL)-øtio"

	)

56 
	#MSG_CHROOT_FAILED
 "K™ ikkê£âê›∞í sikkî chroŸ()-˚Œe"

	)

57 
	#MSG_CURRENT_DIR_IS
 "OK. NÂvÊªndêk©ÆogÉ∏%s"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "OK. NÂvÊªndêbegªn£àm≠≥É∏%s"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†îÇÂÜoggë i¬"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "K™ ikkêski·êk©ÆogÅû %s"

	)

61 
	#MSG_PATH_TOO_LONG
 "Stòf‹Ü™g"

	)

62 
	#MSG_CANT_PASV
 "Du k™ ikkêbrukêPASVÖÂ IPv6Åûkoblögî. Bruk hñÀ∏EPSV."

	)

63 
	#MSG_CANT_PASSIVE
 "K™ ikkêÂ≤êíÖassiv f‹bödñ£"

	)

64 
	#MSG_PORTS_BUSY
 "AŒêª£rvîã TCPÖ‹ã∏î oµèâ"

	)

65 
	#MSG_GETSOCKNAME_DATA
 "K™ ikkêidítifi£ª díÜokÆêd©asokkñí"

	)

66 
	#MSG_GETPEERNAME
 "K™ ikkêidítifi£ª díÜokÆêd©asokkñí"

	)

67 
	#MSG_INVALID_IP
 "Bekœgî, ugyldig IP-adªs£"

	)

68 
	#MSG_NO_EPSV
 "Ví∆ig° brukÉ¿klõ¡ som st¯âî IPv6 med EPSV"

	)

69 
	#MSG_BAD_PORT
 "Bekœgî, mí jeg k™ ikkêkobÀÅûÖ‹ã∏< 1024"

	)

70 
	#MSG_NO_FXP
 "Jeg k™ ikkêÂ≤êí f‹bödñ£Åû %†(b¨êtû %s)"

	)

71 
	#MSG_FXP
 "FXP-ovîf¯rög: fø %†tû %s"

	)

72 
	#MSG_NO_DATA_CONN
 "Ingí d©af‹bödñ£"

	)

73 
	#MSG_ACCEPT_FAILED
 "Ku¬êikkêgodkjí√ f‹bödñ£n"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "D©af‹bödñ£ godkjít"

	)

75 
	#MSG_CNX_PORT_FAILED
 "K™ ikkêÂ≤êd©af‹bödñ£ÅûÖ‹à%d"

	)

76 
	#MSG_CNX_PORT
 "KobÀ∏tûÖ‹à%d"

	)

77 
	#MSG_ANON_CANT_MKD
 "Bekœgî,án⁄ymêbrukîêk™ ikkê›¥ëã k©Æogî"

	)

78 
	#MSG_ANON_CANT_RMD
 "Bekœgî,án⁄ymêbrukîêk™ ikkê¶ëã k©Æogî"

	)

79 
	#MSG_ANON_CANT_RENAME
 "An⁄ymêbrukîêk™ ikkêÊyâêñÀ∏ídªÇav¿pÂ fûî"

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "An⁄ymêbrukîêk™ ikkêídªÑëtighëî"

	)

81 
	#MSG_GLOB_NO_MEMORY
 "SluâÖÂ mö√àundî gjínomg™gáv %s"

	)

82 
	#MSG_PROBABLY_DENIED
 "(Dëã bëy∏ß¬sy∆igvi†'IngíÅûg™g')"

	)

83 
	#MSG_GLOB_READ_ERROR
 "Le£„û undî gjínomg™gáv %s"

	)

84 
	#MSG_GLOB_NO_MATCH
 "Ingí %†ò%s"

	)

85 
	#MSG_CHMOD_FAILED
 "Ku¬êikkêídªÑëtighëîÖÂ %s"

	)

86 
	#MSG_CHMOD_SUCCESS
 "RëtighëîÉndªàpÂ %s"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "Bekœgî, mí jeg ku¬êikkêídªÑëtighëî"

	)

88 
	#MSG_ANON_CANT_DELETE
 "An⁄ymêbrukîêk™ ikkê¶ëã fûî"

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "An⁄ymêbrukîêk™ ikkêovîskrivêeksi°îídêfûî"

	)

90 
	#MSG_DELE_FAILED
 "Ku¬êikkê¶ëã %s"

	)

91 
	#MSG_DELE_SUCCESS
 "%s%s%s%†¶ëãt"

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "Ingí fûî sÀâë"

	)

93 
	#MSG_LOAD_TOO_HIGH
 \

95 "ÂÜa°ê√dÇÂ∏bña°nögíÉ∏sÂ h¯y. Oµœ°ögÉ∏Æ…idÅûœâ."

	)

97 
	#MSG_OPEN_FAILURE
 "K™ ikkêÂ≤ê%s"

	)

98 
	#MSG_OPEN_FAILURE2
 "K™ ikkêÂ≤êdí fûí"

	)

99 
	#MSG_STAT_FAILURE
 "K™ ikkêfö√ fû°¯ºñ£n"

	)

100 
	#MSG_STAT_FAILURE2
 "K™ ikkêsjekkêom fûí fö√s"

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "Gjí°¨çunkà%ŒdÉ∏f‹ st‹ f‹ fû°¯ºñ£ %Œd."

	)

102 
	#MSG_REST_RESET
 "Gjí°¨çunkàßâÅû 0"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "Jeg k™ b¨êmŸè v™ligêfûî"

	)

104 
	#MSG_NOT_MODERATED
 \

106 "ikkêblôàgodkjíàf‹Çedœ°ögávádmöi°øt‹íe."

	)

107 
	#MSG_RATIO_DENIAL
 \

110 "Ví∆ig°Üa° oµÇ€ f¯∏duÖr¯vî ÂÜa°ê√d."

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "DëÉ∏ögítög igjí ÂÜa°ê√d"

	)

112 
	#MSG_WINNER
 "D©amasköíÉ∏dö vín. StﬁÖÂ d©amasköí"

	)

113 
	#MSG_KBYTES_LEFT
 "%.1‡kbyã†igjí Â híã"

	)

114 
	#MSG_ABORTED
 "Ovîf¯rögávbruâ"

	)

115 
	#MSG_DATA_WRITE_FAILED
 "Feû undî skrivögÅû d©af‹bödñ£n"

	)

116 
	#MSG_DATA_READ_FAILED
 "Feû undîÜesög fø d©af‹bödñ£n"

	)

117 
	#MSG_MMAP_FAILED
 "Ku¬êikkêÀggêfûí i mö√t"

	)

118 
	#MSG_WRITE_FAILED
 "Feû undî skrivögÅû fû"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡£kundî (mÂ… hî), %.2‡Mbyã†≥∏£kund"

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡£kundî (mÂ… hî), %.2‡Kbyã†≥∏£kund"

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡£kundî (mÂ… hî), %.2‡byã†≥∏£kund"

	)

122 
	#MSG_SPACE_FREE_M
 "%.1‡Mbyã†Àdig diskÖœss"

	)

123 
	#MSG_SPACE_FREE_K
 "%‡Kbyã†Àdig diskÖœss"

	)

124 
	#MSG_DOWNLOADED
 "√dœ°ë"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "REST kªvîÉ¿numîiskÖ¨amëî"

	)

126 
	#MSG_REST_ASCII_STRICT
 "Sv¨-m¨k¯∏mÂ vÊª 0 i ASCII mode"

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "SèπëÖÂÇyâ ved %Œd. Mí vòî i ASCII mode"

	)

128 
	#MSG_REST_SUCCESS
 "SèπîÖÂÇyâ ved %Œd"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "F‹dbudàk©Æog«vn"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "F‹budàfû«vn: %s"

	)

131 
	#MSG_MKD_FAILURE
 "K™ ikkê›¥ëã k©Æog"

	)

132 
	#MSG_MKD_SUCCESS
 "K©Æogí bÀ oµªâë"

	)

133 
	#MSG_RMD_FAILURE
 "K™ ikkêfjî√ k©Æog"

	)

134 
	#MSG_RMD_SUCCESS
 "K©Æogí bÀ fjî√t"

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "K™ ikkêhíãÅids°em≥l"

	)

136 
	#MSG_MODE_ERROR
 "B¨êASCII og böÊ∏ovîf¯rögÉ∏°¯âë"

	)

137 
	#MSG_CREATE_FAILURE
 "K™ ikkê›¥ëã fû"

	)

138 
	#MSG_ABRT_ONLY
 "ABRTÉ∏díÉ√°êlovligêkomm™d€¿undî oµœ°ög"

	)

139 
	#MSG_UPLOAD_PARTIAL
 "Dñvi†›∂a°ë"

	)

140 
	#MSG_REMOVED
 "fjî√t"

	)

141 
	#MSG_UPLOADED
 "›∂a°ë"

	)

142 
	#MSG_GMTIME_FAILURE
 "Ku¬êikkêhíã díÜokÆêtidí"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "Ku¿8-bô byã†î st¯âë, vòî ikkê10 Â∏tûbake"

	)

144 
	#MSG_TYPE_UNKNOWN
 "UkjíàTYPE"

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPEÉ∏nÂ"

	)

146 
	#MSG_STRU_FAILURE
 "Ku¿F(ûeËî st¯âë"

	)

147 
	#MSG_MODE_FAILURE
 "Ví∆ig° bruk S—ªamËmode"

	)

148 
	#MSG_RENAME_ABORT
 "Avbryã∏f‹rigêomd¯pögs›pgave"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "RNFR godkjíà- fûí fö√s, kœ∏f‹ de°öasj⁄"

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "Bekœgî, mí dí fûí fö√†ikke"

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "RENAME mi¶ykã†- de°öasj⁄sfûí fö√†ÆÀªde"

	)

152 
	#MSG_RENAME_NORNFR
 "Tªngî RNFR f¯∏RNTO"

	)

153 
	#MSG_RENAME_FAILURE
 "Omd¯pögs/Êyâögs„û"

	)

154 
	#MSG_RENAME_SUCCESS
 "FûíÉ∏omd¯±ÉŒî flyâë"

	)

155 
	#MSG_NO_SUPERSERVER
 "Ví∆ig° kj¯∏puª-·pd føÉ¿su≥r-£rvî (f.eks.Å˝£rvî)"

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "Ku¬êikkêfö√ '·p'-k⁄t€n"

	)

157 
	#MSG_CONF_ERR
 "K⁄figuøsj⁄s„û"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "M™gÀ∏«v¿pÂ vútuñ»brukî"

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "Ugyldig vîdòf‹ÅhrŸée"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "Ugyldig 'åu°ed gid' f‹ chroŸ"

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "Ugyldig brukîbegªn¢ög"

	)

162 
	#MSG_ILLEGAL_FACILITY
 "UkjíàÁsûôë¢avn"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "Feû i LDAP-k⁄figuøsj⁄sfû"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "UgyldigÜﬂd-gªn£"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "UgyldigÖ‹t-omrÂde"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "Ugyldig 'ls'-begªnsög"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "UgyldigÅvungí IP-adªs£ÅûÖassivêf‹bödñ£r"

	)

168 
	#MSG_ILLEGAL_RATIO
 "Ugyldig oµœ°ögs/√dœ°ögs-f‹hﬁd"

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "Ugyldig uid-gªn£"

	)

170 
	#MSG_ILLEGAL_OPTION
 "Ukjíàrun-time-vÆg"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "M™gÀ∏LDAPBa£DN i LDAP-k⁄figuøsj⁄sfûí"

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "Feû LDAP-∑ømëî"

	)

173 
	#MSG_NEW_CONNECTION
 "NyÅûkoblög fø %s"

	)

174 
	#MSG_WELCOME_TO
 "VñkommíÅû"

	)

175 
	#MSG_MAX_USERS
 "%lu brukîê(maksËîáŒîedêloggëÖÂ"

	)

176 
	#MSG_NB_USERS
 "DuÉ∏brukîÇummî %uáv %uÅûœâe"

	)

177 
	#MSG_WELCOME_TIME
 "DíÜokÆêtidíÉ∏nÂ %02d:%02d. SîvîÖ‹t: %u."

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "Ku¿™⁄ym FTPÉ∏tûœâ hî"

	)

179 
	#MSG_RATIOS_EVERYONE
 "RATIO ER SATT P≈ FOR ALLE:"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "ANONYME BRUKERE BLIR UNDERLAGT UL/DL-RATIO:"

	)

181 
	#MSG_RATIOS_RULE
 "f‹ ÂÜa°ê√d %u Mb, mÂ duÜa°ê›∞%u Mb med godßkî."

	)

182 
	#MSG_INFO_IDLE_M
 "Du blú kobÀà‰®ëã∏%lu möuâî†öaktivôë."

	)

183 
	#MSG_INFO_IDLE_S
 "Du blú kobÀà‰®ëã∏%lu sekundî†öaktivôë."

	)

184 
	#MSG_CANT_READ_FILE
 "Bekœgî, ku¬êikkêÀ£ [%s]"

	)

185 
	#MSG_LS_TRUNCATED
 "Resu…©É∏avk‹ãàtû %uÅªff"

	)

186 
	#MSG_LS_SUCCESS
 "%uÅªf‡tŸÆt"

	)

187 
	#MSG_LOGOUT
 "Logg ut."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "Godkjí√l£ mi¶ykã†f‹ [%s]"

	)

189 
	#MSG_ILLEGAL_UMASK
 "Feû umask"

	)

190 
	#MSG_STANDALONE_FAILED
 "K™ ikkê°¨ãÉ¿°™dÆ⁄ê£rvî"

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "DëãÉ∏ëÖriv© sy°em - Ingíán⁄ymêö∆oggögîÅûœâ"

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "Eàhvûkë som hñ°Öass‹d vúkî"

	)

193 
	#MSG_MAX_USERS_IP
 "F‹ m™gêf‹bödñ£∏(%luË‰®dí√ IP-adªs£n"

	)

194 
	#MSG_ACTIVE_DISABLED
 "A˘ivêmodêî slÂâáv"

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "Ovîf¯rögíáv fûí v¨ vñlykkë"

	)

196 
	#MSG_NO_DISK_SPACE
 "DiskíÉ∏fuŒ - ví∆ig°Üa° oµ síîe"

	)

197 
	#MSG_OUT_OF_MEMORY
 "Mö√àî oµbrukt"

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "UgyldigÖÂlôñig IP-adªs£"

	)

199 
	#MSG_NO_ASCII_RESUME
 "≈ f‹t£âêpÂÉ¿ASCII fûÉ∏usikkît, sÀâ fûí f¯r°."

	)

200 
	#MSG_UNKNOWN_ALTLOG
 "Ukjíàloggf‹m©"

	)

201 
	#MSG_ACCOUNT_DISABLED
 "K™ ikkêloggêö¿som [%s]: k⁄t€¿î sãngt"

	)

202 
	#MSG_SQL_WRONG_PARMS
 "Feû SQL-∑ømëîe"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "Ugyldig SQL-k⁄figuøsj⁄sfû"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "M™gÀ∏£rvî i SQL-k⁄figuøsj⁄sfûí"

	)

205 
	#MSG_SQL_DOWN
 "SQL-£rvîí sî uàtû Â vÊªÇede"

	)

206 
	#MSG_ILLEGAL_QUOTA
 "Ugyldig quŸa"

	)

207 
	#MSG_QUOTA_FILES
 "%Œu fûî blú brukà(%d%%Ë-Åûœâ: %Œu fûî"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu Kbyã†blú brukà(%d%%Ë-Åûœâ: %Œu Kb"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "QuŸ®ovî°egë: [%s] blú ikkêœgªt"

	)

210 
	#MSG_AUTH_UNKNOWN
 "Ukjíàgodkjí√l£smëode"

	)

211 
	#MSG_PDB_BROKEN
 "K™ ikkêÀ£ dí indek£πêpuªdb-fûí (ñÀ∏díÉ∏ògammñàf‹m©Ë- Pr¯vÖuª-pw mkdb"

	)

212 
	#MSG_ALIASES_ALIAS
 "%†îÉàÆü†f‹ %s."

	)

213 
	#MSG_ALIASES_UNKNOWN
 "UkjíàÆü†%s."

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "ÿdñagàÆüs-fû"

	)

215 
	#MSG_ALIASES_LIST
 "F¯lgídêÆü†îÅûgjígñige:"

	)

216 
	#MSG_PERUSER_MAX
 "K™ ikkêak£±îêmîÉ¬ %luÅûkoblögî fø sammêbrukî"

	)

217 
	#MSG_IPV6_OK
 "IPv6-f‹bödñ£∏î ogsÂ vñkom√ÖÂ dí√ sîvîí"

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: Aktivîà%†med %s, %d bô†kry≥rög¢¯kkñ"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: Kry±îög¢¯kkñíÉ∏f‹ svak"

	)

220 
	#MSG_TLS_NEEDED
 "Beklager, klartekst-forbindelserÉr ikkeÅillattÖÂ denne serveren.\n" \

221 "VÊ∏ví∆ig Â kobÀÅûÖÂÇyâ ved brukáv SSL/TLS-sikkîhësmek™ismî."

	)

222 
	#MSG_ILLEGAL_CHARSET
 "IŒegÆ ch¨£t"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: C⁄ãxànŸ found. Exôög."

	)

224 
	#MSG_PROT_OK
 "D©®¥Ÿe˘i⁄Üevñ sëÅÿ\"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "D©®c⁄√˘i⁄ c™nŸ bê›íed wôhÅhi†PROT sëtög."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "PrŸe˘i⁄Üevñ %†nŸ undî°ood. FÆlbackÅÿ\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT mu° bê¥e˚ded byá suc˚ssfu»PBSZ comm™d"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÑëu∫edÇÿu£rPassw‹dáâribuã, check LDAPác˚s†rights."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "InvÆid LDAPAuthMëhod i¿thêc⁄figuøti⁄ fûe. Should bê'böd' o∏'∑ssw‹d'."

	)

	@src/messages_pl.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: InvÆid TLSCùhîSuôê•ecifõd '%s'"

	)

2 
	#MSG_TIMEOUT
 "Przekrocz⁄y cza†oczekiw™ü"

	)

3 
	#MSG_CAPABILITIES
 "Nõ moø«Örze≥±czaÊ c≠abûôõs"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "Klõ¡ zamkn±≥Öo≥±czíõ"

	)

5 
	#MSG_CLIENT_READ_ERR
 "B≥±d odczytu d™ych od klõ¡a"

	)

6 
	#MSG_CANT_OPEN_CNX
 "Nõ moø« utw‹zyÊÖo≥±czíü"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "Nõ moø« utw‹zyÊ gnüzd®dœ d™ych"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "Adª†klõ¡®to"

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "B≥±d sk≥adnòwádªsõ IP"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "komíd®PORTÖowiod≥®siÍ"

	)

11 
	#MSG_ONLY_IPV4V6
 "TylkÿIPv4 oøz IPv6 s± w•õø√ (1,2)"

	)

12 
	#MSG_ONLY_IPV4
 "TylkÿIPv4 je° w•õø√ (1)"

	)

13 
	#MSG_TIMEOUT_PARSER
 "Przekrocz⁄ÿcza†oczekiw™üà- wpisuj szybcõjÇa°Í≤ymÑazem"

	)

14 
	#MSG_LINE_TOO_LONG
 "Löü zbyàd≥uga"

	)

15 
	#MSG_LOG_OVERFLOW
 "Klõ¡ÖrÛbowa≥Örzïe≥niÊ buf‹Üöòpﬁe˚Ò"

	)

16 
	#MSG_GOODBYE
 "Øeg«j. Wgø≥e∂ %Œu oøz ∂ci±gn±≥e∂ %Œu kbajtÛw."

	)

17 
	#MSG_DEBUG_COMMAND
 "Komída"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 "tÿTwoj®aktuÆ«ÜokÆizacja"

	)

19 
	#MSG_NOT_LOGGED_IN
 "Nõ je°e∂áktuÆnõ zÆogow™y"

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "Rozszîzíü bezpõczeÒ°w®nõ zaim∂emítow™e"

	)

21 
	#MSG_NO_FILE_NAME
 "BøkÇazwyÖliku"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "BøkÇazwy k©Æogu"

	)

23 
	#MSG_NO_RESTART_POINT
 "BøkÖunktu z ktÛªgÿp⁄awüÊ"

	)

24 
	#MSG_ABOR_SUCCESS
 "P⁄õwaøÅÿwidzisz komíd®ABOR zakoÒczy≥®siÍ suk˚£m"

	)

25 
	#MSG_MISSING_ARG
 "Bøkujê¨gumítu"

	)

26 
	#MSG_GARBAGE_FOUND
 "Z«Àzi⁄ÿ∂mõcòpÿöf‹macjòÿw¨to∂ci"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "W¨to∂¯zbyàduøa"

	)

28 
	#MSG_IDLE_TIME
 "Cza†oczekiw™ü u°awi⁄yÇ®%lu sekund"

	)

29 
	#MSG_SITE_HELP
 "Na°Ípuj±˚ komídy SITE s± obs≥ugiw™e"

	)

30 
	#MSG_BAD_CHMOD
 "Nõ¥awid≥owê¥awa"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "je°Çõz«nymÑozszîzíõm"

	)

32 
	#MSG_XDBG_OK
 "komíd®XDBGÖowiod≥®siÍ,áktuÆnyÖoziom debugow™üÅÿ%d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "Nõz«« komída"

	)

34 
	#MSG_TIMEOUT_NOOP
 "Przekrocz⁄y cza†oczekiw™ü (bøk o≥øcjòw ci±gu %lu sekund)"

	)

35 
	#MSG_TIMEOUT_DATA
 "Przekrocz⁄y cza†oczekiw™ü (bøkÇowych d™ych w ci±gu %lu sekund)"

	)

36 
	#MSG_SLEEPING
 "Zzz..."

	)

37 
	#MSG_ALREADY_LOGGED
 "Je°e∂ juø zÆogow™y"

	)

38 
	#MSG_ANY_PASSWORD
 "Dowﬁ√ has≥ÿzadzü≥a"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "An⁄imowy uøytkownik zÆogow™y"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "An⁄imowy uøytkownik zÆogow™y w wútuÆnym FTP"

	)

41 
	#MSG_USER_OK
 "Uøytkownik %†OK. Wymag™êhas≥o"

	)

42 
	#MSG_CANT_DO_TWICE
 "Nõ moø«ÅegÿzrobiÊ wáktuÆ√j sesji"

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "Nõ moø« uaktywniÊ bezpõcz√gÿ™⁄imowegÿFTP"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "TwojêzuøycõÖasm®je° ogønicz⁄e"

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 "NõÖŸrzebujÍ øad√gÿhas≥a, mÛj drogi,ÅchÛøliwyán⁄imõ"

	)

46 
	#MSG_NOTRUST
 "WybaczáÀÇõ moø« CòuÁÊ"

	)

47 
	#MSG_WHOAREYOU
 "ProszÍÖowõdz mòkim je°e∂"

	)

48 
	#MSG_AUTH_FAILED
 "Uwõrzyã õnõÇõÖowiod≥ÿsiÍ, wybacz"

	)

49 
	#MSG_AUTH_TOOMANY
 "ZbyàwõÀÇõpowodzeÒÖodcza†uwõrzyã ünü"

	)

50 
	#MSG_NO_HOMEDIR
 "K©Æog domowy je°Çõdo°Í≤y -Örzîywam"

	)

51 
	#MSG_NO_HOMEDIR2
 "%†nõ i°nõjêlubÇõ moø« gÿodczyèÊ"

	)

52 
	#MSG_START_SLASH
 "Sèπujêw /"

	)

53 
	#MSG_USER_GROUP_ACCESS
 "Uøytkownik %†m®grupowy do°Í∞do"

	)

54 
	#MSG_FXP_SUPPORT
 "Tí sîwî w•õøÅøns„∏FXP"

	)

55 
	#MSG_RATIO
 "MusiszÑe•ektowaÊ w•Û≥czy¬ik %u:%u (wgø√/pobø√)"

	)

56 
	#MSG_CHROOT_FAILED
 "Nõ moø« uaktywniÊ bezpõcz√gÿwiÍzõnü chroŸ()"

	)

57 
	#MSG_CURRENT_DIR_IS
 "OK. AktuÆny k©ÆogÅÿ%s"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "OK. AktuÆny, ogønicz⁄y k©ÆogÅÿ%s"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†je°Åîaz zÆogow™y"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "Nõ moø« zmõniÊ k©ÆoguÇ®%s"

	)

61 
	#MSG_PATH_TOO_LONG
 "¶cõøk®zbyàd≥uga"

	)

62 
	#MSG_CANT_PASV
 "Nõ moø« utw‹zyÊÖasyw√gÿpo≥±czíü z®pomoc±Åej sèªj komídy"

	)

63 
	#MSG_CANT_PASSIVE
 "Nõ moø« utw‹zyÊÖasyw√gÿpo≥±czíü"

	)

64 
	#MSG_PORTS_BUSY
 "Wszy°kõ z¨ezîwow™êp‹ty TCP s± zajÍã"

	)

65 
	#MSG_GETSOCKNAME_DATA
 "Nõ moø« zidítyfikowaÊÜokÆ√gÿgnüzd®d™ych"

	)

66 
	#MSG_GETPEERNAME
 "Nõ moø« zidítyfikowaÊÜokÆ√gÿgnüzd®d™ych"

	)

67 
	#MSG_INVALID_IP
 "Wybacz,Öod™ÿz≥yádªs"

	)

68 
	#MSG_NO_EPSV
 "ProszÍ uøyj klõ¡®IPv6 zgod√gÿzê°™d¨dem obs≥ugòEPSV"

	)

69 
	#MSG_BAD_PORT
 "WybaczáÀÇõÖo≥±czÍ siÍ zÖ‹èmò< 1024"

	)

70 
	#MSG_NO_FXP
 "OtwõønõÖo≥±czíü dÿ%†zamü° dÿ%s"

	)

71 
	#MSG_FXP
 "å™s„∏FXP : z %†dÿ%s"

	)

72 
	#MSG_NO_DATA_CONN
 "Po≥±czíõ d™ychÇõ i°nõje"

	)

73 
	#MSG_ACCEPT_FAILED
 "Po≥±czíõÇõ mog≥ÿzo°aÊ zØk˚±ow™e"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "ZØk˚±ow™ÿpo≥±czíõ d™ych"

	)

75 
	#MSG_CNX_PORT_FAILED
 "Nõ moø« otw‹zyÊÖo≥±czíü d™ych dÿp‹tu %d"

	)

76 
	#MSG_CNX_PORT
 "£±czíõ zÖ‹ãm %d"

	)

77 
	#MSG_ANON_CANT_MKD
 "Wybacz,án⁄imowòuøytkownicyÇõ mog±Åw‹zyÊ k©ÆogÛw"

	)

78 
	#MSG_ANON_CANT_RMD
 "Wybacz,án⁄imowòuøytkownicyÇõ mog± usuwaÊ k©ÆogÛw"

	)

79 
	#MSG_ANON_CANT_RENAME
 "An⁄imowòuøytkownicyÇõ mog±ÖrzíosiÊ/zmõnüÊÇazwÖlikÛw"

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "An⁄imowòuøytkownicyÇõ mog± zmõnüÊÖøw"

	)

81 
	#MSG_GLOB_NO_MEMORY
 "Zabøk≥ÿ∑miÍcòpodcza†rozwij™ü %s"

	)

82 
	#MSG_PROBABLY_DENIED
 "(Tÿ¥awd›odobnõ oz«cz®\"Bøk do°Ípu\")"

	)

83 
	#MSG_GLOB_READ_ERROR
 "B≥±d odczytuÖodcza†rozwij™ü %s"

	)

84 
	#MSG_GLOB_NO_MATCH
 "BøkÖasuj±cych dÿ%†w %s"

	)

85 
	#MSG_CHMOD_FAILED
 "Nõ moø« zmõniÊÖøwÇ®%s"

	)

86 
	#MSG_CHMOD_SUCCESS
 "Pøw®« %†zo°a≥y zmõni⁄e"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "WybaczáÀÇõ moø« by≥ÿzmõniÊ øad√gÿ¥awa"

	)

88 
	#MSG_ANON_CANT_DELETE
 "An⁄imowòuøytkownicyÇõ mog± kasowaÊÖlikÛw"

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "An⁄imowòuøytkownicyÇõ mog±ÇadpisywaÊ i°nõj±cychÖlikÛw"

	)

90 
	#MSG_DELE_FAILED
 "Nõ moø« skasowaÊ %s"

	)

91 
	#MSG_DELE_SUCCESS
 "Skasow™ÿ%s%s%s%s"

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "Nõ skasow™ÿøad√gÿ∂iku"

	)

93 
	#MSG_LOAD_TOO_HIGH
 \

96 "Wgryw™õ je° zawszêdozwﬁ⁄e."

	)

97 
	#MSG_OPEN_FAILURE
 "Nõ moø« otw‹zyÊ %s"

	)

98 
	#MSG_OPEN_FAILURE2
 "Nõ moø« otw‹zyÊÅegÿ∂iku"

	)

99 
	#MSG_STAT_FAILURE
 "Nõ moø« uzyskaÊ wõlko∂cò∂iku"

	)

100 
	#MSG_STAT_FAILURE2
 "Nõ moø« s¥awdziÊ czyÖlik i°nõje"

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "PrzesuniÍcõÖodcza†wz«wünü %Œd je° zbyàduøêdœÖliku o wõlko∂cò%Œd."

	)

102 
	#MSG_REST_RESET
 "PrzesuniÍcõÖodcza†wz«wünü u°awi⁄ê« 0"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "Moø«Örzesy≥aÊ wy≥±cznõÑeguœ∫ê∂iki"

	)

104 
	#MSG_NOT_MODERATED
 \

106 "¥zezádmöi°øt‹®dÿ∂ci±g™ü."

	)

107 
	#MSG_RATIO_DENIAL
 \

110 "ProszÍ wgøj jakõ∂ d™êò•rÛbuj ∂ci±gn±ÊÖÛºnõj."

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "NõÖozo°a≥ÿni¯dÿ∂ci±g™ü"

	)

112 
	#MSG_WINNER
 "Kompuã∏je° TwoimÖrzyjacõÀm. ZauÁj mu"

	)

113 
	#MSG_KBYTES_LEFT
 "%.1‡kbajtÛw dÿ∂ci±gniÍcü"

	)

114 
	#MSG_ABORTED
 "Tøns„∏¥zîw™o"

	)

115 
	#MSG_DATA_WRITE_FAILED
 "B≥±dÖodcza†pißnü d™ych dÿpo≥±czíü dœ d™ych"

	)

116 
	#MSG_DATA_READ_FAILED
 "B≥±dÖodcza†odczytu d™ych zÖo≥±czíü dœ d™ych"

	)

117 
	#MSG_MMAP_FAILED
 "Nõ moø« zm≠owaÊÖliku dÿ∑miÍci"

	)

118 
	#MSG_WRITE_FAILED
 "B≥±dÖodcza†z≠isu dÿ∂iku"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡£kund (zmõrz⁄ychÅuèj), %.2‡MbajtÛwÇ®£kundÍ"

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡£kund (zmõrz⁄ychÅuèj), %.2‡KbajtÛwÇ®£kundÍ"

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡£kund (zmõrz⁄ychÅuèj), %.2‡bajtÛwÇ®£kundÍ"

	)

122 
	#MSG_SPACE_FREE_M
 "%.1‡MbajtÛw wﬁ√jÖrze°rzíòdyskowej"

	)

123 
	#MSG_SPACE_FREE_K
 "%‡KbajtÛw wﬁ√jÖrze°rzíòdyskowej"

	)

124 
	#MSG_DOWNLOADED
 "∂ci±gniÍto"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "REST wymag®numîycz√gÿ∑ømëru"

	)

126 
	#MSG_REST_ASCII_STRICT
 "Z«cznik odpowõdzòmusòbyÊ u°awi⁄yÇ®0 wÅrybõ ASCII"

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "Wz«wüm od %ŒdáÀ je°e∂my wÅrybõ ASCII"

	)

128 
	#MSG_REST_SUCCESS
 "Wz«wüm od %Œd"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "Nõdozwﬁ⁄®«zw®k©Æogu"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "Nõdozwﬁ⁄®«zw®∂iku: %s"

	)

131 
	#MSG_MKD_FAILURE
 "Nõ moø« utw‹zyÊ k©Æogu"

	)

132 
	#MSG_MKD_SUCCESS
 "Utw‹z⁄ÿk©Æog"

	)

133 
	#MSG_RMD_FAILURE
 "Nõ moø« usun±Ê k©Æogu"

	)

134 
	#MSG_RMD_SUCCESS
 "K©Æog zo°a≥ usuniÍty"

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "Nõ moø« uzyskaÊ z«cznik®czasu"

	)

136 
	#MSG_MODE_ERROR
 "Tylkÿåyby ASCII i bö¨ny s± w•õø√"

	)

137 
	#MSG_CREATE_FAILURE
 "Nõ moø« utw‹zyÊÖliku"

	)

138 
	#MSG_ABRT_ONLY
 "ABRT je°Öøwid≥ow± komíd±Åylkÿpodcza†wgryw™ü"

	)

139 
	#MSG_UPLOAD_PARTIAL
 "czÍ∂ciowÿwgøno"

	)

140 
	#MSG_REMOVED
 "zmõni⁄ÿ«zwÍ"

	)

141 
	#MSG_UPLOADED
 "wgøno"

	)

142 
	#MSG_GMTIME_FAILURE
 "Nõ moø« uzyskaÊÜokÆ√gÿczasu"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "Tylkÿ8-bôowêbajty s± w•õø√,Çõ øyjemy 10Ü©Åemu"

	)

144 
	#MSG_TYPE_UNKNOWN
 "Nõz«ny TYP"

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPÅÿaktuÆnõ"

	)

146 
	#MSG_STRU_FAILURE
 "TylkÿPlikò(\"F\"ûesËs± w•õø√"

	)

147 
	#MSG_MODE_FAILURE
 "ProszÍ uøyjÅrybu S—rumõniowego)"

	)

148 
	#MSG_RENAME_ABORT
 "Anulow™õÖ›rzednõj o≥øcjòzmünyÇazwy"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "RNFR zØk˚±ow™ê-Ölik i°nõje, gŸÛw dÿ¥zez«czíü"

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "WybaczáÀÅakò∂ikÇõ i°nõje"

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "RENAME Nõpowiod≥ÿsiÍ -Ölik do˚lowy juø i°nõje"

	)

152 
	#MSG_RENAME_NORNFR
 "PŸrzeb®RNFRÖrzed RNTO"

	)

153 
	#MSG_RENAME_FAILURE
 "Usuw™õ/zmü«ÇazwyÇõÖowiod≥®siÍ"

	)

154 
	#MSG_RENAME_SUCCESS
 "Zmõni⁄ÿlubÖrzíõsi⁄ÿ∂ik"

	)

155 
	#MSG_NO_SUPERSERVER
 "ProszÍ uruchomÖuª-·pd z sîwîemÇadrzÍdnym (èkim jakÅ˝£rvî)"

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "Nõ moø« z«À∂Ê k⁄è '·p'"

	)

157 
	#MSG_CONF_ERR
 "B≥±d k⁄figuøcji"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "Bøkujê«zwyÖliku wútuÆnych uøytkownikÛw"

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "Nõ¥awid≥ow®w¨to∂Ê dœÜimôuÖasma"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "Nõ¥awid≥owy zauÁny gid dœ chroŸa"

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "Nõ¥awid≥owyÜimô uøytkownikÛw"

	)

162 
	#MSG_ILLEGAL_FACILITY
 "Nõz««Çazw®Ácûôy"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "Nõ¥awid≥owyÖlik k⁄figuøcyjny LDAP"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "Nõ¥awid≥owyÜimôÜﬂd"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "Nõ¥awid≥owyÖrzedzü≥Ö‹tÛw"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "Nõ¥awid≥owyÜimô 'ls'"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "Nõpdawid≥owêIP wymusz⁄êdœÖasywnychÖo≥±czeÒ"

	)

168 
	#MSG_ILLEGAL_RATIO
 "Nõ¥awid≥owy w•Û≥czy¬ik dŸycz±cy ∂ci±g™ü/wgryw™ü"

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "Nõ¥awid≥owyÜimô uid"

	)

170 
	#MSG_ILLEGAL_OPTION
 "Nõz«« opcja"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "BøkujêLDAPBa£DN wÖliku k⁄figuøcyjnym LDAP"

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "B≥Íd√Ö¨amëry LDAP"

	)

173 
	#MSG_NEW_CONNECTION
 "Nowêpo≥±czíõ z %s"

	)

174 
	#MSG_WELCOME_TO
 "WôajÇa"

	)

175 
	#MSG_MAX_USERS
 "%lu uøytkownikÛw (maksimumËjuø zÆogow™ych, wybacz"

	)

176 
	#MSG_NB_USERS
 "Je°e∂ %u uøytkownikõm z %u moøliwych"

	)

177 
	#MSG_WELCOME_TIME
 "LokÆny czas: %02d:%02d. P‹à£rwîa: %u."

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "Wy≥±cznõán⁄imowêFTP je° dozwﬁ⁄e"

	)

179 
	#MSG_RATIOS_EVERYONE
 "WSP”£CZYNNIK OBEJMUJE WSZYSTKICH UØYTKOWNIK”W :"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "ANONIMOWYCH UØYTKOWNIK”W OBEJMUJE WSP”£CZYNNIK UL/DL :"

	)

181 
	#MSG_RATIOS_RULE
 "by ∂ci±gn±Ê %u Mb, musisz wgøÊ %u Mb d™ych."

	)

182 
	#MSG_INFO_IDLE_M
 "Zo°™õszÑoz≥±cz⁄yÖÿ%lu möuèchÇõaktywno∂ci."

	)

183 
	#MSG_INFO_IDLE_S
 "Zo°™õszÑoz≥±cz⁄yÖÿ%lu sekundachÇõaktywno∂ci."

	)

184 
	#MSG_CANT_READ_FILE
 "Nõ°ëy,Çõ moø« by≥ÿ¥zeczyèÊ [%s]"

	)

185 
	#MSG_LS_TRUNCATED
 "Wyj∂cõ obciÍã dÿ%uÖasuj±cych"

	)

186 
	#MSG_LS_SUCCESS
 "%u w sumõÖasuj±cych"

	)

187 
	#MSG_LOGOUT
 "Wylogowyw™õ."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "Auã¡yfikacj®nõÖowiod≥®siÍ dœ uøytkownik®[%s]"

	)

189 
	#MSG_ILLEGAL_UMASK
 "Nõ¥awid≥ow®umask"

	)

190 
	#MSG_STANDALONE_FAILED
 "Nõ moø« wy°¨towaÊ wÅrybõ sèndÆ⁄e"

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "Tÿje°Öryw©ny sy°em - Bezán⁄imowychÜogowaÒ"

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "Dowﬁ√ has≥ÿzadzü≥a"

	)

193 
	#MSG_MAX_USERS_IP
 "ZbyàwõÀÖo≥±czeÒ (%luËzÅegÿIP"

	)

194 
	#MSG_ACTIVE_DISABLED
 "Trybáktywny je° zablokow™y"

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "Przesy≥Öliku zakoÒcz⁄y suk˚£m"

	)

196 
	#MSG_NO_DISK_SPACE
 "DyskÖe≥ny -ÖroszÍ wgøjÖÛºnõj"

	)

197 
	#MSG_OUT_OF_MEMORY
 "Zabøk≥ÿ∑miÍci"

	)

198 
	#MSG_SQL_WRONG_PARMS
 "B≥Íd√Ö¨amëry SQL"

	)

199 
	#MSG_ILLEGAL_TRUSTED_IP
 "Nõ¥awid≥owy zauÁnyádª†IP"

	)

200 
	#MSG_NO_ASCII_RESUME
 "Wz«wünõÅøns„ru ASCIIÇõ je° bezpõcz√,ÖroszÍÇajpõrw usuÒÖlik"

	)

201 
	#MSG_UNKNOWN_ALTLOG
 "Nõz«ny f‹m©ÜogÛw"

	)

202 
	#MSG_ACCOUNT_DISABLED
 "Nõ moø« zÆogowaÊ siÍ jakÿ[%s] : k⁄tÿzablokow™e"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "Nõ¥awid≥owyÖlik k⁄figuøcjòSQL"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "W k⁄figuøcjòSQL bøkujê£rwîa"

	)

205 
	#MSG_SQL_DOWN
 "Sîwî SQL je°Öøwd›odobnõÇõdo°Í≤y"

	)

206 
	#MSG_ILLEGAL_QUOTA
 "Nõ¥awid≥ow®quŸa"

	)

207 
	#MSG_QUOTA_FILES
 "%ŒuÖlikÛw uøytych (%d%%Ë-áut‹yzow™o: %ŒuÖlikÛw"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu KbajtÛw uøytych (%d%%Ë-áut‹yzow™o: %Œu Kb"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "Przekrocz⁄®quŸa: [%s]Çõ zo°™õ z≠ißny"

	)

210 
	#MSG_AUTH_UNKNOWN
 "Nõz«« mëod®auã¡yfikacji"

	)

211 
	#MSG_PDB_BROKEN
 "Nõ uda≥ÿsiÍ odczyèÊ indeksow™egÿ∂ikuÖuªdb (lub wykrytÿ°¨y f‹m©Ë- S¥Ûbuj uruchomiÊÖuª-pw mkdb"

	)

212 
	#MSG_ALIASES_ALIAS
 "%†i†™álü†f‹ %s."

	)

213 
	#MSG_ALIASES_UNKNOWN
 "Unknow¿Æü†%s."

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "Damagedálü£†fûe"

	)

215 
	#MSG_ALIASES_LIST
 "Thêfﬁlowögálü£†¨êavaûabÀ :"

	)

216 
	#MSG_PERUSER_MAX
 "I c™'àac˚± m‹êth™ %lu c⁄√˘i⁄†‰omÅhêßmêu£r"

	)

217 
	#MSG_IPV6_OK
 "IPv6 c⁄√˘i⁄†¨êÆsÿwñcomê⁄Åhi†£rvî"

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: E«bÀd %†wôh %s, %d se¸ë bô†cùhî"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: CùhîÅoÿwók"

	)

220 
	#MSG_TLS_NEEDED
 "Sorry, cleartext sessionsáreÇotáccepted onÅhis server.\n" \

221 "PÀa£Ñec⁄√˘ usög SSL/TLS securôy mech™isms."

	)

222 
	#MSG_ILLEGAL_CHARSET
 "IŒegÆ ch¨£t"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: C⁄ãxànŸ found. Exôög."

	)

224 
	#MSG_PROT_OK
 "D©®¥Ÿe˘i⁄Üevñ sëÅÿ\"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "D©®c⁄√˘i⁄ c™nŸ bê›íed wôhÅhi†PROT sëtög."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "PrŸe˘i⁄Üevñ %†nŸ undî°ood. FÆlbackÅÿ\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT mu° bê¥e˚ded byá suc˚ssfu»PBSZ comm™d"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÑëu∫edÇÿu£rPassw‹dáâribuã, check LDAPác˚s†rights."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "InvÆid LDAPAuthMëhod i¿thêc⁄figuøti⁄ fûe. Should bê'böd' o∏'∑ssw‹d'."

	)

	@src/messages_pt_br.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: InvÆid TLSCùhîSuôê•ecifõd '%s'"

	)

2 
	#MSG_TIMEOUT
 "Tempÿexpúado"

	)

3 
	#MSG_CAPABILITIES
 "N„ÿfoòpossÌvñÅroˇ∏ˇ∑cidades"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "Clõ¡êí˚ºouá c⁄ex„o"

	)

5 
	#MSG_CLIENT_READ_ERR
 "EºÿdêÀôuø dÿ˛õ¡e"

	)

6 
	#MSG_CANT_OPEN_CNX
 "N„ÿfoòpossÌvñábrú c⁄ex„o"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "N„ÿfoòpossÌvñ crü∏sockë dêdados"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "EndîeÁÿdÿ˛õ¡êÈ"

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "EºÿdêsöèxênÿídîeÁÿIP"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "Com™dÿPORT bem su˚dido"

	)

11 
	#MSG_ONLY_IPV4V6
 "Somíã IPv4É IPv6 s„ÿsup‹èdo†(1,2)"

	)

12 
	#MSG_ONLY_IPV4
 "Somíã IPv4 È sup‹èdÿ(1)"

	)

13 
	#MSG_TIMEOUT_PARSER
 "Tempÿexpúadÿ-Éx≥rimíã digô¨ umÖoucÿmai†r·pidÿ«ÖrÛxim®vez"

	)

14 
	#MSG_LINE_TOO_LONG
 "Löh®muôÿcom¥ida"

	)

15 
	#MSG_LOG_OVERFLOW
 "O clõ¡êã¡ouÉ°ouø∏ÿbuf„∏d®löh®dêcom™do"

	)

16 
	#MSG_GOODBYE
 "Adeus. VocÍÉnviou %ŒuÉÑe˚beu %Œu kbyãs."

	)

17 
	#MSG_DEBUG_COMMAND
 "Com™do"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 "Èá su®loˇlizaÁ„ÿ©uÆ"

	)

19 
	#MSG_NOT_LOGGED_IN
 "VocÍÇ„ÿe°·Üogado"

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "Exãnsıe†dê£guønÁ®n„ÿim∂emíèdas"

	)

21 
	#MSG_NO_FILE_NAME
 "Nomêdÿ¨quivÿn„ÿöf‹mado"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "NomêdÿdúëÛriÿn„ÿöf‹mado"

	)

23 
	#MSG_NO_RESTART_POINT
 "N„ÿexi°êumÖ⁄tÿdêªöÌcio"

	)

24 
	#MSG_ABOR_SUCCESS
 "Com™dÿABOR bem su˚dido"

	)

25 
	#MSG_MISSING_ARG
 "FÆèárgumíto"

	)

26 
	#MSG_GARBAGE_FOUND
 "Sujeú®íc⁄åad®dïoi†dÿvÆ‹"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "VÆ‹ muôÿgønde"

	)

28 
	#MSG_IDLE_TIME
 "Tempÿociosÿc⁄figuødÿ∑ø %lu segundos"

	)

29 
	#MSG_SITE_HELP
 "O†£guöã†com™do†SITE s„ÿªc⁄hecidos"

	)

30 
	#MSG_BAD_CHMOD
 "Pîmissıe†öv·lidas"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "È um®exãns„ÿdesc⁄hecida"

	)

32 
	#MSG_XDBG_OK
 "Com™dÿXDBG foòbem su˚dido,ÇÌvñ dêdïuøÁ„ÿag‹®È %d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "Com™dÿdesc⁄hecido"

	)

34 
	#MSG_TIMEOUT_NOOP
 "Tempÿexpúadÿ“íhum®›îaÁ„ÿduø¡ê%lu segundos)"

	)

35 
	#MSG_TIMEOUT_DATA
 "Tempÿexpúadÿ“íhum dadÿnovÿduø¡ê%lu segundos)"

	)

36 
	#MSG_SLEEPING
 "Zzz..."

	)

37 
	#MSG_ALREADY_LOGGED
 "VocÍ j·É°·Üogado"

	)

38 
	#MSG_ANY_PASSWORD
 "QuÆquî síh®funci⁄¨·"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "Usu·riÿ™Ùnimÿlogado"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "Usu·riÿ™ÙnimÿlogadÿnÿFTP vútuÆ"

	)

41 
	#MSG_USER_OK
 "Usu·riÿ%†OK. Síh®ªquîida"

	)

42 
	#MSG_CANT_DO_TWICE
 "N„ÿÈÖossÌvñÑóliz¨ i°ÿ« sess„ÿ©uÆ"

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "N„ÿÈÖossÌvñ c⁄figuø∏FTPánÙnimÿ£guro"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "Seu usÿdêœrguø dêb™d®e°·Ñe°rôo"

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 "Síh®n„ÿªquîida"

	)

46 
	#MSG_NOTRUST
 "DescuÕe,Ç„ÿpossÿc⁄fü∏em vocÍ"

	)

47 
	#MSG_WHOAREYOU
 "P‹ fav‹ inf‹mêquem vocÍ È"

	)

48 
	#MSG_AUTH_FAILED
 "Auã¡iˇÁ„ÿÁlhou, descuÕe"

	)

49 
	#MSG_AUTH_TOOMANY
 "Muôa†Álha†dêauã¡iˇÁ„o"

	)

50 
	#MSG_NO_HOMEDIR
 "DúëÛriÿ≥ssﬂ»n„ÿdi•⁄Ìvñ - c™˚œndo"

	)

51 
	#MSG_NO_HOMEDIR2
 "%†n„ÿexi°êou È i«lˇnÁ·vñ"

	)

52 
	#MSG_START_SLASH
 "Inicündÿem /"

	)

53 
	#MSG_USER_GROUP_ACCESS
 "Usu·riÿ%†ãmá˚ssÿdêgrupÿa"

	)

54 
	#MSG_FXP_SUPPORT
 "E°ê£rvid‹ sup‹èÅøns„rÍncü FXP"

	)

55 
	#MSG_RATIO
 "AÖr›‹Á„ÿ%u:%u (UL/DLËdevê£∏ª•eôada"

	)

56 
	#MSG_CHROOT_FAILED
 "N„ÿfoòpossÌvñ c⁄figuø∏um®jauœ chroŸ(Ë£guø"

	)

57 
	#MSG_CURRENT_DIR_IS
 "OK. DúëÛriÿ©uÆ È %s"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "OK. DúëÛriÿª°rôÿ©uÆ È %s"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†ag‹®e°·Üogado"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "N„ÿfoòpossÌvñÉ¡ø∏nÿdúëÛriÿ%s"

	)

61 
	#MSG_PATH_TOO_LONG
 "P©h muôÿcom¥ido"

	)

62 
	#MSG_CANT_PASV
 "N„ÿÈÖossÌvñ uß∏PASVÉm c⁄exıe†IPv6 (com™dÿobsﬁëo). U£ o com™dÿEPSV."

	)

63 
	#MSG_CANT_PASSIVE
 "N„ÿfoòpossÌvñábrú um®c⁄ex„ÿ∑ssiva"

	)

64 
	#MSG_PORTS_BUSY
 "Toda†a†p‹è†TCPÑe£rvada†e°„ÿocu∑das"

	)

65 
	#MSG_GETSOCKNAME_DATA
 "N„ÿfoòpossÌvñ idítifiˇ∏ÿsockë dêdado†loˇl"

	)

66 
	#MSG_GETPEERNAME
 "N„ÿfoòpossÌvñ idítifiˇ∏ÿsockëÜoˇl"

	)

67 
	#MSG_INVALID_IP
 "DescuÕe,ÉndîeÁÿf‹√cidÿöv·lido"

	)

68 
	#MSG_NO_EPSV
 "Fav‹ utûiz¨ um clõ¡êcom∑tÌvñ com IPv6, com sup‹ãá EPSV"

	)

69 
	#MSG_BAD_PORT
 "DescuÕe,Ç„ÿmêc⁄e˘¨eò®p‹è†< 1024"

	)

70 
	#MSG_NO_FXP
 "N„ÿabrúeòum®c⁄ex„ÿ∑ø %†(somíãÖ¨®%s)"

	)

71 
	#MSG_FXP
 "Tøns„rÍncü FXP : dê%†∑ø %s"

	)

72 
	#MSG_NO_DATA_CONN
 "N„ÿexi°êc⁄ex„ÿdêdados"

	)

73 
	#MSG_ACCEPT_FAILED
 "A c⁄ex„ÿn„ÿpÙdê£∏a˚ôa"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "C⁄ex„ÿdêdado†a˚ôa"

	)

75 
	#MSG_CNX_PORT_FAILED
 "N„ÿfoòpossÌvñábrú c⁄ex„ÿdêdado†comáÖ‹è %d"

	)

76 
	#MSG_CNX_PORT
 "C⁄e˘™dÿcomáÖ‹è %d"

	)

77 
	#MSG_ANON_CANT_MKD
 "DescuÕe, usu·rio†™Ùnimo†n„ÿtÍmÖîmiss„ÿ∑ø crü∏dúëÛrios"

	)

78 
	#MSG_ANON_CANT_RMD
 "DescuÕe, usu·rio†™Ùnimo†n„ÿtÍmÖîmiss„ÿ∑øÑemovî dúëÛrios"

	)

79 
	#MSG_ANON_CANT_RENAME
 "Usu·rio†™Ùnimo†n„ÿtÍmÖîmiss„ÿ∑ø movî/ªnomó∏¨quivos"

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "Usu·rio†™Ùnimo†n„ÿpodemá…î¨Öîmissıes"

	)

81 
	#MSG_GLOB_NO_MEMORY
 "Sem memÛrü (devidÿex∑ns„ÿdê%s)"

	)

82 
	#MSG_PROBABLY_DENIED
 "(I°ÿ¥ovavñmíã signifiˇ \"Pîmiss„ÿ√gada\")"

	)

83 
	#MSG_GLOB_READ_ERROR
 "EºÿdêÀôuø duø¡êex∑ns„ÿdê%s"

	)

84 
	#MSG_GLOB_NO_MATCH
 "Níhum®oc‹rÍncü dê%†em %s"

	)

85 
	#MSG_CHMOD_FAILED
 "N„ÿfoòpossÌvñá…î¨Öîmissıe†em %s"

	)

86 
	#MSG_CHMOD_SUCCESS
 "Pîmissıe†Æãøda†em %s"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "DescuÕe,Ç„ÿfoòpossÌvñá…î¨Çíhum®≥rmiss„o"

	)

88 
	#MSG_ANON_CANT_DELETE
 "Usu·rio†™Ùnimo†n„ÿtÍmÖîmiss„ÿ∑øÑemovîárquivos"

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "Usu·rio†™Ùnimo†n„ÿtÍmÖîmiss„ÿ∑ø sobªs¸evîárquivo†exi°íãs"

	)

90 
	#MSG_DELE_FAILED
 "N„ÿfoòpossÌvñÑemovî %s"

	)

91 
	#MSG_DELE_SUCCESS
 "%s%s%s%†foòªmovido"

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "Níhumárquivÿfoòªmovido"

	)

93 
	#MSG_LOAD_TOO_HIGH
 \

96 "Enviÿdê¨quivo†È sem¥ê≥rmôido."

	)

97 
	#MSG_OPEN_FAILURE
 "N„ÿfoòpossÌvñábrú %s"

	)

98 
	#MSG_OPEN_FAILURE2
 "N„ÿfoòpossÌvñábrúÉs£árquivo"

	)

99 
	#MSG_STAT_FAILURE
 "N„ÿfoòpossÌvñ dëîmö¨ oÅam™hÿdÿ¨quivo"

	)

100 
	#MSG_STAT_FAILURE2
 "N„ÿfoòpossÌvñ vîifiˇ∏®exi°Íncü dÿ¨quivo"

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "Re°¨àoff£à%Œd È muôÿgøndê∑øÅam™hÿdê¨quivÿ%Œd."

	)

102 
	#MSG_REST_RESET
 "Re°¨àoff£àªöicülizadÿem 0"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "Somíãárquivo†comun†podem sîÑe˚bidos"

	)

104 
	#MSG_NOT_MODERATED
 \

106 "foò≠rovadÿ≥lo†admöi°ød‹e†dÿsôê∑øÖodî sîÑe˚bido."

	)

107 
	#MSG_RATIO_DENIAL
 \

110 "P‹ fav‹Énvõ mai†¨quivo†êã¡êÁzî oÑe˚bimítÿpo°îi‹míã."

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "N„ÿh· mai†«d®∑øÑe˚bî"

	)

112 
	#MSG_WINNER
 "O compuèd‹ È seuámigo. C⁄fõÇñe"

	)

113 
	#MSG_KBYTES_LEFT
 "%.1‡kbyã†∑øÑe˚bî"

	)

114 
	#MSG_ABORTED
 "Tøns„rÍncü c™˚œda"

	)

115 
	#MSG_DATA_WRITE_FAILED
 "Eºÿduø¡êes¸ô®‡ c⁄ex„ÿdêdados"

	)

116 
	#MSG_DATA_READ_FAILED
 "Eºÿduø¡êÀôuø d®c⁄ex„ÿdêdados"

	)

117 
	#MSG_MMAP_FAILED
 "N„ÿfoòpossÌvñ m≠ó∏ÿ¨quivÿ« memÛrü"

	)

118 
	#MSG_WRITE_FAILED
 "Eºÿduø¡êes¸ô®®¨quivo"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡£gundo†(medido†aqui), %.2‡Mbyã†p‹ segundo"

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡£gundo†(medido†aqui), %.2‡Kbyã†p‹ segundo"

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡£gundo†(medido†aqui), %.2‡byã†p‹ segundo"

	)

122 
	#MSG_SPACE_FREE_M
 "%.1‡Mbyã†dêe•aÁÿlivªÉm disco"

	)

123 
	#MSG_SPACE_FREE_K
 "%‡Kbyã†dêe•aÁÿlivªÉm disco"

	)

124 
	#MSG_DOWNLOADED
 "ª˚bido"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "RESTÑequî umÖ¨‚mërÿnumÈrico"

	)

126 
	#MSG_REST_ASCII_STRICT
 "M¨ˇ dêª•o°®devê£∏0ÇÿmodÿASCII"

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "Reöicündÿem %Œd. P‹ÈmÉ°amo†nÿmodÿASCII"

	)

128 
	#MSG_REST_SUCCESS
 "Reöicündÿem %Œd"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "NomêdêdúëÛriÿ¥oibido"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "Nomêdê¨quivÿ¥oibido: %s"

	)

131 
	#MSG_MKD_FAILURE
 "N„ÿfoòpossÌvñ crü∏dúëÛrio"

	)

132 
	#MSG_MKD_SUCCESS
 "O dúëÛriÿfoò¸üdÿcom su˚sso"

	)

133 
	#MSG_RMD_FAILURE
 "N„ÿfoòpossÌvñÑemovî dúëÛrio"

	)

134 
	#MSG_RMD_SUCCESS
 "O dúëÛriÿfoòªmovidÿcom su˚sso"

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "N„ÿfoòpossÌvñ obã∏um®m¨ˇ dêãmpo"

	)

136 
	#MSG_MODE_ERROR
 "Somíã modo†ASCIIÉ bö·riÿs„ÿsup‹èdos"

	)

137 
	#MSG_CREATE_FAILURE
 "N„ÿfoòpossÌvñ crü∏¨quivo"

	)

138 
	#MSG_ABRT_ONLY
 "ABRT È o ˙nicÿcom™dÿv·lidÿduø¡êå™smiss„o"

	)

139 
	#MSG_UPLOAD_PARTIAL
 "∑rcülmíãÉnvüdo"

	)

140 
	#MSG_REMOVED
 "ªmovido"

	)

141 
	#MSG_UPLOADED
 "ívüdo"

	)

142 
	#MSG_GMTIME_FAILURE
 "N„ÿfoòpossÌvñ obã∏®h‹®loˇl"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "Somíã byã†dê8 bô†s„ÿsup‹èdos. N„ÿe°amo†h· 10áno†©r·s"

	)

144 
	#MSG_TYPE_UNKNOWN
 "TYPE desc⁄hecido"

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPEág‹®È"

	)

146 
	#MSG_STRU_FAILURE
 "Somíã Fûê◊rquivoËÈ sup‹èdo"

	)

147 
	#MSG_MODE_FAILURE
 "UtûizêmodÿSåóm (Êuxo)"

	)

148 
	#MSG_RENAME_ABORT
 "C™˚œndÿcom™dÿdêªnomóÁ„ÿ™ãri‹"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "RNFRá˚ôÿ-árquivÿexi°e,Ör⁄tÿ∑ø de°öo"

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "DescuÕe,És£árquivÿn„ÿexi°e"

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "RENAME fÆhou -árquivÿdêde°öÿj·Éxi°e"

	)

152 
	#MSG_RENAME_NORNFR
 "…Çe˚ss·riÿRNFRá¡e†dêRNTO"

	)

153 
	#MSG_RENAME_FAILURE
 "FÆh®emÑíomór/movî"

	)

154 
	#MSG_RENAME_SUCCESS
 "Arquivÿªnomódÿou movidÿcom su˚sso"

	)

155 
	#MSG_NO_SUPERSERVER
 "P‹ fav‹ÉxecuãÖuª-·pd díåÿdêum su≥r-£rvid‹ (comÿt˝£rvî)"

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "N„ÿfoòpossÌvñÉnc⁄å¨á c⁄è '·p'"

	)

157 
	#MSG_CONF_ERR
 "Eºÿdêc⁄figuøÁ„o"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "E°· fÆèndÿ¨quivÿdêusu·rio†vútuais"

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "VÆ‹ iÀgÆÖ¨®limôêdêå™s„rÍncü"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "GID dêc⁄fünÁ®∑ø chroŸ iÀgÆ"

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "Limôêdêusu·riÿûegÆ"

	)

162 
	#MSG_ILLEGAL_FACILITY
 "NomêdêÁcûidadêdesc⁄hecido"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "Arquivÿdêc⁄figuøÁ„ÿdêLDAP inv·lido"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "Limôêdêˇrg®ûegÆ"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "Faix®dêp‹è†ûegÆ"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "Limôêdê'ls' iÀgÆ"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "IP f‹Áadÿ∑ø c⁄exıe†∑ssiva†ûegÆ"

	)

168 
	#MSG_ILLEGAL_RATIO
 "Pr›‹Á„ÿdêívio/ª˚bimítÿûegÆ"

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "Limôêdêuid iÀgÆ"

	)

170 
	#MSG_ILLEGAL_OPTION
 "OpÁ„ÿdêexecuÁ„ÿdesc⁄hecida"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "E°· fÆèndÿLDAPBa£DNÇÿ¨quivÿdêc⁄figuøÁ„ÿLDAP"

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "P¨‚mëro†LDAP inc‹ªtos"

	)

173 
	#MSG_NEW_CONNECTION
 "Nov®c⁄ex„ÿ®∑πú dê%s"

	)

174 
	#MSG_WELCOME_TO
 "Bem-vödÿa"

	)

175 
	#MSG_MAX_USERS
 "%lu usu·rio†(ÿm·ximoËj·É°„ÿc⁄e˘ados, descuÕe"

	)

176 
	#MSG_NB_USERS
 "VocÍ È o usu·riÿn˙mîÿ%u dê%uÖîmôidos"

	)

177 
	#MSG_WELCOME_TIME
 "H‹®loˇ»ag‹®È %02d:%02d. P‹è dÿ£rvid‹: %u."

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "Somíã FTPánÙnimÿÈÖîmôidÿaqui"

	)

179 
	#MSG_RATIOS_EVERYONE
 "PROPOR«’ES EST√O HABILITADAS PARA TODOS :"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "USU¡RIOS AN‘NIMOS EST√O SUJEITOS A UMA PROPOR«√O DE UL/DL :"

	)

181 
	#MSG_RATIOS_RULE
 "∑øÑe˚bî %u Mb, È obrig©Ûriÿívü∏%u Mb dê¨quivos."

	)

182 
	#MSG_INFO_IDLE_M
 "VocÍ sî· desc⁄e˘adÿ≠Û†%lu möuto†dêö©ividade."

	)

183 
	#MSG_INFO_IDLE_S
 "VocÍ sî· desc⁄e˘adÿ≠Û†%lu segundo†dêö©ividade."

	)

184 
	#MSG_CANT_READ_FILE
 "DescuÕe,Ç„ÿfoòpossÌvñÜî [%s]"

	)

185 
	#MSG_LS_TRUNCATED
 "Resu…adÿåunˇdÿem %u oc‹rÍncüs"

	)

186 
	#MSG_LS_SUCCESS
 "%u oc‹rÍncü†nÿtŸÆ"

	)

187 
	#MSG_LOGOUT
 "Fim dê£ss„o."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "Auã¡iˇÁ„ÿÁlhouÖ¨®usu·riÿ[%s]"

	)

189 
	#MSG_ILLEGAL_UMASK
 "Umask inv·lida"

	)

190 
	#MSG_STANDALONE_FAILED
 "N„ÿfoòpossÌvñ inicü∏um sîvid‹ indïídíã"

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "E°êÈ um si°em®¥ivadÿ- N„ÿÈÖîmôidÿusu·riÿ™Ùnimo"

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "QuÆquî síh®funci⁄¨·"

	)

193 
	#MSG_MAX_USERS_IP
 "C⁄exıe†demai†(%luË®∑πú de°êIP"

	)

194 
	#MSG_ACTIVE_DISABLED
 "Modÿ©ivÿe°· deßbûôado"

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "Arquivÿå™s„ridÿcom su˚sso"

	)

196 
	#MSG_NO_DISK_SPACE
 "Discÿcheiÿ-Ö‹ fav‹Énvõárquivÿmai†èrde"

	)

197 
	#MSG_OUT_OF_MEMORY
 "Sem memÛrü"

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "EndîeÁÿIP dêc⁄fünÁ®ûegÆ"

	)

199 
	#MSG_NO_ASCII_RESUME
 "Reöicü∏em modÿASCII È in£guro,Ö‹ fav‹Ñemov®ÿ¨quivÿ™ãs"

	)

200 
	#MSG_UNKNOWN_ALTLOG
 "F‹m©ÿdêlog desc⁄hecido"

	)

201 
	#MSG_ACCOUNT_DISABLED
 "N„ÿÈÖossÌvñ c⁄e˘¨ comÿ[%s] : c⁄è deßbûôada"

	)

202 
	#MSG_SQL_WRONG_PARMS
 "P¨‚mëro†SQL inc‹ªtos"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "Arquivÿdêc⁄figuøÁ„ÿSQL inv·lido"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "E°· fÆèndÿÿ£rvid‹Çÿ¨quivÿdêc⁄figuøÁ„ÿSQL"

	)

205 
	#MSG_SQL_DOWN
 "O sîvid‹ SQLá∑ª¡®e°¨ f‹®dê›îaÁ„o"

	)

206 
	#MSG_ILLEGAL_QUOTA
 "CŸ®öv·lida"

	)

207 
	#MSG_QUOTA_FILES
 "%Œuárquivo†ußdo†(%d%%Ë-áut‹izado: %Œuárquivos"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu Kbyã†ußdo†(%d%%Ë-áut‹izado: %Œu Kb"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "CŸ®ex˚did®: [%s]Ç„ÿ£r·ármazíado"

	)

210 
	#MSG_AUTH_UNKNOWN
 "MÈtodÿdêauã¡iˇÁ„ÿdesc⁄hecido"

	)

211 
	#MSG_PDB_BROKEN
 "N„ÿfoòpossÌvñÜî oárquivÿödexadÿdÿpuªdb (ou um f‹m©ÿ™tigÿfoòdëe˘adoË- Ex≥rimíãÖuª-pw mkdb"

	)

212 
	#MSG_ALIASES_ALIAS
 "%†È umá≥lidÿ∑ø %s."

	)

213 
	#MSG_ALIASES_UNKNOWN
 "A≥lidÿ%†desc⁄hecido."

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "Arquivÿdê≠ñido†d™ifiˇdo"

	)

215 
	#MSG_ALIASES_LIST
 "O†£guöã†≠ñido†e°„ÿdi•⁄Ìvei†:"

	)

216 
	#MSG_PERUSER_MAX
 "N„ÿpossÿa˚ô¨ mai†dÿquê%lu c⁄exıe†dÿmesmÿusu·rio"

	)

217 
	#MSG_IPV6_OK
 "C⁄exıe†IPv6ÅambÈm s„ÿbem-vöda†√°ê£rvid‹"

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: Habûôadÿ%†com %s, crùtogøfü dê%d bôs"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: Crùtogøfü muôÿ‰aˇ"

	)

220 
	#MSG_TLS_NEEDED
 "Desculpe, sessıes sem criptografiaÇ„o s„oáceitasÇeste servidor.\n" \

221 "P‹ fav‹Ñec⁄e˘e-£ ußndÿmeˇnismo†dê£guønÁ®SSL/TLS."

	)

222 
	#MSG_ILLEGAL_CHARSET
 "C⁄ju¡ÿdêˇø˘îe†ûegÆ"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: C⁄ãxànŸ found. Exôög."

	)

224 
	#MSG_PROT_OK
 "D©®¥Ÿe˘i⁄Üevñ sëÅÿ\"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "D©®c⁄√˘i⁄ c™nŸ bê›íed wôhÅhi†PROT sëtög."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "PrŸe˘i⁄Üevñ %†nŸ undî°ood. FÆlbackÅÿ\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT mu° bê¥e˚ded byá suc˚ssfu»PBSZ comm™d"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÑëu∫edÇÿu£rPassw‹dáâribuã, check LDAPác˚s†rights."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "InvÆid LDAPAuthMëhod i¿thêc⁄figuøti⁄ fûe. Should bê'böd' o∏'∑ssw‹d'."

	)

	@src/messages_ro.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: InvÆid TLSCùhîSuôê•ecifõd '%s'"

	)

2 
	#MSG_TIMEOUT
 "Temp‹iz¨êexpú©a"

	)

3 
	#MSG_CAPABILITIES
 "NuÖŸ comuè c≠abûô©ûe"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "Clõ¡u»®öchi†c⁄exiu√a"

	)

5 
	#MSG_CLIENT_READ_ERR
 "Erﬂª dêcôúêdêœ clõ¡"

	)

6 
	#MSG_CANT_OPEN_CNX
 "NuÖŸ deschidêc⁄exiu√a"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "NuÖŸ cª®so˛u dêd©e"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "Adªß clõ¡uluòe°e"

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "Erﬂª dêsöèx®öádªß IP"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "Com™d®PORTÅîmö©®cu suc˚s"

	)

11 
	#MSG_ONLY_IPV4V6
 "E°êsup‹èànumaòIPv4 sòIPv6 (1,2)"

	)

12 
	#MSG_ONLY_IPV4
 "E°êsup‹èànumaòIPv4 (1)"

	)

13 
	#MSG_TIMEOUT_PARSER
 "Temp‹iz¨êexpú©®- in˚rˇtòß s¸õtòputö maòª≥dêd©®viôﬂª"

	)

14 
	#MSG_LINE_TOO_LONG
 "LöõÖª®lunga"

	)

15 
	#MSG_LOG_OVERFLOW
 "Clõ¡u»®ö˚rˇàß dïa£asˇ buf„r-u»löõòdêcom™da"

	)

16 
	#MSG_GOODBYE
 "L®ªvedîe. Atòu∂ﬂd-© %Œu sòdow∆ﬂd-© %Œu ko˘ëi."

	)

17 
	#MSG_DEBUG_COMMAND
 "Com™da"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 "e°êloˇtü dum√avﬂ°ø"

	)

19 
	#MSG_NOT_LOGGED_IN
 "Nu söãtòöˇÜog©"

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "Exãnsiûêdê£curô©ênu söàim∂emíèã"

	)

21 
	#MSG_NO_FILE_NAME
 "Nuátòd© u¿numêdêfisõr"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "Nuátòd© u¿numêdêdúe˘‹"

	)

23 
	#MSG_NO_RESTART_POINT
 "NuÉxi°®u¿pun˘ dêªp‹núe"

	)

24 
	#MSG_ABOR_SUCCESS
 "Deﬂª˚átòvazuàa˚a°®com™d®ABOR in£am« c®©òªusô"

	)

25 
	#MSG_MISSING_ARG
 "Argumítu»lù£°e"

	)

26 
	#MSG_GARBAGE_FOUND
 "Am gasô d©êde„˘êdu∑ vÆﬂª"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "VÆﬂªÖª®m¨e"

	)

28 
	#MSG_IDLE_TIME
 "Timpu»dê∑uz®®fo° së©Ü®%lu secunde"

	)

29 
	#MSG_SITE_HELP
 "Söàªcunoscuã urm©ﬂªÀ comízòSITE"

	)

30 
	#MSG_BAD_CHMOD
 "Pîmisiunòî⁄©e"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "e°êÿexãnsõÇecunoscuè"

	)

32 
	#MSG_XDBG_OK
 "Com™d®XDBGáÑeusô. Nivñu»dêdï™¨êe°êacum %d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "Com™d®√cunoscuè"

	)

34 
	#MSG_TIMEOUT_NOOP
 "Temp‹iz¨êexpú©®“icòÿ›î©õ dê%lu secunde)"

	)

35 
	#MSG_TIMEOUT_DATA
 "Temp‹iz¨êexpú©®“icòu¿„»dêd©ênoòdê%lu secunde)"

	)

36 
	#MSG_SLEEPING
 "zzZ zzZZ ..."

	)

37 
	#MSG_ALREADY_LOGGED
 "Söãtòdej®log©"

	)

38 
	#MSG_ANY_PASSWORD
 "Ori˚Ö¨ﬁ®v®mîge"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "Utûiz©‹u»™⁄im s-®log©"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "Utûiz©‹u»™⁄im s-®log© i¿£rvî-u»FTP vútuÆ"

	)

41 
	#MSG_USER_OK
 "Utûiz©‹u»%†e°êac˚±©. E°ê√˚ßøÖ¨ﬁa"

	)

42 
	#MSG_CANT_DO_TWICE
 "Nu sêpﬂã fa˚á˚°Üu¸u i¿£siu√®cuª¡a"

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "NuÖŸ së®u¿£rvî FTPán⁄im securiz©"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "B™d®dêåafi¯ÆoˇèÉ°êª°ri˘i⁄©a"

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 "Døg®utûiz©‹án⁄im,Çuáò√voõ dênicòÿ∑rﬁa"

	)

46 
	#MSG_NOTRUST
 "Imò∑ªÑau, d¨Çuám in¸edîêöÅöe"

	)

47 
	#MSG_WHOAREYOU
 "Têrog frumo†ß-mò•uòcöêe°i"

	)

48 
	#MSG_AUTH_FAILED
 "Auã¡ifiˇª®®esu©"

	)

49 
	#MSG_AUTH_TOOMANY
 "Pª®mu…êauã¡ifiˇròesu©e"

	)

50 
	#MSG_NO_HOMEDIR
 "Dúe˘‹u»≥rs⁄ÆÇuÉ°êdi•⁄ibû. Ríu¡."

	)

51 
	#MSG_NO_HOMEDIR2
 "%†nuÉxi°®ßuÇuÖﬂã fòac˚ßt"

	)

52 
	#MSG_START_SLASH
 "P‹√s¯ö /"

	)

53 
	#MSG_USER_GROUP_ACCESS
 "Utûiz©‹u»%†¨êac˚†dêgru∞œ"

	)

54 
	#MSG_FXP_SUPPORT
 "A˚° sîvî sup‹èÅøns„ruròFXP"

	)

55 
	#MSG_RATIO
 "A∏åebuòß v®a°ïètòœ oÑ©®%u:%u (UL/DL)"

	)

56 
	#MSG_CHROOT_FAILED
 "NuámÖutuà£è u¿chroŸ(Ë£curiz©"

	)

57 
	#MSG_CURRENT_DIR_IS
 "OK. Dúe˘‹u»cuª¡É°ê%s"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "OK. Dúe˘‹u»cuª¡Ñe°ri˘i⁄©É°ê%s"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†e°êacumÜog©"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "NuÖŸ i¡ø i¿dúe˘‹u»%s"

	)

61 
	#MSG_PATH_TOO_LONG
 "CÆê¥óÜunga"

	)

62 
	#MSG_CANT_PASV
 "NuÖŸ deschidêÿc⁄exiu√Öasiv®cuá˚a°®com™d®övechôa"

	)

63 
	#MSG_CANT_PASSIVE
 "NuÖŸ deschidêÿc⁄exiu√Öasiva"

	)

64 
	#MSG_PORTS_BUSY
 "TﬂãÖ‹turûêTCPÑezîv©êsöàocu∑ã"

	)

65 
	#MSG_GETSOCKNAME_DATA
 "NuÖŸ idítifiˇ so˛u»dêd©êloˇl"

	)

66 
	#MSG_GETPEERNAME
 "NuÖŸ idítifiˇ so˛u»loˇl"

	)

67 
	#MSG_INVALID_IP
 "AdªßÉr⁄©a"

	)

68 
	#MSG_NO_EPSV
 "Utûiz©òu¿˛õ¡ com∑tibû IPv6 cu sup‹àEPSV"

	)

69 
	#MSG_BAD_PORT
 "Nu m®c⁄e˘ezÜ®p‹turò< 1024"

	)

70 
	#MSG_NO_FXP
 "Nu voòdeschidêÿc⁄exiu√ c©ª %†“umaòˇåê%s)"

	)

71 
	#MSG_FXP
 "Tøns„∏FXP : dêœ %†œ %s"

	)

72 
	#MSG_NO_DATA_CONN
 "NuÉxi°®c⁄exiu√ dêd©e"

	)

73 
	#MSG_ACCEPT_FAILED
 "NuÖŸác˚±®c⁄exiu√a"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "C⁄exiu√ dêd©êac˚±©a"

	)

75 
	#MSG_CNX_PORT_FAILED
 "NuÖŸ deschidêc⁄exiu√ dêd©ê≥Ö‹tu»%d"

	)

76 
	#MSG_CNX_PORT
 "C⁄e˘ezÜ®p‹tu»%d"

	)

77 
	#MSG_ANON_CANT_MKD
 "Utûiz©‹iò™⁄imònuáu voõ s®¸ìzêdúe˘ﬂª"

	)

78 
	#MSG_ANON_CANT_RMD
 "Utûiz©‹iò™⁄imònuáu voõ s®°órg®dúe˘ﬂª"

	)

79 
	#MSG_ANON_CANT_RENAME
 "Utûiz©‹iò™⁄imònuáu voõ s®muã/ªdíumósˇ fisõª"

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "Utûiz©‹iò™⁄imònuáu voõ s®modifi˚Öîmisiunûe"

	)

81 
	#MSG_GLOB_NO_MEMORY
 "Nu maòexi°®mem‹õ (d©‹ô®›î©õòdêglobÆiz¨ê®%s)"

	)

82 
	#MSG_PROBABLY_DENIED
 "(A˚°Üu¸u in£am«Örobabû \"≥rmisiu√Ñe•öß\")"

	)

83 
	#MSG_GLOB_READ_ERROR
 "Erﬂª dêcôúêœ o≥øtü dêglobÆiz¨ê®%s"

	)

84 
	#MSG_GLOB_NO_MATCH
 "NicòÿpŸrivúê≥¡ru %†ö %s"

	)

85 
	#MSG_CHMOD_FAILED
 "NuÖŸ modifiˇÖîmisiunûê≥¡ru %s"

	)

86 
	#MSG_CHMOD_SUCCESS
 "PîmisiunòmodifiˇãÖíåu %s"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "NuÖŸ modifiˇÇicòu¿„»dê≥rmisiuni"

	)

88 
	#MSG_ANON_CANT_DELETE
 "Utûiz©‹iò™⁄imònuÖŸ sãrgêfisõª"

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "Utûiz©‹iò™⁄imònuÖŸ su¥as¸õ fisõªÉxi°íã"

	)

90 
	#MSG_DELE_FAILED
 "NuÖŸ sãrgê%s"

	)

91 
	#MSG_DELE_SUCCESS
 "Am sãr†%s%s%s%s"

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "Nicòu¿fisõ∏£À˘©"

	)

93 
	#MSG_LOAD_TOO_HIGH
 \

96 "ötŸdóu«Öîmi£."

	)

97 
	#MSG_OPEN_FAILURE
 "NuÖŸ deschidê%s"

	)

98 
	#MSG_OPEN_FAILURE2
 "NuÖŸ deschidêa˚»fisõr"

	)

99 
	#MSG_STAT_FAILURE
 "NuÖŸ dëîmö®m¨imó fisõrului"

	)

100 
	#MSG_STAT_FAILURE2
 "NuÖŸ vîifiˇÉxi°íè fisõrului"

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "Adªß dêªlu¨ê%ŒdÉ°ê¥ó m¨êÁè dêm¨imó fisõruluò%Œd."

	)

102 
	#MSG_REST_RESET
 "Adªß dêªlu¨ê®fo°Ñe£èèÜ®0"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "PŸÅøns„øÇumaòfisõª obi¢uôe"

	)

104 
	#MSG_NOT_MODERATED
 \

106 "öˇá¥ob©Öíåu dow∆ﬂd dêˇåêadmöi°øt‹u»sôe-ului."

	)

107 
	#MSG_RATIO_DENIAL
 \

110 "Maòu∂ﬂd-©òfisõª sò≠oòö˚rˇtò maòtúziu s®dow∆ﬂd-©ò˚va."

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "Nu maòe°ênimi¯dêdow∆ﬂd-©"

	)

112 
	#MSG_WINNER
 "CÆcuœt‹u»e°ê¥õãnu»èu. Aòö¸edîêöÉl"

	)

113 
	#MSG_KBYTES_LEFT
 "%.1‡ko˘ëòdêdow∆ﬂd-©"

	)

114 
	#MSG_ABORTED
 "Tøns„∏™uœt"

	)

115 
	#MSG_DATA_WRITE_FAILED
 "ErﬂªÜ®s¸õªÖêc⁄exiu√®dêd©e"

	)

116 
	#MSG_DATA_READ_FAILED
 "ErﬂªÜ®côúó dö c⁄exiu√®dêd©e"

	)

117 
	#MSG_MMAP_FAILED
 "NuÖŸ m≠®fisõru»ö mem‹õ"

	)

118 
	#MSG_WRITE_FAILED
 "ErﬂªÜ®s¸õª®fisõrului"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡£cundê(masuøãáici), %.2‡Mo˘ëò≥ secunda"

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡£cundê(masuøãáici), %.2‡Ko˘ëò≥ secunda"

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡£cundê(masuøãáici), %.2‡o˘ëò≥ secunda"

	)

122 
	#MSG_SPACE_FREE_M
 "%.1‡Mo˘ëò•©iuÜibîÖêdisc"

	)

123 
	#MSG_SPACE_FREE_K
 "%‡Ko˘ëò•©iuÜibîÖêdisc"

	)

124 
	#MSG_DOWNLOADED
 "dow∆ﬂd-©"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "RESTáªÇevoõ dêu¿∑ømëruÇumîic"

	)

126 
	#MSG_REST_ASCII_STRICT
 "M¨kîu»dêøpun†åebuõ s®fõ 0 i¿modu»ASCII"

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "Re°¨ãz dêœ %Œd. D¨ söàö modu»ASCII"

	)

128 
	#MSG_REST_SUCCESS
 "Re°¨ãz dêœ %Œd"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "Numêdêdúe˘‹ i¡îzis"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "Numêdêfisõ∏öãrzis: %s"

	)

131 
	#MSG_MKD_FAILURE
 "NuÖŸ cª®dúe˘‹ul"

	)

132 
	#MSG_MKD_SUCCESS
 "Am cª© cu suc˚†dúe˘‹ul"

	)

133 
	#MSG_RMD_FAILURE
 "NuÖŸ sãrgêdúe˘‹ul"

	)

134 
	#MSG_RMD_SUCCESS
 "Am sãr†cu suc˚†dúe˘‹ul"

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "NuÖŸ obtöêu¿m¨kî dêtimp"

	)

136 
	#MSG_MODE_ERROR
 "Söàsup‹èãÇumaòmodurûêASCII sòbö¨"

	)

137 
	#MSG_CREATE_FAILURE
 "NuÖŸ cª®fisõrul"

	)

138 
	#MSG_ABRT_ONLY
 "Com™d®ABRTÉ°ên‹mÆ®numaòœ u∂ﬂd"

	)

139 
	#MSG_UPLOAD_PARTIAL
 "u∂ﬂd-©Ö¨tül"

	)

140 
	#MSG_REMOVED
 "°îs"

	)

141 
	#MSG_UPLOADED
 "u∂ﬂd-©"

	)

142 
	#MSG_GMTIME_FAILURE
 "NuÖŸ obtöêtimpu»loˇl"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "Söàsup‹ètònumaòo˘ëòdê8 bôi;Çu söãmácum 10áni"

	)

144 
	#MSG_TYPE_UNKNOWN
 "TYPEÇecunoscut"

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPEÉ°êacum"

	)

146 
	#MSG_STRU_FAILURE
 "NumaòFûê(fisõrËe°êsup‹èt"

	)

147 
	#MSG_MODE_FAILURE
 "Utûiz©òmodu»Såóm (Êux)"

	)

148 
	#MSG_RENAME_ABORT
 "AnuÀz com™d®¥e˚díè dêªdíumúe"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "RNFRác˚±© - fisõru»exi°®sòe°êg©®≥¡ru de°ö©õ"

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "A˚° fisõ∏nuÉxi°a"

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "O≥øtõ RENAMEÉsu©®- fisõru»de°ö©õÉxi°®deja"

	)

152 
	#MSG_RENAME_NORNFR
 "E°ê√voõ dêRNFR i«öã dêRNTO"

	)

153 
	#MSG_RENAME_FAILURE
 "Erﬂª dêªdíumúe/muèª"

	)

154 
	#MSG_RENAME_SUCCESS
 "Fisõ∏ªdíumô sau muèàcu suc˚s"

	)

155 
	#MSG_NO_SUPERSERVER
 "V®rog s®ruœtòpuª-·pd cu u¿¥ogøm su≥r-£rvî (¥ecumÅ˝£rvî)"

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "Nuám gasô c⁄tu»'·p'"

	)

157 
	#MSG_CONF_ERR
 "Erﬂª dêc⁄figuøª"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "Lù£°ênumñêfisõruluòdêutûiz©‹òvútuÆi"

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "VÆﬂªÉr⁄©„ÖíåuÜimô®øãòdêå™s„r"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "GID-u»dêö¸edîê≥¡ru chroŸ(ËnuÉ°êc‹e•unz©‹"

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "Limô®utûiz©‹Ér⁄©a"

	)

162 
	#MSG_ILLEGAL_FACILITY
 "Numê√cunoscuàdêÁcûô©e"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "Fisõ∏dêc⁄figu¨êLDAPÉr⁄©"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "Limô®dêöˇrˇªÉr⁄©a"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "Domíiu dêp‹turòî⁄©"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "Limô®'ls'Ér⁄©a"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "IPÉr⁄©Öíåu c⁄exiunò∑sivêf‹èã"

	)

168 
	#MSG_ILLEGAL_RATIO
 "CŸ®u∂ﬂd/dow∆ﬂdÉr⁄©a"

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "Limô®dêUIDÇec‹e•unz©ﬂª"

	)

170 
	#MSG_ILLEGAL_OPTION
 "O±iu√ dêexecutõÇecunoscuè"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "Lù£°êLDAPBa£DN i¿fisõru»dêc⁄figuøª LDAP"

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "P¨amëriòLDAPÉr⁄©i"

	)

173 
	#MSG_NEW_CONNECTION
 "C⁄exiu√Çou®dêœ %s"

	)

174 
	#MSG_WELCOME_TO
 "Böê©òvíôÖe"

	)

175 
	#MSG_MAX_USERS
 "%lu utûiz©‹ò(maximulËsöàdej®log©i"

	)

176 
	#MSG_NB_USERS
 "Söëòutûiz©‹u»cuÇum¨u»%u dö %uÖîmisi"

	)

177 
	#MSG_WELCOME_TIME
 "Timpu»loˇ»e°êacum %02d:%02d. P‹à£rvî: %u."

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "Aicòe°ê≥rmi†numaòac˚†FTPán⁄im"

	)

179 
	#MSG_RATIOS_EVERYONE
 "COTELE SINT ACTIVATE PENTRU ORICINE :"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "UTILIZATORII ANONIMI SINT SUPUSI UNEI COTE UL/DL :"

	)

181 
	#MSG_RATIOS_RULE
 "≥¡ruá dow∆ﬂd-®%u Mb,É°êoblig©‹iu s®u∂ﬂd-©ò%u Mb dêÆã fisõª."

	)

182 
	#MSG_INFO_IDLE_M
 "Vëòfòdec⁄e˘© du∑ %lu möuã dêöa˘ivô©e."

	)

183 
	#MSG_INFO_IDLE_S
 "Vëòfòdec⁄e˘© du∑ %lu secundêdêöa˘ivô©e."

	)

184 
	#MSG_CANT_READ_FILE
 "NuámÖutuàcôò[%s]"

	)

185 
	#MSG_LS_TRUNCATED
 "Rezu…©Årunchüàœ %uÖŸrivúi"

	)

186 
	#MSG_LS_SUCCESS
 "%uÖŸrivúòöÅŸÆ"

	)

187 
	#MSG_LOGOUT
 "Iesúe."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "Auã¡ifiˇªÉsu©®≥¡ru utûiz©‹u»[%s]"

	)

189 
	#MSG_ILLEGAL_UMASK
 "VÆﬂª umaskÉr⁄©a"

	)

190 
	#MSG_STANDALONE_FAILED
 "NuámÖutuà°¨è u¿£rvî dêsöê°©©‹"

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "A˚°®e°êu¿si°emÖriv© - NuÉ°ê≥rmißÜog¨óán⁄ima"

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "V®fòvÆabû®‹i˚Ö¨ﬁa"

	)

193 
	#MSG_MAX_USERS_IP
 "Pª®mu…êc⁄exiunò(%luËdêœá˚° IP"

	)

194 
	#MSG_ACTIVE_DISABLED
 "Modu»a˘ivÉ°êdeza˘iv©"

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "Fisõ∏å™s„øàcu suc˚s"

	)

196 
	#MSG_NO_DISK_SPACE
 "Dis¯∂ö - in˚rˇtòß u∂ﬂd-©òmaòtúziu"

	)

197 
	#MSG_OUT_OF_MEMORY
 "Nu maòexi°®mem‹õ"

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "Adªß IPÇóc˚±©a"

	)

199 
	#MSG_SQL_WRONG_PARMS
 "P¨amëriòSQLÉr⁄©i"

	)

200 
	#MSG_NO_ASCII_RESUME
 "Rñu¨ó fisõªl‹ ASCIIÉ°ê√siguø. Sãrgëòmaòötiòfisõrul"

	)

201 
	#MSG_UNKNOWN_ALTLOG
 "F‹m© dêlog¨ê√cunoscut"

	)

202 
	#MSG_ACCOUNT_DISABLED
 "NuÖŸÜog®ˇ [%s] : c⁄àdeza˘iv©"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "Fisõ∏dêc⁄figuøª®SQLÉr⁄©"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "I¿fisõru»dêc⁄figuøª SQLÜù£°ê£rvî-ul"

	)

205 
	#MSG_SQL_DOWN
 "Sê∑ª c®£rvî-u»SQLÉ°ê›rô"

	)

206 
	#MSG_ILLEGAL_QUOTA
 "CŸ®î⁄©a"

	)

207 
	#MSG_QUOTA_FILES
 "%Œu fisõª utûiz©ê(%d%%Ë-áut‹iz©: %Œu fisõª"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu Ko˘ëòutûiz©ò(%d%%Ë-áut‹iz©: %Œu Ko˘ëi"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "CŸ®dïasôa: [%s]Çu v®fòßlv©"

	)

210 
	#MSG_AUTH_UNKNOWN
 "Mëod®dêauã¡ifiˇªÇecunoscuè"

	)

211 
	#MSG_PDB_BROKEN
 "NuÖŸ côòfisõru»puªdb index© (¥obabûÉ i¿f‹m© vechiË- In˚rˇtòpuª-pw mkdb"

	)

212 
	#MSG_ALIASES_ALIAS
 "%†e°êu¿Æü†≥¡ru %s."

	)

213 
	#MSG_ALIASES_UNKNOWN
 "Alüsu»%†e°ê√cunoscut."

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "Fisõ∏dêÆüsuròde„˘"

	)

215 
	#MSG_ALIASES_LIST
 "Söàdi•⁄ibûêurm©ﬂªÀálüsuri: "

	)

216 
	#MSG_PERUSER_MAX
 "NuÖŸác˚±®maòmu… dê%lu c⁄exiunòdêœá˚œsòutûiz©‹"

	)

217 
	#MSG_IPV6_OK
 "C⁄exiunûêIPv6 söàac˚±©êdêˇåêa˚° sîvî"

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: Amá˘iv© %†cu %s, crùèª cu %d bôi"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: Si°em dê¸ùèªÖª®¶ab"

	)

220 
	#MSG_TLS_NEEDED
 "Sesiunile inÅext clarÇu sintácceptateÖeácest server.\n" \

221 "Rec⁄e˘©i-v®utûizöd meˇnismñêdê£curô©êSSL/TLS."

	)

222 
	#MSG_ILLEGAL_CHARSET
 "IŒegÆ ch¨£t"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: C⁄ãxànŸ found. Exôög."

	)

224 
	#MSG_PROT_OK
 "D©®¥Ÿe˘i⁄Üevñ sëÅÿ\"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "D©®c⁄√˘i⁄ c™nŸ bê›íed wôhÅhi†PROT sëtög."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "PrŸe˘i⁄Üevñ %†nŸ undî°ood. FÆlbackÅÿ\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT mu° bê¥e˚ded byá suc˚ssfu»PBSZ comm™d"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÑëu∫edÇÿu£rPassw‹dáâribuã, check LDAPác˚s†rights."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "InvÆid LDAPAuthMëhod i¿thêc⁄figuøti⁄ fûe. Should bê'böd' o∏'∑ssw‹d'."

	)

	@src/messages_ru.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: InvÆid TLSCùhîSuôê•ecifõd '%s'"

	)

2 
	#MSG_TIMEOUT
 "È”‘≈ÀÃœ ◊“≈Õ— œ÷…ƒ¡Œ…—"

	)

3 
	#MSG_CAPABILITIES
 "Ó≈◊œ⁄Õœ÷Œœ –≈“≈ÀÃ¿ﬁ…‘ÿ “¡⁄“≈€≈Œ…— (ˇ∑bûôõs)"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "ÎÃ…≈Œ‘ ⁄¡À“ŸÃ ”œ≈ƒ…Œ≈Œ…≈"

	)

5 
	#MSG_CLIENT_READ_ERR
 "Ô€…¬À¡ ﬁ‘≈Œ…— œ‘ ÀÃ…≈Œ‘¡"

	)

6 
	#MSG_CANT_OPEN_CNX
 "Ó≈◊œ⁄Õœ÷Œœ ”œ≈ƒ…Œ…‘ÿ”—"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "Ó≈◊œ⁄Õœ÷Œœ ”œ⁄ƒ¡‘ÿ ”œÀ≈‘ ƒÃ— –≈“≈ƒ¡ﬁ… ƒ¡ŒŒŸ»"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "·ƒ“≈” ÀÃ…≈Œ‘¡:"

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "Û…Œ‘¡À”…ﬁ≈”À¡— œ€…¬À¡ ◊ IP ¡ƒ“≈”≈"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "ÎœÕ¡Œƒ¡ PORT ◊Ÿ–œÃŒ≈Œ¡ ’”–≈€Œœ"

	)

11 
	#MSG_ONLY_IPV4V6
 "œƒƒ≈“÷…◊¡¿‘”— ‘œÃÿÀœ IPv4 … IPv6 (1,2)"

	)

12 
	#MSG_ONLY_IPV4
 "œƒƒ≈“÷…◊¡≈‘”— ‘œÃÿÀœ IPv4 (1)"

	)

13 
	#MSG_TIMEOUT_PARSER
 "È”‘≈ÀÃœ ◊“≈Õ— œ÷…ƒ¡Œ…— - –œ‘œ“œ–…‘≈”ÿ ◊ ”Ã≈ƒ’¿›…  “¡⁄"

	)

14 
	#MSG_LINE_TOO_LONG
 "ÛÃ…€ÀœÕ ƒÃ…ŒŒ¡— ”‘“œÀ¡"

	)

15 
	#MSG_LOG_OVERFLOW
 "ÎÃ…≈Œ‘ –œ–Ÿ‘¡Ã”— –≈“≈–œÃŒ…‘ÿ ¬’∆∆≈“ ÀœÕ¡ŒƒŒœ  ”‘“œÀ…"

	)

16 
	#MSG_GOODBYE
 "˜”≈«œ »œ“œ€≈«œ. ˜Ÿ ⁄¡À¡ﬁ¡Ã… %Œu … ”À¡ﬁ¡Ã… %Œu À…Ãœ¬¡ ‘."

	)

17 
	#MSG_DEBUG_COMMAND
 "ÎœÕ¡Œƒ¡"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 " - ‘≈À’›¡— ƒ…“≈À‘œ“…—"

	)

19 
	#MSG_NOT_LOGGED_IN
 "˜Ÿ ≈›≈ Œ≈ ◊◊≈Ã… ”◊œ≈ …Õ— … –¡“œÃÿ"

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "ÎœÕ¡ŒƒŸ ’Ã’ﬁ€≈ŒŒœ  ¬≈⁄œ–¡”Œœ”‘… (AUTH … ADATËŒ≈ “≈¡Ã…⁄œ◊¡ŒŸ"

	)

21 
	#MSG_NO_FILE_NAME
 "Ó≈ ⁄¡ƒ¡Œœ …Õ— ∆¡ Ã¡"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "Ó≈ ⁄¡ƒ¡Œœ …Õ— ƒ…“≈À‘œ“……"

	)

23 
	#MSG_NO_RESTART_POINT
 "Ó≈ ⁄¡ƒ¡ŒŸ Õ≈”‘œ, ” Àœ‘œ“œ«œ Œ’÷Œœ ◊œ⁄œ¬Œœ◊…‘ÿ ⁄¡À¡ﬁÀ’"

	)

24 
	#MSG_ABOR_SUCCESS
 "ÎœÕ¡Œƒ¡ ABOR ◊Ÿ–œÃŒ≈Œ¡ ’”–≈€Œœ"

	)

25 
	#MSG_MISSING_ARG
 "Ô‘”’‘”‘◊’≈‘ ¡“«’Õ≈Œ‘"

	)

26 
	#MSG_GARBAGE_FOUND
 "Ì’”œ“ –œ”Ã≈ √≈Ãœ«œ ⁄Œ¡ﬁ≈Œ…—"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "„≈Ãœ≈ ⁄Œ¡ﬁ≈Œ…≈ ”Ã…€ÀœÕ ◊≈Ã…Àœ"

	)

28 
	#MSG_IDLE_TIME
 "˜“≈Õ— œ÷…ƒ¡Œ…— ’”‘¡Œœ◊Ã≈Œ¡ Œ¡ %lu ”≈À’Œƒ(’/Ÿ)"

	)

29 
	#MSG_SITE_HELP
 "Ú¡”–œ⁄Œ¡¿‘”— ”Ã≈ƒ’¿›…≈ ÀœÕ¡ŒƒŸ SITE"

	)

30 
	#MSG_BAD_CHMOD
 "Ãœ»…≈ –“¡◊¡ ƒœ”‘’–¡"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "- Œ≈…⁄◊≈”‘Œœ≈ “¡”€…“≈Œ…≈"

	)

32 
	#MSG_XDBG_OK
 "ÎœÕ¡Œƒ¡ XDBG ◊Ÿ–œÃŒ≈Œ¡ ’”–≈€Œœ, debugÜevñ ’”‘¡Œœ◊Ã≈Œ ◊ %d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "Ó≈…⁄◊≈”‘Œ¡— ÀœÕ¡Œƒ¡"

	)

34 
	#MSG_TIMEOUT_NOOP
 "È”‘≈ÀÃœ ◊“≈Õ— œ÷…ƒ¡Œ…— (Œ…À¡À…» ƒ≈ ”‘◊…  ◊ ‘≈ﬁ≈Œ…≈ %lu ”≈À’Œƒ(Ÿ))"

	)

35 
	#MSG_TIMEOUT_DATA
 "È”‘≈ÀÃœ ◊“≈Õ— œ÷…ƒ¡Œ…— (Œ≈ –œ”‘’–…Ãœ ƒ¡ŒŒŸ» ◊ ‘≈ﬁ≈Œ…≈ %lu ”≈À’Œƒ(Ÿ))"

	)

36 
	#MSG_SLEEPING
 "Ë-“-“-“..."

	)

37 
	#MSG_ALREADY_LOGGED
 "˜Ÿ ’÷≈ ◊œ€Ã…"

	)

38 
	#MSG_ANY_PASSWORD
 "œƒœ ƒ≈‘ Ã¿¬œ  –¡“œÃÿ"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "˜œ€≈Ã ¡ŒœŒ…ÕŒŸ  –œÃÿ⁄œ◊¡‘≈Ãÿ"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "·ŒœŒ…ÕŒŸ  –œÃÿ⁄œ◊¡‘≈Ãÿ ◊œ€≈Ã Œ¡ ◊…“‘’¡ÃÿŒŸ  FTP"

	)

41 
	#MSG_USER_OK
 "˛‘œ¬Ÿ ◊œ ‘… À¡À %†‘“≈¬’≈‘”— –¡“œÃÿ"

	)

42 
	#MSG_CANT_DO_TWICE
 "Ó≈◊œ⁄Õœ÷Œœ ”ƒ≈Ã¡‘ÿ ‹‘œ«œ ◊ ‘≈À’›≈Õ ”≈¡Œ”≈"

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "Ó≈◊œ⁄Õœ÷Œœ ⁄¡–’”‘…‘ÿ ¬≈⁄œ–¡”Œœ≈ ¡ŒœŒ…ÕŒœ≈ FTP"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "“œ–’”ÀŒ¡— ”–œ”œ¬Œœ”‘ÿ ƒÃ— ◊¡” œ«“¡Œ…ﬁ≈Œ¡"

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 "¡“œÃÿ Œ≈ ‘“≈¬’≈‘”—"

	)

46 
	#MSG_NOTRUST
 "Ò Œ≈ Õœ«’ ◊¡Õ ƒœ◊≈“—‘ÿ"

	)

47 
	#MSG_WHOAREYOU
 "“≈ƒ”‘¡◊ÿ‘≈”ÿ –œ÷¡Ã’ ”‘¡"

	)

48 
	#MSG_AUTH_FAILED
 "·◊‘œ“…⁄¡√…— Œ≈ ’ƒ¡Ã¡”ÿ, …⁄◊…Œ…‘≈"

	)

49 
	#MSG_AUTH_TOOMANY
 "ÛÃ…€ÀœÕ ÕŒœ«œ –œ–Ÿ‘œÀ ¡◊‘œ“…⁄¡√……"

	)

50 
	#MSG_NO_HOMEDIR
 "‰œÕ¡€Œ—— ƒ…“≈À‘œ“…— Œ≈ ƒœ”‘’–Œ¡ - ⁄¡◊≈“€≈Œ…≈"

	)

51 
	#MSG_NO_HOMEDIR2
 "%†Œ≈ ”’›≈”‘◊’≈‘ …Ã… Œ≈ ƒœ”‘’–Œ¡"

	)

52 
	#MSG_START_SLASH
 "Ó¡ﬁ¡Ãœ ” /"

	)

53 
	#MSG_USER_GROUP_ACCESS
 "œÃÿ⁄œ◊¡‘≈Ã¿ %†“¡⁄“≈€≈Œ «“’––œ◊œ  ƒœ”‘’– À"

	)

54 
	#MSG_FXP_SUPPORT
 "¸‘œ‘ ”≈“◊≈“ –œƒƒ≈“÷…◊¡≈‘ –≈“≈À¡ﬁÀ’ FXP"

	)

55 
	#MSG_RATIO
 "˜Ÿ ƒœÃ÷ŒŸ ”œ¬Ã¿ƒ¡‘ÿ ”œœ‘Œœ€≈Œ…≈ %u:%u (UL/DL)"

	)

56 
	#MSG_CHROOT_FAILED
 "Ó≈◊œ⁄Õœ÷Œœ ”œ⁄ƒ¡‘ÿ ¬≈⁄œ–¡”Œ’¿ chroŸ(Ë‘¿“ÿÕ’ (jaû, s™dbox)"

	)

57 
	#MSG_CURRENT_DIR_IS
 "OK. Ù≈À’›¡— ƒ…“≈À‘œ“…— %s"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "OK. Ù≈À’›¡— Àœ“Œ≈◊¡— ƒ…“≈À‘œ“…— %s"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†◊œ€≈Ã"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "Ó≈◊œ⁄Õœ÷Œœ …⁄Õ≈Œ…‘ÿ ƒ…“≈À‘œ“…¿ Œ¡ %s"

	)

61 
	#MSG_PATH_TOO_LONG
 "ÛÃ…€ÀœÕ ƒÃ…ŒŒŸ  –’‘ÿ"

	)

62 
	#MSG_CANT_PASV
 "Ó≈◊œ⁄Õœ÷Œœ …”–œÃÿ⁄œ◊¡‘ÿ ÀœÕ¡Œƒ’ PASV Œ¡ IPv6 ”œ≈ƒ…Œ≈Œ……. È”–œÃÿ⁄’ ‘≈ EPSV."

	)

63 
	#MSG_CANT_PASSIVE
 "Ó≈◊œ⁄Õœ÷Œœ ’”‘¡Œœ◊…‘ÿ –¡””…◊Œœ≈ FTP ”œ≈ƒ…Œ≈Œ…≈"

	)

64 
	#MSG_PORTS_BUSY
 "˜”≈ ⁄¡“≈⁄≈“◊…“œ◊¡ŒŒŸ≈ –œ“‘Ÿ TCP ⁄¡Œ—‘Ÿ"

	)

65 
	#MSG_GETSOCKNAME_DATA
 "Ó≈◊œ⁄Õœ÷Œœ œ–“≈ƒ≈Ã…‘ÿ …Õ— ÃœÀ¡ÃÿŒœ«œ ”œÀ≈‘¡ ƒ¡ŒŒŸ»"

	)

66 
	#MSG_GETPEERNAME
 "Ó≈◊œ⁄Õœ÷Œœ …ƒ≈Œ‘…∆…√…“œ◊¡‘ÿ ÃœÀ¡ÃÿŒŸ  ”œÀ≈‘"

	)

67 
	#MSG_INVALID_IP
 "È⁄◊…Œ…‘≈, Œ≈◊≈“ŒŸ  ¡ƒ“≈”"

	)

68 
	#MSG_NO_EPSV
 "È”–œÃÿ⁄’ ‘≈ IPv6-”œ◊Õ≈”‘…ÕŸ  ÀÃ…≈Œ‘ ” –œƒƒ≈“÷Àœ  ÀœÕ¡ŒƒŸ EPSV"

	)

69 
	#MSG_BAD_PORT
 "È⁄◊…Œ…‘≈, Œœ — Œ≈ ¬’ƒ’ –œƒÀÃ¿ﬁ¡‘ÿ”— À –œ“‘’ ” ŒœÕ≈“œÕ Õ≈Œÿ€…Õ 1024"

	)

70 
	#MSG_NO_FXP
 "Ò Œ≈ ”œ≈ƒ…Œ¿”ÿ ” %†(‘œÃÿÀœ ” %s)"

	)

71 
	#MSG_FXP
 "≈“≈À¡ﬁÀ¡ FXP: œ‘ %†À %s"

	)

72 
	#MSG_NO_DATA_CONN
 "Ó≈‘ ”œ≈ƒ…Œ≈Œ…— ƒÃ— ƒ¡ŒŒŸ»"

	)

73 
	#MSG_ACCEPT_FAILED
 "Ó≈◊œ⁄Õœ÷Œœ ’”‘¡Œœ◊…‘ÿ ”œ≈ƒ…Œ≈Œ…≈"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "ı”‘¡Œœ◊Ã≈Œœ ”œ≈ƒ…Œ≈Œ…≈ ƒÃ— ƒ¡ŒŒŸ»"

	)

75 
	#MSG_CNX_PORT_FAILED
 "Ó≈◊œ⁄Õœ÷Œœ œ‘À“Ÿ‘ÿ ”œ≈ƒ…Œ≈Œ…≈ ƒÃ— ƒ¡ŒŒŸ» À –œ“‘’ %d"

	)

76 
	#MSG_CNX_PORT
 "Ûœ≈ƒ…Œ≈Œ…≈ ” –œ“‘œÕ %d"

	)

77 
	#MSG_ANON_CANT_MKD
 "È⁄◊…Œ…‘≈, ¡ŒœŒ…ÕŒŸÕ –œÃÿ⁄œ◊¡‘≈Ã—Õ ⁄¡–“≈›≈Œœ ”œ⁄ƒ¡◊¡‘ÿ ƒ…“≈À‘œ“……"

	)

78 
	#MSG_ANON_CANT_RMD
 "È⁄◊…Œ…‘≈, ¡ŒœŒ…ÕŒŸÕ –œÃÿ⁄œ◊¡‘≈Ã—Õ ⁄¡–“≈›≈Œœ ’ƒ¡Ã—‘ÿ ƒ…“≈À‘œ“……"

	)

79 
	#MSG_ANON_CANT_RENAME
 "·ŒœŒ…ÕŒŸÕ –œÃÿ⁄œ◊¡‘≈Ã—Õ ⁄¡–“≈›≈Œœ –≈“≈Õ≈›¡‘ÿ/–≈“≈…Õ≈Œœ◊Ÿ◊¡‘ÿ ∆¡ ÃŸ"

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "·ŒœŒ…ÕŒŸÕ –œÃÿ⁄œ◊¡‘≈Ã—Õ ⁄¡–“≈›≈Œœ …⁄Õ≈Œ—‘ÿ –“¡◊¡ ƒœ”‘’–¡"

	)

81 
	#MSG_GLOB_NO_MEMORY
 "Ó≈ƒœ”‘¡‘œﬁŒœ –¡Õ—‘… ƒÃ— œ¬“¡¬œ‘À… ⁄¡–“œ”¡ %s"

	)

82 
	#MSG_PROBABLY_DENIED
 "(¸‘œ ◊œ⁄Õœ÷Œœ œ⁄Œ¡ﬁ¡≈‘ \"Ó≈‘ ƒœ”‘’–¡\")"

	)

83 
	#MSG_GLOB_READ_ERROR
 "Ô€…¬À¡ ﬁ‘≈Œ…— –“… œ¬“¡¬œ‘À≈ %s"

	)

84 
	#MSG_GLOB_NO_MATCH
 "Ó≈ Œ¡ ƒ≈Œœ ”œ◊–¡ƒ≈Œ…  ƒÃ— %†◊ %s"

	)

85 
	#MSG_CHMOD_FAILED
 "Ó≈◊œ⁄Õœ÷Œœ …⁄Õ≈Œ…‘ÿ –“¡◊¡ ƒœ”‘’–¡ À %s"

	)

86 
	#MSG_CHMOD_SUCCESS
 "È⁄Õ≈Œ≈ŒŸ –“¡◊¡ ƒœ”‘’–¡ À %s"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "È⁄◊…Œ…‘≈, Œœ — Œ≈ Õœ«’ Õ≈Œ—‘ÿ –“¡◊¡ ƒœ”‘’–¡"

	)

88 
	#MSG_ANON_CANT_DELETE
 "·ŒœŒ…ÕŒŸÕ –œÃÿ⁄œ◊¡‘≈Ã—Õ ⁄¡–“≈›≈Œœ ’ƒ¡Ã—‘ÿ ∆¡ ÃŸ"

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "·ŒœŒ…ÕŒŸÕ –œÃÿ⁄œ◊¡‘≈Ã—Õ ⁄¡–“≈›≈Œœ …⁄Õ≈Œ—‘ÿ ”’›≈”‘◊’¿›…≈ ∆¡ ÃŸ"

	)

90 
	#MSG_DELE_FAILED
 "Ó≈◊œ⁄Õœ÷Œœ ’ƒ¡Ã…‘ÿ %s"

	)

91 
	#MSG_DELE_SUCCESS
 "ıƒ¡Ã≈Œœ: %s%s%s%s"

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "Ó… œƒ…Œ ∆¡ Ã Œ≈ ’ƒ¡Ã≈Œ"

	)

93 
	#MSG_LOAD_TOO_HIGH
 \

96 "◊”≈«ƒ¡."

	)

97 
	#MSG_OPEN_FAILURE
 "Ó≈◊œ⁄Õœ÷Œœ œ‘À“Ÿ‘ÿ %s"

	)

98 
	#MSG_OPEN_FAILURE2
 "Ó≈◊œ⁄Õœ÷Œœ œ‘À“Ÿ‘ÿ ‹‘œ‘ ∆¡ Ã"

	)

99 
	#MSG_STAT_FAILURE
 "Ó≈◊œ⁄Õœ÷Œœ œ–“≈ƒ≈Ã…‘ÿ “¡⁄Õ≈“ ∆¡ Ã¡"

	)

100 
	#MSG_STAT_FAILURE2
 "Ó≈◊œ⁄Õœ÷Œ œ–“≈ƒ≈Ã…‘ÿ ”’›≈”‘◊’≈‘ Ã… ∆¡ Ã"

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "Ì≈”‘œ ◊œ⁄œ¬Œœ◊Ã≈Œ…— %Œd ”Ã…€ÀœÕ ◊≈Ã…Àœ ƒÃ— ∆¡ Ã¡ “¡⁄Õ≈“œÕ %Œd."

	)

102 
	#MSG_REST_RESET
 "ÛÕ≈›≈Œ…≈ ◊œ⁄œ¬Œœ◊Ã≈Œ…— ’”‘¡Œœ◊Ã≈Œœ ◊ 0"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "˜Ÿ Õœ÷≈‘≈ ﬁ…‘¡‘ÿ ‘œÃÿÀœ œ¬ŸﬁŒŸ≈ ∆¡ ÃŸ"

	)

104 
	#MSG_NOT_MODERATED
 \

106 "ƒÃ— ”À¡ﬁ…◊¡Œ…— ¡ƒÕ…Œ…”‘“¡‘œ“œÕ ”¡ ‘¡."

	)

107 
	#MSG_RATIO_DENIAL
 \

110 "–œƒ≈Ã…‘ÿ”— ﬁ≈Õ-Œ…¬’ƒÿ … ‘œÃÿÀœ –œ‘œÕ ”À¡ﬁ…◊¡‘ÿ."

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "‚œÃÿ€≈ Œ…ﬁ≈«œ Œ≈ œ”‘¡Ãœ”ÿ ƒÃ— ”À¡ﬁ…◊¡Œ…—"

	)

112 
	#MSG_WINNER
 "ÎœÕ–ÿ¿‘≈“ - ◊¡€ ƒ“’«. ‰œ◊≈“— ‘≈ ≈Õ’"

	)

113 
	#MSG_KBYTES_LEFT
 "%.1‡Î‚ œ”‘¡Ãœ”ÿ"

	)

114 
	#MSG_ABORTED
 "≈“≈À¡ﬁÀ¡ œ”‘¡Œœ◊Ã≈Œ¡"

	)

115 
	#MSG_DATA_WRITE_FAILED
 "Ô€…¬À¡ –“… –œ–Ÿ‘À≈ –≈“≈ƒ¡‘ÿ ƒ¡ŒŒŸ≈"

	)

116 
	#MSG_DATA_READ_FAILED
 "Ô€…¬À¡ –“… –œ–Ÿ‘À≈ –“…Œ—‘ÿ ƒ¡ŒŒŸ≈"

	)

117 
	#MSG_MMAP_FAILED
 "Ó≈◊œ⁄Õœ÷Œœ œ‘œ¬“¡⁄…‘ÿ ∆¡ Ã ◊ –¡Õ—‘ÿ"

	)

118 
	#MSG_WRITE_FAILED
 "Ô€…¬À¡ ◊œ ◊“≈Õ— ⁄¡–…”… ◊ ∆¡ Ã"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡”≈À’Œƒ –“œ€Ãœ, %.2‡Ì‚/c"

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡”≈À’Œƒ –“œ€Ãœ, %.2‡Î‚/”"

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡”≈À’Œƒ –“œ€Ãœ, %.2‡‚/c"

	)

122 
	#MSG_SPACE_FREE_M
 "%.1‡Ì‚ ”◊œ¬œƒŒœ«œ Õ≈”‘¡"

	)

123 
	#MSG_SPACE_FREE_K
 "%‡Î‚ ”◊œ¬œƒŒœ«œ ƒ…”Àœ◊œ«œ –“œ”‘“¡Œ”‘◊¡"

	)

124 
	#MSG_DOWNLOADED
 "⁄¡«“’⁄À¡ ⁄¡◊≈“€≈Œ¡"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "ÀœÕ¡Œƒ≈ REST Œ≈œ¬»œƒ…Õ ﬁ…”Ã≈ŒŒŸ  –¡“¡Õ≈‘“"

	)

126 
	#MSG_REST_ASCII_STRICT
 "Ì¡“À≈“ ◊œ⁄œ¬Œœ◊Ã≈Œ…— ƒœÃ÷≈Œ ¬Ÿ‘ÿ Œ’Ã≈Õ ◊ ASCII “≈÷…Õ≈"

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "˜œ””‘¡Œœ◊Ã≈Œ…≈ ” %Œd. Óœ ÕŸ ◊ ASCII “≈÷…Õ≈"

	)

128 
	#MSG_REST_SUCCESS
 "˜œ⁄œ¬Œœ◊Ã≈Œ…≈ ” %Œd"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "˙¡–“≈›≈ŒŒœ≈ …Õ— ƒ…“≈À‘œ“……"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "˙¡–“≈›≈ŒŒœ≈ …Õ— ∆¡ Ã¡: %s"

	)

131 
	#MSG_MKD_FAILURE
 "Ó≈◊œ⁄Õœ÷Œœ ”œ⁄ƒ¡‘ÿ ƒ…“≈À‘œ“…¿"

	)

132 
	#MSG_MKD_SUCCESS
 "‰…“≈À‘œ“…— ¬ŸÃ¡ ’”–≈€Œœ ”œ⁄ƒ¡Œ¡"

	)

133 
	#MSG_RMD_FAILURE
 "Ó≈◊œ⁄Õœ÷Œœ ’ƒ¡Ã…‘ÿ ƒ…“≈À‘œ“…¿"

	)

134 
	#MSG_RMD_SUCCESS
 "‰…“≈À‘œ“…— ¬ŸÃ¡ ’”–≈€Œœ ’ƒ¡Ã≈Œ¡"

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "Ó≈◊œ⁄Õœ÷Œœ –œÃ’ﬁ…‘ÿ ‘≈À’›≈≈ ◊“≈Õ—"

	)

136 
	#MSG_MODE_ERROR
 "œƒƒ≈“÷…◊¡¿‘”— ‘œÃÿÀœ ASCII … ¬…Œ¡“ŒŸ  “≈÷…ÕŸ"

	)

137 
	#MSG_CREATE_FAILURE
 "Ó≈◊œ⁄Õœ÷Œœ ”œ⁄ƒ¡‘ÿ ∆¡ Ã"

	)

138 
	#MSG_ABRT_ONLY
 "ÎœÕ¡Œƒ¡ ABRT ◊œ⁄Õœ÷Œœ ‘œÃÿÀœ ◊œ ◊“≈Õ— ⁄¡À¡ﬁÀ…"

	)

139 
	#MSG_UPLOAD_PARTIAL
 "˛¡”‘…ﬁŒœ ⁄¡«“’÷≈Œœ"

	)

140 
	#MSG_REMOVED
 "’ƒ¡Ã≈Œœ"

	)

141 
	#MSG_UPLOADED
 "⁄¡«“’÷≈Œœ"

	)

142 
	#MSG_GMTIME_FAILURE
 "Ó≈◊œ⁄Õœ÷Œœ –œÃ’ﬁ…‘ÿ Õ≈”‘Œœ≈ ◊“≈Õ—"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "ÙœÃÿÀœ ◊œ”ÿÕ…¬…‘ŒŸ≈ ¬¡ ‘Ÿ –œƒƒ≈“÷…◊¡¿‘”—, Œ¡ ƒ◊œ“≈ XXI ◊≈À"

	)

144 
	#MSG_TYPE_UNKNOWN
 "Ó≈…⁄◊≈”‘ŒŸ  TYPE"

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPE ‘≈–≈“ÿ"

	)

146 
	#MSG_STRU_FAILURE
 "œƒƒ≈“÷…◊¡≈‘”— ‘œÃÿÀœ F(ûe)"

	)

147 
	#MSG_MODE_FAILURE
 "œ÷¡Ã’ ”‘¡ …”–œÃÿ⁄’ ‘≈ “≈÷…Õ S—ªam)"

	)

148 
	#MSG_RENAME_ABORT
 "Ô‘Õ≈Œ¡ –“≈ƒŸƒ’›≈  œ–≈“¡√…… –≈“≈…Õ≈Œœ◊¡Œ…—"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "RNFR –“…Œ—‘œ, ∆¡ Ã ”’›≈”‘◊’≈‘, ’À¡÷…‘≈ Œœ◊œ≈ …Õ—"

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "È⁄◊…Œ…‘≈, Œœ ‘¡Àœ  ∆¡ Ã Œ≈ ”’›≈”‘◊’≈‘"

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "≈“≈…Õ≈Œœ◊¡Œ…≈ Œ≈ ’ƒ¡Ãœ”ÿ - ∆¡ Ã ” ‘¡À…Õ …Õ≈Œ≈Õ ’÷≈ ”’›≈”‘◊’≈‘"

	)

152 
	#MSG_RENAME_NORNFR
 "Ó≈œ¬»œƒ…Õ¡ ÀœÕ¡Œƒ¡ RNFR –≈“≈ƒ RNTO"

	)

153 
	#MSG_RENAME_FAILURE
 "Ó≈ ’ƒ¡Ãœ”ÿ –≈“≈…Õ≈Œœ◊¡‘ÿ/–≈“≈Œ≈”‘…"

	)

154 
	#MSG_RENAME_SUCCESS
 "Ê¡ Ã ’ƒ¡ﬁŒœ –≈“≈…Õ≈Œœ◊¡Ã …Ã… –≈“≈Õ≈›≈Œ"

	)

155 
	#MSG_NO_SUPERSERVER
 "œ÷¡Ã’ ”‘¡ ⁄¡–’”À¡ ‘≈Öuª-·pd …⁄ ”’–≈“-”≈“◊≈“¡ (À¡ÀÅ˝£rvî)"

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "Ó≈ Œ¡ ƒ≈Œ ¡ÀÀ¡’Œ‘ '·p'"

	)

157 
	#MSG_CONF_ERR
 "Ô€…¬À¡ ◊ ÀœŒ∆…«’“¡√……"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "Ó≈ ’À¡⁄¡Œœ …Õ— ∆¡ Ã¡ ◊…“‘’¡ÃÿŒŸ» –œÃÿ⁄œ◊¡‘≈Ã≈ "

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "Ó≈–“¡◊…ÃÿŒœ ⁄Œ¡ﬁ≈Œ…≈ œ«“¡Œ…ﬁ≈Œ…— –“œ–’”ÀŒœ  ”–œ”œ¬Œœ”‘…"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "Ó≈–“¡◊…ÃÿŒŸ  …ƒ≈Œ‘…∆…À¡‘œ“ «“’––Ÿ"

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "Ó≈–“¡◊…ÃÿŒœ œ«“¡Œ…ﬁ≈Œ…≈ Œ¡ ÀœÃ…ﬁ≈”‘◊œ –œÃÿ⁄œ◊¡‘≈Ã≈ "

	)

162 
	#MSG_ILLEGAL_FACILITY
 "Ó≈–“¡◊…ÃÿŒœ ’À¡⁄¡Œ ‘…– ”≈“◊…”¡ sy¶og"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "Ó≈–“¡◊…ÃÿŒŸ  ∆¡ Ã ÀœŒ∆…«’“¡√…… LDAP"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "Ó≈ƒœ–’”‘…Õœ≈ œ«“¡Œ…ﬁ≈Œ…… Œ¡«“’⁄À…"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "Ó≈ƒœ–’”‘…ÕŸ  …Œ‘≈“◊¡Ã –œ“‘œ◊"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "Ó≈◊≈“ŒŸ≈ œ«“¡Œ…ﬁ≈Œ…— ƒÃ— 'ls'"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "Ó≈–“¡◊…ÃÿŒŸ  IP ƒÃ— –¡””…◊ŒŸ» ”œ≈ƒ…Œ≈Œ… "

	)

168 
	#MSG_ILLEGAL_RATIO
 "Ó≈–“¡◊…ÃÿŒœ ⁄¡ƒ¡Œœ œ‘Œœ€≈Œ…≈ ”À¡ﬁ¡Œœ/⁄¡À¡ﬁ¡Œœ"

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "Ó≈◊≈“Œœ≈ œ«“¡Œ…ﬁ≈Œ…≈ uid"

	)

170 
	#MSG_ILLEGAL_OPTION
 "Ó≈…⁄◊≈”‘ŒŸ  –¡“¡Õ≈‘“"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "Ó≈ ⁄¡ƒ¡Œœ LDAPBa£DN ◊ ∆¡ Ã≈ ÀœŒ∆…«’“¡√…… LDAP"

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "Ó≈◊≈“ŒŸ  –¡“¡Õ≈‘“ LDAP"

	)

173 
	#MSG_NEW_CONNECTION
 "Óœ◊œ≈ ”œ≈ƒ…Œ≈Œ…≈ ” %s"

	)

174 
	#MSG_WELCOME_TO
 "‰œ¬“œ –œ÷¡Ãœ◊¡‘ÿ Œ¡"

	)

175 
	#MSG_MAX_USERS
 "%lu –œÃÿ⁄œ◊¡‘≈Ã≈  (‹‘œ Õ¡À”…Õ’ÕË’÷≈ –œƒÀÃ¿ﬁ…Ã…”ÿ, …⁄◊…Œ…‘≈"

	)

176 
	#MSG_NB_USERS
 "˜Ÿ –œÃÿ⁄œ◊¡‘≈Ãÿ %u …⁄ %u “¡⁄“≈€≈ŒŒŸ»"

	)

177 
	#MSG_WELCOME_TIME
 "Ì≈”‘Œœ≈ ◊“≈Õ— %02d:%02d. Û≈“◊≈“ŒŸ  –œ“‘: %u."

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "˜»œƒ “¡⁄“≈€≈Œ ‘œÃÿÀœ ƒÃ— ¡ŒœŒ…ÕŒŸ» –œÃÿ⁄œ◊¡‘≈Ã≈ "

	)

179 
	#MSG_RATIOS_EVERYONE
 "ÛÔ‚Ï‡‰ÂÓÈÂ ÚÔÔÚ„ÈÈ Ô‚Ò˙·ÙÂÏ¯ÓÔ ‰ÏÒ ˜ÛÂË:"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "·ÓÔÓÈÌÓ˘Â ÔÏ¯˙Ô˜·ÙÂÏÈ Ô‰˜Ï·ÛÙÓ˘ ÛÔÔÙÓÔ˚ÂÓÈ‡ ˙·Î·˛·ÓÔ/ÛÎ·˛·ÓÔ:"

	)

181 
	#MSG_RATIOS_RULE
 "ﬁ‘œ¬Ÿ ”À¡ﬁ¡‘ÿ %u Ì‚, ⁄¡À¡ﬁ¡ ‘≈ %u Ì‚."

	)

182 
	#MSG_INFO_IDLE_M
 "˜Ÿ ¬’ƒ≈‘≈ œ‘”œ≈ƒ…Œ≈ŒŸ –œ”Ã≈ %lu Õ…Œ’‘ ¬≈⁄ƒ≈—‘≈ÃÿŒœ”‘…."

	)

183 
	#MSG_INFO_IDLE_S
 "˜Ÿ ¬’ƒ≈‘≈ œ‘”œ≈ƒ…Œ≈ŒŸ –œ”Ã≈ %lu ”≈À’Œƒ ¬≈⁄ƒ≈—‘≈ÃÿŒœ”‘…."

	)

184 
	#MSG_CANT_READ_FILE
 "È⁄◊…Œ…‘≈, Œ≈◊œ⁄Õœ÷Œœ –“œﬁ…‘¡‘ÿ [%s]"

	)

185 
	#MSG_LS_TRUNCATED
 "˜Ÿ◊œƒ œ¬“≈⁄¡Œ ƒœ %u ”œ◊–¡ƒ≈Œ… "

	)

186 
	#MSG_LS_SUCCESS
 "%u ”œ◊–¡ƒ≈Œ… "

	)

187 
	#MSG_LOGOUT
 "Ô‘”œ≈ƒ…Œ≈Œ…≈."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "·◊‘œ“…⁄¡√…— Œ≈ ’ƒ¡Ã¡”ÿ –œÃÿ⁄œ◊¡‘≈Ã¿ [%s]"

	)

189 
	#MSG_ILLEGAL_UMASK
 "Ó≈◊≈“Œœ ⁄¡ƒ¡Œ¡ umask"

	)

190 
	#MSG_STANDALONE_FAILED
 "Ó≈◊œ⁄Õœ÷Œœ ⁄¡–’”‘…‘ÿ sèndÆ⁄ê”≈“◊≈“"

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "¸‘œ ⁄¡À“Ÿ‘¡— ”…”‘≈Õ¡ - ·ŒœŒ…ÕŒŸ  ◊»œƒ Œ≈ “¡⁄“≈€≈Œ"

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "œƒœ ƒ≈‘ Ã¿¬œ  –¡“œÃÿ"

	)

193 
	#MSG_MAX_USERS_IP
 "ÛÃ…€ÀœÕ ÕŒœ«œ ”œ≈ƒ…Œ≈Œ…  (%luË” ‹‘œ«œ IP"

	)

194 
	#MSG_ACTIVE_DISABLED
 "·À‘…◊ŒŸ  “≈÷…Õ ◊ŸÀÃ¿ﬁ≈Œ"

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "Ê¡ Ã –≈“≈ƒ¡Œ ’ƒ¡ﬁŒœ"

	)

196 
	#MSG_NO_DISK_SPACE
 "‰…”À –œÃœŒ - ⁄¡À¡ﬁ¡ ‘≈ –œ⁄÷≈"

	)

197 
	#MSG_OUT_OF_MEMORY
 "Ó≈‘ –¡Õ—‘…"

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "Ó≈◊≈“Œœ ⁄¡ƒ¡Œ –“œ◊≈“≈ŒŒŸ  IP"

	)

199 
	#MSG_NO_ASCII_RESUME
 "‰œÀ¡ﬁÀ¡ ASCII Œ≈Œ¡ƒ≈÷Œ¡, ”Œ¡ﬁ¡Ã¡ ’ƒ¡Ã…‘≈ ∆¡ Ã"

	)

200 
	#MSG_UNKNOWN_ALTLOG
 "Ó≈◊≈“Œœ ⁄¡ƒ¡Œ ∆œ“Õ¡‘ ÷’“Œ¡Ã¡"

	)

201 
	#MSG_ACCOUNT_DISABLED
 "Ó≈◊œ⁄Õœ÷≈Œ ◊»œƒ À¡À [%s]: ¡ÀÀ¡’Œ‘ œ‘ÀÃ¿ﬁ≈Œ"

	)

202 
	#MSG_SQL_WRONG_PARMS
 "Ó≈◊≈“ŒŸ≈ SQL –¡“¡Õ≈‘“Ÿ"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "Ãœ»œ  ∆¡ Ã ÀœŒ∆…«’“¡√…… SQL"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "Ó≈ ⁄¡ƒ¡Œ ”≈“◊≈“ ∆¡ Ã≈ ÀœŒ∆…«’“¡√…… SQL"

	)

205 
	#MSG_SQL_DOWN
 "SQL ”≈“◊≈“ À¡÷≈‘”— Œ≈ “¡¬œ‘¡≈‘"

	)

206 
	#MSG_ILLEGAL_QUOTA
 "Ó≈–“¡◊…ÃÿŒ¡— À◊œ‘¡"

	)

207 
	#MSG_QUOTA_FILES
 "%Œu ∆¡ Ãœ◊ …”–œÃÿ⁄’≈‘”— (%d%%Ë- “¡⁄“≈€≈Œœ: %Œu ∆¡ Ãœ◊"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu Î‚ …”–œÃÿ⁄’≈‘”— (%d%%Ë- “¡⁄“≈€≈Œœ: %Œu Î‚"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "“≈◊Ÿ€≈Œ…≈ À◊œ‘Ÿ: [%s] Œ≈ ¬’ƒ≈‘ ”œ»“¡Œ≈Œ"

	)

210 
	#MSG_AUTH_UNKNOWN
 "Ó≈…⁄◊≈”‘ŒŸ  Õ≈‘œƒ ¡◊‘œ“…⁄¡√……"

	)

211 
	#MSG_PDB_BROKEN
 "Ó≈◊œ⁄Õœ÷Œœ –“œﬁ…‘¡‘ÿ –“œ…Œƒ≈À”…“œ◊¡ŒŒŸ  ∆¡ ÃÖuªdb (…Ã… ‹‘œ ”‘¡“Ÿ  ∆œ“Õ¡‘Ë- œ–“œ¬’ ‘≈Öuª-pw mkdb"

	)

212 
	#MSG_ALIASES_ALIAS
 "%†‹‘œ –”≈◊ƒœŒ…Õ ƒÃ— %s."

	)

213 
	#MSG_ALIASES_UNKNOWN
 "Ó≈…⁄◊≈”‘ŒŸ  –”≈◊ƒœŒ…Õ %s."

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "Ú¡⁄“’€≈Œ ∆¡ Ã –”≈◊ƒœŒ…Õœ◊"

	)

215 
	#MSG_ALIASES_LIST
 "‰œ”‘’–ŒŸ ”Ã≈ƒ’¿›…≈ –”≈◊ƒœŒ…ÕŸ:"

	)

216 
	#MSG_PERUSER_MAX
 "Ó≈◊œ⁄Õœ÷Œœ …”–œÃÿ⁄œ◊¡‘ÿ ¬œÃÿ€≈ ﬁ≈Õ %lu ”œ≈ƒ…Œ≈Œ…  œ‘ œƒŒœ«œ –œÃÿ⁄œ◊¡‘≈Ã—"

	)

217 
	#MSG_IPV6_OK
 "Ûœ≈ƒ…Œ≈Œ…— –œ IPv6 ‘¡À÷≈ –œƒƒ≈“÷…◊¡¿‘”— Œ¡ ‹‘œÕ ”≈“◊≈“≈"

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: È”–œÃÿ⁄’≈‘”— %†” %s, %d-¬…‘ŒŸ  ”≈À“≈‘ŒŸ  ÀÃ¿ﬁ"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: ÎÃ¿ﬁ Œ≈Œ¡ƒ≈÷≈Œ"

	)

220 
	#MSG_TLS_NEEDED
 "È⁄◊…Œ…‘≈, Œ≈⁄¡›…›≈ŒŒŸ≈ –œƒÀÃ¿ﬁ≈Œ…— ⁄¡–“≈›≈ŒŸ Œ¡ ”≈“◊≈“≈.\n" \

221 "œƒÀÃ¿ﬁ…‘≈”ÿ ≈›≈ “¡⁄, …”–œÃÿ⁄’— €…∆“œ◊¡Œ…≈ SSL/TLS."

	)

222 
	#MSG_ILLEGAL_CHARSET
 "IŒegÆ ch¨£t"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: C⁄ãxànŸ found. Exôög."

	)

224 
	#MSG_PROT_OK
 "D©®¥Ÿe˘i⁄Üevñ sëÅÿ\"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "D©®c⁄√˘i⁄ c™nŸ bê›íed wôhÅhi†PROT sëtög."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "PrŸe˘i⁄Üevñ %†nŸ undî°ood. FÆlbackÅÿ\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT mu° bê¥e˚ded byá suc˚ssfu»PBSZ comm™d"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÑëu∫edÇÿu£rPassw‹dáâribuã, check LDAPác˚s†rights."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "InvÆid LDAPAuthMëhod i¿thêc⁄figuøti⁄ fûe. Should bê'böd' o∏'∑ssw‹d'."

	)

	@src/messages_sk.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: InvÆid TLSCùhîSuôê•ecifõd '%s'"

	)

2 
	#MSG_TIMEOUT
 "Ca†vy¥ßl"

	)

3 
	#MSG_CAPABILITIES
 "Nemozem zmíôÖrivûegü"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "Klõ¡ zavª»•ojíõ"

	)

5 
	#MSG_CLIENT_READ_ERR
 "Chyb®¥òcô™òod klõ¡a"

	)

6 
	#MSG_CANT_OPEN_CNX
 "Nemozem vytv‹ô spojíõ"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "Nemozem vytv‹ô d©ovy sockë"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "Klõ¡ov®adªß je"

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "Sy¡aktick®chyb®v IPádª£"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "Prikaz PORT u•e¢êvyk⁄™y"

	)

11 
	#MSG_ONLY_IPV4V6
 "Ib®IPv4á IPv6 suÖodp‹ov™ê(1,2)"

	)

12 
	#MSG_ONLY_IPV4
 "Ib®IPv4 jêpodp‹ov™y (1)"

	)

13 
	#MSG_TIMEOUT_PARSER
 "Ca†vy¥ßl,Çabudu˚ sku°êpißàåoskuÑychÀjsõ"

	)

14 
	#MSG_LINE_TOO_LONG
 "Rüdok jê¥ivñmòdlhy"

	)

15 
	#MSG_LOG_OVERFLOW
 "Klõ¡ s®pokusûÖª∂nô buf„∏«ÖrikazovyÑüdok"

	)

16 
	#MSG_GOODBYE
 "Dovidíü. U∂ﬂdlò°ê%Œuá dow∆ﬂdlò%Œu kûobajtov."

	)

17 
	#MSG_DEBUG_COMMAND
 "Prikaz"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 "jêvaßÅîajsüÜoˇti⁄"

	)

19 
	#MSG_NOT_LOGGED_IN
 "Nõ°ê¥ihœ£ny"

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "Bez≥˙o°√ÑozsúíüÇõsu im∂emítov™e"

	)

21 
	#MSG_NO_FILE_NAME
 "Züd√ míÿsub‹u"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "Züd√ míÿadªßø"

	)

23 
	#MSG_NO_RESTART_POINT
 "Züdí zacütokÑe°¨tu"

	)

24 
	#MSG_ABOR_SUCCESS
 "Prikaz ABOR bﬁ u•e¢y"

	)

25 
	#MSG_MISSING_ARG
 "Chybajucò¨gumít"

	)

26 
	#MSG_GARBAGE_FOUND
 "SmëõÇajdíêpÿhodnŸe"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "HodnŸ®¥ûi†vysoka"

	)

28 
	#MSG_IDLE_TIME
 "Ca†√cöno°ò«°avíyÇ®%lu sekund"

	)

29 
	#MSG_SITE_HELP
 "Na¶edov√Örikazy SITE suÑozoz«√"

	)

30 
	#MSG_BAD_CHMOD
 "Chyb√Öri°upovê¥ava"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "jê√z«mêrozsúíõ"

	)

32 
	#MSG_XDBG_OK
 "Prikaz XDBG bﬁ u•e¢y, debug uroví jêãøz %d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "Nez«myÖrikaz"

	)

34 
	#MSG_TIMEOUT_NOOP
 "Ca†vy¥ß»(züd« o≥øcü z®%lu sekund)"

	)

35 
	#MSG_TIMEOUT_DATA
 "Ca†vy¥ß»(züd√Çovêd©®z®%lu sekund)"

	)

36 
	#MSG_SLEEPING
 "Zzz..."

	)

37 
	#MSG_ALREADY_LOGGED
 "Uz sãÖrihœ£ny"

	)

38 
	#MSG_ANY_PASSWORD
 "Lubovﬁ√ he¶ÿbudêfungov©"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "Prihœ¢yákÿ™⁄ymnyÖouziv©ñ"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "An⁄ymnyÖouziv©ñ s®¥ihœsû vÿvútuÆnom FTP"

	)

41 
	#MSG_USER_OK
 "Pouziv©ñ %†jêOK. He¶ÿjêpŸªb√"

	)

42 
	#MSG_CANT_DO_TWICE
 "Nemozmêtÿ•øvôÖoˇ†tohtÿ£díü"

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "NemozemÇa°avô bez≥˙ê™⁄ym√ FTP"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "VaßÖªnosov®rychlo° jêobmedzía"

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 
MSG_ANY_PASSWORD


	)

46 
	#MSG_NOTRUST
 "Lutujem,áÀÇemozem vam dovîov©"

	)

47 
	#MSG_WHOAREYOU
 "ProsimÖovedzã mi, ktÿ°e"

	)

48 
	#MSG_AUTH_FAILED
 "Lutujem,áÀáuã¡ifikacü zlyhÆa"

	)

49 
	#MSG_AUTH_TOOMANY
 "Privñ®zlyh™òauã¡ifikacõ"

	)

50 
	#MSG_NO_HOMEDIR
 "Domovskyádªß∏nõjê¥i°u≤y -Ñusim"

	)

51 
	#MSG_NO_HOMEDIR2
 "%†√exi°ujêÆebÿjê√dosühnuã y"

	)

52 
	#MSG_START_SLASH
 "Zacöam v /"

	)

53 
	#MSG_USER_GROUP_ACCESS
 "Pouziv©ñ %†m®skupöovyÖri°u∞do"

	)

54 
	#MSG_FXP_SUPPORT
 "Títÿ£rvîÖodp‹ujêFXPÖªnosy"

	)

55 
	#MSG_RATIO
 "Musôêdodrüv© %u:%u (UL/DLËpomî"

	)

56 
	#MSG_CHROOT_FAILED
 "Nemozem vytv‹ô bez≥˙y chroŸ()"

	)

57 
	#MSG_CURRENT_DIR_IS
 "OK. AktuÆnyádªß∏jê%s"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "OK. AktuÆny obmedzíyádªß∏jê%s"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†jê¥avê¥ihœ£ny"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "NemozemÖªj° dÿadªßø %s"

	)

61 
	#MSG_PATH_TOO_LONG
 "Ce°®jê¥ûi†dlha"

	)

62 
	#MSG_CANT_PASV
 "NemozãÖouziv© PASVÇ®IPv4Öªsosoch. PouzôêEPSV."

	)

63 
	#MSG_CANT_PASSIVE
 "Nemozem vytv‹ôÖasiv√ spojíõ"

	)

64 
	#MSG_PORTS_BUSY
 "V£tkyÑezîvov™êTCPÖ‹ty suÖouziv™e"

	)

65 
	#MSG_GETSOCKNAME_DATA
 "Nemozem idítifikov©ÜokÆny d©ovy sockë"

	)

66 
	#MSG_GETPEERNAME
 "Nemozzem idítifikov©ÜokÆny sockë"

	)

67 
	#MSG_INVALID_IP
 "Lutujem, zadÆò°êchybnuádªsu"

	)

68 
	#MSG_NO_EPSV
 "Prosòpouzivajã klõ¡ kom∑tib y s IPv6 sÖodp‹ou EPSV"

	)

69 
	#MSG_BAD_PORT
 "Lutujem,áÀÇïrùojim s®«Ö‹ànizsòakÿ1024"

	)

70 
	#MSG_NO_FXP
 "NeŸv‹im spojíõÇ®%†÷íÖÿ%s)"

	)

71 
	#MSG_FXP
 "FXPÖªno†: z %†« %s"

	)

72 
	#MSG_NO_DATA_CONN
 "Züd√ d©ovê•ojíõ"

	)

73 
	#MSG_ACCEPT_FAILED
 "SpojíõÇemohlÿbyàak˚±ov™e"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "D©ovê•ojíõÖrij©e"

	)

75 
	#MSG_CNX_PORT_FAILED
 "Nemozem vytv‹ô d©ovê•ojíõÇ®p‹à%d"

	)

76 
	#MSG_CNX_PORT
 "Prùajam s®«Ö‹à%d"

	)

77 
	#MSG_ANON_CANT_MKD
 "Lutujem,áÀán⁄ymnòpouziv©ñüÇemozu vytv¨©ádªßª"

	)

78 
	#MSG_ANON_CANT_RMD
 "Lutujem,áÀán⁄ymnòpouziv©ñüÇemozu maz©ádªßª"

	)

79 
	#MSG_ANON_CANT_RENAME
 "An⁄ymnòpouziv©ñüÇemozuÖªsuv©/¥emíuvav© sub‹y"

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "An⁄ymnòpouziv©ñüÇemozu míôÖri°upovê¥ava"

	)

81 
	#MSG_GLOB_NO_MEMORY
 "Poˇ†globbögu %†do¶®∑m©"

	)

82 
	#MSG_PROBABLY_DENIED
 "(TŸÿ¥avdïodob√ z«mí®\"OdmõäutyÖri°up\")"

	)

83 
	#MSG_GLOB_READ_ERROR
 "Chyb®cô™üÖròglobbov™ò%s"

	)

84 
	#MSG_GLOB_NO_MATCH
 "Zaid« zhod®medzò%†v %s"

	)

85 
	#MSG_CHMOD_FAILED
 "Nemozem zmíôÖri°upovê¥av®« %s"

	)

86 
	#MSG_CHMOD_SUCCESS
 "Pri°upovê¥av®zmíê« %s"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "Lutujem,áÀÇemohﬁ som zmíô züd√Öri°upovê¥ava"

	)

88 
	#MSG_ANON_CANT_DELETE
 "An⁄ymnòpouziv©ñüÇemozu maz© sub‹y"

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "An⁄ymnòpouziv©ñüÇemozuÖªpisov©Éxi°uju˚ sub‹y"

	)

90 
	#MSG_DELE_FAILED
 "Nemozem zmaz© %s"

	)

91 
	#MSG_DELE_SUCCESS
 "Sub‹ %s%s%s%†zmaz™y"

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "Züdny sub‹Çebﬁ zmaz™y"

	)

93 
	#MSG_LOAD_TOO_HIGH
 \

95 "™⁄ymnymÖouziv©ñomÖròèk vysokej z©azi. U∂ﬂdy su vzdyÖovﬁíe\n"

	)

97 
	#MSG_OPEN_FAILURE
 "Nemozem otv‹ô %s"

	)

98 
	#MSG_OPEN_FAILURE2
 "Nemozem otv‹ôÅí sub‹"

	)

99 
	#MSG_STAT_FAILURE
 "Nemozem zi°ô vñko° sub‹u"

	)

100 
	#MSG_STAT_FAILURE2
 "Nemozem ovîôÉxi°íciu sub‹u"

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "ZacütokÑe°¨tu %Œd jê¥ûi†vñkyÖª sub‹ dlhyÜí %Œd."

	)

102 
	#MSG_REST_RESET
 "ZacütokÑe°¨tuÇa°avíyÇ®0"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "MozemÖoskytov©ÜíÇ‹mÆ√ sub‹y"

	)

104 
	#MSG_NOT_MODERATED
 \

106 "schvÆíyÇ®dow∆ﬂdádmi°øt‹mò£rvîa."

	)

107 
	#MSG_RATIO_DENIAL
 \

110 "Nõcÿ≥k√Çam sem u∂ﬂdnôê®pŸom sònõcÿskvñêmozëê°ühnut."

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "N®dow∆ﬂdÅu uzÇi¯nõje"

	)

112 
	#MSG_WINNER
 "Pocôa¯jêtvojÖrüãl. DovîujÖocôacu"

	)

113 
	#MSG_KBYTES_LEFT
 "%.1‡kûobajtovÇ®dow∆ﬂd"

	)

114 
	#MSG_ABORTED
 "Pªno†¥îu£ny"

	)

115 
	#MSG_DATA_WRITE_FAILED
 "Chyb®poˇ†z≠isu dÿd©ovehÿ•ojíü"

	)

116 
	#MSG_DATA_READ_FAILED
 "Chyb®poˇ†cô™ü z d©ovê•ojíü"

	)

117 
	#MSG_MMAP_FAILED
 "NemozemÇam≠ov© sub‹ dÿ∑m©e"

	)

118 
	#MSG_WRITE_FAILED
 "Chyb®poˇ†z≠isu dÿsub‹u"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡£kund (mî™êtu), %.2‡megabajtov z®£kundu"

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡£kund (mî™êtu), %.2‡kûobajtov z®£kundu"

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡£kund (mî™êtu), %.2‡bajtov z®£kundu"

	)

122 
	#MSG_SPACE_FREE_M
 "%.1‡megabajtov vﬁ√hÿdiskovehÿ¥õ°‹u"

	)

123 
	#MSG_SPACE_FREE_K
 "%‡kûobj©ov vﬁ√hÿdiskovehÿ¥õ°‹u"

	)

124 
	#MSG_DOWNLOADED
 "dow∆ﬂdnuty"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "REST vyzadujêci£ yÖ¨amëî"

	)

126 
	#MSG_REST_ASCII_STRICT
 "Oz«˚nõ odpovedêmusòbyà0 v ASCII mode"

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "Pokøcujem od %Œd. AÀ smêASCII mode"

	)

128 
	#MSG_REST_SUCCESS
 "Pokøcujem od %Œd"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "Zakaz™yÇazovádªßru"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "Zakaz™yÇazov sub‹u: %s"

	)

131 
	#MSG_MKD_FAILURE
 "Nemozem vytv‹ôádªßr"

	)

132 
	#MSG_MKD_SUCCESS
 "Adªß∏bﬁ u•e¢êvytv‹íy"

	)

133 
	#MSG_RMD_FAILURE
 "Nemozem zmaz©ádªßr"

	)

134 
	#MSG_RMD_SUCCESS
 "Adªß∏bﬁ u•e¢êvytv‹íy"

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "Nemozem zisk© casovu z«cku"

	)

136 
	#MSG_MODE_ERROR
 "Lí ASCIIá bö¨ny mod suÖodp‹ov™e"

	)

137 
	#MSG_CREATE_FAILURE
 "Nemozem vytv‹ô sub‹"

	)

138 
	#MSG_ABRT_ONLY
 "Prikaz ABRT jêmoz√ÖouzôÜíÖoˇ†u∂ﬂdu."

	)

139 
	#MSG_UPLOAD_PARTIAL
 "cü°o˙êu∂ﬂdnuty"

	)

140 
	#MSG_REMOVED
 "od°ø√ny"

	)

141 
	#MSG_UPLOADED
 "u∂ﬂdnuty"

	)

142 
	#MSG_GMTIME_FAILURE
 "Nemozem zi°ôÜokÆny cas"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "Podp‹ujemÜí 8 bôovêbajty,Çõsmê•ªd desütichÑokov"

	)

144 
	#MSG_TYPE_UNKNOWN
 "Nez«my TYPE"

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPE jêãøz"

	)

146 
	#MSG_STRU_FAILURE
 "Ib®F(ûeËjêpodp‹ov™y"

	)

147 
	#MSG_MODE_FAILURE
 "ProsimÖouzôêS—ªamËmod"

	)

148 
	#MSG_RENAME_ABORT
 "PªrusujemÖªdchadzaju˚Öªmíov™õ"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "Prikaz RNFRák˚±ov™y, sub‹Éxi°uje, oˇkavam cõl"

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "Lutujem,áÀ zad™y sub‹Çìxi°uje"

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "Prikaz RENAME zlyhÆ - cõlovy sub‹ uzÉxi°uje"

	)

152 
	#MSG_RENAME_NORNFR
 "PŸªbujem RNFRÖªd RNTO"

	)

153 
	#MSG_RENAME_FAILURE
 "Chyb®¥emíov™ü/¥esunu"

	)

154 
	#MSG_RENAME_SUCCESS
 "Sub‹ u•√¢ê¥esunuty/¥emíov™y"

	)

155 
	#MSG_NO_SUPERSERVER
 "Prosim spu°ajãÖuª-·pd zÿsu≥r-£rvî®“≠rikœdÅ˝£rvî)"

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "NemozemÇaj° k⁄tÿ'·p'"

	)

157 
	#MSG_CONF_ERR
 "Chyb®k⁄figuøcõ"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "Chybajucòsub‹ vútuÆnychÖouziv©ñov"

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "Chyb« hodnŸ®obmedzov™üÑychlo°ò¥íosu"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "Chyb« dovîov™®gidÖª chroŸ"

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "ChybnyÜimôÖouziv©ñov"

	)

162 
	#MSG_ILLEGAL_FACILITY
 "Nez«mêmíÿ¶uzby"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "Chybny k⁄figuø˙y sub‹ LDAPu"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "ChynyÜimôÇ®sy°emu z©az"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "ChybnyÑozßhÖ‹tov"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "ChybnyÜimôÇ®'ls'"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "Chyb« vnuã« IPÖªÖasiv√Öªnosy"

	)

168 
	#MSG_ILLEGAL_RATIO
 "ChybnyÖomî u∂ﬂd/dow∆ﬂd "

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "ChybnyÜimôÇ®uid"

	)

170 
	#MSG_ILLEGAL_OPTION
 "Nez«m®run-timêvﬁba"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "ChybajucòLDAPBa£DN v k⁄figuø˙om sub‹êLDAPu"

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "Chyb√ LDAPÖ¨amëª"

	)

173 
	#MSG_NEW_CONNECTION
 "Novê•ojíõ z %s"

	)

174 
	#MSG_WELCOME_TO
 "VôajãÇa"

	)

175 
	#MSG_MAX_USERS
 "Lutujem,áÀ %lu (maximumËpouziv©ñov jêuzÖrihœ£nych"

	)

176 
	#MSG_NB_USERS
 "SãÖouziv©ñ ci¶ÿ%u z %uÖovﬁíych"

	)

177 
	#MSG_WELCOME_TIME
 "LokÆny ca†jêãøz %02d:%02d. SîvîovyÖ‹t: %u."

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "Tu jêpovﬁíyÜíán⁄ymnyÖri°up"

	)

179 
	#MSG_RATIOS_EVERYONE
 "VSETCI POUZIVATELIA MUSIA DODRZAT POMER UL/DL :"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "ANONYMNI POUZIVATELIA MUSIA DODRZAT POMER UL/DL :"

	)

181 
	#MSG_RATIOS_RULE
 "« dow∆ﬂd %u megabajtov musôêu∂ﬂdnuà%u Mb."

	)

182 
	#MSG_INFO_IDLE_M
 "BudëêodpojíyÖÿ%lu möuèchÇóktivôy."

	)

183 
	#MSG_INFO_IDLE_S
 "BudëêodpojíyÖÿ%lu sekundachÇóktivôy."

	)

184 
	#MSG_CANT_READ_FILE
 "Lutujem,Çebﬁ som sch›nyÖªcô© [%s]"

	)

185 
	#MSG_LS_TRUNCATED
 "Vy°u∞skøãnyÇ®%u zhod"

	)

186 
	#MSG_LS_SUCCESS
 "Spﬁu %u zhod"

	)

187 
	#MSG_LOGOUT
 "Logout."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "Auã¡ifikacü uziv©ñ®zlyhÆ®[%s]"

	)

189 
	#MSG_ILLEGAL_UMASK
 "Nïœä®maska"

	)

190 
	#MSG_STANDALONE_FAILED
 "Nemozem spu°ô samo°©ny sîvî"

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "TŸÿjê¥iv©ny sy°em - An⁄ymnòuziv©ñü su zakaz™i"

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "Mozã zad©Üubovﬁ√ he¶o"

	)

193 
	#MSG_MAX_USERS_IP
 "Privñ®aktivnych spojíò(%luËz va£j IP"

	)

194 
	#MSG_ACTIVE_DISABLED
 "Aktivny mod jêvy≤uty"

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "Sub‹ bﬁ u•e¢ê¥íe£ny"

	)

196 
	#MSG_NO_DISK_SPACE
 "Disk jê∂ny, sku°ê√sk‹"

	)

197 
	#MSG_OUT_OF_MEMORY
 "Nedo°©okÖam©e"

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "Nïœä®dovîov™®IPádªß"

	)

199 
	#MSG_NO_ASCII_RESUME
 "Pokøcov™õÖªnosu v ASCII modênõjêbez≥˙e, sub‹Çajsk‹ zm©e,Örosim"

	)

200 
	#MSG_UNKNOWN_ALTLOG
 "Nez«myÜogovacòf‹m©"

	)

201 
	#MSG_ACCOUNT_DISABLED
 "Nemozã s®¥ihœsôákÿ[%s] : k⁄tÿjêdóktivov™e"

	)

202 
	#MSG_SQL_WRONG_PARMS
 "Chyb√ SQLÖ¨amëª"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "Chybny k⁄figuø˙y sub‹ SQL"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "V k⁄figuø˙om sub‹êchyb®SQL sîvî"

	)

205 
	#MSG_SQL_DOWN
 "SQL sîvî vyzî®byà•adnuty"

	)

206 
	#MSG_ILLEGAL_QUOTA
 "Chyb« kvŸa"

	)

207 
	#MSG_QUOTA_FILES
 "%Œu sub‹ovÖouzôych (%d%%Ë-áut‹izov™ych: %Œu sub‹ov"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu kûobajtovÖouzôych (%d%%Ë-áut‹izov™ych: %Œu kûobajtov"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "KvŸ®¥ekro˚« : [%s]Çebudêulozíy"

	)

210 
	#MSG_AUTH_UNKNOWN
 "Nez«m®auã¡ifika˙®mëoda"

	)

211 
	#MSG_PDB_BROKEN
 "Nebﬁÿmoz√Öªcô© indexov™y sub‹Öuªdb (Æebÿbﬁ®dëekov™®°¨®vîzüË- Vyskußjã spu°ôÖuª-pw mkdb"

	)

212 
	#MSG_ALIASES_ALIAS
 "%†jêÆüsomÖª %s."

	)

213 
	#MSG_ALIASES_UNKNOWN
 "Nez«myálü†%s."

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "Poskodíy sub‹álüsov"

	)

215 
	#MSG_ALIASES_LIST
 "Na¶edov√álüsy su do°u≤ê:"

	)

216 
	#MSG_PERUSER_MAX
 "Nemozemák˚±ov© vü¯akÿ%luÖrùojíòodÅohÿi°ehÿpouziv©ña"

	)

217 
	#MSG_IPV6_OK
 "PrùojíüÖomocou IPv6 suÅõz vô™ê«Åomtÿ£rvîi"

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: Z≠nuã %†pouziv®si‰u %s, %dÅajnych bôov"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: Si‰®jê¥ûi†¶aba"

	)

220 
	#MSG_TLS_NEEDED
 "Prepacte,áleÇesifrovane spojeniaÇie suÖovoleneÇaÅomto serveri.\n" \

221 "Prò«jblizsom spojíòpouzôêzabez≥covacõ mech™izmy SSL/TLS."

	)

222 
	#MSG_ILLEGAL_CHARSET
 "IŒegÆ ch¨£t"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: C⁄ãxànŸ found. Exôög."

	)

224 
	#MSG_PROT_OK
 "D©®¥Ÿe˘i⁄Üevñ sëÅÿ\"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "D©®c⁄√˘i⁄ c™nŸ bê›íed wôhÅhi†PROT sëtög."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "PrŸe˘i⁄Üevñ %†nŸ undî°ood. FÆlbackÅÿ\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT mu° bê¥e˚ded byá suc˚ssfu»PBSZ comm™d"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÑëu∫edÇÿu£rPassw‹dáâribuã, check LDAPác˚s†rights."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "InvÆid LDAPAuthMëhod i¿thêc⁄figuøti⁄ fûe. Should bê'böd' o∏'∑ssw‹d'."

	)

	@src/messages_sv.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: InvÆid TLSCùhîSuôê•ecifõd '%s'"

	)

2 
	#MSG_TIMEOUT
 "Timeout"

	)

3 
	#MSG_CAPABILITIES
 "Ofˆrmˆgíáâ ‰ndø mˆjlighëî"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "Klõ¡íávbrˆà™¶uäögí"

	)

5 
	#MSG_CLIENT_READ_ERR
 "L‰s„»‰Â¿klõ¡í"

	)

6 
	#MSG_CANT_OPEN_CNX
 "K™Éján¶uè"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "K™Éj sk≠®d©®sockë"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "Klõ¡í†adªs†‰r"

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "Sy¡axÉº‹ i IPádªss"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "PORT komm™dÿlyckades"

	)

11 
	#MSG_ONLY_IPV4V6
 "Enda° stˆd fˆ∏IPv4 och IPv6 (1,2)"

	)

12 
	#MSG_ONLY_IPV4
 "Enda° stˆd fˆ∏IPv4 (1)"

	)

13 
	#MSG_TIMEOUT_PARSER
 "Timeouà- fˆrsˆkáâ skriv®¢abb¨ên‰°®gÂng"

	)

14 
	#MSG_LINE_TOO_LONG
 "Radí ‰∏fˆ∏lÂng"

	)

15 
	#MSG_LOG_OVERFLOW
 "Klõ¡í fˆrsˆkã fyŒ®komm™d‹adsbuf„πí"

	)

16 
	#MSG_GOODBYE
 "Adjˆ. Du h¨Üadd© uµ %Œu ochÜadd©Çed %Œu kbyãs."

	)

17 
	#MSG_DEBUG_COMMAND
 "Komm™do"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 "‰∏döÇuv¨™dê∂©s"

	)

19 
	#MSG_NOT_LOGGED_IN
 "Du ‰∏öã i∆oggad"

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "S‰kîhësfunkti⁄í ‰∏ej in°ÆÀød"

	)

21 
	#MSG_NO_FILE_NAME
 "Fû«m¿ßk«s"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "BibliŸek¢am¿ßk«s"

	)

23 
	#MSG_NO_RESTART_POINT
 "Om°¨t•œt†ßk«s"

	)

24 
	#MSG_ABOR_SUCCESS
 "E·îsom du sî dë h‰∏mÂ°êABORÜyck©s"

	)

25 
	#MSG_MISSING_ARG
 "Argumíàßk«s"

	)

26 
	#MSG_GARBAGE_FOUND
 "Skr‰∞e·î v‰rde"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "V‰rdë ‰∏fˆ∏°‹t"

	)

28 
	#MSG_IDLE_TIME
 "IdÀÅimê‰∏%lu sekundî"

	)

29 
	#MSG_SITE_HELP
 "Fˆlj™dêSITE komm™d⁄ k‰¬†igí"

	)

30 
	#MSG_BAD_CHMOD
 "Fñaktig behˆrighë"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "‰∏í ok‰ndÉxãnsi⁄"

	)

32 
	#MSG_XDBG_OK
 "XDBG komm™dÿlyckades, debugÇivÂ ‰∏nu %d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "Ok‰¡ komm™do"

	)

34 
	#MSG_TIMEOUT_NOOP
 "Timeouà(ögí inm©nög undî %lu sekundî)"

	)

35 
	#MSG_TIMEOUT_DATA
 "Timeouà(ög®ny®d©®undî %lu sekundî)"

	)

36 
	#MSG_SLEEPING
 "Zzz..."

	)

37 
	#MSG_ALREADY_LOGGED
 "Du ‰∏ªd™ i∆oggad"

	)

38 
	#MSG_ANY_PASSWORD
 "VûkëÜˆ£n‹d som hñ° fungî¨"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "An⁄ymánv‰nd¨ê‰∏öloggad"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "An⁄ymánv‰nd¨êloggadêö i vútuñ»FTP"

	)

41 
	#MSG_USER_OK
 "Anv‰nd¨ê%†OK. Lˆ£n‹d kr‰vs"

	)

42 
	#MSG_CANT_DO_TWICE
 "Vòk™ i¡êgˆø dë i dí« sessi⁄"

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "Ofˆrmˆgíáâ sèπ®s‰kîán⁄ym FTP"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "Dö b™dbªdd ‰∏begr‰nßd"

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 "VûkëÜˆ£n‹d som hñ° fungî¨"

	)

46 
	#MSG_NOTRUST
 "Jag k™Åy‰º i¡êlô®pÂ Dig"

	)

47 
	#MSG_WHOAREYOU
 "V¨ v‰∆ig ochÅÆ®om vem Du ‰r"

	)

48 
	#MSG_AUTH_FAILED
 "Behˆrighësk⁄åﬁ»mis¶yckades"

	)

49 
	#MSG_AUTH_TOOMANY
 "Fˆ∏mÂng®behˆrighësk⁄åﬁÀ∏h¨ mis¶yck©s"

	)

50 
	#MSG_NO_HOMEDIR
 "HembibliŸek ‰∏öãÅûlg‰ngligà-ávbryãr"

	)

51 
	#MSG_NO_HOMEDIR2
 "%†exi°î¨ i¡êñÀ∏k™ÉjÇÂs"

	)

52 
	#MSG_START_SLASH
 "Sèπ¨ i /"

	)

53 
	#MSG_USER_GROUP_ACCESS
 "Anv‰nd¨ê%†h¨ gruµtûlhˆrighë"

	)

54 
	#MSG_FXP_SUPPORT
 "Dí« sîvî stˆdjî FXP ˆvîfˆrög¨"

	)

55 
	#MSG_RATIO
 "Du mÂ°êª•ekãøÉ¿%u:%u (UL/DLËkvŸ"

	)

56 
	#MSG_CHROOT_FAILED
 "Ofˆrmˆgíáâ sèπ®ëàs‰kîàchroŸ(ËskÆ"

	)

57 
	#MSG_CURRENT_DIR_IS
 "OK. Nuv¨™dêbibliŸek ‰∏%s"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "OK. Nuv¨™dêbegr‰nßdêbibliŸek ‰∏%s"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†h¨Üogg© in"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "K™Éj ‰ndø bibliŸekÅû»%s"

	)

61 
	#MSG_PATH_TOO_LONG
 "Sˆkv‰gí ‰∏fˆ∏lÂng"

	)

62 
	#MSG_CANT_PASV
 "Du k™Éjánv‰nd®PASVÖÂ IPv6án¶uäög¨. Anv‰nd EPSV i°‰Œë."

	)

63 
	#MSG_CANT_PASSIVE
 "K™Éj ˆµ«É¿∑ssiván¶uäög"

	)

64 
	#MSG_PORTS_BUSY
 "AŒ®ª£rvîadêTCPÖ‹è∏‰∏uµèg«"

	)

65 
	#MSG_GETSOCKNAME_DATA
 "K™Éj idítifõøÜokÆ d©®sockë"

	)

66 
	#MSG_GETPEERNAME
 "K™Éj idítifõøÜokÆ sockë"

	)

67 
	#MSG_INVALID_IP
 "Fñaktigádªss"

	)

68 
	#MSG_NO_EPSV
 "V¨ v‰∆ig ochánv‰ndÉ¿IPv6 klõ¡ med EPSV stˆd"

	)

69 
	#MSG_BAD_PORT
 "Jagán¶uã∏ejÅû»p‹è∏< 1024"

	)

70 
	#MSG_NO_FXP
 "Jag ˆµ«∏ejÉ¿™¶uäögÅû»%†”nda°Åû»%s)"

	)

71 
	#MSG_FXP
 "FXP ˆvîfˆrög: frÂ¿%†tû»%s"

	)

72 
	#MSG_NO_DATA_CONN
 "Ingí d©afˆrbödñ£"

	)

73 
	#MSG_ACCEPT_FAILED
 "An¶uäögí kundêejác˚±îas"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "D©afˆrbödñ£¿ac˚±îas"

	)

75 
	#MSG_CNX_PORT_FAILED
 "K™Éj ˆµ« d©afˆrbödñ£Åû»p‹à%d"

	)

76 
	#MSG_CNX_PORT
 "An¶uã∏tû»p‹à%d"

	)

77 
	#MSG_ANON_CANT_MKD
 "An⁄ym®™v‰nd¨êh¨ i¡êbehˆrighëáâ sk≠®bibliŸek"

	)

78 
	#MSG_ANON_CANT_RMD
 "An⁄ym®™v‰nd¨êh¨ i¡êbehˆrighëáâÑadî®bibliŸek"

	)

79 
	#MSG_ANON_CANT_RENAME
 "An⁄ym®™v‰nd¨êh¨ i¡êbehˆrighëáâ flyâ®ñÀ∏byèÇam¿pÂ fûî"

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "An⁄ym®™v‰nd¨êk™ i¡ê‰ndøÑ‰âighëî"

	)

81 
	#MSG_GLOB_NO_MEMORY
 "Mö√à‰∏¶uàpg®globbögáv %s"

	)

82 
	#MSG_PROBABLY_DENIED
 "(Dëè bëydîá¡agligí \"≈tkom°Çekad\")"

	)

83 
	#MSG_GLOB_READ_ERROR
 "L‰s„»undî globbögáv %s"

	)

84 
	#MSG_GLOB_NO_MATCH
 "IngíÅr‰f‡fˆ∏%†ò%s"

	)

85 
	#MSG_CHMOD_FAILED
 "K™Éj ‰ndøÑ‰âighëîÖÂ %s"

	)

86 
	#MSG_CHMOD_SUCCESS
 "R‰âighëî ‰ndødêpÂ %s"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "Jag kundêöã ‰ndøÇÂg⁄Ñ‰âighë"

	)

88 
	#MSG_ANON_CANT_DELETE
 "An⁄ym®™v‰nd¨êk™ i¡êødî®fûî"

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "An⁄ym®™v‰nd¨êk™ i¡êskriv®ˆvîÉxi°î™dêfûî"

	)

90 
	#MSG_DELE_FAILED
 "K™ÉjÑadî®%s"

	)

91 
	#MSG_DELE_SUCCESS
 "Radîadê%s%s%s%s"

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "Ingí fû ‰∏ødîad"

	)

93 
	#MSG_LOAD_TOO_HIGH
 \

96 "tûlÂäa."

	)

97 
	#MSG_OPEN_FAILURE
 "K™Éj ˆµ« %s"

	)

98 
	#MSG_OPEN_FAILURE2
 "K™Éj ˆµ« dí fûí"

	)

99 
	#MSG_STAT_FAILURE
 "K™Éj fö« fû°‹Àkí"

	)

100 
	#MSG_STAT_FAILURE2
 "K™Éj k⁄åﬁÀø fûí†exi°ís"

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "Om°¨àoff£à%Œd ‰∏fˆ∏°‹ fˆ∏fû°‹Àk %Œd."

	)

102 
	#MSG_REST_RESET
 "Om°¨àoff£à‰∏ßâÅû»0"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "Jag k™ b¨®h‰mèÇ‹mÆ®fûî"

	)

104 
	#MSG_NOT_MODERATED
 \

106 "öã blivô godk‰nd fˆ∏√dœddnögáv sy°emadmöi°øtˆr."

	)

107 
	#MSG_RATIO_DENIAL
 \

110 "V‰∆igíÜadd®uµÜôë gﬂ gªjî och fˆrsˆk sug®£«ª."

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "Ingë kv¨áâÜadd®√d"

	)

112 
	#MSG_WINNER
 "D©‹¿‰∏Dö v‰n. Lô®pÂ d©‹n"

	)

113 
	#MSG_KBYTES_LEFT
 "%.1‡kbyã†©àœdd®√d"

	)

114 
	#MSG_ABORTED
 "÷vîfˆrögávbruãn"

	)

115 
	#MSG_DATA_WRITE_FAILED
 "Fñ undî wrôêtÿd©®™¶uäög"

	)

116 
	#MSG_DATA_READ_FAILED
 "Fñ undîÑód from d©®™¶uäög"

	)

117 
	#MSG_MMAP_FAILED
 "OfˆrmˆgíáâÜ‰gg®fûí i mö√t"

	)

118 
	#MSG_WRITE_FAILED
 "Fñ dÂ d©®skriv†tû»fû"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡£kundî (uµm‰â h‰r), %.2‡Mbyã†≥∏£kund"

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡£kundî (uµm‰â h‰r), %.2‡Kbyã†≥∏£kund"

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡£kundî (uµm‰â h‰r), %.2‡byã†≥∏£kund"

	)

122 
	#MSG_SPACE_FREE_M
 "%.1‡Mbyã†Àdigàdiskuåymme"

	)

123 
	#MSG_SPACE_FREE_K
 "%‡Kbyã†Àdigàdiskuåymme"

	)

124 
	#MSG_DOWNLOADED
 "√dœddad"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "REST behˆvîÇumîiskÖ¨amëî"

	)

126 
	#MSG_REST_ASCII_STRICT
 "Sv¨sm¨kˆ∏mÂ°êv¨®0 i ASCII mode"

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "Sèπ¨ om vid %Œd. Mí vò‰∏òASCII mode"

	)

128 
	#MSG_REST_SUCCESS
 "Sèπ¨ om vid %Œd"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "BibliŸek¢am√à‰∏ejÅûlÂãt"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "Fû«m√à%†‰∏ejÅûlÂãt"

	)

131 
	#MSG_MKD_FAILURE
 "K™Éj sk≠®bibliŸek"

	)

132 
	#MSG_MKD_SUCCESS
 "BibliŸekë h¨ sk≠©s"

	)

133 
	#MSG_RMD_FAILURE
 "K™ÉjÑadî®bibliŸekë"

	)

134 
	#MSG_RMD_SUCCESS
 "BibliŸekë h¨Ñadî©s"

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "K™ÉjÉrhÂŒ®timê°amp"

	)

136 
	#MSG_MODE_ERROR
 "Enda° stˆd fˆ∏ASCII och bö¨y modes"

	)

137 
	#MSG_CREATE_FAILURE
 "K™Éj sk≠®fû"

	)

138 
	#MSG_ABRT_ONLY
 "ABRT ‰∏dëÉnd®tûlÂä®komm™dŸ vid uµœddnög"

	)

139 
	#MSG_UPLOAD_PARTIAL
 "dñvi†uµœddad"

	)

140 
	#MSG_REMOVED
 "ødîad"

	)

141 
	#MSG_UPLOADED
 "uµœddad"

	)

142 
	#MSG_GMTIME_FAILURE
 "KundêejÉrhÂŒ®lokÆÅid"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "Enda° stˆd fˆ∏8-bô byã†, HÆlÂ - vak«!"

	)

144 
	#MSG_TYPE_UNKNOWN
 "Ok‰nd TYPE"

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPE ‰∏nu"

	)

146 
	#MSG_STRU_FAILURE
 "Enda° stˆd fˆ∏F(ûe)"

	)

147 
	#MSG_MODE_FAILURE
 "Anv‰nd S—ªamËmode"

	)

148 
	#MSG_RENAME_ABORT
 "Avbryã∏tidig¨ê«mnbyãs›î©i⁄"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "RNFRác˚±îa†- fûíÉxi°î¨,Ñedÿfˆ∏de°ö©i⁄"

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "FûíÉxi°î¨Éj"

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "RENAME mis¶yckade†- de°ö©i⁄sfûí fön†ªd™"

	)

152 
	#MSG_RENAME_NORNFR
 "Behˆvî RNFR fˆª RNTO"

	)

153 
	#MSG_RENAME_FAILURE
 "Byà«mn/Êyâ®mis¶yckades"

	)

154 
	#MSG_RENAME_SUCCESS
 "Fûí h¨ byâÇam¿ñÀ∏Êyâ©s"

	)

155 
	#MSG_NO_SUPERSERVER
 "Kˆ∏puª-·pd iÉ¿su≥r-£rvî (àexÅ˝£rvî)"

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "K™Éj hôè '·p' k⁄tŸ"

	)

157 
	#MSG_CONF_ERR
 "K⁄figuøti⁄s„l"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "Vútuñœánv‰nd¨e†fû«m¿ßk«s"

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "IŒegÆàv‰rdêfˆ∏thrŸéög"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "IŒegÆ bërodd gid fˆ∏chroŸ"

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "IŒegÆánv‰nd¨gr‰ns"

	)

162 
	#MSG_ILLEGAL_FACILITY
 "Ok‰¡Çamn"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "Fñaktig LDAP k⁄figuøti⁄sfû"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "IŒegÆ bña°nögsgr‰ns"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "IŒegÆàp‹t•™n"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "IŒegÆ 'ls' begr‰n¢ög"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "IŒegÆÅvögad IP fˆ∏∑ssiv®™¶uäög¨"

	)

168 
	#MSG_ILLEGAL_RATIO
 "IŒegÆ uµ-/√dœddnögskvŸ"

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "IŒegÆ uid begr‰n¢ög"

	)

170 
	#MSG_ILLEGAL_OPTION
 "Ok‰¡ kˆ∫ögsvÆ"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "LDAPBa£DN sak«†òLDAP k⁄figuøti⁄sfû"

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "Fñaktig®LDAPÖ¨amëør"

	)

173 
	#MSG_NEW_CONNECTION
 "Ny™¶uäög frÂ¿%s"

	)

174 
	#MSG_WELCOME_TO
 "V‰lkommíÅûl"

	)

175 
	#MSG_MAX_USERS
 "%luánv‰nd¨ê(maximÆ®™èÀtË‰∏ªd™ i∆oggade"

	)

176 
	#MSG_NB_USERS
 "Du ‰∏™v‰nd¨ênummî %uáv %uÅûlÂäa"

	)

177 
	#MSG_WELCOME_TIME
 "LokÆÅid ‰∏nu %02d:%02d. SîvîÖ‹t: %u."

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "Enda°án⁄ym FTP ‰∏tûlÂãn"

	)

179 
	#MSG_RATIOS_EVERYONE
 "RATIOS ‰∏aktivî© fˆ∏ALLA:"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "ANONYMAánv‰nd¨êuts‰â†fˆ∏í UL/DL kvŸ:"

	)

181 
	#MSG_RATIOS_RULE
 "fˆ∏©àœdd®√d %u Mb, ‰∏dëÇˆdv‰ndigà©àœdd®uµ %u Mb."

	)

182 
	#MSG_INFO_IDLE_M
 "Du kommîáâ k›∂a†√dÉ·î %lu möuãr†öaktivôë."

	)

183 
	#MSG_INFO_IDLE_S
 "Du kommîáâ k›∂a†√dÉ·î %lu sekundî†öaktivôë."

	)

184 
	#MSG_CANT_READ_FILE
 "K™ÉjÜ‰ß [%s]"

	)

185 
	#MSG_LS_TRUNCATED
 "Utd©®åunkîa†tû»%uÅr‰fÁr"

	)

186 
	#MSG_LS_SUCCESS
 "%uÅr‰fÁ∏tŸÆt"

	)

187 
	#MSG_LOGOUT
 "Logout."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "Behˆrighësk⁄åﬁ»mis¶ycka†fˆ∏™v‰nd¨ê[%s]"

	)

189 
	#MSG_ILLEGAL_UMASK
 "Ogûtig umask"

	)

190 
	#MSG_STANDALONE_FAILED
 "K™Éj sèπ®°™dÆ⁄ê£rvî"

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "Dëè ‰∏ëà¥iv© sy°em - Ingíán⁄ymÜogö"

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "VûkëÜˆ£n‹d som hñ° fungî¨"

	)

193 
	#MSG_MAX_USERS_IP
 "Fˆ∏mÂng®™¶uäög¨ (%luË‰Â¿dí« IP"

	)

194 
	#MSG_ACTIVE_DISABLED
 "Aktiv modê‰∏av°‰ngd"

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "Fûí h¨ ˆvefˆπs"

	)

196 
	#MSG_NO_DISK_SPACE
 "Diskí ‰∏fuŒ - V‰∆igíÜadd®uµ sí¨e"

	)

197 
	#MSG_OUT_OF_MEMORY
 "Mö√à‰∏¶ut"

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "Ogûtig bërodd IPádªss"

	)

199 
	#MSG_NO_ASCII_RESUME
 "ASCIIÑesumê‰∏os‰kî,Ñadî®fûí fˆr°"

	)

200 
	#MSG_UNKNOWN_ALTLOG
 "Ok‰¡Üoggnögsf‹m©"

	)

201 
	#MSG_ACCOUNT_DISABLED
 "K™ÉjÜogg®ö som [%s]: k⁄tŸ ‰∏av°‰ngt"

	)

202 
	#MSG_SQL_WRONG_PARMS
 "Fñ SQLÖ¨amëør"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "Fñaktig SQL k⁄figuøti⁄sfû"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "Sîvî sak«†òSQL k⁄figuøti⁄sfû"

	)

205 
	#MSG_SQL_DOWN
 "SQL sîvî¿fˆªÁŒî v¨®√ª"

	)

206 
	#MSG_ILLEGAL_QUOTA
 "Ogûtig kvŸ"

	)

207 
	#MSG_QUOTA_FILES
 "%Œu fûîánv‰nd®(%d%%Ë-áuth‹ized: %Œu fûes"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu Kbyã†™v‰nd®(%d%%Ë- TûlÂãt: %Œu Kb"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "KvŸí ˆvîskridí: [%s] kommî i¡ê©à•¨as"

	)

210 
	#MSG_AUTH_UNKNOWN
 "Ok‰nd behˆrighësk⁄åﬁl"

	)

211 
	#MSG_PDB_BROKEN
 "K™ÉjÜ‰ß dí indexîadêpuªdb fûí (ñÀ∏gammÆàf‹m©Ë- Fˆrsˆk medÖuª-pw mkdb"

	)

212 
	#MSG_ALIASES_ALIAS
 "%†‰∏ëàÆü†fˆ∏%s."

	)

213 
	#MSG_ALIASES_UNKNOWN
 "Ok‰¡álü†%s."

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "Skadadálü†fû"

	)

215 
	#MSG_ALIASES_LIST
 "Fˆlj™dêÆü†‰∏tûlg‰nglig®:"

	)

216 
	#MSG_PERUSER_MAX
 "Jag k™ i¡êac˚±î®Êî ‰¿%luán¶uäög¨ frÂ¿í och samm®™v‰nd¨e"

	)

217 
	#MSG_IPV6_OK
 "IPv6án¶uäög¨ ‰∏ocksÂ v‰lkom«Åû»dí« sîvî"

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: Anv‰ndî %†med %s, %d bô¨†kry±îög"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: Kry±îögí ‰∏fˆ∏svag"

	)

220 
	#MSG_TLS_NEEDED
 "Tyv‰rr ‰r sessioner i klartext inteÅillÂtnaÖÂ denna server.\n" \

221 "V‰∆igí Âãøn¶uàochánv‰nd SSL/TLS fˆ∏ˆkad s‰kîhë."

	)

222 
	#MSG_ILLEGAL_CHARSET
 "IŒegÆ ch¨£t"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: C⁄ãxànŸ found. Exôög."

	)

224 
	#MSG_PROT_OK
 "D©®¥Ÿe˘i⁄Üevñ sëÅÿ\"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "D©®c⁄√˘i⁄ c™nŸ bê›íed wôhÅhi†PROT sëtög."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "PrŸe˘i⁄Üevñ %†nŸ undî°ood. FÆlbackÅÿ\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT mu° bê¥e˚ded byá suc˚ssfu»PBSZ comm™d"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÑëu∫edÇÿu£rPassw‹dáâribuã, check LDAPác˚s†rights."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "InvÆid LDAPAuthMëhod i¿thêc⁄figuøti⁄ fûe. Should bê'böd' o∏'∑ssw‹d'."

	)

	@src/messages_tr.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: InvÆid TLSCùhîSuôê•ecifõd '%s'"

	)

2 
	#MSG_TIMEOUT
 "Zam™ A˛˝m˝"

	)

3 
	#MSG_CAPABILITIES
 "A«hè∏de°ekÀròy≠˝œm˝y‹"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "KuŒ™˝c˝ baœ¡˝y˝ k≠©t˝"

	)

5 
	#MSG_CLIENT_READ_ERR
 "KuŒ™˝c˝d™ okum®h©as˝"

	)

6 
	#MSG_CANT_OPEN_CNX
 "Baœ¡˝áÁ˝œm˝y‹"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "D©®k≠˝s˝ olu˛turuœmad˝"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "KuŒ™˝c˝ IPádªsi"

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "IPádªsödês˝øœm®h©as˝"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "PORT komutu gîÁekÀ˛ti"

	)

11 
	#MSG_ONLY_IPV4V6
 "Sade˚ IPv4 vêIPv6 de°ekÀnmekãdú (1,2)"

	)

12 
	#MSG_ONLY_IPV4
 "Sade˚ IPv4 de°ekÀnmekãdú (1)"

	)

13 
	#MSG_TIMEOUT_PARSER
 "Zam™ A˛˝m˝ - bòs⁄økò£„ª dah®h˝zl˝ yaz˝∞díeyöiz"

	)

14 
	#MSG_LINE_TOO_LONG
 "S©˝∏Áok uzun"

	)

15 
	#MSG_LOG_OVERFLOW
 "KuŒ™˝c˝ g¸vílòkomuàßt˝r˝Åa˛mas˝« sebï oldu"

	)

16 
	#MSG_GOODBYE
 "Ho˛ÁakÆ˝n. G¸n˚Œemñîöiz %Œu vêödúdikÀröiz %Œu kbyãs."

	)

17 
	#MSG_DEBUG_COMMAND
 "Komut"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 "˛u™kòyîöiz"

	)

19 
	#MSG_NOT_LOGGED_IN
 "Gúi˛ y≠amad˝n˝z"

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "G¸vílikÉkÀ¡ûîòèmamœ«mad˝"

	)

21 
	#MSG_NO_FILE_NAME
 "Dosy®ad˝ yok"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "Kœsˆ∏ad˝ yok"

	)

23 
	#MSG_NO_RESTART_POINT
 "Yíidí ba˛œtm®nokès˝ yok"

	)

24 
	#MSG_ABOR_SUCCESS
 "ABOR d™ ˆn˚ gˆrd¸kÀröiz ba˛¨˝ iÀÅamamœnd˝"

	)

25 
	#MSG_MISSING_ARG
 "Eksik gúdi"

	)

26 
	#MSG_GARBAGE_FOUND
 "Deîdí s⁄ø gîeksizlik bulundu"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "Deî Áok uzun"

	)

28 
	#MSG_IDLE_TIME
 "H¨akësiz bekÀmês¸ªsò%lu s™iye"

	)

29 
	#MSG_SITE_HELP
 "Bñútûí SITE komutu o«yœnd˝"

	)

30 
	#MSG_BAD_CHMOD
 "Y™l˝˛Éri˛im"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "bûömeyí uz™t˝"

	)

32 
	#MSG_XDBG_OK
 "XDBG komutu ba˛¨˝l˝, yíòdebug d¸zeyò%d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "Bûömeyí komut"

	)

34 
	#MSG_TIMEOUT_NOOP
 "Zam™ A˛˝m˝ (%lu s™iyedú h¨ekë olmad˝)"

	)

35 
	#MSG_TIMEOUT_DATA
 "Zam™ A˛˝m˝ (%lu s™iyedú yíòd©®yok)"

	)

36 
	#MSG_SLEEPING
 "Zzz..."

	)

37 
	#MSG_ALREADY_LOGGED
 "Z©í gúi˛ y≠t˝n˝z"

	)

38 
	#MSG_ANY_PASSWORD
 "ﬁi‰êyok"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "Mißfú kuŒ™˝c˝ gúi˛ y≠t˝"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "S™Æ FTP oœøk mißfú kuŒ™˝c˝ gúi˛ y≠t˝"

	)

41 
	#MSG_USER_OK
 "KuŒ™˝c˝ %†OK. ﬁi‰eyògúöiz"

	)

42 
	#MSG_CANT_DO_TWICE
 "Bu oturumd®y≠˝œm˝y‹"

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "G¸vílòMißfú FTPáy¨œnmad˝"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "Tøfik kuŒ™˝m˝n˝z s˝n˝æ˝"

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 "ﬁi‰êyok"

	)

46 
	#MSG_NOTRUST
 "‹zg¸n¸z, g¸ví saœyamad˝n˝z"

	)

47 
	#MSG_WHOAREYOU
 "L¸t„¿kim olduunuzu soyÀyöiz."

	)

48 
	#MSG_AUTH_FAILED
 "Yëköiz h©Æ˝, ¸zg¸n¸z"

	)

49 
	#MSG_AUTH_TOOMANY
 "«ok fazœ yëkòi°eòh©as˝"

	)

50 
	#MSG_NO_HOMEDIR
 "A« kœsˆr¸n¸z bulu«mad˝ - Á˝k˝l˝y‹"

	)

51 
	#MSG_NO_HOMEDIR2
 "%†bulu«mad˝ vey®oku«m˝y‹"

	)

52 
	#MSG_START_SLASH
 "Ba˛œng˝Á /"

	)

53 
	#MSG_USER_GROUP_ACCESS
 "KuŒ™˝c˝ %†gru∞îi˛im saœd˝"

	)

54 
	#MSG_FXP_SUPPORT
 "Bu sunucu FXPÅøns„röòde°ekÀmekãdú"

	)

55 
	#MSG_RATIO
 "Bak˝m oøn˝ %u:%u (G‹N/›ND)"

	)

56 
	#MSG_CHROOT_FAILED
 "G¸vílòchroŸ(Ëay¨œ«mad˝"

	)

57 
	#MSG_CURRENT_DIR_IS
 "OK. ﬁu™kòkœsˆ∏%s"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "OK. ﬁu™kòs˝n˝æ˝ kœsˆ∏%s"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†gúi˛ y≠t˝"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "Kœsˆ∏dei˛túûemedò%s"

	)

61 
	#MSG_PATH_TOO_LONG
 "Yﬁ Áok uzun"

	)

62 
	#MSG_CANT_PASV
 "PASV komutunu IPv6 baœ¡˝s˝nd®kuŒ™amazs˝n˝z.YîöêEPSV kuŒ™˝n˝z."

	)

63 
	#MSG_CANT_PASSIVE
 "Pasi‡baœ¡˝áÁ˝œm˝y‹"

	)

64 
	#MSG_PORTS_BUSY
 "T¸máyr˝lm˝˛ TCP k≠˝œr˝ me˛gul"

	)

65 
	#MSG_GETSOCKNAME_DATA
 "LokÆ d©®gúi˛òèn˝«mad˝"

	)

66 
	#MSG_GETPEERNAME
 "LokÆ gúi˛Å™˝«mad˝"

	)

67 
	#MSG_INVALID_IP
 "‹zg¸n¸z, y™l˝˛ádª†bñúÀnmi˛"

	)

68 
	#MSG_NO_EPSV
 "L¸t„¿EPSV de°eklòbú IPv6-c⁄f‹m™àkuŒ™˝c˝ kuŒ™˝n˝z"

	)

69 
	#MSG_BAD_PORT
 "‹zg¸n¸z, 1024 dí k¸Á¸kÖ‹é¨œ baÆ™amay˝z "

	)

70 
	#MSG_NO_FXP
 "%†baœ¡˝s˝áÁ˝œm˝y‹(ßde˚ %s)"

	)

71 
	#MSG_FXP
 "FXPÅøns„r: %†dí %†'ye"

	)

72 
	#MSG_NO_DATA_CONN
 "D©®baœ¡˝s˝ yok"

	)

73 
	#MSG_ACCEPT_FAILED
 "Baœ¡˝ kabu»edûmedi"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "D©®baœ¡˝ kabu»edûdi"

	)

75 
	#MSG_CNX_PORT_FAILED
 "%d k≠˝s˝nd™ d©®baœ¡˝s˝áÁ˝œm˝y‹"

	)

76 
	#MSG_CNX_PORT
 "%d baœ¡˝s˝nd™ baœn˝y‹"

	)

77 
	#MSG_ANON_CANT_MKD
 "‹zg¸n¸z, mißfú kuŒ™˝c˝s˝n˝¿kœsˆ∏ﬁu˛turm®yëkisòyok"

	)

78 
	#MSG_ANON_CANT_RMD
 "‹zg¸n¸z, mißfú kuŒ™˝c˝s˝n˝¿kœsˆ∏sûmêyëkisòyok"

	)

79 
	#MSG_ANON_CANT_RENAME
 "Mißfú kuŒ™˝c˝s˝n˝¿dosy®è˛˝ma/isim dei˛túmêyëkisòyok"

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "Mißfú kuŒ™˝c˝s˝n˝¿izöÀròdei˛túmêyëkisòyok"

	)

81 
	#MSG_GLOB_NO_MEMORY
 "%†e¢as˝nd®bñÀkÅa˛mas˝ olu˛tu"

	)

82 
	#MSG_PROBABLY_DENIED
 "(Bu yˆ¡em muhãÀmí \"›zöÉngñÀndi\")"

	)

83 
	#MSG_GLOB_READ_ERROR
 "%†e¢as˝nd® okum®h©as˝"

	)

84 
	#MSG_GLOB_NO_MATCH
 "%†iÁödê%†bulu«mad˝"

	)

85 
	#MSG_CHMOD_FAILED
 "%†iÁö izöÀ∏dei˛túûemedi"

	)

86 
	#MSG_CHMOD_SUCCESS
 "%†iÁö izöÀ∏dei˛túûdi"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "‹zg¸n¸z, izöÀ∏dei˛túûemedi"

	)

88 
	#MSG_ANON_CANT_DELETE
 "Mißfú kuŒ™˝c˝ dosyÆ¨˝ sûimez"

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "Mißfú kuŒ™˝c˝ v¨ﬁ™ dosy®¸zîöêyazamaz"

	)

90 
	#MSG_DELE_FAILED
 "%†sûöemiy‹"

	)

91 
	#MSG_DELE_SUCCESS
 "%s%s%s%†sûödi"

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "Sûöí dosy®yok"

	)

93 
	#MSG_LOAD_TOO_HIGH
 \

95 "Bu durmd®ßde˚ gˆndîim izölidú.\n"

	)

97 
	#MSG_OPEN_FAILURE
 "%†aÁ˝lmad˝"

	)

98 
	#MSG_OPEN_FAILURE2
 "Dosy®aÁ˝œmad˝"

	)

99 
	#MSG_STAT_FAILURE
 "Dosy®boyutu bulu«mad˝"

	)

100 
	#MSG_STAT_FAILURE2
 "Dosy®ﬁu˛turm®k⁄åﬁÉdûemedi"

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "%Œd iÁö yíidí ba˛œy˝¿%Œd dí dosy®b¸y¸kl¸l¸¸ Áok b¸y¸k ."

	)

102 
	#MSG_REST_RESET
 "Yíidí ba˛œy˝¿yíûemê0"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "Sade˚ d¸zg¸¿dosyÆ¨ gîòÆabûúiz"

	)

104 
	#MSG_NOT_MODERATED
 \

106 "bunu¿öidúûmesòiÁö hí¸z o«y vîmedi"

	)

107 
	#MSG_RATIO_DENIAL
 \

110 "L¸t„¿dah®s⁄øÅekø∏díeyöiz."

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "›ndúmêkÆmad˝"

	)

112 
	#MSG_WINNER
 "Bûgißy¨árkada˛˝n˝z. Bûgißy¨®g¸víö."

	)

113 
	#MSG_KBYTES_LEFT
 "%.1‡kbyã†ödúme"

	)

114 
	#MSG_ABORTED
 "Tøns„rdí vazgeÁûdi"

	)

115 
	#MSG_DATA_WRITE_FAILED
 "D©®baœ¡˝s˝nd®yazm®s˝øs˝nd®h©a"

	)

116 
	#MSG_DATA_READ_FAILED
 "D©®baœ¡˝s˝nd®okum®s˝øs˝nd®h©a"

	)

117 
	#MSG_MMAP_FAILED
 "Dosyad™˝¿haf˝zadakòyîòaÁ˝œmad˝"

	)

118 
	#MSG_WRITE_FAILED
 "Dosyay®yazm®s˝øs˝nd®h©a"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡ßniyê(burdakòˆlÁ¸), s™iyedê%.2‡Mbyã†"

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡ßniyê(burdakòˆlÁ¸), s™iyedê%.2‡Kbyã†"

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡ßniyê(burdakòˆlÁ¸), s™iyedê%.2‡byã†"

	)

122 
	#MSG_SPACE_FREE_M
 "Bo˛ diskáœn˝ %.1‡Mbyã†"

	)

123 
	#MSG_SPACE_FREE_K
 "Bo˛ diskáœn˝ %‡Kbyã†"

	)

124 
	#MSG_DOWNLOADED
 "ödúûdi"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "REST dêøkamß»∑ªmëª gîekli"

	)

126 
	#MSG_REST_ASCII_STRICT
 "›˛¨ëòASCII modd®0 iÀ cev≠œy˝n˝z "

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "%Œd Yíidí ba˛œt˝l˝y‹. ASCII mod iÁöde"

	)

128 
	#MSG_REST_SUCCESS
 "%Œd yíidí ba˛œt˝l˝y‹"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "Yaßk kœsˆ∏ad˝"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "Yaßk dosy®ad˝: %s"

	)

131 
	#MSG_MKD_FAILURE
 "Kœsˆ∏ﬁu˛tuøœmad˝"

	)

132 
	#MSG_MKD_SUCCESS
 "Kœsˆ∏ba˛¨˝yœ olu˛turuldu"

	)

133 
	#MSG_RMD_FAILURE
 "Kœsˆ∏kÆd˝r˝œmad˝"

	)

134 
	#MSG_RMD_SUCCESS
 "Kœsˆ∏ba˛¨˝yœ kÆd˝r˝ld˝"

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "Zam™ biÁimòÆ˝«mad˝"

	)

136 
	#MSG_MODE_ERROR
 "Sade˚ ASCII vêbö¨y mod de°ekÀnmekãdú"

	)

137 
	#MSG_CREATE_FAILURE
 "Dosy®ﬁu˛turuœmad˝"

	)

138 
	#MSG_ABRT_ONLY
 "ABRT sade˚ g¸n˚Œemês¸ªsödêkuŒ™˝l˝r"

	)

139 
	#MSG_UPLOAD_PARTIAL
 "k˝smí g¸n˚Àndi"

	)

140 
	#MSG_REMOVED
 "kÆd˝r˝ld˝"

	)

141 
	#MSG_UPLOADED
 "g¸n˚Œídi"

	)

142 
	#MSG_GMTIME_FAILURE
 "LokÆ zam™ál˝«mad˝"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "Sade˚ 8-bô byãœ∏de°ekÀnú, 10 ya˛˝nd®deûim ki."

	)

144 
	#MSG_TYPE_UNKNOWN
 "Bûömeyí TYPE"

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPE ˛u™"

	)

146 
	#MSG_STRU_FAILURE
 "Sade˚ D(osyaËde°ekÀnmekãdú"

	)

147 
	#MSG_MODE_FAILURE
 "L¸t„¿S—ªamËmod kuŒ™˝n"

	)

148 
	#MSG_RENAME_ABORT
 "÷n˚kòisim dei˛túmedí vazgeÁûiy‹"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "RNFR kabu»edûdò- bñútûí yîdêdosy®v¨, "

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "‹zg¸n¸z, dosy®bulu«mad˝"

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "RENAME H©Æ˝ - bñútûí dosy®ad˝ z©í v¨"

	)

152 
	#MSG_RENAME_NORNFR
 "RNTO ˆn˚ RNFR gîekli"

	)

153 
	#MSG_RENAME_FAILURE
 "›sim Dei˛túme/Ta˛˝m®h©Æ˝"

	)

154 
	#MSG_RENAME_SUCCESS
 "Dosy®ismòdei˛túme/è˛˝m®ba˛¨˝l˝"

	)

155 
	#MSG_NO_SUPERSERVER
 "L¸t„¿puª-·pd yòsu≥r-£rvî iÀ ÁÆ˝˛t˝r˝n˝z (t˝£rvî gîekli)"

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "'·p' heßb˝ bulu«mad˝"

	)

157 
	#MSG_CONF_ERR
 "K⁄fig¸øsy⁄ h©as˝"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "S™Æ kuŒ™˝c˝ dosyas˝Éksik"

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "AzÆtm®iÁö geÁîsiz deî"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "chroŸ iÁö geÁîsiz gid"

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "GeÁîsiz kuŒ™˝c˝Üimôi"

	)

162 
	#MSG_ILLEGAL_FACILITY
 "Bûömeyí oœ«kád˝"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "Bûömeyí LDAP k⁄fig¸øsy⁄ dosyas˝"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "GeÁîsiz y¸kÀmêlimôi"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "GeÁîsiz k≠˝ s˝øs˝"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "GeÁîsiz 'ls'Üimôi"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "Pasi‡baœ¡˝ iÁö geÁîsiz z‹u∆u IP "

	)

168 
	#MSG_ILLEGAL_RATIO
 "GeÁîsiz g¸n˚Œeme/ödúmê‹™˝"

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "GeÁîsiz uidÜimôi"

	)

170 
	#MSG_ILLEGAL_OPTION
 "Bûömeyí gîÁek zam™l˝ seÁim"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "LDAP k⁄fig¸øsy⁄ dosyas˝nd®LDAPBa£DNÉksik"

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "Y™l˝˛ LDAPÖ¨amëªsi"

	)

173 
	#MSG_NEW_CONNECTION
 "%†dí yíòbaœ¡˝"

	)

174 
	#MSG_WELCOME_TO
 "Ho˛gñdöiz"

	)

175 
	#MSG_MAX_USERS
 "%lu kuŒ™˝c˝ (maksimumËz©í gúi˛ y≠t˝, ¸zg¸n¸z"

	)

176 
	#MSG_NB_USERS
 "KuŒ™˝c˝Çum¨™˝z %u dí %u kabu»edûdi."

	)

177 
	#MSG_WELCOME_TIME
 "LokÆ zam™ ˛u™ %02d:%02d. Sunucu k≠˝s˝: %u."

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "Sade˚ Mißfú FTP kabu»edûú"

	)

179 
	#MSG_RATIOS_EVERYONE
 "HERKES ›«›N ORAN A«IK:"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "M›SAF›R KULLANICIYA BA–LI GUN/IND ORANI:"

	)

181 
	#MSG_RATIOS_RULE
 "ödúmê%u Mb, g¸n˚Œemê%u Mb z‹u∆u."

	)

182 
	#MSG_INFO_IDLE_M
 "%lu dakikad™ s⁄ø h¨ekë olmazß baœ¡˝ k≠™˝r."

	)

183 
	#MSG_INFO_IDLE_S
 "%lu s™iyedí s⁄ø h¨ekë olmazß baœ¡˝ k≠™˝r."

	)

184 
	#MSG_CANT_READ_FILE
 "‹zg¸n¸z, [%s] oku«mad˝"

	)

185 
	#MSG_LS_TRUNCATED
 "«˝kt˝ k˝ß…mas˝ %u uygun"

	)

186 
	#MSG_LS_SUCCESS
 "Uygu¿t›œm˝ %u"

	)

187 
	#MSG_LOGOUT
 "«˝k˝˛."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "[%s] kuŒ™˝c˝s˝ iÁö gúi˛ h©Æ˝"

	)

189 
	#MSG_ILLEGAL_UMASK
 "GeÁîsiz umask"

	)

190 
	#MSG_STANDALONE_FAILED
 "SèndÆ⁄êsunucu ba˛œt˝œmad˝"

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "Bu ˆzñ si°em - Mißfú gúi˛òﬁamaz"

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "ﬁi‰êbo˛"

	)

193 
	#MSG_MAX_USERS_IP
 "Bu (%luËIP dí Áok fazœ baœ¡˝"

	)

194 
	#MSG_ACTIVE_DISABLED
 "Akti‡mod k≠Æ˝"

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "Dosy®ba˛¨˝ iÀÅøns„∏edûdi"

	)

196 
	#MSG_NO_DISK_SPACE
 "Disk dﬁu -Ü¸t„¿dah®s⁄ø g¸n˚Œeyöiz"

	)

197 
	#MSG_OUT_OF_MEMORY
 "Haf˝z®Ta˛mas˝"

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "GeÁîsiz IPádªsi"

	)

199 
	#MSG_NO_ASCII_RESUME
 "ASCII yíûímesòg¸vísiz,Ü¸t„¿dah®ˆn˚ dosyay˝ sûöiz"

	)

200 
	#MSG_UNKNOWN_ALTLOG
 "BûömeyíÜog biÁimi"

	)

201 
	#MSG_ACCOUNT_DISABLED
 "[%s] gúi˛öêizö yok: heß∞k≠Æ˝"

	)

202 
	#MSG_SQL_WRONG_PARMS
 "Y™l˝˛ SQLÖ¨amëªsi"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "Y™l˝˛ SQL k⁄fig¸øsy⁄ dosyas˝"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "SQL k⁄fig¸øsy⁄ dosyas˝ iÁödêsunucuÉksik"

	)

205 
	#MSG_SQL_DOWN
 "SQL sunucusu k≠Æ˝ gˆr¸n¸y‹"

	)

206 
	#MSG_ILLEGAL_QUOTA
 "GeÁîsiz kŸa"

	)

207 
	#MSG_QUOTA_FILES
 "%Œu dosy®kuŒ™˝m (%d%%Ë- yëki: %Œu dosya"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu Kbyã†kuŒ™˝m (%d%%Ë- yëki: %Œu Kb"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "KŸ®a˛˝m˝: [%s] kaydedûemedi"

	)

210 
	#MSG_AUTH_UNKNOWN
 "Bûömeyí yëkûídúmêmëodu"

	)

211 
	#MSG_PDB_BROKEN
 "puªdb dosyas˝nd™ indexÀnmêoku«mad˝ (vey®eskòbiÁimálg˝œnd˝Ë-Öuª-pw mkdb yòdíeyöiz"

	)

212 
	#MSG_ALIASES_ALIAS
 "%†èkm®ad˝ %†."

	)

213 
	#MSG_ALIASES_UNKNOWN
 "BûömeyíÅakmØd %s."

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "Haßæ˝Åakm®ad dosyas˝"

	)

215 
	#MSG_ALIASES_LIST
 "BñútûíÅakm®ad kuŒ™˝œbûú :"

	)

216 
	#MSG_PERUSER_MAX
 "%lu díáyn˝ kuŒ™˝c˝ kabu»edemiy‹uz"

	)

217 
	#MSG_IPV6_OK
 "IPv6 baœ¡˝s˝ kabu»edûdi, Ho˛gñdöiz."

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: E«bÀd %†wôh %s, %d se¸ë bô†cùhî"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: CùhîÅoÿwók"

	)

220 
	#MSG_TLS_NEEDED
 "Sorry, cleartext sessionsáreÇotáccepted onÅhis server.\n" \

221 "PÀa£Ñec⁄√˘ usög SSL/TLS securôy mech™isms."

	)

222 
	#MSG_ILLEGAL_CHARSET
 "IŒegÆ ch¨£t"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: C⁄ãxànŸ found. Exôög."

	)

224 
	#MSG_PROT_OK
 "D©®¥Ÿe˘i⁄Üevñ sëÅÿ\"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "D©®c⁄√˘i⁄ c™nŸ bê›íed wôhÅhi†PROT sëtög."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "PrŸe˘i⁄Üevñ %†nŸ undî°ood. FÆlbackÅÿ\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT mu° bê¥e˚ded byá suc˚ssfu»PBSZ comm™d"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÑëu∫edÇÿu£rPassw‹dáâribuã, check LDAPác˚s†rights."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "InvÆid LDAPAuthMëhod i¿thêc⁄figuøti⁄ fûe. Should bê'böd' o∏'∑ssw‹d'."

	)

	@src/messages_zh_cn.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: InvÆid TLSCùhîSuôê•ecifõd '%s'"

	)

2 
	#MSG_TIMEOUT
 "≥¨ ±"

	)

3 
	#MSG_CAPABILITIES
 "Œﬁ∑®«–ªª–‘ƒ‹"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "”√ªß∂Àπÿ±’¡¨Ω”"

	)

5 
	#MSG_CLIENT_READ_ERR
 "¥””√ªß∂À∂¡»°∑¢…˙¥ÌŒÛ"

	)

6 
	#MSG_CANT_OPEN_CNX
 "Œﬁ∑®ø™∆Ù¡¨Ω”"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "Œﬁ∑®Ω®¡¢ ˝æ›Ω”ø⁄"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "”√ªß∂Àµÿ÷∑ «"

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "”Ô∑®¥ÌŒÛ”⁄IPµÿ÷∑"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "PORT√¸¡ÓOK"

	)

11 
	#MSG_ONLY_IPV4V6
 "Ωˆ÷ß≥÷IPv4”ÎIPv6 (1,2)"

	)

12 
	#MSG_ONLY_IPV4
 "Ωˆ÷ß≥÷IPv4 (1)"

	)

13 
	#MSG_TIMEOUT_PARSER
 "≥¨ ± - œ¬ªÿ ‘ ‘«√º¸ ±ÀŸ∂»øÏ“ªµ„"

	)

14 
	#MSG_LINE_TOO_LONG
 "√¸¡Ó––π˝≥§"

	)

15 
	#MSG_LOG_OVERFLOW
 "”√ªß≥¢ ‘“™“Á¬˙√¸¡Ó––ª∫≥Â«¯"

	)

16 
	#MSG_GOODBYE
 "‘Ÿº˚°£ƒ˙…œ¥´%Œu≤¢œ¬‘ÿ%Œu kbyãs."

	)

17 
	#MSG_DEBUG_COMMAND
 "√¸¡Ó"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 " «ƒ˙ƒø«∞µƒŒª÷√"

	)

19 
	#MSG_NOT_LOGGED_IN
 "ƒ˙≤¢Œ¥µ«¬º"

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "∞≤»´¿©≥‰œÓŒ¥ µ ©"

	)

21 
	#MSG_NO_FILE_NAME
 "ŒﬁŒƒº˛√˚≥∆"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "Œﬁƒø¬º√˚≥∆"

	)

23 
	#MSG_NO_RESTART_POINT
 "Œﬁ÷ÿ–¬ø™ ºµ„"

	)

24 
	#MSG_ABOR_SUCCESS
 "ABOR OK"

	)

25 
	#MSG_MISSING_ARG
 "»±…Ÿ≤Œ ˝"

	)

26 
	#MSG_GARBAGE_FOUND
 "≤Œ ˝÷µ∫Û”–Œﬁ”√µƒ◊÷¥Æ"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "≤Œ ˝÷µπ˝¥Û"

	)

28 
	#MSG_IDLE_TIME
 "∑¢¥Ù ±º‰…ËŒ™ %lu √Î"

	)

29 
	#MSG_SITE_HELP
 "œ¬¡–µƒSITE√¸¡Ó±ª»œø…"

	)

30 
	#MSG_BAD_CHMOD
 "Œﬁ–ßµƒ»®œﬁ"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 " «Œ¥÷™µƒ¿©≥‰œÓ"

	)

32 
	#MSG_XDBG_OK
 "XDBG√¸¡ÓOK£¨µ˜ ‘º∂±œ÷‘⁄ « %d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "Œ¥÷™µƒ√¸¡Ó"

	)

34 
	#MSG_TIMEOUT_NOOP
 "≥¨ ± (“— %lu √ÎŒﬁ≤Ÿ◊˜)"

	)

35 
	#MSG_TIMEOUT_DATA
 "≥¨ ± (“— %lu √ÎŒﬁ–¬ ˝æ›)"

	)

36 
	#MSG_SLEEPING
 "Zzz..."

	)

37 
	#MSG_ALREADY_LOGGED
 "ƒ˙“—æ≠µ«¬º"

	)

38 
	#MSG_ANY_PASSWORD
 "»Œ∫Œ√‹¬Î∂ºø…”√"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "ƒ‰√˚ π”√’ﬂµ«¬º"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "ƒ‰√˚ π”√’ﬂµ«¬ºµΩ–Èƒ‚FTP"

	)

41 
	#MSG_USER_OK
 " π”√’ﬂ %†OK. –Ë“™√‹¬Î."

	)

42 
	#MSG_CANT_DO_TWICE
 "‘⁄ƒø«∞¡¨Ω”∆⁄º‰≤ªƒ‹’‚—˘◊ˆ"

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "Œﬁ∑®Ω®¡¢∞≤»´ƒ‰√˚FTP"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "ƒ˙µƒ¥¯øÌ π”√ ‹œﬁ÷∆"

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 "»Œ∫Œ√‹¬Î∂ºø…”√"

	)

46 
	#MSG_NOTRUST
 "±ß«∏£¨Œ“Œﬁ∑®–≈»Œƒ˙"

	)

47 
	#MSG_WHOAREYOU
 "«Î∏ÊÀﬂŒ“ƒ„ «À≠"

	)

48 
	#MSG_AUTH_FAILED
 "—È÷§ ß∞‹£¨±ß«∏"

	)

49 
	#MSG_AUTH_TOOMANY
 "—È÷§ ß∞‹Ã´∂‡¥Œ"

	)

50 
	#MSG_NO_HOMEDIR
 "√ª”–º“ƒø¬º - »°œ˚"

	)

51 
	#MSG_NO_HOMEDIR2
 "%†≤ª¥Ê‘⁄ªÚŒﬁ∑®µΩ¥Ô"

	)

52 
	#MSG_START_SLASH
 "ø™ º”⁄ /"

	)

53 
	#MSG_USER_GROUP_ACCESS
 " π”√’ﬂ %†”–“‘œ¬◊Èµƒ»®œﬁ£∫"

	)

54 
	#MSG_FXP_SUPPORT
 "’‚∏ˆ∑˛ŒÒ∆˜÷ß≥÷FXP¥´ ‰"

	)

55 
	#MSG_RATIO
 "ƒ˙±ÿ–Î◊Ò ÿ %u:%u (UL/DLË±»¬ "

	)

56 
	#MSG_CHROOT_FAILED
 "Œﬁ∑®…Ë∂®∞≤»´µƒchroŸ(Ëjaû"

	)

57 
	#MSG_CURRENT_DIR_IS
 "OK. ƒø«∞µƒƒø¬º « %s"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "OK. ƒø«∞œﬁ÷∆µƒƒø¬º « %s"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†œ÷‘⁄µ«¬º"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "Œﬁ∑®±‰∏¸ƒø¬ºµΩ %s"

	)

61 
	#MSG_PATH_TOO_LONG
 "¬∑æ∂Ã´≥§"

	)

62 
	#MSG_CANT_PASV
 "ƒ˙≤ªƒ‹‘⁄IPv6¡¨Ω” π”√PASV°£«Î∏ƒ”√EPSV°£"

	)

63 
	#MSG_CANT_PASSIVE
 "Œﬁ∑®ø™∆Ù±ª∂Ø Ω¡¨Ω”"

	)

64 
	#MSG_PORTS_BUSY
 "À˘”–±£¡ÙµƒTCPÖ‹ts∂º’˝√¶¬µ÷–"

	)

65 
	#MSG_GETSOCKNAME_DATA
 "Œﬁ∑® ∂±±æª˙ ˝æ›Ω”ø⁄"

	)

66 
	#MSG_GETPEERNAME
 "Œﬁ∑® ∂±±æª˙Ω”ø⁄"

	)

67 
	#MSG_INVALID_IP
 "±ß«∏£¨∏¯µƒ «Œﬁ–ßµƒµÿ÷∑"

	)

68 
	#MSG_NO_EPSV
 "«Î π”√∑˚∫œIPv6≤¢÷ß≥÷EPSVµƒ”√ªß∂À"

	)

69 
	#MSG_BAD_PORT
 "±ß«∏£¨Œﬁ∑®¡¨Ω”µΩÖ‹t†< 1024"

	)

70 
	#MSG_NO_FXP
 "Œ“≤ªƒ‹ø™∆Ù¡¨Ω”µΩ %†(Ωˆ %s)"

	)

71 
	#MSG_FXP
 "FXP¥´ ‰: ¥” %†µΩ %s"

	)

72 
	#MSG_NO_DATA_CONN
 "Œﬁ ˝æ›¡¨Ω”"

	)

73 
	#MSG_ACCEPT_FAILED
 "¡¨Ω”Œﬁ∑®±ªΩ” ‹"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "Ω” ‹ ˝æ›¡¨Ω”"

	)

75 
	#MSG_CNX_PORT_FAILED
 "Œﬁ∑®ø™∆Ù ˝æ›¡¨Ω”µΩp‹à%d"

	)

76 
	#MSG_CNX_PORT
 "¡¨Ω”µΩp‹à%d"

	)

77 
	#MSG_ANON_CANT_MKD
 "±ß«∏£¨≤ª◊ºƒ‰√˚ π”√’ﬂΩ®¡¢ƒø¬º"

	)

78 
	#MSG_ANON_CANT_RMD
 "±ß«∏£¨≤ª◊ºƒ‰√˚ π”√’ﬂ…æ≥˝ƒø¬º"

	)

79 
	#MSG_ANON_CANT_RENAME
 "≤ª◊ºƒ‰√˚ π”√’ﬂ“∆∂Ø/∏¸√˚Œƒº˛"

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "ƒ‰√˚ π”√’ﬂ≤ªƒ‹±‰∏¸»®œﬁ"

	)

81 
	#MSG_GLOB_NO_MEMORY
 "–Œ≥… %† ±£¨ƒ⁄¥Ê≤ª◊„"

	)

82 
	#MSG_PROBABLY_DENIED
 "(’‚ø…ƒ‹“‚Œ∂ \"æ‹æ¯∑√Œ \")"

	)

83 
	#MSG_GLOB_READ_ERROR
 "–Œ≥… %† ±∑¢…˙∂¡»°¥ÌŒÛ"

	)

84 
	#MSG_GLOB_NO_MATCH
 "√ª”–∑˚∫œµƒ %†£¨”⁄ %†÷–"

	)

85 
	#MSG_CHMOD_FAILED
 "≤ªƒ‹±‰∏¸ %†»®œﬁ"

	)

86 
	#MSG_CHMOD_SUCCESS
 " %†»®œﬁ“—±‰∏¸"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "±ß«∏£¨Œ“Œﬁ∑®±‰∏¸»Œ∫Œ»®œﬁ"

	)

88 
	#MSG_ANON_CANT_DELETE
 "ƒ‰√˚ π”√’ﬂ≤ªƒ‹…æ≥˝Œƒº˛"

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "ƒ‰√˚ π”√’ﬂ≤ªƒ‹∏≤–¥œ÷¥ÊµƒŒƒº˛"

	)

90 
	#MSG_DELE_FAILED
 "Œﬁ∑®…æ≥˝ %s"

	)

91 
	#MSG_DELE_SUCCESS
 "…æ≥˝ %s%s%s%s"

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "√ª”–…æ≥˝Œƒº˛"

	)

93 
	#MSG_LOAD_TOO_HIGH
 "µ±ƒ˙¡¨Ω” ±∏∫‘ÿ « %3.2‡°£∏∫‘ÿ»Á¥À∏ﬂ ±£¨Œ“√«≤ª◊ºƒ‰√˚ π”√’ﬂœ¬‘ÿ°£\n…œ¥´‘Ú∂º «ø…“‘µƒ"

	)

97 
	#MSG_OPEN_FAILURE
 "Œﬁ∑®ø™∆Ù %s"

	)

98 
	#MSG_OPEN_FAILURE2
 "Œﬁ∑®ø™∆Ùƒ«∏ˆŒƒº˛"

	)

99 
	#MSG_STAT_FAILURE
 "Œﬁ∑®’“µΩŒƒº˛¥Û–°"

	)

100 
	#MSG_STAT_FAILURE2
 "Œﬁ∑®ºÏ≤ÈŒƒº˛ «∑Ò¥Ê‘⁄"

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "’Î∂‘Œƒº˛¥Û–° %Œd ±£¨÷ÿ–¬ø™ ºoff£à%Œd ª·π˝¥Û°£"

	)

102 
	#MSG_REST_RESET
 "off£t÷ÿ…ËŒ™ 0 ÷ÿ–¬ø™ º"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "Œ“÷ªƒ‹œ¬‘ÿ“ª∞„Œƒº˛"

	)

104 
	#MSG_NOT_MODERATED
 "¥ÀŒƒº˛”…ƒ‰√˚ π”√’ﬂ…œ¥´°£\nªπ√ª”–±ª’æµ„π‹¿Ì‘±∫À◊ºπ©œ¬‘ÿ°£"

	)

107 
	#MSG_RATIO_DENIAL
 "±ß«∏£¨…œ¥´/œ¬‘ÿ¬  « %u:%u °£\nƒ˙ƒø«∞…œ¥´ %Œu Kb œ¬‘ÿ %Œu Kb°£\n«Î…œ¥´“ª–©∫√∂´Œ˜»ª∫ÛÕÌµ„‘Ÿ≥¢ ‘œ¬‘ÿ°£"

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "“—√ª∂´Œ˜ø…œ¬‘ÿ"

	)

112 
	#MSG_WINNER
 "µÁƒ‘ «ƒ˙µƒ≈Û”—°£–≈»ŒµÁƒ‘"

	)

113 
	#MSG_KBYTES_LEFT
 "ªπ £œ¬ %.1‡kbyãs“™œ¬‘ÿ"

	)

114 
	#MSG_ABORTED
 "¥´ ‰÷–÷π"

	)

115 
	#MSG_DATA_WRITE_FAILED
 " ˝æ›¡¨Ω”–¥»Î ±∑¢…˙¥ÌŒÛ"

	)

116 
	#MSG_DATA_READ_FAILED
 " ˝æ›¡¨Ω”∂¡»° ±∑¢…˙¥ÌŒÛ"

	)

117 
	#MSG_MMAP_FAILED
 "Œﬁ∑®Ω´Œƒº˛m≠Ω¯ƒ⁄¥Ê"

	)

118 
	#MSG_WRITE_FAILED
 "–¥»ÎŒƒº˛ ±∑¢…˙¥ÌŒÛ"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡√Î (µΩƒø«∞),√ø√Î %.2‡Mbyãs"

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡√Î (µΩƒø«∞),√ø√Î %.2‡Kbyãs"

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡√Î (µΩƒø«∞),√ø√Î %.2‡byãs"

	)

122 
	#MSG_SPACE_FREE_M
 "%.1‡Mbyã† £”‡”≤≈Ãø’º‰"

	)

123 
	#MSG_SPACE_FREE_K
 "%‡Kbyã† £”‡”≤≈Ãø’º‰"

	)

124 
	#MSG_DOWNLOADED
 "“—œ¬‘ÿ"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "REST–Ë“™ ˝◊÷≤Œ ˝"

	)

126 
	#MSG_REST_ASCII_STRICT
 "‘⁄ASCIIƒ£ Ωªÿ”¶±Íº«±ÿ–Î « 0"

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "÷ÿ–¬ø™ º”⁄ %Œd°£µ´ «Œ“√«‘⁄ASCIIƒ£ Ω"

	)

128 
	#MSG_REST_SUCCESS
 "÷ÿ–¬ø™ º”⁄ %Œd"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "Ω˚”√µƒƒø¬º√˚≥∆"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "Ω˚”√µƒŒƒº˛√˚: %s"

	)

131 
	#MSG_MKD_FAILURE
 "Œﬁ∑®Ω®¡¢ƒø¬º"

	)

132 
	#MSG_MKD_SUCCESS
 "Ω®¡¢ƒø¬ºOK"

	)

133 
	#MSG_RMD_FAILURE
 "Œﬁ∑®…æ≥˝ƒø¬º"

	)

134 
	#MSG_RMD_SUCCESS
 "…æ≥˝ƒø¬ºOK"

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "Œﬁ∑®»°µ√ ±º‰¥¡º«"

	)

136 
	#MSG_MODE_ERROR
 "÷ª÷ß≥÷ASCIIº∞bö¨yƒ£ Ω"

	)

137 
	#MSG_CREATE_FAILURE
 "Œﬁ∑®Ω®¡¢Œƒº˛"

	)

138 
	#MSG_ABRT_ONLY
 "µ±…œ¥´ ±ABRT «Œ®“ªƒ‹”√µƒ√¸¡Ó"

	)

139 
	#MSG_UPLOAD_PARTIAL
 "≤ø∑›…œ¥´"

	)

140 
	#MSG_REMOVED
 "…æ≥˝¡À"

	)

141 
	#MSG_UPLOADED
 "…œ¥´¡À"

	)

142 
	#MSG_GMTIME_FAILURE
 "Œﬁ∑®»°µ√µ±µÿ ±º‰"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "÷ª÷ß≥÷8-bô byãs£¨œ÷‘⁄≤ª±» ÆƒÍ«∞¡À"

	)

144 
	#MSG_TYPE_UNKNOWN
 "Œ¥÷™µƒTYPE"

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPEƒø«∞ «"

	)

146 
	#MSG_STRU_FAILURE
 "÷ª÷ß≥÷F(ûe)"

	)

147 
	#MSG_MODE_FAILURE
 "«Î π”√S—ªam)ƒ£ Ω"

	)

148 
	#MSG_RENAME_ABORT
 "÷–÷π÷Æ«∞µƒ∏¸√˚≤Ÿ◊˜"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "RNFRΩ” ‹ - Œƒº˛¥Ê‘⁄£¨◊º±∏µΩƒøµƒµÿ"

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "±ß«∏£¨Œƒº˛≤ª¥Ê‘⁄"

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "RENAME ß∞‹ - ƒøµƒŒƒº˛“—æ≠¥Ê‘⁄"

	)

152 
	#MSG_RENAME_NORNFR
 "RNTO«∞–Ë“™RNFR"

	)

153 
	#MSG_RENAME_FAILURE
 "∏¸√˚/“∆∂Ø ß∞‹"

	)

154 
	#MSG_RENAME_SUCCESS
 "Œƒº˛∏¸√˚/“∆∂ØOK"

	)

155 
	#MSG_NO_SUPERSERVER
 "«Î‘⁄su≥r-£rvî (likêt˝£rvî)÷–÷¥––puª-·pd"

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "Œﬁ∑®’“µΩ'·p'’ ∫≈"

	)

157 
	#MSG_CONF_ERR
 "≈‰÷√¥ÌŒÛ"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "»±…Ÿ–Èƒ‚ π”√’ﬂŒƒº˛√˚"

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "≤ª∫œ∑®µƒΩ⁄¡˜÷µ"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "≤ª∫œ∑®µƒchroŸ–≈»Œgid"

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "≤ª∫œ∑®µƒ π”√’ﬂœﬁ÷∆"

	)

162 
	#MSG_ILLEGAL_FACILITY
 "Œ¥÷™µƒº«¬º…Ë ©√˚≥∆"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "Œﬁ–ßµƒLDAP≈‰÷√Œƒº˛"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "≤ª∫œ∑®µƒ∏∫‘ÿœﬁ÷∆"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "≤ª∫œ∑®µƒ∂Àø⁄∑∂Œß"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "≤ª∫œ∑®µƒ'ls'œﬁ÷∆"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "±ª∂Ø Ω¡¨Ω” ±£¨≤ª∫œ∑®µƒ«ø÷∆IP"

	)

168 
	#MSG_ILLEGAL_RATIO
 "≤ª∫œ∑®µƒ…œ¥´/œ¬‘ÿ¬ "

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "≤ª∫œ∑®µƒuidœﬁ÷∆"

	)

170 
	#MSG_ILLEGAL_OPTION
 "Œ¥÷™µƒrun-time—°œÓ"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "LDAP≈‰÷√Œƒº˛÷–»±…ŸLDAPBa£DN"

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "¥ÌŒÛµƒLDAP≤Œ ˝"

	)

173 
	#MSG_NEW_CONNECTION
 "◊‘ %†µƒ–¬¡¨Ω”"

	)

174 
	#MSG_WELCOME_TO
 "ª∂”≠¿¥µΩ"

	)

175 
	#MSG_MAX_USERS
 "%lu  π”√’ﬂ(◊Ó¥Û÷µ)“—æ≠µ«¬º£¨±ß«∏"

	)

176 
	#MSG_NB_USERS
 "ƒ˙ «µ⁄ %u ∏ˆ π”√’ﬂ£¨◊Ó∂‡ø…¥Ô %u ∏ˆ¡¨Ω”"

	)

177 
	#MSG_WELCOME_TIME
 "œ÷‘⁄±æµÿ ±º‰ « %02d:%02d°£∑˛ŒÒ∆˜∂Àø⁄£∫ %u°£"

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "’‚¿Ô÷ª”√ƒ‰√˚FTP"

	)

179 
	#MSG_RATIOS_EVERYONE
 "’Î∂‘EVERYONE∆Ù”√±»¬ :"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "ƒ‰√˚ π”√’ﬂπÊ∂®”√UL/DL¬ :"

	)

181 
	#MSG_RATIOS_RULE
 "“™œ¬‘ÿ %u Mb, œ»“ÂŒÒ…œ¥´ %u Mb µƒ∫√∂´Œ˜°£"

	)

182 
	#MSG_INFO_IDLE_M
 "‘⁄ %lu ∑÷÷”ƒ⁄√ª”–ªÓ∂Ø£¨ƒ˙±ªª·∂œœﬂ°£"

	)

183 
	#MSG_INFO_IDLE_S
 "‘⁄ %lu √Îƒ⁄√ª”–ªÓ∂Ø£¨ƒ˙±ªª·∂œœﬂ°£"

	)

184 
	#MSG_CANT_READ_FILE
 "±ß«∏£¨Œ“√«Œﬁ∑®∂¡»°[%s]"

	)

185 
	#MSG_LS_TRUNCATED
 " ‰≥ˆΩÿ∂ÃµΩ %u ∑˚∫œ"

	)

186 
	#MSG_LS_SUCCESS
 "◊‹π≤ %u ∑˚∫œ"

	)

187 
	#MSG_LOGOUT
 "µ«≥ˆ."

	)

188 
	#MSG_AUTH_FAILED_LOG
 " π”√’ﬂ[%s]—È÷§ ß∞‹"

	)

189 
	#MSG_ILLEGAL_UMASK
 "Œﬁ–ßµƒumask"

	)

190 
	#MSG_STANDALONE_FAILED
 "Œﬁ∑®∆Ù∂Ø°™dÆ⁄ê£rvî"

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "’‚ «ÀΩ»ÀœµÕ≥ - ≤ªø™∑≈ƒ‰√˚µ«¬º"

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "»Œ∫Œ√‹¬Î∂ºø…”√"

	)

193 
	#MSG_MAX_USERS_IP
 "Ã´∂‡¡¨Ω” (%luË¿¥◊‘’‚∏ˆ IP"

	)

194 
	#MSG_ACTIVE_DISABLED
 "÷˜∂Øƒ£ Ωπÿ±’"

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "Œƒº˛¥´ÀÕOK"

	)

196 
	#MSG_NO_DISK_SPACE
 "”≤≈Ã±¨¬˙ - «Î…‘∫Û‘Ÿ…œ¥´"

	)

197 
	#MSG_OUT_OF_MEMORY
 "ƒ⁄¥Ê≤ª◊„"

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "≤ª∫œ∑®µƒ–≈»ŒIPµÿ÷∑"

	)

199 
	#MSG_NO_ASCII_RESUME
 "ASCII÷ÿ¥´≤¢≤ª∞≤»´£¨«Îœ»…æ≥˝Œƒº˛"

	)

200 
	#MSG_UNKNOWN_ALTLOG
 "Œ¥÷™µƒº«¬º∏Ò Ω"

	)

201 
	#MSG_ACCOUNT_DISABLED
 "Œﬁ∑®µ«¬ºŒ™[%s]: ’ ∫≈πÿ±’"

	)

202 
	#MSG_SQL_WRONG_PARMS
 "¥ÌŒÛµƒSQL≤Œ ˝"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "Œﬁ–ßµƒSQL≈‰÷√Œƒº˛"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "SQL≈‰÷√Œƒº˛÷–»±…Ÿ∑˛ŒÒ∆˜…Ë∂®"

	)

205 
	#MSG_SQL_DOWN
 "SQL sîvî∫√œÒµ±µÙ¡À"

	)

206 
	#MSG_ILLEGAL_QUOTA
 "Œﬁ–ßµƒ∂Ó∂»"

	)

207 
	#MSG_QUOTA_FILES
 "%Œu Œƒº˛ ˝ π”√ (%d%%Ë-  ⁄»®ø…”√: %Œu ∏ˆµµ∞∏"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu Kbyãs π”√ (%d%%Ë-  ⁄»®ø…”√: %Œu Kb"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "≥¨π˝∂Ó∂»: [%s] ≤ªª·±ª¥¢¥Ê"

	)

210 
	#MSG_AUTH_UNKNOWN
 "Œ¥÷™µƒ—È÷§∑Ω∑®"

	)

211 
	#MSG_PDB_BROKEN
 "Œﬁ∑®∂¡»°ödexedÖuªdbŒƒº˛(ªÚºÏ≤‚µΩæ…∏Ò ΩË-  ‘ ‘Öuª-pw mkdb"

	)

212 
	#MSG_ALIASES_ALIAS
 "%† «±√˚£¨∏¯ %†µƒ"

	)

213 
	#MSG_ALIASES_UNKNOWN
 "Œ¥÷™µƒ±√˚ %s°£"

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "Àªµµƒ±√˚Œƒº˛"

	)

215 
	#MSG_ALIASES_LIST
 "“‘œ¬µƒ±√˚ø…”√£∫"

	)

216 
	#MSG_PERUSER_MAX
 "Œﬁ∑®Ω” ‹¿¥◊‘Õ¨“ª π”√’ﬂ≥¨π˝ %lu µƒ¡¨Ω” ˝"

	)

217 
	#MSG_IPV6_OK
 "’‚≤ø÷˜ª˙“≤ª∂”≠IPv6µƒ¡¨Ω”"

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: ∆Ù”√ %†wôh %s, %d Œª‘™º”√‹"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: √‹¬Î≤ª◊„"

	)

220 
	#MSG_TLS_NEEDED
 "±ß«∏£¨¥À∑˛ŒÒ∆˜≤ªΩ” ‹√˜Œƒ Ω¡¨Ω”°£\n" \

221 "«Î π”√SSL/TLSµƒ∞≤»´ª˙÷∆÷ÿ–¬¡¨Ω”°£"

	)

222 
	#MSG_ILLEGAL_CHARSET
 "IŒegÆ ch¨£t"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: C⁄ãxànŸ found. Exôög."

	)

224 
	#MSG_PROT_OK
 "D©®¥Ÿe˘i⁄Üevñ sëÅÿ\"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "D©®c⁄√˘i⁄ c™nŸ bê›íed wôhÅhi†PROT sëtög."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "PrŸe˘i⁄Üevñ %†nŸ undî°ood. FÆlbackÅÿ\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT mu° bê¥e˚ded byá suc˚ssfu»PBSZ comm™d"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÑëu∫edÇÿu£rPassw‹dáâribuã, check LDAPác˚s†rights."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "InvÆid LDAPAuthMëhod i¿thêc⁄figuøti⁄ fûe. Should bê'böd' o∏'∑ssw‹d'."

	)

	@src/messages_zh_tw.h

1 
	#MSG_TLS_CIPHER_FAILED
 "SSL/TLS: InvÆid TLSCùhîSuôê•ecifõd '%s'"

	)

2 
	#MSG_TIMEOUT
 "πOÆ…"

	)

3 
	#MSG_CAPABILITIES
 "µL™k§¡¥´© Ø‡"

	)

4 
	#MSG_CLIENT_CLOSED_CNX
 "•Œ§·∫›√ˆ≥¨≥sΩu"

	)

5 
	#MSG_CLIENT_READ_ERR
 "±q•Œ§·∫›≈™®˙µo•Õø˘ª~"

	)

6 
	#MSG_CANT_OPEN_CNX
 "µL™k∂}±“≥sΩu"

	)

7 
	#MSG_CANT_CREATE_DATA_SOCKET
 "µL™k´ÿ•ﬂ∏ÍÆ∆±µ§f"

	)

8 
	#MSG_DEBUG_CLIENT_IS
 "•Œ§·∫›¶Ïß}¨O"

	)

9 
	#MSG_SYNTAX_ERROR_IP
 "ªy™kø˘ª~©ÛIP¶Ïß}"

	)

10 
	#MSG_PORT_SUCCESSFUL
 "PORT©R•OOK"

	)

11 
	#MSG_ONLY_IPV4V6
 "∂»§‰¥©IPv4ªPIPv6 (1,2)"

	)

12 
	#MSG_ONLY_IPV4
 "∂»§‰¥©IPv4 (1)"

	)

13 
	#MSG_TIMEOUT_PARSER
 "πOÆ… - §U¶^∏’∏’∫V¡‰Æ…≥t´◊ß÷§@¬I"

	)

14 
	#MSG_LINE_TOO_LONG
 "©R•O¶ÊπL™¯"

	)

15 
	#MSG_LOG_OVERFLOW
 "•Œ§·π¡∏’≠n∑∏∫°©R•O¶ÊΩwΩƒ∞œ"

	)

16 
	#MSG_GOODBYE
 "¶A®£°C±z§W∂«%Œu®√§U∏¸%Œu kbyãs."

	)

17 
	#MSG_DEBUG_COMMAND
 "©R•O"

	)

18 
	#MSG_IS_YOUR_CURRENT_LOCATION
 "¨O±z•ÿ´e™∫¶Ï∏m"

	)

19 
	#MSG_NOT_LOGGED_IN
 "±z®√•ºµn§J"

	)

20 
	#MSG_AUTH_UNIMPLEMENTED
 "¶w•˛¬X•R∂µ•ºπÍ¨I"

	)

21 
	#MSG_NO_FILE_NAME
 "µL¿…Æ◊¶W∫Ÿ"

	)

22 
	#MSG_NO_DIRECTORY_NAME
 "µL•ÿø˝¶W∫Ÿ"

	)

23 
	#MSG_NO_RESTART_POINT
 "µL≠´∑s∂}©l¬I"

	)

24 
	#MSG_ABOR_SUCCESS
 "ABOR OK"

	)

25 
	#MSG_MISSING_ARG
 "øÚ•¢∞—º∆"

	)

26 
	#MSG_GARBAGE_FOUND
 "∞—º∆≠»´·¶≥µL•Œ™∫¶r¶Í"

	)

27 
	#MSG_VALUE_TOO_LARGE
 "∞—º∆≠»πL§j"

	)

28 
	#MSG_IDLE_TIME
 "∂¢∏mÆ…∂°≥]¨∞ %lu ¨Ì"

	)

29 
	#MSG_SITE_HELP
 "§U¶C™∫SITE©R•O≥Qª{•i"

	)

30 
	#MSG_BAD_CHMOD
 "µLÆƒ™∫≈v≠≠"

	)

31 
	#MSG_UNKNOWN_EXTENSION
 "¨O§£©˙™∫¬X•R∂µ"

	)

32 
	#MSG_XDBG_OK
 "XDBG©R•OOK°A∞£ø˘µ{´◊≤{¶b¨O %d"

	)

33 
	#MSG_UNKNOWN_COMMAND
 "§£©˙™∫©R•O"

	)

34 
	#MSG_TIMEOUT_NOOP
 "πOÆ… (§w %lu ¨ÌµLæﬁß@)"

	)

35 
	#MSG_TIMEOUT_DATA
 "πOÆ… (§w %lu ¨ÌµL∑s∏ÍÆ∆)"

	)

36 
	#MSG_SLEEPING
 "Zzz..."

	)

37 
	#MSG_ALREADY_LOGGED
 "±z§w∏gµn§J"

	)

38 
	#MSG_ANY_PASSWORD
 "•Ù¶Û±KΩX≥£•i•Œ"

	)

39 
	#MSG_ANONYMOUS_LOGGED
 "∞Œ¶W®œ•Œ™Ãµn§J"

	)

40 
	#MSG_ANONYMOUS_LOGGED_VIRTUAL
 "∞Œ¶W®œ•Œ™Ãµn§J®ÏµÍ¿¿FTP"

	)

41 
	#MSG_USER_OK
 "®œ•Œ™Ã %†OK. ª›≠n±KΩX."

	)

42 
	#MSG_CANT_DO_TWICE
 "¶b•ÿ´e≥sΩu¥¡∂°§£Ø‡≥oºÀ∞µ"

	)

43 
	#MSG_UNABLE_SECURE_ANON
 "µL™k´ÿ•ﬂ¶w•˛∞Œ¶WFTP"

	)

44 
	#MSG_BANDWIDTH_RESTRICTED
 "±z™∫¿Wºe®œ•Œ®¸≠≠®Ó"

	)

45 
	#MSG_NO_PASSWORD_NEEDED
 "•Ù¶Û±KΩX≥£•i•Œ"

	)

46 
	#MSG_NOTRUST
 "©Í∫p°Aß⁄µL™k´H•Ù±z"

	)

47 
	#MSG_WHOAREYOU
 "Ω–ßi∂Dß⁄ßA¨OΩ÷"

	)

48 
	#MSG_AUTH_FAILED
 "≈Á√“•¢±—°A©Í∫p"

	)

49 
	#MSG_AUTH_TOOMANY
 "≈Á√“•¢±—§”¶h¶∏"

	)

50 
	#MSG_NO_HOMEDIR
 "®S¶≥Æa•ÿø˝ - ®˙Æ¯"

	)

51 
	#MSG_NO_HOMEDIR2
 "%†§£¶s¶b©ŒµL™k®ÏπF"

	)

52 
	#MSG_START_SLASH
 "∂}©l©Û /"

	)

53 
	#MSG_USER_GROUP_ACCESS
 "®œ•Œ™Ã %†¶≥∏s≤’¶s®˙©Û"

	)

54 
	#MSG_FXP_SUPPORT
 "≥o≠”¶¯™Aæπ§‰¥©FXP∂«øÈ"

	)

55 
	#MSG_RATIO
 "±z•≤∂∑øÌ¶u %u:%u (UL/DLË§Ò≤v"

	)

56 
	#MSG_CHROOT_FAILED
 "µL™k≥]©w¶w•˛™∫chroŸ(Ëjaû"

	)

57 
	#MSG_CURRENT_DIR_IS
 "OK. •ÿ´e™∫•ÿø˝¨O %s"

	)

58 
	#MSG_CURRENT_RESTRICTED_DIR_IS
 "OK. •ÿ´e≠≠®Ó™∫•ÿø˝¨O %s"

	)

59 
	#MSG_IS_NOW_LOGGED_IN
 "%†≤{¶bµn§J"

	)

60 
	#MSG_CANT_CHANGE_DIR
 "µL™k≈‹ßÛ•ÿø˝®Ï %s"

	)

61 
	#MSG_PATH_TOO_LONG
 "∏ÙÆ|§”™¯"

	)

62 
	#MSG_CANT_PASV
 "±z§£Ø‡¶bIPv6≥sΩu®œ•ŒPASV°CΩ–ßÔ•ŒEPSV°C"

	)

63 
	#MSG_CANT_PASSIVE
 "µL™k∂}±“≥Q∞ ¶°≥sΩu"

	)

64 
	#MSG_PORTS_BUSY
 "©“¶≥´OØd™∫TCPÖ‹ts≥£•ø¶£∏L§§"

	)

65 
	#MSG_GETSOCKNAME_DATA
 "µL™køÎ√—•ªæ˜∏ÍÆ∆±µ§f"

	)

66 
	#MSG_GETPEERNAME
 "µL™køÎ√—•ªæ˜±µ§f"

	)

67 
	#MSG_INVALID_IP
 "©Í∫p°Aµπ™∫¨OµLÆƒ™∫¶Ïß}"

	)

68 
	#MSG_NO_EPSV
 "Ω–®œ•Œ≤≈¶XIPv6®√§‰¥©EPSV™∫•Œ§·∫›"

	)

69 
	#MSG_BAD_PORT
 "©Í∫p°AµL™k≥sΩu®ÏÖ‹t†< 1024"

	)

70 
	#MSG_NO_FXP
 "ß⁄§£Ø‡∂}±“≥sΩu®Ï %†(∂» %s)"

	)

71 
	#MSG_FXP
 "FXP∂«øÈ: ±q %†®Ï %s"

	)

72 
	#MSG_NO_DATA_CONN
 "µL∏ÍÆ∆≥sΩu"

	)

73 
	#MSG_ACCEPT_FAILED
 "≥sΩuµL™k≥Q±µ®¸"

	)

74 
	#MSG_ACCEPT_SUCCESS
 "±µ®¸∏ÍÆ∆≥sΩu"

	)

75 
	#MSG_CNX_PORT_FAILED
 "µL™k∂}±“∏ÍÆ∆≥sΩu®Ïp‹à%d"

	)

76 
	#MSG_CNX_PORT
 "≥sΩu®Ïp‹à%d"

	)

77 
	#MSG_ANON_CANT_MKD
 "©Í∫p°A§£≠„∞Œ¶W®œ•Œ™Ã´ÿ•ﬂ•ÿø˝"

	)

78 
	#MSG_ANON_CANT_RMD
 "©Í∫p°A§£≠„∞Œ¶W®œ•Œ™Ã≤æ∞£•ÿø˝"

	)

79 
	#MSG_ANON_CANT_RENAME
 "§£≠„∞Œ¶W®œ•Œ™Ã∑h≤æ/ßÛ¶W¿…Æ◊"

	)

80 
	#MSG_ANON_CANT_CHANGE_PERMS
 "∞Œ¶W®œ•Œ™Ã§£Ø‡≈‹ßÛ≈v≠≠"

	)

81 
	#MSG_GLOB_NO_MEMORY
 "ßŒ¶® %†Æ…°A∞Oæ–≈È§£®¨"

	)

82 
	#MSG_PROBABLY_DENIED
 "(≥o•iØ‡∑N®˝ \"≈v≠≠≥Q©⁄\")"

	)

83 
	#MSG_GLOB_READ_ERROR
 "ßŒ¶® %†Æ…µo•Õ≈™®˙ø˘ª~"

	)

84 
	#MSG_GLOB_NO_MATCH
 "®S¶≥≤≈¶X™∫ %†°A©Û %†§§"

	)

85 
	#MSG_CHMOD_FAILED
 "§£Ø‡≈‹ßÛ %†≈v≠≠"

	)

86 
	#MSG_CHMOD_SUCCESS
 " %†≈v≠≠§w≈‹ßÛ"

	)

87 
	#MSG_CHMOD_TOTAL_FAILURE
 "©Í∫p°Aß⁄µL™k≈‹ßÛ•Ù¶Û≈v≠≠"

	)

88 
	#MSG_ANON_CANT_DELETE
 "∞Œ¶W®œ•Œ™Ã§£Ø‡ßR∞£¿…Æ◊"

	)

89 
	#MSG_ANON_CANT_OVERWRITE
 "∞Œ¶W®œ•Œ™Ã§£Ø‡¬–ºg≤{¶s™∫¿…Æ◊"

	)

90 
	#MSG_DELE_FAILED
 "µL™kßR∞£ %s"

	)

91 
	#MSG_DELE_SUCCESS
 "ßR∞£ %s%s%s%s"

	)

92 
	#MSG_DELE_TOTAL_FAILURE
 "®S¶≥ßR∞£¿…Æ◊"

	)

93 
	#MSG_LOAD_TOO_HIGH
 "∑Ì±z≥sΩuÆ…≠t∏¸¨O %3.2‡°C≠t∏¸¶p¶π∞™Æ…°Aß⁄≠Ã§£≠„∞Œ¶W®œ•Œ™Ã§U∏¸°C\n§W∂«´h≥£¨O•i•H™∫"

	)

97 
	#MSG_OPEN_FAILURE
 "µL™k∂}±“ %s"

	)

98 
	#MSG_OPEN_FAILURE2
 "µL™k∂}±“®∫≠”¿…Æ◊"

	)

99 
	#MSG_STAT_FAILURE
 "µL™kß‰®Ï¿…Æ◊§j§p"

	)

100 
	#MSG_STAT_FAILURE2
 "µL™k¿À¨d¿…Æ◊™∫¶s¶b© "

	)

101 
	#MSG_REST_TOO_LARGE_FOR_FILE
 "∞wπÔ¿…Æ◊§j§∞%ŒdÆ…°A≠´∑s∂}©loff£à%Œd ∑|πL§j°C"

	)

102 
	#MSG_REST_RESET
 "off£t≠´≥]¨∞ 0 ≠´∑s∂}©l"

	)

103 
	#MSG_NOT_REGULAR_FILE
 "ß⁄•uØ‡ßÏ®˙§@ØÎ¿…Æ◊"

	)

104 
	#MSG_NOT_MODERATED
 "¶π¿…•—∞Œ¶W®œ•Œ™Ã§W∂«°C\n¡Ÿ®S¶≥≥QØ∏•x∫ﬁ≤z≠˚Æ÷≠„®—§U∏¸°C"

	)

107 
	#MSG_RATIO_DENIAL
 "©Í∫p°A§W∂«/§U∏¸≤v¨O %u:%u °C\n±z•ÿ´e§W∂« %Œu Kb §U∏¸ %Œu Kb°C\nΩ–§W∂«§@®«¶n™F¶ËµM´·±ﬂ¬I¶Aπ¡∏’ßÏ®˙°C"

	)

111 
	#MSG_NO_MORE_TO_DOWNLOAD
 "§w®S™F¶Ë•i§U∏¸"

	)

112 
	#MSG_WINNER
 "πq∏£¨O±z™∫™B§Õ°C´H•Ùπq∏£"

	)

113 
	#MSG_KBYTES_LEFT
 "≥— %.1‡kbyãs≠n§U∏¸"

	)

114 
	#MSG_ABORTED
 "∂«øÈ§§§Ó"

	)

115 
	#MSG_DATA_WRITE_FAILED
 "∏ÍÆ∆≥sΩuºg§JÆ…µo•Õø˘ª~"

	)

116 
	#MSG_DATA_READ_FAILED
 "∏ÍÆ∆≥sΩu≈™®˙Æ…µo•Õø˘ª~"

	)

117 
	#MSG_MMAP_FAILED
 "µL™k±N¿…Æ◊m≠∂i∞Oæ–≈È"

	)

118 
	#MSG_WRITE_FAILED
 "ºg§J¿…Æ◊Æ…µo•Õø˘ª~"

	)

119 
	#MSG_TRANSFER_RATE_M
 "%.3‡¨Ì (®Ï•ÿ´e),®C¨Ì %.2‡Mbyãs"

	)

120 
	#MSG_TRANSFER_RATE_K
 "%.3‡¨Ì (®Ï•ÿ´e),®C¨Ì %.2‡Kbyãs"

	)

121 
	#MSG_TRANSFER_RATE_B
 "%.3‡¨Ì (®Ï•ÿ´e),®C¨Ì %.2‡byãs"

	)

122 
	#MSG_SPACE_FREE_M
 "%.1‡Mbyã†≥—ælµw∫–™≈∂°"

	)

123 
	#MSG_SPACE_FREE_K
 "%‡Kbyã†≥—ælµw∫–™≈∂°"

	)

124 
	#MSG_DOWNLOADED
 "§w§U∏¸"

	)

125 
	#MSG_REST_NOT_NUMERIC
 "RESTª›≠nº∆¶r∞—º∆"

	)

126 
	#MSG_REST_ASCII_STRICT
 "¶bASCIIº“¶°¶^¿≥º–∞O•≤∂∑¨O 0"

	)

127 
	#MSG_REST_ASCII_WORKAROUND
 "≠´∑s∂}©l©Û %Œd°C¶˝¨Oß⁄≠Ã¶bASCIIº“¶°"

	)

128 
	#MSG_REST_SUCCESS
 "≠´∑s∂}©l©Û %Œd"

	)

129 
	#MSG_SANITY_DIRECTORY_FAILURE
 "∏T•Œ™∫•ÿø˝¶W∫Ÿ"

	)

130 
	#MSG_SANITY_FILE_FAILURE
 "∏T•Œ™∫¿…¶W: %s"

	)

131 
	#MSG_MKD_FAILURE
 "µL™k´ÿ•ﬂ•ÿø˝"

	)

132 
	#MSG_MKD_SUCCESS
 "´ÿ•ﬂ•ÿø˝OK"

	)

133 
	#MSG_RMD_FAILURE
 "µL™k≤æ∞£•ÿø˝"

	)

134 
	#MSG_RMD_SUCCESS
 "≤æ∞£•ÿø˝OK"

	)

135 
	#MSG_TIMESTAMP_FAILURE
 "µL™k®˙±oÆ…∂°¬W∞O"

	)

136 
	#MSG_MODE_ERROR
 "•u§‰¥©ASCII§Œbö¨yº“¶°"

	)

137 
	#MSG_CREATE_FAILURE
 "µL™k´ÿ•ﬂ¿…Æ◊"

	)

138 
	#MSG_ABRT_ONLY
 "∑Ì§W∂«Æ…ABRT¨O∞ﬂ§@Ø‡•Œ™∫©R•O"

	)

139 
	#MSG_UPLOAD_PARTIAL
 "≥°•˜§W∂«"

	)

140 
	#MSG_REMOVED
 "≤æ∞£§F"

	)

141 
	#MSG_UPLOADED
 "§W∂«§F"

	)

142 
	#MSG_GMTIME_FAILURE
 "µL™k®˙±o∑Ì¶aÆ…∂°"

	)

143 
	#MSG_TYPE_8BIT_FAILURE
 "•u§‰¥©8-bô byãs°Aß⁄≠Ã§£¨O¶b§Q¶~´e™∫¶~•N"

	)

144 
	#MSG_TYPE_UNKNOWN
 "§£©˙™∫TYPE"

	)

145 
	#MSG_TYPE_SUCCESS
 "TYPE•ÿ´e¨O"

	)

146 
	#MSG_STRU_FAILURE
 "•u§‰¥©F(ûe)"

	)

147 
	#MSG_MODE_FAILURE
 "Ω–®œ•ŒS—ªam)º“¶°"

	)

148 
	#MSG_RENAME_ABORT
 "§§§Ó§ß´e™∫ßÛ¶Wæﬁß@"

	)

149 
	#MSG_RENAME_RNFR_SUCCESS
 "RNFR±µ®¸ - ¿…Æ◊¶s¶b°A∑«≥∆®Ï•ÿ™∫¶a"

	)

150 
	#MSG_FILE_DOESNT_EXIST
 "©Í∫p°A¿…Æ◊§£¶s¶b"

	)

151 
	#MSG_RENAME_ALREADY_THERE
 "RENAME•¢±— - •ÿ™∫¿…Æ◊§w∏g¶s¶b"

	)

152 
	#MSG_RENAME_NORNFR
 "RNTO´eª›≠nRNFR"

	)

153 
	#MSG_RENAME_FAILURE
 "ßÛ¶W/≤æ∞ •¢±—"

	)

154 
	#MSG_RENAME_SUCCESS
 "¿…Æ◊ßÛ¶W/≤æ∞ OK"

	)

155 
	#MSG_NO_SUPERSERVER
 "Ω–¶bsu≥r-£rvî (likêt˝£rvî)§§∞ı¶Êpuª-·pd"

	)

156 
	#MSG_NO_FTP_ACCOUNT
 "µL™kß‰®Ï'·p'±b∏π"

	)

157 
	#MSG_CONF_ERR
 "≤’∫A≥]©wø˘ª~"

	)

158 
	#MSG_NO_VIRTUAL_FILE
 "øÚ•¢µÍ¿¿®œ•Œ™Ã¿…¶W"

	)

159 
	#MSG_ILLEGAL_THROTTLING
 "§£¶X™k™∫∏`¨y≠»"

	)

160 
	#MSG_ILLEGAL_TRUSTED_GID
 "§£¶X™k™∫chroŸ´H•Ùgid"

	)

161 
	#MSG_ILLEGAL_USER_LIMIT
 "§£¶X™k™∫®œ•Œ™Ã≠≠®Ó"

	)

162 
	#MSG_ILLEGAL_FACILITY
 "§£©˙™∫∞Oø˝≥]¨I¶W∫Ÿ"

	)

163 
	#MSG_ILLEGAL_CONFIG_FILE_LDAP
 "µLÆƒ™∫LDAP≤’∫A¿…Æ◊"

	)

164 
	#MSG_ILLEGAL_LOAD_LIMIT
 "§£¶X™k™∫≠t∏¸≠≠®Ó"

	)

165 
	#MSG_ILLEGAL_PORTS_RANGE
 "§£¶X™k™∫∞§fΩd≥Ú"

	)

166 
	#MSG_ILLEGAL_LS_LIMITS
 "§£¶X™k™∫'ls'≠≠®Ó"

	)

167 
	#MSG_ILLEGAL_FORCE_PASSIVE
 "≥Q∞ ¶°≥sΩuÆ…°A§£¶X™k™∫±j®ÓIP"

	)

168 
	#MSG_ILLEGAL_RATIO
 "§£¶X™k™∫§W∂«/§U∏¸≤v"

	)

169 
	#MSG_ILLEGAL_UID_LIMIT
 "§£¶X™k™∫uid≠≠®Ó"

	)

170 
	#MSG_ILLEGAL_OPTION
 "§£©˙™∫run-timeøÔ∂µ"

	)

171 
	#MSG_LDAP_MISSING_BASE
 "LDAP≤’∫A¿…§§øÚ•¢LDAPBa£DN"

	)

172 
	#MSG_LDAP_WRONG_PARMS
 "ø˘ª~™∫LDAP∞—º∆"

	)

173 
	#MSG_NEW_CONNECTION
 "¶€ %†™∫∑s≥sΩu"

	)

174 
	#MSG_WELCOME_TO
 "≈w™Ô®”®Ï"

	)

175 
	#MSG_MAX_USERS
 "%lu ®œ•Œ™Ã(≥Ã§j≠»)§w∏gµn§J°A©Í∫p"

	)

176 
	#MSG_NB_USERS
 "±z¨O≤ƒ %u ≠”®œ•Œ™Ã°A≥Ã¶h•iπF %u ≠”≥sΩu"

	)

177 
	#MSG_WELCOME_TIME
 "≤{¶b•ª¶aÆ…∂°¨O %02d:%02d °C¶¯™Aæπ∞§f: %u°C"

	)

178 
	#MSG_ANONYMOUS_FTP_ONLY
 "≥o∏Ã•u•Œ∞Œ¶WFTP"

	)

179 
	#MSG_RATIOS_EVERYONE
 "∞wπÔEVERYONE±“•Œ§Ò≤v:"

	)

180 
	#MSG_RATIOS_ANONYMOUS
 "∞Œ¶W®œ•Œ™Ã≥W©w•ŒUL/DL≤v:"

	)

181 
	#MSG_RATIOS_RULE
 "≠n§U∏¸ %u Mb, •˝∏q∞»§W∂« %u Mb ™∫¶n™F¶Ë°C"

	)

182 
	#MSG_INFO_IDLE_M
 "¶b %lu §¿ƒ¡§∫®S¶≥¨°∞ °A±z≥Q∑|¬_Ωu°C"

	)

183 
	#MSG_INFO_IDLE_S
 "¶b %lu ¨Ì§∫®S¶≥¨°∞ °A±z≥Q∑|¬_Ωu°C"

	)

184 
	#MSG_CANT_READ_FILE
 "©Í∫p°Aß⁄≠ÃµL™k≈™®˙[%s]"

	)

185 
	#MSG_LS_TRUNCATED
 "øÈ•X∫Iµu®Ï %u ≤≈¶X"

	)

186 
	#MSG_LS_SUCCESS
 "¡`¶@ %u ≤≈¶X"

	)

187 
	#MSG_LOGOUT
 "µn•X."

	)

188 
	#MSG_AUTH_FAILED_LOG
 "®œ•Œ™Ã[%s]≈Á√“•¢±—"

	)

189 
	#MSG_ILLEGAL_UMASK
 "µLÆƒ™∫umask"

	)

190 
	#MSG_STANDALONE_FAILED
 "µL™k±“∞ °™dÆ⁄ê£rvî"

	)

191 
	#MSG_NO_ANONYMOUS_LOGIN
 "≥o¨O®p•Œ®t≤Œ - §£∂}©Ò∞Œ¶Wµn§J"

	)

192 
	#MSG_ANONYMOUS_ANY_PASSWORD
 "•Ù¶Û±KΩX≥£•i•Œ"

	)

193 
	#MSG_MAX_USERS_IP
 "§”¶h≥sΩu (%luË®”¶€≥o≠” IP"

	)

194 
	#MSG_ACTIVE_DISABLED
 "•D∞ º“¶°√ˆ≥¨"

	)

195 
	#MSG_TRANSFER_SUCCESSFUL
 "¿…Æ◊∂«∞eOK"

	)

196 
	#MSG_NO_DISK_SPACE
 "µw∫–√z∫° - Ω–±ﬂ¬I§W∂«"

	)

197 
	#MSG_OUT_OF_MEMORY
 "∞Oæ–≈È§£®¨"

	)

198 
	#MSG_ILLEGAL_TRUSTED_IP
 "§£¶X™k™∫´H•ÙIP¶Ïß}"

	)

199 
	#MSG_NO_ASCII_RESUME
 "ASCII≠´∂«®√§£¶w•˛°AΩ–•˝ßR∞£¿…Æ◊"

	)

200 
	#MSG_UNKNOWN_ALTLOG
 "§£©˙™∫∞Oø˝¿…ÆÊ¶°"

	)

201 
	#MSG_ACCOUNT_DISABLED
 "µL™kµn§J¨∞[%s]: ±b∏π√ˆ≥¨"

	)

202 
	#MSG_SQL_WRONG_PARMS
 "ø˘ª~™∫SQL∞—º∆"

	)

203 
	#MSG_ILLEGAL_CONFIG_FILE_SQL
 "µLÆƒ™∫SQL≥]©w¿…"

	)

204 
	#MSG_SQL_MISSING_SERVER
 "SQL≤’∫A¿…§§øÚ•¢¶¯™Aæπ≥]©w"

	)

205 
	#MSG_SQL_DOWN
 "SQL sîvî¶nπ≥√ˆæ˜§F"

	)

206 
	#MSG_ILLEGAL_QUOTA
 "µLÆƒ™∫√B´◊"

	)

207 
	#MSG_QUOTA_FILES
 "%Œu ¿…Æ◊º∆®œ•Œ (%d%%Ë- ±¬≈v•i•Œ: %Œu ≠”¿…Æ◊"

	)

208 
	#MSG_QUOTA_SIZE
 "%Œu Kbyãs®œ•Œ (%d%%Ë- ±¬≈v•i•Œ: %Œu Kb"

	)

209 
	#MSG_QUOTA_EXCEEDED
 "∂WπL√B´◊: [%s] §£∑|≥Q¿x¶s"

	)

210 
	#MSG_AUTH_UNKNOWN
 "§£©˙™∫≈Á√“§Ë™k"

	)

211 
	#MSG_PDB_BROKEN
 "µL™k≈™®˙ödexedÖuªdb¿…(©Œ∞ª¥˙®Ï¬¬ÆÊ¶°Ë- ∏’∏’Öuª-pw mkdb"

	)

212 
	#MSG_ALIASES_ALIAS
 "%†¨OßO¶W°Aµπ %†™∫"

	)

213 
	#MSG_ALIASES_UNKNOWN
 "§£©˙™∫ßO¶W %s°C"

	)

214 
	#MSG_ALIASES_BROKEN_FILE
 "∑l√a™∫ßO¶W¿…Æ◊"

	)

215 
	#MSG_ALIASES_LIST
 "•H§U™∫ßO¶W•i•Œ°G"

	)

216 
	#MSG_PERUSER_MAX
 "µL™k±µ®¸®”¶€¶P§@®œ•Œ™Ã∂WπL %lu ™∫≥sΩuº∆"

	)

217 
	#MSG_IPV6_OK
 "≥o≥°•Dæ˜§]≈w™ÔIPv6™∫≥sΩu"

	)

218 
	#MSG_TLS_INFO
 "SSL/TLS: ±“•Œ %†wôh %s, %d ¶Ï§∏•[±K"

	)

219 
	#MSG_TLS_WEAK
 "SSL/TLS: ±KΩX§£®¨"

	)

220 
	#MSG_TLS_NEEDED
 "©Í∫p°A¶π¶¯™Aæπ§£±µ®¸©˙§Â¶°≥sΩu°C\n" \

221 "Ω–®œ•ŒSSL/TLS™∫¶w•˛æ˜®Ó≠´∑s≥sΩu°C"

	)

222 
	#MSG_ILLEGAL_CHARSET
 "IŒegÆ ch¨£t"

	)

223 
	#MSG_TLS_NO_CTX
 "SSL/TLS: C⁄ãxànŸ found. Exôög."

	)

224 
	#MSG_PROT_OK
 "D©®¥Ÿe˘i⁄Üevñ sëÅÿ\"%s\""

	)

225 
	#MSG_PROT_PRIVATE_NEEDED
 "D©®c⁄√˘i⁄ c™nŸ bê›íed wôhÅhi†PROT sëtög."

	)

226 
	#MSG_PROT_UNKNOWN_LEVEL
 "PrŸe˘i⁄Üevñ %†nŸ undî°ood. FÆlbackÅÿ\"%s\""

	)

227 
	#MSG_PROT_BEFORE_PBSZ
 "PROT mu° bê¥e˚ded byá suc˚ssfu»PBSZ comm™d"

	)

228 
	#MSG_WARN_LDAP_USERPASS_EMPTY
 "LDAPÑëu∫edÇÿu£rPassw‹dáâribuã, check LDAPác˚s†rights."

	)

229 
	#MSG_LDAP_INVALID_AUTH_METHOD
 "InvÆid LDAPAuthMëhod i¿thêc⁄figuøti⁄ fûe. Should bê'böd' o∏'∑ssw‹d'."

	)

	@src/mysnprintf.c

1 
	~<c⁄fig.h
>

3 
	~<°dio.h
>

4 #ifde‡
STDC_HEADERS


5 
	~<°dlib.h
>

6 
	~<°ddef.h
>

7 
	~<°d¨g.h
>

9 #ifde‡
HAVE_STDLIB_H


10 
	~<°dlib.h
>

13 #ifde‡
HAVE_INTTYPES_H


14 
	~<öây≥s.h
>

16 #ifde‡
HAVE_UNISTD_H


17 
	~<uni°d.h
>

19 
	~<sys/ty≥s.h
>

20 
	~"my¢¥ötf.h
"

22 #ifde‡
WITH_DMALLOC


23 
	~<dmÆloc.h
>

26 #ifde‡
SNPRINTF_IS_BOGUS


27 
	$w‹k¨ound_¢¥ötf
(*
°r
, 
size_t
 
size
, c⁄° *
f‹m©
, ...)

29 
v
;

30 
r
 = 0;

32 
va_li°
 
va
;

33 
	`va_°¨t
(
va
, 
f‹m©
);

34 
v
 = 
	`v¢¥ötf
(
°r
, 
size
, 
f‹m©
, 
va
);

35 i‡(
v
 < 0 || (
ssize_t
Ëv >(ssize_tË
size
) {

36 
r
--;

38 
	`va_íd
(
va
);

40  
r
;

41 
	}
}

	@src/mysnprintf.h

1 #i‚de‡
__MYSNPRINTF_H__


2 
	#__MYSNPRINTF_H__
 1

	)

4 
w‹k¨ound_¢¥ötf
(*
°r
, 
size_t
 
size
, c⁄° *
f‹m©
, ...);

6 #i‚de‡
HAVE_SNPRINTF


7 
	~"Áke¢¥ötf.h
"

9 #ifde‡
CONF_SNPRINTF_TYPE


10 #i‡
CONF_SNPRINTF_TYPE
 == 8

11 
	#SNPRINTF_C99
 1

	)

12 #ñi‡
CONF_SNPRINTF_TYPE
 <= 0

13 
	#SNPRINTF_OLD
 1

	)

14 
	#SNPRINTF_IS_BOGUS
 1

	)

16 
	#SNPRINTF_IS_BOGUS
 1

	)

19 #w¨nög 
Unknown
 
¢¥ötf
(Ë
ty≥


20 
	#SNPRINTF_IS_BOGUS
 1

	)

23 #i‡
CONF_SNPRINTF_TYPE
 < 0

24 
	#SNCHECK
(
CALL
, 
SIZE
Ë((CALLË< 0)

	)

25 #ñi‡
deföed
(
SNPRINTF_IS_BOGUS
Ë|| !deföed(
SNPRINTF_C99
) || \

26 
	gCONF_SNPRINTF_TYPE
 =4 || 
CONF_SNPRINTF_TYPE
 == 8

27 
	#SNCHECK
(
CALL
, 
SIZE
Ë((CALLË>((Ë(SIZE)))

	)

29 
	#SNCHECK
(
CALL
, 
SIZE
Ë(
w‹k¨ound_
 ## CALL)

	)

	@src/parser.c

8 
	~<c⁄fig.h
>

10 #i‡
deföed
(
WITH_LDAP
Ë|| deföed(
WITH_MYSQL
Ë|| deföed(
WITH_PGSQL
)

11 
	~"·pd.h
"

12 
	~"∑r£r_p.h
"

13 
	~"∑r£r.h
"

15 #ifde‡
WITH_DMALLOC


16 
	~<dmÆloc.h
>

19 
	$gíîic_∑r£r
(c⁄° * c⁄° 
fûe
,

20 
C⁄figKeyw‹ds
 *
c⁄fig_keyw‹ds
)

22 *
löï¡
;

23 *
löï¡2
;

24 
FILE
 *
Â
;

25 
C⁄figKeyw‹ds
 *
c⁄fig_keyw‹ds_≤t
;

26 
löe
[
LINE_MAX
];

28 i‡(
fûe
 =
NULL
 || (
Â
 = 
	`f›í
(file, "r")) == NULL) {

31 
	`fgës
(
löe
, Üöe, 
Â
Ë!
NULL
) {

32 
löe
[Üine - 1U] = 0;

33 
löï¡
 = 
löe
;

34 *
löï¡
 !0 && 
	`is•a˚
(() *linepnt)) {

35 
löï¡
++;

37 i‡(
	`ISCTRLCODE
(*
löï¡
Ë|| *löï¡ =
CONFIG_COMMENT
) {

40 
c⁄fig_keyw‹ds_≤t
 = 
c⁄fig_keyw‹ds
;

42 
size_t
 
keyw‹d_Àn
;

44 
keyw‹d_Àn
 = 
	`°æí
(
c⁄fig_keyw‹ds_≤t
->
keyw‹d
);

45 i‡(
	`°∫ˇ£cmp
(
c⁄fig_keyw‹ds_≤t
->
keyw‹d
,

46 
löï¡
, 
keyw‹d_Àn
) == 0) {

47 
löï¡
 +
keyw‹d_Àn
;

48 *
löï¡
 !0 && 
	`is•a˚
(() *linepnt)) {

49 
löï¡
++;

51 i‡(*
löï¡
 == 0) {

52 
	`f˛o£
(
Â
);

55 
löï¡2
 = 
löï¡
 + 
	`°æí
(linepnt) - 1U;

56 
löï¡2
 !
löï¡
 &&

57 (
	`is•a˚
((Ë*
löï¡2
) ||

58 
	`ISCTRLCODE
(*
löï¡2
))) {

59 
löï¡2
--;

61 
löï¡2
[1] = 0;

62 i‡((*
c⁄fig_keyw‹ds_≤t
->
vÆue
 = 
	`°rdup
(
löï¡
)Ë=
NULL
) {

63 
	`f˛o£
(
Â
);

68 
c⁄fig_keyw‹ds_≤t
++;

69 } 
c⁄fig_keyw‹ds_≤t
->
keyw‹d
 !
NULL
);

70 i‡(
c⁄fig_keyw‹ds_≤t
->
keyw‹d
 =
NULL
) {

71 
	`f˛o£
(
Â
);

75 
	`f˛o£
(
Â
);

78 
	}
}

80 sig√d 
v6ªady
;

	@src/parser.h

1 #i‚de‡
__PARSER_H__


2 
	#__PARSER_H__
 1

	)

4 
	sC⁄figKeyw‹ds_
 {

5 c⁄° *
	mkeyw‹d
;

6 **
	mvÆue
;

7 } 
	tC⁄figKeyw‹ds
;

9 
gíîic_∑r£r
(c⁄° * c⁄° 
fûe
,

10 
C⁄figKeyw‹ds
 *
c⁄fig_keyw‹ds
);

	@src/parser_p.h

1 #i‚de‡
__PARSER_P_H__


2 
	#__PARSER_P_H__
 1

	)

4 
	#CONFIG_COMMENT
 '#'

	)

6 #i‚de‡
LINE_MAX


7 
	#LINE_MAX
 4096

	)

	@src/privsep.c

1 
	~<c⁄fig.h
>

3 #i‚de‡
WITHOUT_PRIVSEP


4 
	~"·pd.h
"

5 
	~"dy«mic.h
"

6 
	~"·pwho-upd©e.h
"

7 
	~"globÆs.h
"

8 
	~"¥iv£p_p.h
"

9 
	~"¥iv£p.h
"

11 #ifde‡
WITH_DMALLOC


12 
	~<dmÆloc.h
>

15 
	$¥iv£p_£ndcmd
(c⁄° 
psfd
, c⁄° * c⁄° 
cmd¨g
,

16 c⁄° 
size_t
 
cmd¨g_Àn
)

18 
ssize_t
 
£¡
;

20 (
£¡
 = 
	`£nd
(
psfd
, 
cmd¨g
, 
cmd¨g_Àn
, 0)Ë=(
ssize_t
) -1 &&

21 
î∫o
 =
EINTR
);

22 i‡(
£¡
 !(
ssize_t
Ë
cmd¨g_Àn
) {

26 
	}
}

28 
	$¥iv£p_ªcvcmd
(c⁄° 
psfd
, * c⁄° 
cmd¨g
,

29 c⁄° 
size_t
 
cmd¨g_Àn
)

31 
ssize_t
 
ª˚ived
;

33 (
ª˚ived
 = 
	`ªcv
(
psfd
, 
cmd¨g
, 
cmd¨g_Àn
, 0)Ë=(
ssize_t
) -1 &&

34 
î∫o
 =
EINTR
);

35 i‡(
ª˚ived
 !(
ssize_t
Ë
cmd¨g_Àn
) {

39 
	}
}

41 
	$¥iv£p_£ndfd
(c⁄° 
psfd
, c⁄° 
fd
)

43 *
buf
;

44 *
fd±r
;

45 
cmsghdr
 *
cmsg
;

46 
msghdr
 
msg
;

47 
iovec
 
vec
;

48 c⁄° 
size_t
 
sizeof_buf
 = 
	`CMSG_SPACE
( *
fd±r
);

49 
size_t
 
sizeof_buf_
 = 
sizeof_buf
;

50 
PrivSïCmd
 
foddî
 = 
PRIVSEPCMD_ANSWER_FD
;

51 
ssize_t
 
£¡
;

53 i‡(
sizeof_buf_
 <  *
cmsg
) {

54 
sizeof_buf_
 =  *
cmsg
;

56 i‡((
buf
 = 
	`ALLOCA
(
sizeof_buf_
)Ë=
NULL
) {

59 
	`mem£t
(&
msg
, 0,  msg);

60 
vec
.
iov_ba£
 = (*Ë&
foddî
;

61 
vec
.
iov_Àn
 =  
foddî
;

62 
msg
.
msg_«me
 = 
NULL
;

63 
msg
.
msg_«mñí
 = (
sockÀn_t
) 0;

64 
msg
.
msg_iov
 = &
vec
;

65 
msg
.
msg_iovÀn
 = (
size_t
) 1U;

66 
msg
.
msg_c⁄åﬁ
 = 
buf
;

67 
msg
.
msg_c⁄åﬁÀn
 = 
sizeof_buf
;

68 
msg
.
msg_Êags
 = 0;

69 i‡((
cmsg
 = 
	`CMSG_FIRSTHDR
(&
msg
)Ë=
NULL
) {

70 
	`ALLOCA_FREE
(
buf
);

73 
cmsg
->
cmsg_Àn
 = 
	`CMSG_LEN
( 
fd
);

74 
cmsg
->
cmsg_Àvñ
 = 
SOL_SOCKET
;

75 
cmsg
->
cmsg_ty≥
 = 
SCM_RIGHTS
;

76 i‡((
fd±r
 = (*Ë(*Ë
	`CMSG_DATA
(
cmsg
)Ë=
NULL
) {

77 
	`ALLOCA_FREE
(
buf
);

80 *
fd±r
 = 
fd
;

81 
msg
.
msg_c⁄åﬁÀn
 = 
cmsg
->
cmsg_Àn
;

82 (
£¡
 = 
	`£ndmsg
(
psfd
, &
msg
, 0)Ë=(
ssize_t
Ë-1 && 
î∫o
 =
EINTR
);

83 
	`ALLOCA_FREE
(
buf
);

84 i‡(
£¡
 !(
ssize_t
Ë 
foddî
) {

88 
	}
}

90 
	$¥iv£p_ªcvfd
(c⁄° 
psfd
)

92 *
buf
;

93 *
fd±r
;

94 
cmsghdr
 *
cmsg
;

95 
msghdr
 
msg
;

96 
iovec
 
vec
;

97 c⁄° 
size_t
 
sizeof_buf
 = 
	`CMSG_SPACE
( *
fd±r
);

98 
size_t
 
sizeof_buf_
 = 
sizeof_buf
;

99 
PrivSïCmd
 
foddî
 = 
PRIVSEPCMD_NONE
;

100 
ssize_t
 
ª˚ived
;

102 i‡(
sizeof_buf_
 <  *
cmsg
) {

103 
sizeof_buf_
 =  *
cmsg
;

105 i‡((
buf
 = 
	`ALLOCA
(
sizeof_buf_
)Ë=
NULL
) {

108 
	`mem£t
(&
msg
, 0,  msg);

109 
vec
.
iov_ba£
 = (*Ë&
foddî
;

110 
vec
.
iov_Àn
 =  
foddî
;

111 
msg
.
msg_«me
 = 
NULL
;

112 
msg
.
msg_«mñí
 = (
sockÀn_t
) 0;

113 
msg
.
msg_iov
 = &
vec
;

114 
msg
.
msg_iovÀn
 = (
size_t
) 1U;

115 
msg
.
msg_c⁄åﬁ
 = 
buf
;

116 
msg
.
msg_c⁄åﬁÀn
 = 
sizeof_buf
;

117 
msg
.
msg_Êags
 = 0;

118 i‡((
cmsg
 = 
	`CMSG_FIRSTHDR
(&
msg
)Ë=
NULL
 ||

119 (
fd±r
 = (*Ë(*Ë
	`CMSG_DATA
(
cmsg
)Ë=
NULL
) {

120 
	`ALLOCA_FREE
(
buf
);

123 *
fd±r
 = -1;

124 (
ª˚ived
 = 
	`ªcvmsg
(
psfd
, &
msg
, 0)Ë=(
ssize_t
) -1 &&

125 
î∫o
 =
EINTR
);

126 #i‡
	`deföed
(
MSG_TRUNC
Ë&& deföed(
MSG_CTRUNC
)

127 i‡((
msg
.
msg_Êags
 & 
MSG_TRUNC
Ë|| (msg.msg_Êag†& 
MSG_CTRUNC
)) {

128 
	`ALLOCA_FREE
(
buf
);

132 i‡(
ª˚ived
 !(
ssize_t
Ë 
foddî
 ||

133 
foddî
 !
PRIVSEPCMD_ANSWER_FD
 ||

134 (
cmsg
 = 
	`CMSG_FIRSTHDR
(&
msg
)Ë=
NULL
 ||

135 (
fd±r
 = (*Ë(*Ë
	`CMSG_DATA
(
cmsg
)Ë=
NULL
) {

136 
	`ALLOCA_FREE
(
buf
);

139  *
fd±r
;

140 
	}
}

142 
	$¥iv£p_u≈riv_u£r
()

144 i‡(
	`£ãuid
(
¥iv£p_uid
) != 0) {

145 
	`_exô
(1);

147 
	}
}

149 
	$¥iv£p_¥iv_u£r
()

151 i‡(
	`£ãuid
((
uid_t
) 0) != 0) {

152 
	`_exô
(1);

154 
	}
}

156 #ifde‡
FTPWHO


157 
	$¥iv£p_¥iv∑π_ªmove·pwh€¡ry
(c⁄° 
psfd
)

159 
PrivSïAnswî
 
™swî
;

161 
	`¥iv£p_¥iv_u£r
();

162 i‡(
sc‹ebﬂrdfûe
 =
NULL
 || 
	`u∆ök
(scoreboardfile) != 0) {

163 
™swî
.
ªmove·pwh€¡ry
.
cmd
 = 
PRIVSEPCMD_ANSWER_ERROR
;

165 
™swî
.
ªmove·pwh€¡ry
.
cmd
 = 
PRIVSEPCMD_ANSWER_REMOVEFTPWHOENTRY
;

167 
	`¥iv£p_u≈riv_u£r
();

169  
	`¥iv£p_£ndcmd
(
psfd
, &
™swî
, ánswer);

170 
	}
}

172 
	$¥iv£p_ªmove·pwh€¡ry
()

174 
PrivSïQuîy
 
quîy
;

175 
PrivSïQuîy
 
™swî
;

177 
quîy
.
ªmove·pwh€¡ry
.
cmd
 = 
PRIVSEPCMD_REMOVEFTPWHOENTRY
;

178 i‡(
	`¥iv£p_£ndcmd
(
psfd
, &
quîy
,  query) != 0 ||

179 
	`¥iv£p_ªcvcmd
(
psfd
, &
™swî
, ánswer) != 0 ||

180 
™swî
.
ªmove·pwh€¡ry
.
cmd
 !
PRIVSEPCMD_ANSWER_REMOVEFTPWHOENTRY
) {

184 
	}
}

187 
	$¥iv£p_¥iv∑π_bödª•‹t
(c⁄° 
psfd
,

188 c⁄° 
PrivSïQuîy
 * c⁄° 
quîy
)

190 c⁄° 
ö_p‹t_t
 
p‹éi°
[] = 
FTP_ACTIVE_SOURCE_PORTS
;

191 c⁄° 
ö_p‹t_t
 *
p‹éi°≤t
 = 
p‹éi°
;

192 
fd
;

193 
⁄
 = 1;

194 
ªt
;

196 i‡((
fd
 = 
	`sockë
(
quîy
->
bödª•‹t
.
¥Ÿocﬁ
,

197 
SOCK_STREAM
, 
IPPROTO_TCP
)) == -1) {

198 
bye
;

200 #ifde‡
SO_REUSEPORT


201 (Ë
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_REUSEPORT
, (*Ë&
⁄
,  on);

203 (Ë
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, (*Ë&
⁄
,  on);

205 
	`¥iv£p_¥iv_u£r
();

207 i‡(
quîy
->
bödª•‹t
.
¥Ÿocﬁ
 =
PF_INET6
) {

208 
	`STORAGE_PORT6
(
quîy
->
bödª•‹t
.
ss
Ë
	`ht⁄s
(*
p‹éi°≤t
);

210 
	`STORAGE_PORT
(
quîy
->
bödª•‹t
.
ss
Ë
	`ht⁄s
(*
p‹éi°≤t
);

212 i‡(
	`böd
(
fd
, (
sockaddr
 *Ë&
quîy
->
bödª•‹t
.
ss
,

213 
	`STORAGE_LEN
(
quîy
->
bödª•‹t
.
ss
)) == 0) {

216 #ifde‡
USE_ONLY_FIXED_DATA_PORT


217 (Ë
	`¶ìp
(1U);

219 i‡(*
p‹éi°≤t
 =(
ö_p‹t_t
) 0U) {

222 
p‹éi°≤t
++;

225 
	`¥iv£p_u≈riv_u£r
();

227 
bye
:

228 
ªt
 = 
	`¥iv£p_£ndfd
(
psfd
, 
fd
);

229 
ªt
 |
	`˛o£
(
fd
);

231  
ªt
;

232 
	}
}

234 
	$¥iv£p_bödª•‹t
(c⁄° 
¥Ÿocﬁ
, c⁄° 
sockaddr_°‹age
 
ss
)

236 
PrivSïQuîy
 
quîy
;

238 
quîy
.
bödª•‹t
.
cmd
 = 
PRIVSEPCMD_BINDRESPORT
;

239 
quîy
.
bödª•‹t
.
¥Ÿocﬁ
 =Örotocol;

240 
quîy
.
bödª•‹t
.
ss
 = ss;

241 i‡(
	`¥iv£p_£ndcmd
(
psfd
, &
quîy
,  query) != 0) {

244  
	`¥iv£p_ªcvfd
(
psfd
);

245 
	}
}

247 
	$¥iv£p_¥iv∑π_waôcmd
(c⁄° 
psfd
)

249 
PrivSïQuîy
 
quîy
;

251 i‡(
	`¥iv£p_ªcvcmd
(
psfd
, &
quîy
,  query) != 0) {

254 
quîy
.
cmd
.cmd) {

255 #ifde‡
FTPWHO


256 
PRIVSEPCMD_REMOVEFTPWHOENTRY
:

257  
	`¥iv£p_¥iv∑π_ªmove·pwh€¡ry
(
psfd
);

259 
PRIVSEPCMD_BINDRESPORT
:

260  
	`¥iv£p_¥iv∑π_bödª•‹t
(
psfd
, &
quîy
);

266 
	}
}

268 
	$¥iv£p_¥iv∑π_maö
()

270 
ªt
;

272 (
ªt
 = 
	`¥iv£p_¥iv∑π_waôcmd
(
psfd
)) == 0);

274 i‡(
ªt
 != 1) {

278 
	}
}

280 
	$¥iv£p_¥iv∑π_˛o£junk
()

282 
ªt
 = 0;

284 #i‡
	`deföed
(
WITH_UPLOAD_SCRIPT
)

285 i‡(
u∂ﬂd_pùe_fd
 != -1) {

286 
ªt
 |
	`˛o£
(
u∂ﬂd_pùe_fd
);

288 i‡(
u∂ﬂd_pùe_lock
 != -1) {

289 
ªt
 |
	`˛o£
(
u∂ﬂd_pùe_lock
);

292 #ifde‡
WITH_ALTLOG


293 i‡(
Æéog_fd
 != -1) {

294 
ªt
 |
	`˛o£
(
Æéog_fd
);

297 #i‚de‡
SAVE_DESCRIPTORS


298 i‡(
no_sy¶og
 == 0) {

299 
	`˛o£log
();

302 (Ë
	`˛o£
(0);

303 (Ë
	`˛o£
(1);

305  
ªt
;

306 
	}
}

308 
	$¥iv£p_öô_¥iv£p_u£r
()

310 c⁄° *
¥iv£p_u£rs
[] = {

311 
PRIVSEP_USER
, "puª-·pd", 
NULL


313 c⁄° **
¥iv£p_u£r
 = 
¥iv£p_u£rs
;

314 
∑sswd
 *
pw
 = 
NULL
;

316 *
¥iv£p_u£r
 !
NULL
) {

317 i‡((
pw
 = 
	`gëpw«m
(*
¥iv£p_u£r
)Ë!
NULL
) {

320 
¥iv£p_u£r
++;

322 i‡(
pw
 =
NULL
) {

325 
¥iv£p_uid
 = 
pw
->
pw_uid
;

326 #ifde‡
HAVE_SETGROUPS


327 i‡(
	`£tgroups
(1U, &
pw
->
pw_gid
Ë!0Ë{ 
	`_exô
(1); }

328 #ñi‡
	`deföed
(
HAVE_INITGROUPS
)

329 i‡(
	`öôgroups
(
pw
->
pw_«me
,Öw->
pw_gid
Ë< 0Ë{ 
	`_exô
(1); }

331 i‡(
	`£tgid
(
pw
->
pw_gid
Ë!0Ë{ 
	`_exô
(1); }

333 
	}
}

335 
	$¥iv£p_öô
()

337 
sv
[2];

338 
pid_t
 
pid
;

340 i‡(
	`sockë∑ú
(
AF_UNIX
, 
SOCK_STREAM
, 
PF_UNSPEC
, 
sv
) != 0) {

343 i‡((
pid
 = 
	`f‹k
()Ë=(
pid_t
) -1) {

344 (Ë
	`˛o£
(
sv
[0]);

345 (Ë
	`˛o£
(
sv
[1]);

349 i‡(
pid
 !(
pid_t
) 0) {

350 (Ë
	`˛o£
(
sv
[0]);

351 
psfd
 = 
sv
[1];

355 (Ë
	`˛o£
(
sv
[1]);

356 
psfd
 = 
sv
[0];

357 
	`£çro˚s¢ame
("pure-ftpd (PRIV)");

358 (Ë
	`¥iv£p_¥iv∑π_˛o£junk
();

359 
	`¥iv£p_öô_¥iv£p_u£r
();

360 
	`¥iv£p_u≈riv_u£r
();

361 
	`_exô
(
	`¥iv£p_¥iv∑π_maö
());

364 
	}
}

	@src/privsep.h

1 #i‚de‡
__PRIVSEP_H__


2 
	#__PRIVSEP_H__
 1

	)

4 #i‚de‡
WITHOUT_PRIVSEP


6 
¥iv£p_£ndfd
(c⁄° 
psfd
, c⁄° 
fd
);

7 
¥iv£p_ªcvfd
(c⁄° 
psfd
);

9 
¥iv£p_öô
();

10 
¥iv£p_ªmove·pwh€¡ry
();

11 
¥iv£p_bödª•‹t
(c⁄° 
¥Ÿocﬁ
, c⁄° 
sockaddr_°‹age
 
ss
);

	@src/privsep_p.h

1 #i‚de‡
__PRIVSEP_P_H__


2 
	#__PRIVSEP_P_H__
 1

	)

4 #i‚de‡
CMSG_ALIGN


5 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+ (Ë- (
size_t
) 1U) \

6 & (
size_t
Ë~((Ë- (size_tË1U))

	)

9 #i‚de‡
CMSG_SPACE


10 
	#CMSG_SPACE
(
Àn
) \

11 (
	`CMSG_ALIGN
((
cmsghdr
)Ë+ CMSG_ALIGN(
Àn
))

	)

14 #i‚de‡
CMSG_LEN


15 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
((
cmsghdr
)Ë+ (Àn))

	)

18 #i‚de‡
PRIVSEP_USER


19 
	#PRIVSEP_USER
 "_puª-·pd"

	)

22 
	ePrivSïCmd_
 {

23 
	mPRIVSEPCMD_NONE
,

24 
	mPRIVSEPCMD_ANSWER_ERROR
, 
	mPRIVSEPCMD_ANSWER_FD
,

25 
	mPRIVSEPCMD_BINDRESPORT
, 
	mPRIVSEPCMD_ANSWER_BINDRESPORT


26 #ifde‡
FTPWHO


28 
	mPRIVSEPCMD_REMOVEFTPWHOENTRY
, 
	mPRIVSEPCMD_ANSWER_REMOVEFTPWHOENTRY


30 } 
	tPrivSïCmd
;

32 
	sPrivSïQuîy_BödResP‹t_
 {

33 
PrivSïCmd
 
	mcmd
;

34 
	m¥Ÿocﬁ
;

35 
sockaddr_°‹age
 
	mss
;

36 } 
	tPrivSïQuîy_BödResP‹t
;

38 #ifde‡
FTPWHO


39 
	sPrivSïQuîy_RemoveFçwhoE¡ry_
 {

40 
PrivSïCmd
 
	mcmd
;

41 } 
	tPrivSïQuîy_RemoveFçwhoE¡ry
;

44 
	sPrivSïQuîy_Cmd_
 {

45 
PrivSïCmd
 
	mcmd
;

46 } 
	tPrivSïQuîy_Cmd
;

48 
	uPrivSïQuîy_
 {

49 
PrivSïQuîy_BödResP‹t
 
	mbödª•‹t
;

50 #ifde‡
FTPWHO


51 
PrivSïQuîy_RemoveFçwhoE¡ry
 
	mªmove·pwh€¡ry
;

53 
PrivSïQuîy_Cmd
 
	mcmd
;

54 } 
	tPrivSïQuîy
;

56 #ifde‡
FTPWHO


57 
	sPrivSïAnswî_RemoveFçwhoE¡ry_
 {

58 
PrivSïCmd
 
	mcmd
;

59 } 
	tPrivSïAnswî_RemoveFçwhoE¡ry
;

62 
	sPrivSïAnswî_Cmd_
 {

63 
PrivSïCmd
 
	mcmd
;

64 } 
	tPrivSïAnswî_Cmd
;

66 
	uPrivSïAnswî_
 {

67 #ifde‡
FTPWHO


68 
PrivSïAnswî_RemoveFçwhoE¡ry
 
	mªmove·pwh€¡ry
;

70 
PrivSïAnswî_Cmd
 
	mcmd
;

71 } 
	tPrivSïAnswî
;

73 
	gpsfd
 = -1;

74 
uid_t
 
	g¥iv£p_uid
;

	@src/ptracetest.c

19 
	~<c⁄fig.h
>

20 
	~"·pd.h
"

22 #ifde‡
HAVE_SYS_WAIT_H


23 
	~<sys/waô.h
>

26 
	#TEST_GID
 65534

	)

27 
	#TEST_UID
 65534

	)

28 
	#ZIPPER
 "|/-\\ "

	)

30 #i‡!
deföed
(
HAVE_PTRACE
Ë|| !deföed(
HAVE_SYS_PTRACE_H
Ë|| !(deföed(
PT_ATTACH
Ë|| deföed(
PTRACE_ATTACH
))

32 
	$maö
()

34 
	`Âuts
("S‹ry,Åhi†ã° c™'àbêcompûed i¿thi†∂©f‹m\n", 
°dîr
);

37 
	}
}

41 
	~<sys/±ø˚.h
>

43 
	$maö
()

45 
pid_t
 
pid
;

46 
πn
 = 1;

48 i‡(
	`gëeuid
(Ë!(
uid_t
) 0) {

49 
	`Âuts
("S‹ry, youÇìdÅÿru¿thi†¥ogømá†roŸ\n", 
°dîr
);

52 i‡(
	`£tgid
((
gid_t
Ë
TEST_GID
Ë|| 
	`£ãgid
((gid_t) TEST_GID) ||

53 
	`£tuid
((
uid_t
Ë
TEST_UID
Ë|| 
	`£ãuid
((uid_t) TEST_UID)) {

54 
	`≥º‹
("Error while switching gid/uid");

57 i‡((
pid
 = 
	`f‹k
()Ë=(
pid_t
) -1) {

58 
	`≥º‹
("UnableÅo fork");

61 i‡(
pid
 =(
pid_t
) 0) {

62 
size_t
 
t
 = (size_t) 0U;

64 
	`Âuts
("Checkög f‹Åø˚abûôyá·î uid ch™gê", 
°dout
);

65 
	`fÊush
(
°dout
);

67 
	`putch¨
(
ZIPPER
[
t
]);

68 
	`putch¨
('\b');

69 
	`fÊush
(
°dout
);

70 (Ë
	`¶ìp
(1U);

71 
t
++;

72 } 
t
 <  
ZIPPER
 - (
size_t
) 1U);

73 
	`putch¨
('\n');

75 
	`_exô
(0);

77 
°©us
;

78 
ªt
;

80 #ifde‡
PT_ATTACH


81 
ªt
 = 
	`±ø˚
(
PT_ATTACH
, 
pid
, 
NULL
, NULL);

83 
ªt
 = 
	`±ø˚
(
PTRACE_ATTACH
, 
pid
, 
NULL
, NULL);

86 
	`waô
(&
°©us
Ë!
pid
);

88 i‡(
ªt
 < 0L) {

89 
	`puts
("\n"

94 
πn
 = 0;

96 
	`puts
("\n"

104  
πn
;

105 
	}
}

	@src/pure-authd.c

1 
	~<c⁄fig.h
>

3 #i‚de‡
WITH_EXTAUTH


4 
	~<°dio.h
>

6 
	$maö
()

8 
	`puts
("Please compileÅhe server with --with-extauth\n"

12 
	}
}

15 
	~"·pd.h
"

16 
	~"log_exèuth.h
"

17 
	~"puª-authd_p.h
"

18 
	~"ß„_rw.h
"

20 #ifde‡
WITH_DMALLOC


21 
	~<dmÆloc.h
>

24 
	$£t˛€xec
(c⁄° 
fd
)

26 
	`f˙é
(
fd
, 
F_SETFD
, 
FD_CLOEXEC
);

27 
	}
}

29 
	$˛o£desc_Æl
(c⁄° 
˛o£°dö
)

31 
foddî
;

33 i‡(
˛o£°dö
 != 0) {

34 (Ë
	`˛o£
(0);

35 i‡((
foddî
 = 
	`›í
("/dev/nuŒ", 
O_RDONLY
)) == -1) {

38 (Ë
	`dup2
(
foddî
, 0);

39 i‡(
foddî
 > 0) {

40 (Ë
	`˛o£
(
foddî
);

43 i‡((
foddî
 = 
	`›í
("/dev/nuŒ", 
O_WRONLY
)) == -1) {

46 (Ë
	`dup2
(
foddî
, 1);

47 (Ë
	`dup2
(1, 2);

48 i‡(
foddî
 > 2) {

49 (Ë
	`˛o£
(
foddî
);

52 
	}
}

54 
	$dod´m⁄ize
()

56 
pid_t
 
chûd
;

58 i‡(
d´m⁄ize
 != 0) {

59 i‡((
chûd
 = 
	`f‹k
()Ë=(
pid_t
) -1) {

60 
	`≥º‹
("Daemonization failed - fork");

62 } i‡(
chûd
 !(
pid_t
) 0) {

63 
	`_exô
(
EXIT_SUCCESS
);

64 } i‡(
	`£tsid
(Ë=(
pid_t
) -1) {

65 
	`≥º‹
("Daemonization failed : setsid");

67 (Ë
	`chdú
("/");

68 #ifde‡
HAVE_CLOSEFROM


69 (Ë
	`˛o£‰om
(3);

71 (Ë
	`˛o£desc_Æl
(1);

73 
	}
}

75 
	$öô
()

77 #i‚de‡
NON_ROOT_FTP


78 i‡(
	`gëeuid
(Ë!(
uid_t
) 0) {

79 
	`Ârötf
(
°dîr
,

86 
	}
}

88 
	$ußge
()

90 #i‚de‡
NO_GETOPT_LONG


91 c⁄° 
›ti⁄
 *
›ti⁄s
 = 
l⁄g_›ti⁄s
;

94 
	`¥ötf
("-%c\t--%s\t%s\n", 
›ti⁄s
->
vÆ
, o±i⁄s->
«me
,

95 
›ti⁄s
->
has_¨g
 ? "<opt>" : "");

96 
›ti⁄s
++;

97 } 
›ti⁄s
->
«me
 !
NULL
);

99 
	`exô
(
EXIT_SUCCESS
);

100 
	}
}

102 
	$∑r£›ti⁄s
(
¨gc
, *
¨gv
[])

104 #i‚de‡
NO_GETOPT_LONG


105 
›ti⁄_ödex
 = 0;

107 
foddî
;

109 (
foddî
 =

110 #i‚de‡
NO_GETOPT_LONG


111 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, 
GETOPT_OPTIONS
, 
l⁄g_›ti⁄s
,

112 &
›ti⁄_ödex
)

114 
	`gë›t
(
¨gc
, 
¨gv
, 
GETOPT_OPTIONS
)

117 
foddî
) {

119 
d´m⁄ize
 = 1;

123 c⁄° *
≈å
;

124 *
íd±r
;

126 
≈å
 = 
›èrg
;

127 
íd±r
 = 
NULL
;

128 
gid
 = (
gid_t
Ë
	`°πoul
(
≈å
, &
íd±r
, 10);

129 i‡(!
≈å
 || !*≈å || !
íd±r
 || *endptr) {

130 
	`≥º‹
("Illegal GID - Must beáÇumber\n");

135 i‡((
authd_pid_fûe
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

136 
	`≥º‹
("OhÇo ! More memory !");

140 #i‚de‡
NO_GETOPT_LONG


142 
	`ußge
();

146 i‡((
s¸ùt
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

147 
	`≥º‹
("OhÇo ! More memory !");

152 i‡((
sockë∑th
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

153 
	`≥º‹
("OhÇo ! More memory !");

158 c⁄° *
≈å
;

159 *
íd±r
;

161 
≈å
 = 
›èrg
;

162 
íd±r
 = 
NULL
;

163 
uid
 = (
uid_t
Ë
	`°πoul
(
≈å
, &
íd±r
, 10);

164 i‡(!
≈å
 || !*≈å || !
íd±r
 || *endptr) {

165 
	`≥º‹
("Illegal UID - Must beáÇumber\n");

170 
	`ußge
();

174 
	}
}

176 
	$ch™geuidgid
()

178 #i‚de‡
NON_ROOT_FTP


180 #ifde‡
HAVE_SETGROUPS


181 
	`£tgroups
(1U, &
gid
) ||

183 
	`£tgid
(
gid
Ë|| 
	`£ãgid
(gid) ||

184 
	`£tuid
(
uid
Ë|| 
	`£ãuid
(uidË|| 
	`chdú
("/")) {

189 
	}
}

191 
	$√wív_°r
(c⁄° * c⁄° 
v¨
, c⁄° * c⁄° 
°r
)

193 
size_t
 
s
;

194 *
v
;

196 i‡(
°r
 =
NULL
 || *str == 0) {

199 
s
 = 
	`°æí
(
v¨
Ë+ såÀn(
°r
Ë+ (
size_t
) 2U;

200 i‡((
v
 = 
	`mÆloc
(
s
)Ë=
NULL
) {

203 i‡(
	`SNCHECK
(
	`¢¥ötf
(
v
, 
s
, "%s=%s", 
v¨
, 
°r
), s)) {

204 
	`‰ì
(
v
);

207 #ifde‡
HAVE_PUTENV


208 
	`puãnv
(
v
);

210 
	}
}

212 
	$upd©ïidfûe
()

214 
fd
;

215 
buf
[42];

216 
size_t
 
buf_Àn
;

218 i‡(
	`SNCHECK
(
	`¢¥ötf
(
buf
,  buf, "%lu\n",

219 (Ë
	`gëpid
()),  
buf
)) {

222 i‡(
	`u∆ök
(
authd_pid_fûe
Ë!0 && 
î∫o
 !
ENOENT
) {

225 i‡((
fd
 = 
	`›í
(
authd_pid_fûe
, 
O_CREAT
 | 
O_WRONLY
 | 
O_TRUNC
 |

226 
O_NOFOLLOW
, (
mode_t
) 0644)) == -1) {

229 
buf_Àn
 = 
	`°æí
(
buf
);

230 i‡(
	`ß„_wrôe
(
fd
, 
buf
, 
buf_Àn
, -1Ë!(
ssize_t
) buf_len) {

231 
	`·runˇã
(
fd
, (
off_t
) 0);

233 
	`˛o£
(
fd
);

234 
	}
}

236 
	$ˇŒback_˛õ¡_accou¡
(c⁄° *
°r
)

238 
	`√wív_°r
(
ENV_AUTHD_ACCOUNT
, 
°r
);

239 
	}
}

241 
	$ˇŒback_˛õ¡_∑ssw‹d
(c⁄° *
°r
)

243 
	`√wív_°r
(
ENV_AUTHD_PASSWORD
, 
°r
);

244 
	}
}

246 
	$ˇŒback_˛õ¡_ß_ho°
(c⁄° *
°r
)

248 
	`√wív_°r
(
ENV_AUTHD_SA_HOST
, 
°r
);

249 
	}
}

251 
	$ˇŒback_˛õ¡_ß_p‹t
(c⁄° *
°r
)

253 
	`√wív_°r
(
ENV_AUTHD_SA_PORT
, 
°r
);

254 
	}
}

256 
	$ˇŒback_˛õ¡_≥î_ho°
(c⁄° *
°r
)

258 
	`√wív_°r
(
ENV_AUTHD_PEER_HOST
, 
°r
);

259 
	}
}

261 
	$ˇŒback_˛õ¡_í¸y±ed
(c⁄° *
°r
)

263 
	`√wív_°r
(
ENV_AUTHD_ENCRYPTED
, 
°r
);

264 
	}
}

266 
	$ˇŒback_˛õ¡_íd
(c⁄° *
°r
)

268 (Ë
°r
;

269 
íded
 = 1;

270 
	}
}

272 
	$¥o˚ss
(c⁄° 
˛õ¡fd
)

274 
ssize_t
 
ªadnb
;

275 *
löï¡
;

276 *
¸poöt
;

277 
pid_t
 
pid
;

278 
pfds
[2];

279 
löe
[4096];

281 (
ªadnb
 = 
	`ªad
(
˛õ¡fd
, 
löe
, Üöê- 1U)Ë< (
ssize_t
) 0 &&

282 (
î∫o
 =
EINTR
 ||Éºnÿ=
EIO
));

283 i‡(
ªadnb
 <(
ssize_t
) 0) {

286 
löe
[
ªadnb
] = 0;

287 i‡(
	`pùe
(
pfds
) != 0) {

290 
pid
 = 
	`f‹k
();

291 i‡(
pid
 =(
pid_t
) -1) {

292 
	`˛o£
(
pfds
[0]);

293 
	`˛o£
(
pfds
[1]);

296 i‡(
pid
 !(
pid_t
) 0) {

297 
	`˛o£
(
pfds
[1]);

298 i‡((
ªadnb
 = 
	`ß„_ªad
(
pfds
[0], 
löe
,

299  
löe
 - 1U)Ë> (
ssize_t
) 0) {

300 (Ë
	`ß„_wrôe
(
˛õ¡fd
, 
löe
, 
ªadnb
, -1);

302 #ifde‡
HAVE_WAITPID


303 (Ë
	`waôpid
(
pid
, 
NULL
, 0);

305 
	`waô3
(
NULL
, 0, NULLË!
pid
);

307 
	`˛o£
(
pfds
[0]);

311 
	`˛o£
(
˛õ¡fd
);

312 
	`˛o£
(
ködy
);

313 
	`˛o£
(
pfds
[0]);

314 
	`˛o£desc_Æl
(1);

315 
löï¡
 = 
löe
;

316 (
¸poöt
 = 
	`°rchr
(
löï¡
, '\n')Ë!
NULL
) {

317 c⁄° 
ExèuthdCÆlBack
 *
sˇ¬ed
;

318 
size_t
 
keyw‹d_Àn
;

320 *
¸poöt
 = 0;

321 
sˇ¬ed
 = 
exèuthd_ˇŒbacks
;

322 
sˇ¬ed
->
keyw‹d
 !
NULL
) {

323 
keyw‹d_Àn
 = 
	`°æí
(
sˇ¬ed
->
keyw‹d
);

324 i‡(
	`°∫cmp
(
sˇ¬ed
->
keyw‹d
, 
löï¡
, 
keyw‹d_Àn
) == 0) {

325 
sˇ¬ed
->
	`func
(
löï¡
 + 
keyw‹d_Àn
);

328 
sˇ¬ed
++;

330 
löï¡
 = 
¸poöt
 + 1;

332 i‡(
íded
 == 0) {

333 
	`˛o£
(
pfds
[1]);

334 
	`_exô
(
EXIT_FAILURE
);

336 i‡(
	`dup2
(
pfds
[1], 1) == -1) {

337 
	`˛o£
(
pfds
[1]);

338 
	`_exô
(
EXIT_FAILURE
);

340 
	`˛o£
(
pfds
[1]);

341 #ifde‡
DO_AUTHD_TIMEOUT


342 (Ë
	`Æ¨m
(
AUTHD_SCRIPT_TIMEOUT
);

344 (Ë
	`exe˛
(
s¸ùt
, s¸ùt, (*Ë
NULL
);

346 
	`_exô
(
EXIT_SUCCESS
);

347 
	}
}

349 
	$li°í˙x
()

351 
sockaddr_un
 *
ßddr
;

352 
˛õ¡fd
;

353 
ªt
 = -1;

354 c⁄° 
size_t
 
sockë∑th_Àn
 = 
	`°æí
(
sockë∑th
);

356 i‡((
ßddr
 = 
	`mÆloc
((*ßddrË+ 
sockë∑th_Àn
 +

357 (
size_t
Ë1U)Ë=
NULL
) {

358 
	`≥º‹
("No more memoryÅoÜistenÅoánything");

359 
bye
;

361 
	`mem˝y
(
ßddr
->
sun_∑th
, 
sockë∑th
, 
sockë∑th_Àn
 + (
size_t
) 1U);

362 
ßddr
->
sun_Ámûy
 = 
AF_UNIX
;

363 (Ë
	`u∆ök
(
sockë∑th
);

364 (Ë
	`umask
(077);

365 i‡((
ködy
 = 
	`sockë
(
AF_UNIX
, 
SOCK_STREAM
, 0)) == -1) {

366 
	`≥º‹
("UnableÅo createáÜocal socket");

367 
bye
;

369 
	`£t˛€xec
(
ködy
);

370 i‡(
	`böd
(
ködy
, (
sockaddr
 *Ë
ßddr
, 
	`SUN_LEN
(saddr)) != 0) {

371 
	`≥º‹
("UnableÅo bindáÜocal socket");

372 
bye
;

374 i‡(
	`chmod
(
sockë∑th
, 0600) != 0) {

375 
	`≥º‹
("UnableÅo changeÖerms onÅheÜocal socket");

376 
bye
;

378 i‡(
	`li°í
(
ködy
, 
AUTHD_BACKLOG
) != 0) {

379 
	`≥º‹
("UnableÅoÜistenÅheÜocal socket");

380 
bye
;

383 i‡((
˛õ¡fd
 = 
	`ac˚±
(
ködy
, 
NULL
, NULL)) == -1) {

384 i‡(
exô_authd
 != 0) {

387 (Ë
	`¶ìp
(1);

390 
	`£t˛€xec
(
˛õ¡fd
);

391 
	`¥o˚ss
(
˛õ¡fd
);

392 
	`˛o£
(
˛õ¡fd
);

393 } 
exô_authd
 == 0);

394 
ªt
 = 0;

396 
bye
:

397 i‡(
ködy
 != -1) {

398 
	`˛o£
(
ködy
);

399 
ködy
 = -1;

401 (Ë
	`u∆ök
(
sockë∑th
);

402 
	`‰ì
(
ßddr
);

404  
ªt
;

405 
	}
}

407 
RETSIGTYPE
 
	$sigãrm
(
sig
)

409 (Ë
sig
;

411 
exô_authd
 = 1;

412 i‡(
ködy
 != -1) {

413 
	`˛o£
(
ködy
);

414 
ködy
 = -1;

416 
	}
}

418 
	$maö
(
¨gc
, *
¨gv
[])

420 
îr
;

422 #ifde‡
HAVE_SETLOCALE


423 #ifde‡
LC_MESSAGES


424 (Ë
	`£éoˇÀ
(
LC_MESSAGES
, "");

426 #ifde‡
LC_CTYPE


427 (Ë
	`£éoˇÀ
(
LC_CTYPE
, "");

429 #ifde‡
LC_COLLATE


430 (Ë
	`£éoˇÀ
(
LC_COLLATE
, "");

433 i‡(
	`öô
() < 0) {

436 (Ë
	`sig«l
(
SIGTERM
, 
sigãrm
);

437 (Ë
	`sig«l
(
SIGQUIT
, 
sigãrm
);

438 (Ë
	`sig«l
(
SIGINT
, 
sigãrm
);

439 #ifde‡
SIGXCPU


440 (Ë
	`sig«l
(
SIGXCPU
, 
sigãrm
);

442 i‡(
	`∑r£›ti⁄s
(
¨gc
, 
¨gv
) < 0) {

445 i‡(
s¸ùt
 =
NULL
 || *script != '/') {

446 
	`Ârötf
(
°dîr
, "You must give -r /path/to/auth/program\n");

449 i‡(
sockë∑th
 =
NULL
 || *socketpath == 0) {

450 
	`Ârötf
(
°dîr
, "You must give -s /path/to/socket\n");

453 i‡(
d´m⁄ize
 != 0) {

454 
	`dod´m⁄ize
();

456 
	`upd©ïidfûe
();

457 i‡(
	`ch™geuidgid
() < 0) {

458 
	`≥º‹
("Identity change");

459 (Ë
	`u∆ök
(
authd_pid_fûe
);

462 #ifde‡
SIGPIPE


463 
	`sig«l
(
SIGPIPE
, 
SIG_IGN
);

465 #ifde‡
SIGCHLD


466 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

468 
îr
 = 
	`li°í˙x
();

469 (Ë
	`u∆ök
(
authd_pid_fûe
);

471  
îr
;

472 
	}
}

	@src/pure-authd_p.h

1 #i‚de‡
__PURE_AUTHD_P_H__


2 
	#__PURE_AUTHD_P_H__
 1

	)

4 #ifde‡
WITH_EXTAUTH


6 #i‚de‡
HAVE_GETOPT_LONG


7 
	~"bsd-gë›t_l⁄g.h
"

9 
	~<gë›t.h
>

12 #ifde‡
HAVE_SYS_WAIT_H


13 
	~<sys/waô.h
>

16 
	~<sys/un.h
>

18 #i‚de‡
SUN_LEN


19 
	#SUN_LEN
(
±r
Ë((
size_t
Ë(((
sockaddr_un
 *Ë
NULL
)->
sun_∑th
) \

20 + 
	`°æí
((
±r
)->
sun_∑th
))

	)

23 #i‚de‡
AUTHD_BACKLOG


24 
	#AUTHD_BACKLOG
 42

	)

27 c⁄° *
	gGETOPT_OPTIONS
 =

29 #i‚de‡
NO_GETOPT_LONG


34 #i‚de‡
NO_GETOPT_LONG


35 
›ti⁄
 
	gl⁄g_›ti⁄s
[] = {

36 { "d´m⁄ize", 0, 
NULL
, 'B' },

37 { "gid", 1, 
NULL
, 'g' },

38 #i‚de‡
NO_GETOPT_LONG


39 { "hñp", 0, 
NULL
, 'h' },

41 { "pidfûe", 1, 
NULL
, 'p' },

42 { "run", 1, 
NULL
, 'r' },

43 { "sockë", 1, 
NULL
, 's' },

44 { "uid", 1, 
NULL
, 'u' },

45 { 
NULL
, 0, NULL, 0 }

49 sig√d 
	gd´m⁄ize
;

50 
uid_t
 
	guid
;

51 
gid_t
 
	ggid
;

52 c⁄° *
	gsockë∑th
;

53 c⁄° *
	gauthd_pid_fûe
 = 
AUTHD_PID_FILE
;

54 c⁄° *
	gs¸ùt
;

55 vﬁ©ûêsig√d 
	gexô_authd
;

56 vﬁ©ûê
	gködy
 = -1;

57 vﬁ©ûêsig√d 
	gíded
;

59 
ˇŒback_˛õ¡_accou¡
(c⁄° *
°r
);

60 
ˇŒback_˛õ¡_∑ssw‹d
(c⁄° *
°r
);

61 
ˇŒback_˛õ¡_ß_ho°
(c⁄° *
°r
);

62 
ˇŒback_˛õ¡_ß_p‹t
(c⁄° *
°r
);

63 
ˇŒback_˛õ¡_≥î_ho°
(c⁄° *
°r
);

64 
ˇŒback_˛õ¡_í¸y±ed
(c⁄° *
°r
);

65 
ˇŒback_˛õ¡_íd
(c⁄° *
°r
);

67 
	sExèuthdCÆlBack_
 {

68 c⁄° *
	mkeyw‹d
;

69 (*
	mfunc
)(c⁄° *
	m°r
);

70 } 
	tExèuthdCÆlBack
;

72 
ExèuthdCÆlBack
 
	gexèuthd_ˇŒbacks
[] = {

73 { 
EXTAUTH_CLIENT_ACCOUNT
, 
ˇŒback_˛õ¡_accou¡
 } ,

74 { 
EXTAUTH_CLIENT_PASSWORD
, 
ˇŒback_˛õ¡_∑ssw‹d
 },

75 { 
EXTAUTH_CLIENT_SA_HOST
, 
ˇŒback_˛õ¡_ß_ho°
 },

76 { 
EXTAUTH_CLIENT_SA_PORT
, 
ˇŒback_˛õ¡_ß_p‹t
 },

77 { 
EXTAUTH_CLIENT_PEER_HOST
, 
ˇŒback_˛õ¡_≥î_ho°
 },

78 { 
EXTAUTH_CLIENT_ENCRYPTED
, 
ˇŒback_˛õ¡_í¸y±ed
 },

79 { 
EXTAUTH_CLIENT_END
, 
ˇŒback_˛õ¡_íd
 },

80 { 
NULL
, 
ˇŒback_˛õ¡_íd
 }

83 
	#ENV_AUTHD_ACCOUNT
 "AUTHD_ACCOUNT"

	)

84 
	#ENV_AUTHD_PASSWORD
 "AUTHD_PASSWORD"

	)

85 
	#ENV_AUTHD_SA_HOST
 "AUTHD_LOCAL_IP"

	)

86 
	#ENV_AUTHD_SA_PORT
 "AUTHD_LOCAL_PORT"

	)

87 
	#ENV_AUTHD_PEER_HOST
 "AUTHD_REMOTE_IP"

	)

88 
	#ENV_AUTHD_ENCRYPTED
 "AUTHD_ENCRYPTED"

	)

90 
	#AUTHD_SCRIPT_TIMEOUT
 60U

	)

	@src/pure-ftpwho.c

1 
	~<c⁄fig.h
>

3 #i‚de‡
FTPWHO


4 
	~<°dio.h
>

6 
	$maö
()

8 
	`puts
("Please compileÅhe server with --with-ftpwho\n"

12 
	}
}

15 
	~"·pd.h
"

16 
	~"dy«mic.h
"

17 
	~"·pwho-upd©e.h
"

19 #i‚de‡
HAVE_GETOPT_LONG


20 
	~"bsd-gë›t_l⁄g.h
"

22 
	~<gë›t.h
>

25 #ifde‡
WITH_DMALLOC


26 
	~<dmÆloc.h
>

29 
	gmm≠_fd
 = -1;

30 sig√d 
	ghtml_øw
;

31 sig√d 
	ghtml_cgi
;

32 sig√d 
	gvîbo£
;

33 sig√d 
	gd⁄t_ªsﬁve_ù
;

34 
Êock
 
	glock
;

36 
	$·pwho_u∆ock
()

38 
lock
.
l_ty≥
 = 
F_UNLCK
;

39 
	`f˙é
(
mm≠_fd
, 
F_SETLK
, &
lock
) < 0) {

40 i‡(
î∫o
 !
EINTR
) {

44 
	}
}

46 
	$·pwho_lock
()

48 
lock
.
l_ty≥
 = 
F_RDLCK
;

49 
	`f˙é
(
mm≠_fd
, 
F_SETLKW
, &
lock
) < 0) {

50 i‡(
î∫o
 !
EINTR
) {

54 
	}
}

56 
RETSIGTYPE
 
	$sigÂe
(
sig
)

58 (Ë
sig
;

59 
	`Ârötf
(
°dîr
, "* ArithmeticÉxception *\n\n"

63 
	`exô
(
EXIT_FAILURE
);

64 
	}
}

66 
RETSIGTYPE
 
	$sig£gv
(
sig
)

68 (Ë
sig
;

69 
	`Ârötf
(
°dîr
, "* This version ofÖure-ftpwho isÇot compatible *\n"

72 
	`exô
(
EXIT_FAILURE
);

73 
	}
}

75 
	$fixlimôs
()

77 #ifde‡
HAVE_SETRLIMIT


78 
æimô
 
lim
;

80 
lim
.
æim_max
 =Üim.
æim_cur
 = 
MAX_CPU_TIME
;

81 
	`£ålimô
(
RLIMIT_CPU
, &
lim
);

82 
lim
.
æim_max
 =Üim.
æim_cur
 = 
MAX_DATA_SIZE
;

83 
	`£ålimô
(
RLIMIT_DATA
, &
lim
);

84 #i‚de‡
DEBUG


85 
lim
.
æim_max
 =Üim.
æim_cur
 = 0;

86 
	`£ålimô
(
RLIMIT_CORE
, &
lim
);

89 
	}
}

91 
	$logfûe
(c⁄° 
Ácûôy
, c⁄° *
f‹m©
, ...)

93 
va_li°
 
va
;

95 (Ë
Ácûôy
;

96 
	`va_°¨t
(
va
, 
f‹m©
);

97 
	`vÂrötf
(
°dîr
, 
f‹m©
, 
va
);

98 
	`va_íd
(
va
);

99 
	`Ârötf
(
°dîr
, "\n");

100 
	}
}

102 
	$check¥oc
(c⁄° 
pid_t
 
¥oc
)

104  
	`kûl
(
¥oc
, 0Ë=0 || 
î∫o
 =
EPERM
;

105 
	}
}

109 
	$ãxt_ouçut_hódî
()

111 i‡(
vîbo£
 == 0) {

112 
	`puts
("\n"

117 
	`puts
("\n"

122 
	}
}

124 
	$ãxt_ouçut_löe
(c⁄° 
pid_t
 
pid
, c⁄° * c⁄° 
accou¡
,

125 c⁄° 
sö˚
,

126 c⁄° 
x„r_sö˚
,

127 c⁄° * c⁄° 
°©e
,

128 c⁄° * c⁄° 
fûíame
,

129 c⁄° * c⁄° 
hbuf
,

130 c⁄° * c⁄° 
loˇl_hbuf
,

131 c⁄° * c⁄° 
loˇl_p‹t
,

132 c⁄° 
off_t
 
ª°¨èt
,

133 c⁄° 
off_t
 
tŸÆ_size
,

134 c⁄° 
off_t
 
cuºít_size
)

136 
b™dwidth
 = 0UL;

137 
p˘
;

138 
p˘i
 = 0;

140 i‡(
cuºít_size
 > (
off_t
Ë0 && cuºít_sizê> 
ª°¨èt
) {

141 i‡(
x„r_sö˚
 > 0UL) {

142 
b™dwidth
 = (Ë((
cuºít_size
 - 
ª°¨èt
Ë/ 
x„r_sö˚
);

144 i‡((Ë
tŸÆ_size
 > 0.0L) {

145 
p˘
 = ((Ë
cuºít_size
 * 100.0Ë/ (Ë
tŸÆ_size
;

146 
p˘i
 = (Ë(
p˘
 + 0.5L);

147 i‡(
p˘i
 > 100) {

148 
p˘i
 = 100;

152 
	`¥ötf
("|%5lu | %-8s| %02lu:%02lu | %s | %-42s|\n",

153 (Ë
pid
, 
accou¡
,

154 (
sö˚
 / 60UL) / 60UL, (since / 60UL) % 60UL,

155 
°©e
, 
fûíame
);

156 
	`¥ötf
("| '' | '' |");

157 i‡(
b™dwidth
 > 0UL) {

158 i‡(
b™dwidth
 < 1024UL) {

159 
	`¥ötf
("%4lub/s|", 
b™dwidth
);

161 
b™dwidth
 /= 1024UL;

162 i‡(
b™dwidth
 < 1024UL) {

163 
	`¥ötf
("%4luK/s|", 
b™dwidth
);

165 
b™dwidth
 /= 1024UL;

166 i‡(
b™dwidth
 < 1024UL) {

167 
	`¥ötf
("%4luM/s|", 
b™dwidth
);

169 
b™dwidth
 /= 1024UL;

170 i‡(
b™dwidth
 < 1024UL) {

171 
	`¥ötf
("%4luG/s|", 
b™dwidth
);

173 
	`¥ötf
(" '' |");

179 
	`¥ötf
(" '' |");

181 i‡(
p˘i
 > 0) {

182 
	`¥ötf
(" %3d%% |", 
p˘i
);

184 
	`¥ötf
(" '' |");

186 
	`¥ötf
(" ->%39.39†|\n", 
hbuf
);

187 i‡(
vîbo£
 != 0) {

188 i‡(
cuºít_size
 > 0) {

189 i‡(
tŸÆ_size
 > 0) {

190 
	`¥ötf
("| '' | '' | | | Total size:%9llu Transfered:%9llu |\n",

191 (Ë(
tŸÆ_size
 / 1024),

192 (Ë(
cuºít_size
 / 1024));

194 
	`¥ötf
("| '' | '' | | | Transfered: %-29llu |\n",

195 (Ë(
cuºít_size
 / 1024));

198 
	`¥ötf
("| '' | '' | | | <-%33.33s:%-5.5s |\n",

199 
loˇl_hbuf
, 
loˇl_p‹t
);

201 
	`puts
("+------+---------+-------+------+-------------------------------------------+");

202 
	}
}

204 
	$ãxt_ouçut_foŸî
()

206 
	`puts
("");

207 
	}
}

209 *
	$xml_esˇ≥d
(c⁄° *c⁄° 
s_
) {

210 
buf
[
MAXPATHLEN
 + 32U];

211 c⁄° *
s
 = (c⁄° *Ë
s_
;

212 *
buÂ¡
 = 
buf
;

213 
size_t
 
À·
 =  
buf
 - (size_t) 1U;

215 
À·
 > (
size_t
Ë0U && *
s
 != 0U) {

216 i‡(
	`ISCTRLCODE
(*
s
)) {

217 i‡(
À·
 <(
size_t
) 0U) {

218 *
buÂ¡
 = 0;

219  
buf
;

221 *
buÂ¡
++ = '?';

222 
À·
--;

223 
√xt
;

225 *
s
) {

227 i‡(
À·
 <  "&…;" - (
size_t
) 1U) {

228 *
buÂ¡
 = 0;

229  
buf
;

231 *
buÂ¡
++ = '&'; *bufpnt++ = 'l'; *bufpnt++ = 't'; *bufpnt++ = ';';

232 
À·
 - "&…;" - (
size_t
) 1U;

235 i‡(
À·
 <  "&gt;" - (
size_t
) 1U) {

236 *
buÂ¡
 = 0;

237  
buf
;

239 *
buÂ¡
++ = '&'; *bufpnt++ = 'g'; *bufpnt++ = 't'; *bufpnt++ = ';';

240 
À·
 - "&gt;" - (
size_t
) 1U;

243 i‡(
À·
 <  "&amp;" - (
size_t
) 1U) {

244 *
buÂ¡
 = 0;

245  
buf
;

247 *
buÂ¡
++ = '&'; *bufpnt++ = 'a'; *bufpnt++ = 'm'; *bufpnt++ = 'p';

248 *
buÂ¡
++ = ';';

249 
À·
 - "&amp;" - (
size_t
) 1U;

252 *
buÂ¡
++ = (Ë*
s
;

253 
À·
--;

255 
√xt
:

256 
s
++;

258 *
buÂ¡
 = 0;

260  
buf
;

261 
	}
}

265 *
	$html_esˇ≥d
(c⁄° *c⁄° 
s_
) {

266  
	`xml_esˇ≥d
(
s_
);

267 
	}
}

269 
	$html_ouçut_hódî
()

271 i‡(
html_cgi
 != 0) {

272 
	`puts
("Content-Type:Åext/html\n");

274 i‡(
html_øw
 == 0) {

275 
	`puts
("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n"

321 
	`puts
("<div id=\"ftp-status\">\n"

336 
	}
}

338 
	$html_ouçut_löe
(c⁄° 
pid_t
 
pid
, c⁄° * c⁄° 
accou¡
,

339 c⁄° 
sö˚
,

340 c⁄° 
x„r_sö˚
,

341 c⁄° * c⁄° 
°©e
,

342 c⁄° * c⁄° 
fûíame
,

343 c⁄° * c⁄° 
hbuf
,

344 c⁄° * c⁄° 
loˇl_hbuf
,

345 c⁄° * c⁄° 
loˇl_p‹t
,

346 c⁄° 
off_t
 
ª°¨èt
,

347 c⁄° 
off_t
 
tŸÆ_size
,

348 c⁄° 
off_t
 
cuºít_size
)

350 
	`puts
(" <tr>");

351 
	`¥ötf
(" <th sc›e=\"row\">%lu</th>\n", (Ë
pid
);

352 
	`¥ötf
(" <td>%s</td>\n",

353 *
accou¡
 =0 ? "&nb•;" : 
	`html_esˇ≥d
(account));

354 
	`¥ötf
(" <td>%02lu:%02lu</td>\n",

355 (
sö˚
 / 60UL) / 60UL, (since / 60UL) % 60UL);

356 
	`¥ötf
(" <td>%s</td>\n", 
	`html_esˇ≥d
(
°©e
));

357 
	`¥ötf
(" <td>%s</td>\n",

358 *
fûíame
 =0 ? "&nb•;" : 
	`html_esˇ≥d
(filename));

359 
	`¥ötf
(" <td>%s</td>\n", 
	`html_esˇ≥d
(
hbuf
));

360 i‡(
cuºít_size
 > (
off_t
) 0) {

361 
b™dwidth
;

363 i‡(
x„r_sö˚
 > 0UL && 
cuºít_size
 > 
ª°¨èt
) {

364 
b™dwidth
 = (Ë((
cuºít_size
 - 
ª°¨èt
) /

365 (
x„r_sö˚
 * 1024UL));

367 
b™dwidth
 = 0UL;

369 i‡((Ë
tŸÆ_size
 > 0.0L) {

370 
p˘
;

371 
p˘i
;

373 
p˘
 = ((Ë
cuºít_size
 * 100.0LË/ (Ë
tŸÆ_size
;

374 
p˘i
 = (Ë(
p˘
 + 0.5L);

375 i‡(
p˘i
 > 100) {

376 
p˘i
 = 100;

378 
	`¥ötf
(" <td>%llu/%llu (%d%% - %lu KB/s)</td>\n",

379 (Ë(
cuºít_size
 / 1024),

380 (Ë(
tŸÆ_size
 / 1024),

381 
p˘i
, 
b™dwidth
);

383 
	`¥ötf
(" <td>%llu (%lu KB/s)</td>\n",

384 (Ë(
cuºít_size
 / 1024),

385 
b™dwidth
);

388 
	`puts
(" <td>&nbsp;</td>");

390 
	`¥ötf
(" <td>%s:", 
	`html_esˇ≥d
(
loˇl_hbuf
));

391 
	`¥ötf
("%s</td>\n", 
	`html_esˇ≥d
(
loˇl_p‹t
));

392 
	`puts
(" </tr>");

393 
	}
}

395 
	$html_ouçut_foŸî
()

397 
	`puts
(" </tbody>\n"

400 i‡(
html_øw
 == 0) {

401 
	`puts
("</body>\n"

404 
	}
}

408 
	$xml_ouçut_hódî
()

410 
	`puts
("<?xml version=\"1.0\"Éncoding=\"ISO-8859-15\"?>\n"

412 
	}
}

414 
	$xml_ouçut_löe
(c⁄° 
pid_t
 
pid
, c⁄° * c⁄° 
accou¡
,

415 c⁄° 
sö˚
,

416 c⁄° 
x„r_sö˚
,

417 c⁄° * c⁄° 
°©e
,

418 c⁄° * c⁄° 
fûíame
,

419 c⁄° * c⁄° 
hbuf
,

420 c⁄° * c⁄° 
loˇl_hbuf
,

421 c⁄° * c⁄° 
loˇl_p‹t
,

422 c⁄° 
off_t
 
ª°¨èt
,

423 c⁄° 
off_t
 
tŸÆ_size
,

424 c⁄° 
off_t
 
cuºít_size
)

426 
	`¥ötf
(" <client");

427 
	`¥ötf
("Öid=\"%lu\"", (Ë
pid
);

428 
	`¥ötf
("áccou¡=\"%s\"", 
	`xml_esˇ≥d
(
accou¡
));

429 
	`¥ötf
("Åime=\"%lu\"", 
sö˚
);

430 
	`¥ötf
(" sèã=\"%s\"", 
°©e
);

431 
	`¥ötf
(" fûe=\"%s\"", 
	`xml_esˇ≥d
(
fûíame
));

432 
	`¥ötf
(" ho°=\"%s\"", 
	`xml_esˇ≥d
(
hbuf
));

433 
	`¥ötf
("Üoˇlho°=\"%s\"", 
	`xml_esˇ≥d
(
loˇl_hbuf
));

434 
	`¥ötf
("ÜoˇÕ‹t=\"%s\"", 
	`xml_esˇ≥d
(
loˇl_p‹t
));

435 i‡(
cuºít_size
 > (
off_t
) 0) {

436 
b™dwidth
;

437 
p˘
;

438 
p˘i
;

440 i‡(
x„r_sö˚
 > 0UL && 
cuºít_size
 > 
ª°¨èt
) {

441 
b™dwidth
 = (Ë((
cuºít_size
 - 
ª°¨èt
Ë/ 
x„r_sö˚
);

443 
b™dwidth
 = 0UL;

445 i‡((Ë
tŸÆ_size
 > 0.0L) {

446 
p˘
 = ((Ë
cuºít_size
 * 100.0LË/ (Ë
tŸÆ_size
;

447 
p˘i
 = (Ë(
p˘
 + 0.5L);

448 i‡(
p˘i
 > 100) {

449 
p˘i
 = 100;

451 
	`¥ötf
("Ñesume=\"%Œu\"", (Ë
ª°¨èt
);

452 
	`¥ötf
(" cuºít_size=\"%Œu\"", (Ë
cuºít_size
);

453 
	`¥ötf
("ÅŸÆ_size=\"%Œu\"", (Ë
tŸÆ_size
);

454 
	`¥ötf
("Öî˚¡age=\"%d\"", 
p˘i
);

455 
	`¥ötf
(" b™dwidth=\"%lu\"", 
b™dwidth
);

457 
	`¥ötf
("Ñesume=\"%Œu\"", (Ë
ª°¨èt
);

458 
	`¥ötf
(" cuºít_size=\"%Œu\"", (Ë
cuºít_size
);

459 
	`¥ötf
(" b™dwidth=\"%lu\"", 
b™dwidth
);

462 
	`puts
(" />");

463 
	}
}

465 
	$xml_ouçut_foŸî
()

467 
	`puts
("</status>");

468 
	}
}

472 
	$∂i°_ouçut_hódî
()

474 
	`puts
("<?xml version=\"1.0\"Éncoding=\"ISO-8859-15\"?>");

475 
	`puts
("<!DOCTYPEÖlist PUBLIC \"-//Apple Computer//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">");

476 
	`puts
("<plist version=\"1.0\">\n<dict>");

477 
	`puts
("\t<key>user-info</key>\n\t<array>");

478 
	}
}

480 
	$∂i°_ouçut_löe
(c⁄° 
pid_t
 
pid
, c⁄° * c⁄° 
accou¡
,

481 c⁄° 
sö˚
,

482 c⁄° 
x„r_sö˚
,

483 c⁄° * c⁄° 
°©e
,

484 c⁄° * c⁄° 
fûíame
,

485 c⁄° * c⁄° 
hbuf
,

486 c⁄° * c⁄° 
loˇl_hbuf
,

487 c⁄° * c⁄° 
loˇl_p‹t
,

488 c⁄° 
off_t
 
ª°¨èt
,

489 c⁄° 
off_t
 
tŸÆ_size
,

490 c⁄° 
off_t
 
cuºít_size
)

492 
	`puts
("\t\t<dict>");

493 
	`puts
("\t\t\t<key>pid</key>");

494 
	`¥ötf
("\t\t\t<°rög>%lu</°rög>\n", (Ë
pid
);

495 
	`puts
("\t\t\t<key>account</key>");

496 
	`¥ötf
("\t\t\t<°rög>%s</°rög>\n", 
	`xml_esˇ≥d
(
accou¡
));

497 
	`puts
("\t\t\t<key>time</key>");

498 
	`¥ötf
("\t\t\t<°rög>%lu</°rög>\n", 
sö˚
);

499 
	`puts
("\t\t\t<key>state</key>");

500 
	`¥ötf
("\t\t\t<°rög>%s</°rög>\n", 
°©e
);

501 
	`puts
("\t\t\t<key>file</key>");

502 
	`¥ötf
("\t\t\t<°rög>%s</°rög>\n", 
	`xml_esˇ≥d
(
fûíame
));

503 
	`puts
("\t\t\t<key>host</key>");

504 
	`¥ötf
("\t\t\t<°rög>%s</°rög>\n", 
	`xml_esˇ≥d
(
hbuf
));

505 
	`puts
("\t\t\t<key>localhost</key>");

506 
	`¥ötf
("\t\t\t<°rög>%s</°rög>\n", 
	`xml_esˇ≥d
(
loˇl_hbuf
));

507 
	`puts
("\t\t\t<key>localport</key>");

508 
	`¥ötf
("\t\t\t<°rög>%s</°rög>\n", 
	`xml_esˇ≥d
(
loˇl_p‹t
));

510 i‡(
cuºít_size
 > (
off_t
) 0) {

511 
b™dwidth
;

512 
p˘
;

513 
p˘i
;

515 i‡(
x„r_sö˚
 > 0UL && 
cuºít_size
 > 
ª°¨èt
) {

516 
b™dwidth
 = (Ë((
cuºít_size
 - 
ª°¨èt
Ë/ 
x„r_sö˚
);

518 
b™dwidth
 = 0UL;

520 i‡((Ë
tŸÆ_size
 > 0.0L) {

521 
p˘
 = ((Ë
cuºít_size
 * 100.0LË/ (Ë
tŸÆ_size
;

522 
p˘i
 = (Ë(
p˘
 + 0.5L);

523 i‡(
p˘i
 > 100) {

524 
p˘i
 = 100;

526 
	`puts
("\t\t\t<key>resume</key>");

527 
	`¥ötf
("\t\t\t<°rög>%Œu</°rög>\n", (Ë
ª°¨èt
);

528 
	`puts
("\t\t\t<key>current_size</key>");

529 
	`¥ötf
("\t\t\t<°rög>%Œu</°rög>\n", (Ë
cuºít_size
);

530 
	`puts
("\t\t\t<key>total_size</key>");

531 
	`¥ötf
("\t\t\t<°rög>%Œu</°rög>\n", (Ë
tŸÆ_size
);

532 
	`puts
("\t\t\t<key>percentage</key>");

533 
	`¥ötf
("\t\t\t<°rög>%d</°rög>\n", 
p˘i
);

534 
	`puts
("\t\t\t<key>bandwidth</key>");

535 
	`¥ötf
("\t\t\t<°rög>%lu</°rög>\n", 
b™dwidth
);

537 
	`puts
("\t\t\t<key>resume</key>");

538 
	`¥ötf
("\t\t\t<°rög>%Œu</°rög>\n", (Ë
ª°¨èt
);

539 
	`puts
("\t\t\t<key>current_size</key>");

540 
	`¥ötf
("\t\t\t<°rög>%Œu</°rög>\n", (Ë
cuºít_size
);

541 
	`puts
("\t\t\t<key>bandwidth</key>");

542 
	`¥ötf
("\t\t\t<°rög>%lu</°rög>\n", 
b™dwidth
);

545 
	`puts
("\t\t\t<key>resume</key>");

546 
	`puts
("\t\t\t<string></string>");

547 
	`puts
("\t\t\t<key>current_size</key>");

548 
	`puts
("\t\t\t<string></string>");

549 
	`puts
("\t\t\t<key>total_size</key>");

550 
	`puts
("\t\t\t<string></string>");

551 
	`puts
("\t\t\t<key>percentage</key>");

552 
	`puts
("\t\t\t<string></string>");

553 
	`puts
("\t\t\t<key>bandwidth</key>");

554 
	`puts
("\t\t\t<string></string>");

556 
	`puts
("\t\t</dict>");

557 
	}
}

559 
	$∂i°_ouçut_foŸî
()

561 
	`puts
("\t</array>");

562 
	`puts
("</dict>\n</plist>");

563 
	}
}

567 c⁄° *
	$shñl_esˇ≥d
(c⁄° * c⁄° 
s_
)

569 c⁄° *
s
 = (c⁄° *Ë
s_
;

570 
buf
[
MAXPATHLEN
 + 32U];

571 c⁄° * c⁄° 
bu„nd
 = &
buf
[ bu‡- (
size_t
) 1U];

572 *
buÂ¡
 = 
buf
;

574 *
s
 != 0U) {

575 i‡(
	`ISCTRLCODE
(*
s
)) {

576 *
buÂ¡
 = '_';

577 } i‡(*
s
 == '|' || *s == '\\') {

578 i‡(
buÂ¡
 =
bu„nd
) {

581 *
buÂ¡
++ = '\\';

582 i‡(
buÂ¡
 =
bu„nd
) {

583 
buÂ¡
--;

586 *
buÂ¡
 = (Ë*
s
;

588 *
buÂ¡
 = (Ë*
s
;

590 i‡(
buÂ¡
 =
bu„nd
) {

593 
buÂ¡
++;

594 
s
++;

596 *
buÂ¡
 = 0;

598  
buf
;

599 
	}
}

601 
	$shñl_ouçut_hódî
()

603 
	}
}

605 
	$shñl_ouçut_löe
(c⁄° 
pid_t
 
pid
, c⁄° * c⁄° 
accou¡
,

606 c⁄° 
sö˚
,

607 c⁄° 
x„r_sö˚
,

608 c⁄° * c⁄° 
°©e
,

609 c⁄° * c⁄° 
fûíame
,

610 c⁄° * c⁄° 
hbuf
,

611 c⁄° * c⁄° 
loˇl_hbuf
,

612 c⁄° * c⁄° 
loˇl_p‹t
,

613 c⁄° 
off_t
 
ª°¨èt
,

614 c⁄° 
off_t
 
tŸÆ_size
,

615 c⁄° 
off_t
 
cuºít_size
)

617 
b™dwidth
 = 0UL;

618 
p˘
;

619 
p˘i
 = 0;

621 i‡(
cuºít_size
 > (
off_t
) 0) {

622 i‡(
x„r_sö˚
 > 0UL && 
cuºít_size
 > 
ª°¨èt
) {

623 
b™dwidth
 = (Ë((
cuºít_size
 - 
ª°¨èt
) /

624 (
x„r_sö˚
 * 1024UL));

626 i‡((Ë
tŸÆ_size
 > 0.0L) {

627 
p˘
 = ((Ë
cuºít_size
 * 100.0LË/ (Ë
tŸÆ_size
;

628 
p˘i
 = (Ë(
p˘
 + 0.5L);

629 i‡(
p˘i
 > 100) {

630 
p˘i
 = 100;

634 
	`¥ötf
("%lu|", (Ë
pid
);

635 
	`¥ötf
("%s|", 
	`shñl_esˇ≥d
(
accou¡
));

636 
	`¥ötf
("%lu|", 
sö˚
);

637 
	`¥ötf
("%s|", 
	`shñl_esˇ≥d
(
°©e
));

638 
	`¥ötf
("%s|", 
	`shñl_esˇ≥d
(
fûíame
));

639 
	`¥ötf
("%s|", 
	`shñl_esˇ≥d
(
hbuf
));

640 
	`¥ötf
("%s|", 
	`shñl_esˇ≥d
(
loˇl_hbuf
));

641 
	`¥ötf
("%s|", 
	`shñl_esˇ≥d
(
loˇl_p‹t
));

642 
	`¥ötf
("%Œu|", (Ë(
cuºít_size
 / 1024));

643 
	`¥ötf
("%Œu|", (Ë(
tŸÆ_size
 / 1024));

644 
	`¥ötf
("%d|", 
p˘i
);

645 
	`¥ötf
("%lu\n", 
b™dwidth
);

646 
	}
}

648 
	$shñl_ouçut_foŸî
()

650 
	}
}

654 (*
ouçut_hódî
)(Ë
ãxt_ouçut_hódî
;

655 (*
ouçut_löe
)(c⁄° 
pid_t
 
pid
, c⁄° * c⁄° 
accou¡
,

656 c⁄° 
sö˚
,

657 c⁄° 
x„r_sö˚
,

658 c⁄° * c⁄° 
°©e
,

659 c⁄° * c⁄° 
fûíame
,

660 c⁄° * c⁄° 
hbuf
,

661 c⁄° * c⁄° 
loˇl_hbuf
,

662 c⁄° * c⁄° 
loˇl_p‹t
,

663 c⁄° 
off_t
 
ª°¨èt
,

664 c⁄° 
off_t
 
tŸÆ_size
,

665 c⁄° 
off_t
 
cuºít_size
Ë
ãxt_ouçut_löe
;

666 (*
ouçut_foŸî
)(Ë
ãxt_ouçut_foŸî
;

670 
	$hñp
()

672 
	`puts
("\nUsage :\n\n"

685 
	`exô
(
EXIT_SUCCESS
);

686 
	}
}

688 
	$˛o£desc_but1
()

690 
foddî
;

692 (Ë
	`˛o£
(0);

693 i‡((
foddî
 = 
	`›í
("/dev/nuŒ", 
O_RDONLY
)) == -1) {

696 (Ë
	`dup2
(
foddî
, 0);

697 i‡(
foddî
 > 0) {

698 (Ë
	`˛o£
(
foddî
);

700 i‡(
	`f˙é
(1, 
F_GETFD
) == -1) {

703 i‡(
	`f˙é
(2, 
F_GETFD
) != -1) {

704 i‡((
foddî
 = 
	`›í
("/dev/nuŒ", 
O_WRONLY
)) == -1) {

707 (Ë
	`dup2
(
foddî
, 2);

708 i‡(
foddî
 > 2) {

709 (Ë
	`˛o£
(
foddî
);

713 
	}
}

715 
	$maö
(
¨gc
, *
¨gv
[])

717 
DIR
 *
dú
;

718 
dúít
 *
íåy
;

719 
°©
 
°
;

720 
FTPWhoE¡ry
 *
sˇ¬ed_íåy
;

721 
locked
;

722 
dñëe_fûe
;

723 c⁄° *
°©e
;

724 
time_t
 
now
;

725 
foddî
;

727 #i‚de‡
NON_ROOT_FTP


728 i‡(
	`gëeuid
(Ë!(
uid_t
) 0) {

729 
	`puts
("You must beÑootÅoÑunÅhis. Sorry.");

733 i‡(
¨gc
 < 0) {

736 i‡(
	`˛o£desc_but1
() < 0) {

739 #ifde‡
HAVE_SETLOCALE


740 #ifde‡
LC_MESSAGES


741 (Ë
	`£éoˇÀ
(
LC_MESSAGES
, "");

743 #ifde‡
LC_CTYPE


744 (Ë
	`£éoˇÀ
(
LC_CTYPE
, "");

746 #ifde‡
LC_COLLATE


747 (Ë
	`£éoˇÀ
(
LC_COLLATE
, "");

751 
	`fixlimôs
();

752 #ifde‡
SIGFPE


753 
	`sig«l
(
SIGFPE
, 
sigÂe
);

755 #ifde‡
SIGSEGV


756 
	`sig«l
(
SIGSEGV
, 
sig£gv
);

759 i‡(
	`gëív
("GATEWAY_INTERFACE"Ë!
NULL
) {

760 
html_cgi
 = 1;

761 
ouçut_hódî
 = 
html_ouçut_hódî
;

762 
ouçut_löe
 = 
html_ouçut_löe
;

763 
ouçut_foŸî
 = 
html_ouçut_foŸî
;

765 (
foddî
 = 
	`gë›t
(
¨gc
, 
¨gv
, "CchHnpsvwWx")) != -1) {

766 
foddî
) {

768 
	`hñp
();

772 
d⁄t_ªsﬁve_ù
++;

776 
html_cgi
++;

778 
html_øw
++;

780 
ouçut_hódî
 = 
html_ouçut_hódî
;

781 
ouçut_löe
 = 
html_ouçut_löe
;

782 
ouçut_foŸî
 = 
html_ouçut_foŸî
;

785 
ouçut_hódî
 = 
∂i°_ouçut_hódî
;

786 
ouçut_löe
 = 
∂i°_ouçut_löe
;

787 
ouçut_foŸî
 = 
∂i°_ouçut_foŸî
;

790 
ouçut_hódî
 = 
shñl_ouçut_hódî
;

791 
ouçut_löe
 = 
shñl_ouçut_löe
;

792 
ouçut_foŸî
 = 
shñl_ouçut_foŸî
;

795 
ouçut_hódî
 = 
xml_ouçut_hódî
;

796 
ouçut_löe
 = 
xml_ouçut_löe
;

797 
ouçut_foŸî
 = 
xml_ouçut_foŸî
;

800 
vîbo£
++;

803 
	`hñp
();

806 
now
 = 
	`time
(
NULL
);

807 i‡(
	`chdú
(
SCOREBOARD_PATH
) != 0 ||

808 (
dú
 = 
	`›ídú
(".")Ë=
NULL
) {

809 
	`Ârötf
(
°dîr
, "UnableÅo openÅhe ftpwho scoreboard.\n"

810 "MakêsuªÅh©Åhê[" 
SCOREBOARD_PATH
 "/] directoryÉxists,\n"

817 
lock
.
l_whí˚
 = 
SEEK_SET
;

818 
lock
.
l_°¨t
 = (
off_t
) 0;

819 
lock
.
l_Àn
 = (
off_t
) 0;

820 
lock
.
l_pid
 = 
	`gëpid
();

821 
	`ouçut_hódî
();

822 (
íåy
 = 
	`ªaddú
(
dú
)Ë!
NULL
) {

823 
mm≠_fd
 = -1;

824 
locked
 = 0;

825 
dñëe_fûe
 = 0;

826 
sˇ¬ed_íåy
 = 
NULL
;

827 i‡(
	`°∫cmp
(
íåy
->
d_«me
, 
SCOREBOARD_PREFIX
,

828  
SCOREBOARD_PREFIX
 - 1U) != 0) {

829 
√xt⁄e
;

831 i‡((
mm≠_fd
 = 
	`›í
(
íåy
->
d_«me
, 
O_RDWR
 | 
O_NOFOLLOW
)) == -1) {

832 
√xt⁄e
;

834 i‡(
	`f°©
(
mm≠_fd
, &
°
Ë!0 || !
	`S_ISREG
(°.
°_mode
) ||

835 (
°
.
°_mode
 & 0600) != 0600 ||

836 
°
.
°_size
 !(
off_t
Ë (
FTPWhoE¡ry
) ||

837 #ifde‡
NON_ROOT_FTP


838 
°
.
°_uid
 !
	`gëeuid
()

840 
°
.
°_uid
 !(
uid_t
) 0

843 
√xt⁄e
;

845 
	`·pwho_lock
();

846 
locked
++;

847 i‡((
sˇ¬ed_íåy
 =

848 (
FTPWhoE¡ry
 *Ë
	`mm≠
(
NULL
,  (FTPWhoEntry),

849 
PROT_READ
,

850 
MAP_SHARED
 | 
MAP_FILE
,

851 
mm≠_fd
, (
off_t
Ë0)Ë=(*Ë
MAP_FAILED
) {

852 
√xt⁄e
;

854 i‡(
	`check¥oc
(
sˇ¬ed_íåy
->
pid
) == 0) {

856 
dñëe_fûe
++;

857 
√xt⁄e
;

859 i‡(
sˇ¬ed_íåy
->
°©e
 !
FTPWHO_STATE_FREE
) {

860 
sö˚
;

861 
x„r_sö˚
;

862 
loˇl_p‹t
[
NI_MAXSERV
];

863 
loˇl_hbuf
[
NI_MAXHOST
];

864 
hbuf
[
NI_MAXHOST
];

866 
sˇ¬ed_íåy
->
°©e
) {

867 
FTPWHO_STATE_IDLE
 :

868 
°©e
 = "IDLE";

870 
FTPWHO_STATE_DOWNLOAD
 :

871 
°©e
 = " DL ";

873 
FTPWHO_STATE_UPLOAD
 :

874 
°©e
 = " UL ";

877 
°©e
 = "ERR!";

879 i‡(
sˇ¬ed_íåy
->
d©e
 < 
now
) {

880 
sö˚
 = (Ë(
now
 - 
sˇ¬ed_íåy
->
d©e
);

882 
sö˚
 = 0UL;

884 i‡(
sˇ¬ed_íåy
->
x„r_d©e
 > (
time_t
) 0 &&

885 
sˇ¬ed_íåy
->
x„r_d©e
 < 
now
) {

886 
x„r_sö˚
 = (Ë(
now
 - 
sˇ¬ed_íåy
->
x„r_d©e
);

888 
x„r_sö˚
 = 0UL;

891 
ói
;

893 i‡((
ói
 = 
gë«meöfo


894 ((
sockaddr
 *Ë&
sˇ¬ed_íåy
->
addr
,

895 
	`STORAGE_LEN
(
sˇ¬ed_íåy
->
addr
),

896 
hbuf
,  hbuf, 
NULL
, (
size_t
) 0U,

897 
d⁄t_ªsﬁve_ù
 !0 ? 
NI_NUMERICHOST
 : 0)) == 0) {

900 #i‡
	`deföed
(
EAI_NONAME
Ë&& deföed(
EAI_SYSTEM
)

901 i‡((
ói
 =
EAI_NONAME
 ||Éaò=
EAI_SYSTEM
) &&

902 
d⁄t_ªsﬁve_ù
 == 0 &&

903 
gë«meöfo


904 ((
sockaddr
 *Ë&
sˇ¬ed_íåy
->
addr
,

905 
	`STORAGE_LEN
(
sˇ¬ed_íåy
->
addr
),

906 
hbuf
,  hbuf, 
NULL
, (
size_t
) 0U,

907 
NI_NUMERICHOST
) == 0) {

911 
√xt⁄e
;

914 
ói
;

916 i‡((
ói
 = 
gë«meöfo


917 ((
sockaddr
 *Ë&
sˇ¬ed_íåy
->
loˇl_addr
,

918 
	`STORAGE_LEN
(
sˇ¬ed_íåy
->
addr
),

919 
loˇl_hbuf
, Üocal_hbuf,

920 
loˇl_p‹t
, Üocal_port,

921 
d⁄t_ªsﬁve_ù
 !0 ? (
NI_NUMERICHOST
 | 
NI_NUMERICSERV
) :

922 
NI_NUMERICSERV
)) == 0) {

925 #i‡
	`deföed
(
EAI_NONAME
Ë&& deföed(
EAI_SYSTEM
)

926 i‡((
ói
 =
EAI_NONAME
 ||Éaò=
EAI_SYSTEM
) &&

927 
d⁄t_ªsﬁve_ù
 == 0 &&

928 
gë«meöfo


929 ((
sockaddr
 *Ë&
sˇ¬ed_íåy
->
loˇl_addr
,

930 
	`STORAGE_LEN
(
sˇ¬ed_íåy
->
addr
),

931 
loˇl_hbuf
, Üocal_hbuf,

932 
loˇl_p‹t
, Üocal_port,

933 
NI_NUMERICHOST
 | 
NI_NUMERICSERV
) == 0) {

937 
√xt⁄e
;

939 
	`ouçut_löe
(
sˇ¬ed_íåy
->
pid
, sˇ¬ed_íåy->
accou¡
,

940 
sö˚
, 
x„r_sö˚
, 
°©e
, 
sˇ¬ed_íåy
->
fûíame
,

941 
hbuf
, 
loˇl_hbuf
, 
loˇl_p‹t
,

942 (
sˇ¬ed_íåy
->
ª°¨èt
 <=

943 
sˇ¬ed_íåy
->
dow∆ﬂd_cuºít_size
) ?

944 
sˇ¬ed_íåy
->
ª°¨èt
 : (
off_t
) 0,

945 (
sˇ¬ed_íåy
->
°©e
 =
FTPWHO_STATE_DOWNLOAD
) ?

946 
sˇ¬ed_íåy
->
dow∆ﬂd_tŸÆ_size
 : (
off_t
) 0,

947 (
sˇ¬ed_íåy
->
°©e
 =
FTPWHO_STATE_DOWNLOAD
 ||

948 
sˇ¬ed_íåy
->
°©e
 =
FTPWHO_STATE_UPLOAD
) ?

949 
sˇ¬ed_íåy
->
dow∆ﬂd_cuºít_size
 : (
off_t
) 0);

951 
√xt⁄e
:

952 i‡(
locked
 !0 && 
mm≠_fd
 != -1) {

953 
	`·pwho_u∆ock
();

955 i‡(
sˇ¬ed_íåy
 !
NULL
) {

956 (Ë
	`munm≠
((*Ë
sˇ¬ed_íåy
,  (
FTPWhoE¡ry
));

958 i‡(
mm≠_fd
 != -1) {

959 
	`˛o£
(
mm≠_fd
);

961 i‡(
dñëe_fûe
 != 0) {

962 
	`u∆ök
(
íåy
->
d_«me
);

965 
	`ouçut_foŸî
();

968 
	}
}

	@src/pure-mrtginfo.c

1 
	~<c⁄fig.h
>

3 
	~"·pd.h
"

5 #ifde‡
WITH_DMALLOC


6 
	~<dmÆloc.h
>

9 #ifde‡
__FªeBSD__


10 
	~<sys/time.h
>

11 
	~<sys/sys˘l.h
>

14 c⁄° *
	$u±ime
()

16 #ifde‡
__FªeBSD__


17 
timevÆ
 
boŸtime
;

18 
time_t
 
now
;

19 
mib
[2];

20 
size_t
 
size
;

21 
time_t
 
u
;

22 
buf
[1025];

24 ()
	`time
(&
now
);

26 
mib
[0] = 
CTL_KERN
;

27 
mib
[1] = 
KERN_BOOTTIME
;

28 
size
 = (
boŸtime
);

29 i‡(
	`sys˘l
(
mib
, 2, &
boŸtime
, &
size
, 
NULL
, 0) != -1 &&

30 
boŸtime
.
tv_£c
 != 0) {

31 
u
 = 
now
 - 
boŸtime
.
tv_£c
;

32 i‡(
u
 > 60)

33 
u
 += 30;

35 i‡(
	`SNCHECK
(
	`¢¥ötf
(
buf
,  buf, "%lu days, %lu:%02lu:%02lu",

36 
u
 / 86400UL, u / 3600UL % 24UL,

37 
u
 / 60UL % 60UL, u % 60UL),

38  
buf
)) {

39 
	`_exô
(
EXIT_FAILURE
);

42  
buf
;

44 
f
;

45 
ssize_t
 
r
;

46 
u
;

47 
buf
[1025];

49 i‡((
f
 = 
	`›í
("/¥oc/u±ime", 
O_RDONLY
)) == -1) {

52 (
r
 = 
	`ªad
(
f
, 
buf
,  bu‡- 1U)Ë< (
ssize_t
Ë0 && 
î∫o
 =
EINTR
);

53 i‡(
r
 <(
ssize_t
) 0) {

54 
	`˛o£
(
f
);

57 
	`˛o£
(
f
);

58 
u
 = 
	`°πoul
(
buf
, 
NULL
, 10);

59 i‡(
	`SNCHECK
(
	`¢¥ötf
(
buf
,  buf, "%lu days, %lu:%02lu:%02lu",

60 
u
 / 86400UL, u / 3600UL % 24UL,

61 
u
 / 60UL % 60UL, u % 60UL),

62  
buf
)) {

63 
	`_exô
(
EXIT_FAILURE
);

65  
buf
;

67 
	}
}

69 c⁄° *
	$«me
()

71 
buf
[1025];

73 i‡(
	`gëho°«me
(
buf
,  buf - 1U) != 0) {

76  
buf
;

77 
	}
}

79 
	$maö
(
¨gc
, *
¨gv
[])

81 
d
;

82 
ö_p‹t_t
 
£rvî_p‹t
 = 21U;

84 #ifde‡
HAVE_SETLOCALE


85 #ifde‡
LC_MESSAGES


86 (Ë
	`£éoˇÀ
(
LC_MESSAGES
, "");

88 #ifde‡
LC_CTYPE


89 (Ë
	`£éoˇÀ
(
LC_CTYPE
, "");

91 #ifde‡
LC_COLLATE


92 (Ë
	`£éoˇÀ
(
LC_COLLATE
, "");

96 i‡(
¨gc
 == 2) {

97 
£rvî_p‹t
 = (
ö_p‹t_t
Ë
	`°πoul
(
¨gv
[1], 
NULL
, 10);

99 
d
 = 
	`d´m⁄s
(
£rvî_p‹t
);

100 
	`¥ötf
("%u\n%u\n%s\n%s\n", 
d
, d, 
	`u±ime
(), 
	`«me
());

103 
	}
}

	@src/pure-pw.c

1 
	~<c⁄fig.h
>

3 
	~"·pd.h
"

4 
	~"puª-pw.h
"

5 
	~"ß„_rw.h
"

6 
	~"Æt_¨c4øndom.h
"

7 
	~"../puªdb/§c/puªdb_wrôe.h
"

8 #ifde‡
HAVE_POSIX_TERMIOS


9 
	~<ãrmios.h
>

10 #ñi‡
deföed
(
HAVE_TERMIO_H
)

11 
	~<ãrmio.h
>

12 #ñi‡
deföed
(
HAVE_SGTTY_H
)

13 
	~<sgây.h
>

16 #i‚de‡
HAVE_GETOPT_LONG


17 
	~"bsd-gë›t_l⁄g.h
"

19 
	~<gë›t.h
>

22 #ifde‡
WITH_DMALLOC


23 
	~<dmÆloc.h
>

26 #ifde‡
PROBE_RANDOM_AT_RUNTIME


27 c⁄° *
	gøndom_devi˚
;

30 
	$dißbÀ_echo
()

32 i‡(!
	`ißây
(0)) {

35 #ifde‡
ECHO


36 #ifde‡
HAVE_POSIX_TERMIOS


38 
ãrmios
 
p
;

40 i‡(
	`tcgë©å
(0, &
p
) != 0) {

43 
p
.
c_lÊag
 &~
ECHO
;

44 #i‚de‡
TCSAFLUSH


45 
	#TCSAFLUSH
 0

	)

47 
	`tc£èâr
(0, 
TCSAFLUSH
, &
p
);

49 #ñi‡
	`deföed
(
HAVE_TERMIO_H
Ë&& deföed(
TCGETA
)

51 
ãrmio
 
ây
;

53 i‡(
	`io˘l
(0, 
TCGETA
, &
ây
) != 0) {

56 
ây
.
c_lÊag
 &~
ECHO
;

57 
	`io˘l
(0, 
TCSETA
, &
ây
);

61 
sgâyb
 
ây
;

63 i‡(
	`io˘l
(0, 
TIOCGETP
, &
ây
) != 0) {

66 
ây
.
sg_Êags
 &~
ECHO
;

67 
	`io˘l
(0, 
TIOCSETN
, &
ây
);

71 
	}
}

73 
	$íabÀ_echo
()

75 i‡(!
	`ißây
(0)) {

78 #ifde‡
ECHO


79 #ifde‡
HAVE_POSIX_TERMIOS


81 
ãrmios
 
p
;

83 i‡(
	`tcgë©å
(0, &
p
) != 0) {

86 
p
.
c_lÊag
 |
ECHO
;

87 #i‚de‡
TCSAFLUSH


88 
	#TCSAFLUSH
 0

	)

90 
	`tc£èâr
(0, 
TCSAFLUSH
, &
p
);

92 #ñi‡
	`deföed
(
HAVE_TERMIO_H
Ë&& deföed(
TCGETA
)

94 
ãrmio
 
ây
;

96 i‡(
	`io˘l
(0, 
TCGETA
, &
ây
) != 0) {

99 
ây
.
c_lÊag
 |
ECHO
;

100 
	`io˘l
(0, 
TCSETA
, &
ây
);

104 
sgâyb
 
ây
;

106 i‡(
	`io˘l
(0, 
TIOCGETP
, &
ây
) != 0) {

109 
ây
.
sg_Êags
 |
ECHO
;

110 
	`io˘l
(0, 
TIOCSETN
, &
ây
);

114 
	}
}

123 *
	$my_°πok2
(*
°r
, c⁄° 
dñim
)

125 *
s
;

126 
ßve
;

128 i‡(
°r
 !
NULL
) {

129 i‡(*
°r
 == 0) {

130  
NULL
;

132 
s
 = 
°r
;

133 
sˇn
:

134 *
s
 !0 && *†!
dñim
) {

135 
s
++;

137 
ßve
 = *
s
;

138 *
s
 = 0;

140  
°r
;

142 i‡(
s
 =
NULL
 || 
ßve
 == 0) {

143  
NULL
;

145 
s
++;

146 
°r
 = 
s
;

148 
sˇn
;

149 
	}
}

151 
	$fûãr_pw_löe_£p
(*
°r
)

153 i‡(
°r
 =
NULL
) {

156 *
°r
 != 0) {

157 i‡(*
°r
 =*
PW_LINE_SEP
) {

158 *
°r
 = '_';

160 
°r
++;

162 
	}
}

164 
	$hñp
()

166 
	`puts
("\nUsage :\n\n"

201 "-m :álsÿupd©êthê" 
DEFAULT_PW_DB
 " database\n"

205 #i‚de‡
WITH_PUREDB


206 
	`puts
("*WARNING* :ÅhatÖure-ftpd server hasn't been compiled withÖuredb support\n");

208 
	`exô
(
EXIT_SUCCESS
);

209 
	}
}

211 
	$no_mem
()

213 
	`Ârötf
(
°dîr
, "Ouào‡mem‹y : [%s]\n", 
	`°ªº‹
(
î∫o
));

214 
	`exô
(
EXIT_FAILURE
);

215 
	}
}

217 
	$pw_zønd
()

219  (Ë
	`Æt_¨c4øndom
();

220 
	}
}

222 *
	$be°_¸y±
(c⁄° * c⁄° 
pwd
)

224 c⁄° 
¸ˇrs
[64] =

226 c⁄° *
¸y±ed
;

228 i‡((
¸y±ed
 = (const *)

229 
	`¸y±
("ã°", "$2a$07$1234567890123456789012")Ë!
NULL
 &&

230 
	`°rcmp
(
¸y±ed
, "$2a$07$123456789012345678901uKO4"

232 
ß…
[] = "$2a$07$0000000000000000000000";

233 
c
 = 28;

236 
c
--;

237 
ß…
[
c
] = 
¸ˇrs
[
	`pw_zønd
() & 63];

238 } 
c
 > 7);

240  (*Ë
	`¸y±
(
pwd
, 
ß…
);

241 } i‡((
¸y±ed
 = (const *)

242 
	`¸y±
("ã°", "$1$12345678$")Ë!
NULL
 &&

243 
	`°rcmp
(
¸y±ed
, "$1$12345678$oEitTZYQtRHfNGmsFvTBA/") == 0) {

244 
ß…
[] = "$1$00000000";

245 
c
 = 10;

248 
c
--;

249 
ß…
[
c
] = 
¸ˇrs
[
	`pw_zønd
() & 63];

250 } 
c
 > 3);

252  (*Ë
	`¸y±
(
pwd
, 
ß…
);

253 } i‡((
¸y±ed
 = (const *)

254 
	`¸y±
("ã°", "_.../1234")Ë!
NULL
 &&

255 
	`°rcmp
(
¸y±ed
, "_.../1234PAPUVmqGzpU") == 0) {

256 
ß…
[] = "_.../0000";

257 
c
 = 8;

260 
c
--;

261 
ß…
[
c
] = 
¸ˇrs
[
	`pw_zønd
() & 63];

262 } 
c
 > 5);

264  (*Ë
	`¸y±
(
pwd
, 
ß…
);

268 
ß…
[] = "00";

270 
ß…
[0] = 
¸ˇrs
[
	`pw_zønd
() & 63];

271 
ß…
[1] = 
¸ˇrs
[
	`pw_zønd
() & 63];

273  (*Ë
	`¸y±
(
pwd
, 
ß…
);

275 
	}
}

277 *
	$√w∑sswd_fûíame
(c⁄° * c⁄° 
fûe
)

279 
size_t
 
sizeof_fûe2
;

280 *
fûe2
;

282 
sizeof_fûe2
 = 
	`°æí
(
fûe
Ë+  
NEWPASSWD_SUFFIX
;

283 i‡((
fûe2
 = 
	`mÆloc
(
sizeof_fûe2
)Ë=
NULL
) {

284  
NULL
;

286 (Ë
	`¢¥ötf
(
fûe2
, 
sizeof_fûe2
, "%s%s", 
fûe
, 
NEWPASSWD_SUFFIX
);

288  
fûe2
;

289 
	}
}

291 
	$°rù_lf
(*
°r
)

293 *
f
;

295 i‡(
°r
 =
NULL
) {

298 i‡((
f
 = 
	`°rchr
(
°r
, '\r')Ë!
NULL
) {

299 *
f
 = 0;

301 i‡((
f
 = 
	`°rchr
(
°r
, '\n')Ë!
NULL
) {

302 *
f
 = 0;

304 
	}
}

306 
	$∑r£_pw_löe
(*
löe
, 
PWInfo
 * c⁄° 
pwöfo
)

308 
pwöfo
->
logö
 = 
NULL
;

309 
pwöfo
->
pwd
 = 
NULL
;

310 
pwöfo
->
gecos
 = 
NULL
;

311 
pwöfo
->
home
 = 
NULL
;

312 
pwöfo
->
Ælow_loˇl_ù
 =Öwöfo->
díy_loˇl_ù
 = 
NULL
;

313 
pwöfo
->
Ælow_˛õ¡_ù
 =Öwöfo->
díy_˛õ¡_ù
 = 
NULL
;

314 
pwöfo
->
has_bw_dl
 = 0;

315 
pwöfo
->
has_bw_ul
 = 0;

316 
pwöfo
->
has_quŸa_fûes
 = 0;

317 
pwöfo
->
has_quŸa_size
 = 0;

318 
pwöfo
->
has_ul_øtio
 = 0;

319 
pwöfo
->
has_dl_øtio
 = 0;

320 
pwöfo
->
has_time
 = 0;

321 
pwöfo
->
time_begö
 =Öwöfo->
time_íd
 = 0U;

322 
pwöfo
->
uid
 = (
uid_t
) 0;

323 
pwöfo
->
gid
 = (
gid_t
) 0;

324 
pwöfo
->
has_≥r_u£r_max
 = 0;

325 
pwöfo
->
≥r_u£r_max
 = 0U;

327 i‡((
löe
 = 
	`my_°πok2
÷öe, *
PW_LINE_SEP
)Ë=
NULL
 || *line == 0) {

330 
pwöfo
->
logö
 = 
löe
;

331 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL || *line == 0) {

334 
pwöfo
->
pwd
 = 
löe
;

335 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL || *line == 0) {

338 
pwöfo
->
uid
 = (
uid_t
Ë
	`°πoul
(
löe
, 
NULL
, 10);

339 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL || *line == 0) {

342 
pwöfo
->
gid
 = (
gid_t
Ë
	`°πoul
(
löe
, 
NULL
, 10);

343 i‡(
pwöfo
->
uid
 <(
uid_t
Ë0 ||Öwöfo->
gid
 <(
gid_t
) 0) {

346 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

349 
pwöfo
->
gecos
 = 
löe
;

350 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL || *line == 0) {

353 i‡(*
löe
 != '/') {

356 
pwöfo
->
home
 = 
löe
;

357 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

360 i‡(*
löe
 != 0) {

361 
pwöfo
->
has_bw_ul
 = 1;

362 
pwöfo
->
bw_ul
 = 
	`°πoul
(
löe
, 
NULL
, 10);

364 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

367 i‡(*
löe
 != 0) {

368 
pwöfo
->
has_bw_dl
 = 1;

369 
pwöfo
->
bw_dl
 = 
	`°πoul
(
löe
, 
NULL
, 10);

371 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

374 i‡(*
löe
 != 0) {

375 
pwöfo
->
ul_øtio
 = (Ë
	`°πoul
(
löe
, 
NULL
, 10);

376 i‡(
pwöfo
->
ul_øtio
 > 0U) {

377 
pwöfo
->
has_ul_øtio
 = 1;

380 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

383 i‡(*
löe
 != 0) {

384 
pwöfo
->
dl_øtio
 = (Ë
	`°πoul
(
löe
, 
NULL
, 10);

385 i‡(
pwöfo
->
dl_øtio
 > 0U) {

386 
pwöfo
->
has_dl_øtio
 = 1;

389 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

392 i‡(*
löe
 != 0) {

393 
pwöfo
->
≥r_u£r_max
 = (Ë
	`°πoul
(
löe
, 
NULL
, 10);

394 i‡(
pwöfo
->
≥r_u£r_max
 > 0U) {

395 
pwöfo
->
has_≥r_u£r_max
 = 1;

398 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

401 i‡(*
löe
 != 0) {

402 
pwöfo
->
has_quŸa_fûes
 = 1;

403 
pwöfo
->
quŸa_fûes
 = 
	`°πouŒ
(
löe
, 
NULL
, 10);

405 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

408 i‡(*
löe
 != 0) {

409 
pwöfo
->
has_quŸa_size
 = 1;

410 
pwöfo
->
quŸa_size
 = 
	`°πouŒ
(
löe
, 
NULL
, 10);

412 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

415 
pwöfo
->
Ælow_loˇl_ù
 = 
löe
;

416 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

419 
pwöfo
->
díy_loˇl_ù
 = 
löe
;

420 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

423 
pwöfo
->
Ælow_˛õ¡_ù
 = 
löe
;

424 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

427 
pwöfo
->
díy_˛õ¡_ù
 = 
löe
;

428 i‡((
löe
 = 
	`my_°πok2
(
NULL
, *
PW_LINE_SEP
)) == NULL) {

431 i‡(
	`ssˇnf
(
löe
, "%u-%u", &
pwöfo
->
time_begö
, &pwöfo->
time_íd
) == 2 &&

432 
pwöfo
->
time_begö
 < 2360 && (pwinfo->time_begin % 100) < 60 &&

433 
pwöfo
->
time_íd
 < 2360 && (pwinfo->time_end % 100) < 60) {

434 
pwöfo
->
has_time
 = 1;

438 
	}
}

440 
	$„tch_pw_accou¡
(c⁄° * c⁄° 
fûe
, 
PWInfo
 * c⁄° 
pwöfo
,

441 * c⁄° 
löe
, c⁄° 
size_t
 
sizeof_löe
,

442 c⁄° * c⁄° 
logö
)

444 
FILE
 *
Â
;

445 
ªt
 = -1;

447 i‡(
fûe
 =
NULL
 || 
pwöfo
 =NULL || 
löe
 == NULL ||

448 
sizeof_löe
 < (
size_t
Ë2U || 
logö
 =
NULL
 ||

449 *
logö
 == 0) {

450 
	`Ârötf
(
°dîr
, "badárgumentsÅo fetcháccount\n");

453 i‡((
Â
 = 
	`f›í
(
fûe
, "r")Ë=
NULL
) {

454 
	`≥º‹
("UnableÅo openÅheÖasswd file");

457 
	`fgës
(
löe
, (Ë
sizeof_löe
 - 1U, 
Â
Ë!
NULL
) {

458 
	`°rù_lf
(
löe
);

459 i‡(*
löe
 =0 || *löê=
PW_LINE_COMMENT
) {

462 i‡(
	`∑r£_pw_löe
(
löe
, 
pwöfo
) != 0) {

463 
	`Ârötf
(
°dîr
, "W¨nög: invÆidÜöê[%s]\n", 
löe
);

466 i‡(
	`°rcmp
(
logö
, 
pwöfo
->login) != 0) {

469 
ªt
 = 0;

472 
	`f˛o£
(
Â
);

474  
ªt
;

475 
	}
}

477 
FILE
 *
	$¸óã_√w∑sswd
(c⁄° * c⁄° 
fûe
,

478 c⁄° * c⁄° 
fûe2
,

479 c⁄° * c⁄° 
skù_logö
,

480 
îr‹_if_u£r_exi°s
,

481 
îr‹_if_nŸ_found
)

483 
FILE
 *
Â
;

484 
FILE
 *
Â2
;

485 
fd2
;

486 
found
 = 0;

487 
size_t
 
skù_logö_Àn
;

488 
löe
[
LINE_MAX
];

490 
Â
 = 
	`f›í
(
fûe
, "r");

491 i‡((
fd2
 = 
	`›í
(
fûe2
, 
O_EXCL
 | 
O_NOFOLLOW
 |

492 
O_CREAT
 | 
O_WRONLY
, (
mode_t
) 0700)) == -1) {

493 i‡(
Â
 !
NULL
) {

494 
	`f˛o£
(
Â
);

496  
NULL
;

498 i‡((
Â2
 = 
	`fd›í
(
fd2
, "w")Ë=
NULL
) {

499 i‡(
Â
 !
NULL
) {

500 
	`f˛o£
(
Â
);

502 
	`˛o£
(
fd2
);

504  
NULL
;

506 i‡(
Â
 !
NULL
) {

507 i‡(
skù_logö
 !
NULL
) {

508 
skù_logö_Àn
 = 
	`°æí
(
skù_logö
);

510 
skù_logö_Àn
 = (
size_t
) 0U;

512 
	`fgës
(
löe
, (ËÜöê- 1U, 
Â
Ë!
NULL
) {

513 i‡(
skù_logö_Àn
 > (
size_t
) 0U) {

514 i‡(
	`°∫cmp
(
löe
, 
skù_logö
, 
skù_logö_Àn
) == 0 &&

515 
löe
[
skù_logö_Àn
] =*
PW_LINE_SEP
) {

516 i‡(
îr‹_if_u£r_exi°s
 != 0) {

517 
îr
;

519 
found
 = 1;

523 i‡(
	`Âuts
(
löe
, 
Â2
) < 0) {

524 
îr
:

525 
	`f˛o£
(
Â2
);

526 
	`u∆ök
(
fûe2
);

527 i‡(
Â
 !
NULL
) {

528 
	`f˛o£
(
Â
);

530  
NULL
;

533 
	`fÊush
(
Â2
);

534 
	`fsync
(
fd2
);

536 i‡(
îr‹_if_nŸ_found
 !0 && 
found
 == 0) {

537 
îr
;

539 i‡(
Â
 !
NULL
) {

540 
	`f˛o£
(
Â
);

543  
Â2
;

544 
	}
}

546 
	$add_√w_pw_löe
(
FILE
 * c⁄° 
Â2
, c⁄° 
PWInfo
 * c⁄° 
pwöfo
)

548 i‡(
Â2
 =
NULL
) {

551 i‡(
	`Ârötf
(
Â2
,

552 "%s" 
PW_LINE_SEP


553 "%s" 
PW_LINE_SEP


554 "%lu" 
PW_LINE_SEP


555 "%lu" 
PW_LINE_SEP


556 "%s" 
PW_LINE_SEP


557 "%s" 
PW_LINE_SEP


558 , 
pwöfo
->
logö
,Öwöfo->
pwd
,

559 (Ë
pwöfo
->
uid
, (Ëpwöfo->
gid
,

560 
pwöfo
->
gecos
,Öwöfo->
home
) < 0) {

563 i‡(
pwöfo
->
has_bw_ul
 != 0) {

564 i‡(
	`Ârötf
(
Â2
, "%lu",

565 (Ë
pwöfo
->
bw_ul
) < 0) {

569 i‡(
	`Ârötf
(
Â2
, 
PW_LINE_SEP
) < 0) {

572 i‡(
pwöfo
->
has_bw_dl
 != 0) {

573 i‡(
	`Ârötf
(
Â2
, "%lu",

574 (Ë
pwöfo
->
bw_dl
) < 0) {

578 i‡(
	`Ârötf
(
Â2
, 
PW_LINE_SEP
) < 0) {

581 i‡(
pwöfo
->
has_ul_øtio
 != 0) {

582 i‡(
	`Ârötf
(
Â2
, "%u",

583 
pwöfo
->
ul_øtio
) < 0) {

587 i‡(
	`Ârötf
(
Â2
, 
PW_LINE_SEP
) < 0) {

590 i‡(
pwöfo
->
has_dl_øtio
 != 0) {

591 i‡(
	`Ârötf
(
Â2
, "%u",

592 
pwöfo
->
dl_øtio
) < 0) {

596 i‡(
	`Ârötf
(
Â2
, 
PW_LINE_SEP
) < 0) {

599 i‡(
pwöfo
->
has_≥r_u£r_max
 != 0) {

600 i‡(
	`Ârötf
(
Â2
, "%u", 
pwöfo
->
≥r_u£r_max
) < 0) {

604 i‡(
	`Ârötf
(
Â2
, 
PW_LINE_SEP
) < 0) {

607 i‡(
pwöfo
->
has_quŸa_fûes
 != 0) {

608 i‡(
	`Ârötf
(
Â2
, "%llu",

609 
pwöfo
->
quŸa_fûes
) < 0) {

613 i‡(
	`Ârötf
(
Â2
, 
PW_LINE_SEP
) < 0) {

616 i‡(
pwöfo
->
has_quŸa_size
 != 0) {

617 i‡(
	`Ârötf
(
Â2
, "%llu",

618 
pwöfo
->
quŸa_size
) < 0) {

622 i‡(
	`Ârötf
(
Â2
, 
PW_LINE_SEP
) < 0) {

625 i‡(
pwöfo
->
Ælow_loˇl_ù
 !
NULL
) {

626 
	`Ârötf
(
Â2
, "%s", 
pwöfo
->
Ælow_loˇl_ù
);

628 i‡(
	`Ârötf
(
Â2
, 
PW_LINE_SEP
) < 0) {

631 i‡(
pwöfo
->
díy_loˇl_ù
 !
NULL
) {

632 
	`Ârötf
(
Â2
, "%s", 
pwöfo
->
díy_loˇl_ù
);

634 i‡(
	`Ârötf
(
Â2
, 
PW_LINE_SEP
) < 0) {

637 i‡(
pwöfo
->
Ælow_˛õ¡_ù
 !
NULL
) {

638 
	`Ârötf
(
Â2
, "%s", 
pwöfo
->
Ælow_˛õ¡_ù
);

640 i‡(
	`Ârötf
(
Â2
, 
PW_LINE_SEP
) < 0) {

643 i‡(
pwöfo
->
díy_˛õ¡_ù
 !
NULL
) {

644 
	`Ârötf
(
Â2
, "%s", 
pwöfo
->
díy_˛õ¡_ù
);

646 i‡(
	`Ârötf
(
Â2
, 
PW_LINE_SEP
) < 0) {

649 i‡(
pwöfo
->
has_time
 != 0) {

650 i‡(
	`Ârötf
(
Â2
, "%u-%u",

651 
pwöfo
->
time_begö
,Öwöfo->
time_íd
) < 0) {

655 i‡(
	`Ârötf
(
Â2
, "\n") < 0) {

660 
	}
}

662 *
	$do_gë_∑sswd
()

664 
pwd
[
LINE_MAX
];

665 
pwd2
[
LINE_MAX
];

666 
åõs
 = 
MAX_PASSWD_CHANGE_TRIES
;

668 *
pwd
 = 0;

669 *
pwd2
 = 0;

671 
agaö
:

672 
	`¥ötf
("Password: ");

673 
	`fÊush
(
°dout
);

674 
	`dißbÀ_echo
();

675 i‡(
	`fgës
(
pwd
, (Ë(Öwd - 1U), 
°dö
Ë=
NULL
) {

676 
	`íabÀ_echo
();

677  
NULL
;

679 
	`°rù_lf
(
pwd
);

680 
	`¥ötf
("\nEnter itágain: ");

681 
	`fÊush
(
°dout
);

682 
	`dißbÀ_echo
();

683 i‡(
	`fgës
(
pwd2
, (Ë(Öwd2 - 1U), 
°dö
Ë=
NULL
) {

684 
	`íabÀ_echo
();

685  
NULL
;

687 
	`°rù_lf
(
pwd2
);

688 
	`puts
("");

689 i‡(
	`°rcmp
(
pwd
, 
pwd2
) != 0) {

690 i‡(*
pwd2
 != 0) {

691 
	`mem£t
(
pwd2
, 0, 
	`°æí
(pwd2));

693 i‡(*
pwd
 != 0) {

694 
	`mem£t
(
pwd
, 0, 
	`°æí
(pwd));

696 
	`puts
("You didn'tÉnterÅhe sameÖassword");

697 i‡(--
åõs
 > 0) {

698 
agaö
;

700 
	`íabÀ_echo
();

702  
NULL
;

704 i‡(*
pwd2
 != 0) {

705 
	`mem£t
(
pwd2
, 0, 
	`°æí
(pwd2));

707 
	`íabÀ_echo
();

709  
pwd
;

710 
	}
}

712 
	$do_li°
(c⁄° * c⁄° 
fûe
)

714 
FILE
 *
Â
;

715 
PWInfo
 
pwöfo
;

716 
löe
[
LINE_MAX
];

718 i‡(
fûe
 =
NULL
) {

719 
	`Ârötf
(
°dîr
, "missing fileÅoÜistáccounts\n");

720  
PW_ERROR_MISSING_PASSWD_FILE
;

722 i‡((
Â
 = 
	`f›í
(
fûe
, "r")Ë=
NULL
) {

723 
	`≥º‹
("UnableÅo openÅheÖasswd file");

724  
PW_ERROR_MISSING_PASSWD_FILE
;

726 
	`fgës
(
löe
, (ËÜöê- 1U, 
Â
Ë!
NULL
) {

727 
	`°rù_lf
(
löe
);

728 i‡(*
löe
 =0 || *löê=
PW_LINE_COMMENT
) {

731 i‡(
	`∑r£_pw_löe
(
löe
, &
pwöfo
) != 0) {

732 
	`Ârötf
(
°dîr
, "W¨nög: invÆidÜöê[%s]\n", 
löe
);

735 i‡(
	`ißây
(1)) {

736 
	`¥ötf
("%-19†%-39†%-19s\n", 
pwöfo
.
logö
,Öwöfo.
home
,Öwöfo.
gecos
);

738 
	`¥ötf
("%s\t%s\t%s\n", 
pwöfo
.
logö
,Öwöfo.
home
,Öwöfo.
gecos
);

741 
	`f˛o£
(
Â
);

744 
	}
}

746 
	$do_u£ødd
(c⁄° * c⁄° 
fûe
,

747 c⁄° 
PWInfo
 * c⁄° 
pwöfo_
)

749 *
fûe2
;

750 
FILE
 *
Â2
;

751 
PWInfo
 
pwöfo
 = *
pwöfo_
;

753 i‡(
pwöfo
.
logö
 =
NULL
 || *(pwinfo.login) == 0) {

754 
	`Ârötf
(
°dîr
, "MissingÜogin\n");

755  
PW_ERROR_MISSING_LOGIN
;

757 i‡(
fûe
 =
NULL
) {

758 
	`Ârötf
(
°dîr
, "MissingÖasswd file\n");

759  
PW_ERROR_MISSING_PASSWD_FILE
;

761 #i‚de‡
ACCEPT_ROOT_VIRTUAL_USERS


762 i‡(
pwöfo
.
uid
 <(
uid_t
Ë0 ||Öwöfo.
gid
 <(
gid_t
) 0) {

763 
	`Ârötf
(
°dîr
, "You must give (non-root) uidánd gid\n");

764  
PW_ERROR_USERADD_NOT_ROOT
;

767 i‡(
pwöfo
.
home
 =
NULL
) {

768 
	`Ârötf
(
°dîr
, "Missing home directory\n");

769  
PW_ERROR_USERADD_MISSING_HOME_DIR
;

771 i‡(
pwöfo
.
gecos
 =
NULL
) {

772 i‡((
pwöfo
.
gecos
 = 
	`°rdup
("")Ë=
NULL
) {

773 
	`no_mem
();

776 i‡((
pwöfo
.
pwd
 = 
	`do_gë_∑sswd
()Ë=
NULL
) {

777 
	`Ârötf
(
°dîr
, "Error withÉnteringÖassword -áborting\n");

778  
PW_ERROR_ENTER_PASSWD_PW_ERROR
;

781 *
˛óπext
 = 
pwöfo
.
pwd
;

783 
pwöfo
.
pwd
 = 
	`be°_¸y±
(
˛óπext
);

784 i‡(*
˛óπext
 != 0) {

785 
	`mem£t
(
˛óπext
, 0, 
	`°æí
(cleartext));

788 i‡((
fûe2
 = 
	`√w∑sswd_fûíame
(
fûe
)Ë=
NULL
) {

789 
	`no_mem
();

791 i‡((
Â2
 = 
	`¸óã_√w∑sswd
(
fûe
, 
fûe2
, 
pwöfo
.
logö
, 1, 0)Ë=
NULL
) {

792 
	`Ârötf
(
°dîr
, "Error.\n"

795 
pwöfo
.
logö
, 
fûe2
);

796 
	`‰ì
(
fûe2
);

797  
PW_ERROR_USER_ALREADY_EXIST
;

799 i‡(
	`add_√w_pw_löe
(
Â2
, &
pwöfo
) != 0) {

800 
	`Ârötf
(
°dîr
, "UnableÅoáppendáÜine\n");

801 
bye
;

803 
	`fÊush
(
Â2
);

804 #ifde‡
HAVE_FILENO


805 
	`fsync
(
	`fûío
(
Â2
));

807 i‡(
	`f˛o£
(
Â2
) != 0) {

808 
	`≥º‹
("UnableÅo closeÅhe file");

809 
bye2
;

811 i‡(
	`ª«me
(
fûe2
, 
fûe
) != 0) {

812 
	`≥º‹
("UnableÅoÑenameÅhe file");

813 
bye2
;

815 
	`‰ì
(
fûe2
);

818 
bye
:

819 
	`f˛o£
(
Â2
);

820 
bye2
:

821 
	`u∆ök
(
fûe2
);

822 
	`‰ì
(
fûe2
);

824  
PW_ERROR_UNEXPECTED_ERROR
;

825 
	}
}

827 
	$do_u£rmod
(c⁄° * c⁄° 
fûe
,

828 c⁄° 
PWInfo
 *
pwöfo
)

830 *
fûe2
;

831 
FILE
 *
Â2
;

832 
PWInfo
 
„tched_öfo
;

833 
löe
[
LINE_MAX
];

835 i‡(
pwöfo
->
logö
 =
NULL
 || *(pwinfo->login) == 0) {

836 
	`Ârötf
(
°dîr
, "MissingÜogin\n");

837  
PW_ERROR_MISSING_LOGIN
;

839 i‡(
fûe
 =
NULL
) {

840 
	`Ârötf
(
°dîr
, "MissingÖasswd file\n");

841  
PW_ERROR_MISSING_PASSWD_FILE
;

843 i‡(
	`„tch_pw_accou¡
(
fûe
, &
„tched_öfo
, 
löe
, Üine,

844 
pwöfo
->
logö
) != 0) {

845 
	`Ârötf
(
°dîr
, "UnableÅo fetch infoábout user [%s] in file [%s]\n",

846 
pwöfo
->
logö
, 
fûe
);

847  
PW_ERROR_UNABLE_TO_FETCH
;

849 i‡(
pwöfo
->
pwd
 !
NULL
) {

850 *
˛óπext
 = 
pwöfo
->
pwd
;

852 
„tched_öfo
.
pwd
 = 
	`be°_¸y±
(
˛óπext
);

853 i‡(*
˛óπext
 != 0) {

854 
	`mem£t
(
˛óπext
, 0, 
	`°æí
(cleartext));

857 i‡(
pwöfo
->
uid
 > (
uid_t
) 0) {

858 
„tched_öfo
.
uid
 = 
pwöfo
->uid;

860 i‡(
pwöfo
->
gid
 > (
gid_t
) 0) {

861 
„tched_öfo
.
gid
 = 
pwöfo
->gid;

863 i‡(
pwöfo
->
home
 !
NULL
) {

864 
„tched_öfo
.
home
 = 
pwöfo
->home;

866 i‡(
pwöfo
->
gecos
 !
NULL
) {

867 
„tched_öfo
.
gecos
 = 
pwöfo
->gecos;

869 i‡(
pwöfo
->
has_bw_dl
 != 0) {

870 i‡(
pwöfo
->
has_bw_dl
 < 0) {

871 
„tched_öfo
.
has_bw_dl
 = 0;

873 
„tched_öfo
.
has_bw_dl
 = 
pwöfo
->has_bw_dl;

874 
„tched_öfo
.
bw_dl
 = 
pwöfo
->bw_dl;

877 i‡(
pwöfo
->
has_bw_ul
 != 0) {

878 i‡(
pwöfo
->
has_bw_ul
 < 0) {

879 
„tched_öfo
.
has_bw_ul
 = 0;

881 
„tched_öfo
.
has_bw_ul
 = 
pwöfo
->has_bw_ul;

882 
„tched_öfo
.
bw_ul
 = 
pwöfo
->bw_ul;

885 i‡(
pwöfo
->
has_quŸa_fûes
 != 0) {

886 i‡(
pwöfo
->
has_quŸa_fûes
 < 0) {

887 
„tched_öfo
.
has_quŸa_fûes
 = 0;

889 
„tched_öfo
.
has_quŸa_fûes
 = 
pwöfo
->has_quota_files;

890 
„tched_öfo
.
quŸa_fûes
 = 
pwöfo
->quota_files;

893 i‡(
pwöfo
->
has_quŸa_size
 != 0) {

894 i‡(
pwöfo
->
has_quŸa_size
 < 0) {

895 
„tched_öfo
.
has_quŸa_size
 = 0;

897 
„tched_öfo
.
has_quŸa_size
 = 
pwöfo
->has_quota_size;

898 
„tched_öfo
.
quŸa_size
 = 
pwöfo
->quota_size;

901 i‡(
pwöfo
->
has_ul_øtio
 != 0) {

902 i‡(
pwöfo
->
has_ul_øtio
 < 0) {

903 
„tched_öfo
.
has_ul_øtio
 = 0;

905 
„tched_öfo
.
has_ul_øtio
 = 
pwöfo
->has_ul_ratio;

906 
„tched_öfo
.
ul_øtio
 = 
pwöfo
->ul_ratio;

909 i‡(
pwöfo
->
has_dl_øtio
 != 0) {

910 i‡(
pwöfo
->
has_dl_øtio
 < 0) {

911 
„tched_öfo
.
has_dl_øtio
 = 0;

913 
„tched_öfo
.
has_dl_øtio
 = 
pwöfo
->has_dl_ratio;

914 
„tched_öfo
.
dl_øtio
 = 
pwöfo
->dl_ratio;

917 i‡(
pwöfo
->
Ælow_loˇl_ù
 !
NULL
) {

918 
„tched_öfo
.
Ælow_loˇl_ù
 = 
pwöfo
->allow_local_ip;

920 i‡(
pwöfo
->
díy_loˇl_ù
 !
NULL
) {

921 
„tched_öfo
.
díy_loˇl_ù
 = 
pwöfo
->deny_local_ip;

923 i‡(
pwöfo
->
Ælow_˛õ¡_ù
 !
NULL
) {

924 
„tched_öfo
.
Ælow_˛õ¡_ù
 = 
pwöfo
->allow_client_ip;

926 i‡(
pwöfo
->
díy_˛õ¡_ù
 !
NULL
) {

927 
„tched_öfo
.
díy_˛õ¡_ù
 = 
pwöfo
->deny_client_ip;

929 i‡(
pwöfo
->
has_time
 != 0) {

930 i‡(
pwöfo
->
has_time
 < 0) {

931 
„tched_öfo
.
has_time
 = 0;

933 
„tched_öfo
.
has_time
 = 
pwöfo
->has_time;

935 
„tched_öfo
.
time_begö
 = 
pwöfo
->time_begin;

936 
„tched_öfo
.
time_íd
 = 
pwöfo
->time_end;

938 i‡(
pwöfo
->
has_≥r_u£r_max
 != 0) {

939 i‡(
pwöfo
->
has_≥r_u£r_max
 < 0) {

940 
„tched_öfo
.
has_≥r_u£r_max
 = 0;

942 
„tched_öfo
.
has_≥r_u£r_max
 = 
pwöfo
->has_per_user_max;

943 
„tched_öfo
.
≥r_u£r_max
 = 
pwöfo
->per_user_max;

946 i‡((
fûe2
 = 
	`√w∑sswd_fûíame
(
fûe
)Ë=
NULL
) {

947 
	`no_mem
();

949 i‡((
Â2
 = 
	`¸óã_√w∑sswd
(
fûe
, 
fûe2
, 
pwöfo
->
logö
, 0, 1)Ë=
NULL
) {

950 
	`Ârötf
(
°dîr
, "Error.\n"

952 "™dÅh© [%s] c™ bêwrôãn.\n", 
pwöfo
->
logö
, 
fûe2
);

953 
	`‰ì
(
fûe2
);

954  
PW_ERROR_USER_ALREADY_EXIST
;

956 i‡(
	`add_√w_pw_löe
(
Â2
, &
„tched_öfo
) != 0) {

957 
	`Ârötf
(
°dîr
, "UnableÅoáppendáÜine\n");

958 
bye
;

960 
	`fÊush
(
Â2
);

961 #ifde‡
HAVE_FILENO


962 
	`fsync
(
	`fûío
(
Â2
));

964 i‡(
	`f˛o£
(
Â2
) != 0) {

965 
	`≥º‹
("UnableÅo closeÅhe file");

966 
bye2
;

968 i‡(
	`ª«me
(
fûe2
, 
fûe
) != 0) {

969 
	`≥º‹
("UnableÅoÑenameÅhe file");

970 
bye2
;

972 
	`‰ì
(
fûe2
);

975 
bye
:

976 
	`f˛o£
(
Â2
);

977 
bye2
:

978 
	`u∆ök
(
fûe2
);

979 
	`‰ì
(
fûe2
);

981  
PW_ERROR_UNEXPECTED_ERROR
;

982 
	}
}

984 
	$do_u£rdñ
(c⁄° * c⁄° 
fûe
,

985 c⁄° 
PWInfo
 * c⁄° 
pwöfo
)

987 *
fûe2
;

988 
FILE
 *
Â2
;

990 i‡(
pwöfo
->
logö
 =
NULL
 || *(pwinfo->login) == 0) {

991 
	`Ârötf
(
°dîr
, "MissingÜogin\n");

994 i‡(
fûe
 =
NULL
) {

995 
	`Ârötf
(
°dîr
, "MissingÖasswd file\n");

996  
PW_ERROR_MISSING_PASSWD_FILE
;

998 i‡((
fûe2
 = 
	`√w∑sswd_fûíame
(
fûe
)Ë=
NULL
) {

999 
	`no_mem
();

1001 i‡((
Â2
 = 
	`¸óã_√w∑sswd
(
fûe
, 
fûe2
, 
pwöfo
->
logö
, 0, 1)Ë=
NULL
) {

1002 
	`Ârötf
(
°dîr
, "Error.\n"

1004 "™dÅh© [%s] c™ bêwrôãn.\n", 
pwöfo
->
logö
, 
fûe2
);

1005 
	`‰ì
(
fûe2
);

1006  
PW_ERROR_USER_ALREADY_EXIST
;

1008 
	`fÊush
(
Â2
);

1009 #ifde‡
HAVE_FILENO


1010 
	`fsync
(
	`fûío
(
Â2
));

1012 i‡(
	`f˛o£
(
Â2
) != 0) {

1013 
	`≥º‹
("UnableÅo closeÅhe file");

1014 
bye2
;

1016 i‡(
	`ª«me
(
fûe2
, 
fûe
) != 0) {

1017 
	`≥º‹
("UnableÅoÑenameÅhe file");

1018 
bye2
;

1020 
	`‰ì
(
fûe2
);

1023 
bye2
:

1024 
	`u∆ök
(
fûe2
);

1025 
	`‰ì
(
fûe2
);

1027  
PW_ERROR_UNEXPECTED_ERROR
;

1028 
	}
}

1030 
	$do_show
(c⁄° * c⁄° 
fûe
, c⁄° 
PWInfo
 * c⁄° 
pwöfo
)

1032 
PWInfo
 
„tched_öfo
;

1033 
∑sswd
 *
pwd
;

1034 
group
 *
gΩ
;

1035 c⁄° *
pwd_«me
 = "-";

1036 c⁄° *
gΩ_«me
 = "-";

1037 
löe
[
LINE_MAX
];

1039 i‡(
pwöfo
->
logö
 =
NULL
 || *(pwinfo->login) == 0) {

1040 
	`Ârötf
(
°dîr
, "MissingÜogin\n");

1041  
PW_ERROR_MISSING_LOGIN
;

1043 i‡(
fûe
 =
NULL
) {

1044 
	`Ârötf
(
°dîr
, "MissingÖasswd file\n");

1045  
PW_ERROR_MISSING_PASSWD_FILE
;

1047 i‡(
	`„tch_pw_accou¡
(
fûe
, &
„tched_öfo
, 
löe
, Üine,

1048 
pwöfo
->
logö
) != 0) {

1049 
	`Ârötf
(
°dîr
, "UnableÅo fetch infoábout user [%s] in file [%s]\n",

1050 
pwöfo
->
logö
, 
fûe
);

1051  
PW_ERROR_UNABLE_TO_FETCH
;

1053 i‡((
pwd
 = 
	`gëpwuid
(
„tched_öfo
.
uid
)Ë!
NULL
 &&Öwd->
pw_«me
 != NULL) {

1054 
pwd_«me
 = 
pwd
->
pw_«me
;

1056 i‡((
gΩ
 = 
	`gëgrgid
(
„tched_öfo
.
gid
)Ë!
NULL
 && gΩ->
gr_«me
 != NULL) {

1057 
gΩ_«me
 = 
gΩ
->
gr_«me
;

1059 
	`¥ötf
("\n"

1078 
„tched_öfo
.
logö
,

1079 
„tched_öfo
.
pwd
,

1080 (Ë
„tched_öfo
.
uid
, 
pwd_«me
,

1081 (Ë
„tched_öfo
.
gid
, 
gΩ_«me
,

1082 
„tched_öfo
.
home
,

1083 
„tched_öfo
.
gecos
,

1084 
	`SHOW_IFEN
(
„tched_öfo
.
has_bw_dl
, (Ë„tched_öfo.
bw_dl
 / 1024UL),

1085 
	`SHOW_STATE
(
„tched_öfo
.
has_bw_dl
),

1086 
	`SHOW_IFEN
(
„tched_öfo
.
has_bw_ul
, (Ë„tched_öfo.
bw_ul
 / 1024UL),

1087 
	`SHOW_STATE
(
„tched_öfo
.
has_bw_ul
),

1088 
	`SHOW_IFEN
(
„tched_öfo
.
has_quŸa_fûes
, (Ë„tched_öfo.
quŸa_fûes
),

1089 
	`SHOW_STATE
(
„tched_öfo
.
has_quŸa_fûes
),

1090 
	`SHOW_IFEN
(
„tched_öfo
.
has_quŸa_size
, (Ë„tched_öfo.
quŸa_size
 / (1024ULL * 1024ULL)),

1091 
	`SHOW_STATE
(
„tched_öfo
.
has_quŸa_size
),

1092 
	`SHOW_IFEN
(
„tched_öfo
.
has_ul_øtio
, fëched_öfo.
ul_øtio
),

1093 
	`SHOW_IFEN
(
„tched_öfo
.
has_dl_øtio
, fëched_öfo.
dl_øtio
),

1094 
	`SHOW_STATE
(
„tched_öfo
.
has_ul_øtio
),

1095 
	`SHOW_STATE
(
„tched_öfo
.
has_dl_øtio
),

1096 
	`SHOW_STRING
(
„tched_öfo
.
Ælow_loˇl_ù
),

1097 
	`SHOW_STRING
(
„tched_öfo
.
díy_loˇl_ù
),

1098 
	`SHOW_STRING
(
„tched_öfo
.
Ælow_˛õ¡_ù
),

1099 
	`SHOW_STRING
(
„tched_öfo
.
díy_˛õ¡_ù
),

1100 
	`SHOW_IFEN
(
„tched_öfo
.
has_time
, fëched_öfo.
time_begö
),

1101 
	`SHOW_IFEN
(
„tched_öfo
.
has_time
, fëched_öfo.
time_íd
),

1102 
	`SHOW_STATE
(
„tched_öfo
.
has_time
),

1103 
	`SHOW_IFEN
(
„tched_öfo
.
has_≥r_u£r_max
, fëched_öfo.
≥r_u£r_max
),

1104 
	`SHOW_STATE
(
„tched_öfo
.
≥r_u£r_max
));

1107 
	}
}

1109 
	$do_∑sswd
(c⁄° * c⁄° 
fûe
,

1110 
PWInfo
 * c⁄° 
pwöfo
)

1112 i‡(
pwöfo
->
logö
 =
NULL
 || *(pwinfo->login) == 0) {

1113 
	`Ârötf
(
°dîr
, "MissingÜogin\n");

1114  
PW_ERROR_MISSING_LOGIN
;

1116 i‡(
fûe
 =
NULL
) {

1117 
	`Ârötf
(
°dîr
, "MissingÖasswd file\n");

1118  
PW_ERROR_MISSING_PASSWD_FILE
;

1120 i‡((
pwöfo
->
pwd
 = 
	`do_gë_∑sswd
()Ë=
NULL
) {

1121 
	`Ârötf
(
°dîr
, "Error withÉnteringÖassword -áborting\n");

1122  
PW_ERROR_ENTER_PASSWD_PW_ERROR
;

1124  
	`do_u£rmod
(
fûe
, 
pwöfo
);

1125 
	}
}

1127 
	$do_mkdb
(c⁄° *
dbfûe
, c⁄° * c⁄° 
fûe
)

1129 
FILE
 *
Â
;

1130 *
ödex_dbfûe
;

1131 
size_t
 
sizeof_ödex_dbfûe
;

1132 *
d©a_dbfûe
;

1133 
size_t
 
sizeof_d©a_dbfûe
;

1134 *
s
;

1135 
PuªDBW
 
dbw
;

1136 
ªt
 = 
PW_ERROR_UNEXPECTED_ERROR
;

1137 
löe
[
LINE_MAX
];

1139 i‡(
dbfûe
 =
NULL
 || *dbfile == 0) {

1140 *
dbfûe_
;

1142 i‡((
dbfûe_
 = 
	`gëív
(
ENV_DEFAULT_PW_DB
)Ë!
NULL
 && *dbfile_ != 0) {

1143 
dbfûe
 = 
dbfûe_
;

1145 
dbfûe
 = 
DEFAULT_PW_DB
;

1148 i‡(
fûe
 =
NULL
) {

1149 
	`Ârötf
(
°dîr
, "MissingÖasswd file\n");

1150  
PW_ERROR_MISSING_PASSWD_FILE
;

1152 i‡((
Â
 = 
	`f›í
(
fûe
, "r")Ë=
NULL
) {

1153 
	`≥º‹
("UnableÅo openÅheÖasswd file");

1154  
PW_ERROR_MISSING_PASSWD_FILE
;

1156 
sizeof_ödex_dbfûe
 = 
	`°æí
(
dbfûe
Ë+  
NEWPASSWD_INDEX_SUFFIX
;

1157 i‡((
ödex_dbfûe
 = 
	`ALLOCA
(
sizeof_ödex_dbfûe
)Ë=
NULL
) {

1158 
	`f˛o£
(
Â
);

1159 
	`no_mem
();

1161 
sizeof_d©a_dbfûe
 = 
	`°æí
(
dbfûe
Ë+  
NEWPASSWD_DATA_SUFFIX
;

1162 i‡((
d©a_dbfûe
 = 
	`ALLOCA
(
sizeof_d©a_dbfûe
)Ë=
NULL
) {

1163 
	`f˛o£
(
Â
);

1164 
	`ALLOCA_FREE
(
ödex_dbfûe
);

1165 
	`no_mem
();

1167 
	`¢¥ötf
(
ödex_dbfûe
, 
sizeof_ödex_dbfûe
, "%s%s",

1168 
dbfûe
, 
NEWPASSWD_INDEX_SUFFIX
);

1169 
	`¢¥ötf
(
d©a_dbfûe
, 
sizeof_d©a_dbfûe
, "%s%s",

1170 
dbfûe
, 
NEWPASSWD_DATA_SUFFIX
);

1171 i‡(
	`puªdbw_›í
(&
dbw
, 
ödex_dbfûe
, 
d©a_dbfûe
, 
dbfûe
) != 0) {

1172 
	`≥º‹
("UnableÅo createÅhe database");

1173 
îr
;

1175 
	`fgës
(
löe
, (ËÜöê- 1U, 
Â
Ë!
NULL
) {

1176 
	`°rù_lf
(
löe
);

1177 i‡(*
löe
 =
PW_LINE_COMMENT
) {

1180 i‡(*
löe
 =0 || (
s
 = 
	`°rchr
÷öe, *
PW_LINE_SEP
)Ë=
NULL
 ||

1181 
s
[1] == 0) {

1184 *
s
++ = 0;

1185 i‡(
	`puªdbw_add_s
(&
dbw
, 
löe
, 
s
) != 0) {

1186 
	`≥º‹
("Error while indexingáÇewÉntry");

1187 
îr
;

1190 i‡(
	`puªdbw_˛o£
(&
dbw
) != 0) {

1191 
	`≥º‹
("UnableÅo closeÅhe database");

1193 
ªt
 = 0;

1195 
îr
:

1196 
	`puªdbw_‰ì
(&
dbw
);

1197 
	`ALLOCA_FREE
(
ödex_dbfûe
);

1198 
	`ALLOCA_FREE
(
d©a_dbfûe
);

1199 
	`f˛o£
(
Â
);

1201  
ªt
;

1202 
	}
}

1204 
	$öô_zønd
()

1206 
timevÆ
 
tv
;

1207 
timez⁄e
 
tz
;

1209 
	`gëtimeofday
(&
tv
, &
tz
);

1210 #ifde‡
HAVE_SRANDOMDEV


1211 
	`§™domdev
();

1212 #ñi‡
	`deföed
(
HAVE_RANDOM
)

1213 
	`§™dom
((Ë(
tv
.
tv_£c
 ^Åv.
tv_u£c
 ^ (
	`gëpid
() << 16)));

1215 
	`§™d
((Ë(
tv
.
tv_£c
 ^Åv.
tv_u£c
 ^ (
	`gëpid
() << 16)));

1217 
	}
}

1219 
	$maö
(
¨gc
, *
¨gv
[])

1221 c⁄° *
a˘i⁄
;

1222 *
fûe
 = 
NULL
;

1223 *
dbfûe
 = 
NULL
;

1224 
PWInfo
 
pwöfo
;

1225 
foddî
;

1226 
ªt
 = 0;

1227 
wôh_chroŸ
 = 1;

1228 
wôh_mkdb
 = 0;

1230 i‡(
¨gc
 < 2) {

1231 
	`hñp
();

1234 #ifde‡
HAVE_SETLOCALE


1235 #ifde‡
LC_MESSAGES


1236 (Ë
	`£éoˇÀ
(
LC_MESSAGES
, "");

1238 #ifde‡
LC_CTYPE


1239 (Ë
	`£éoˇÀ
(
LC_CTYPE
, "");

1241 #ifde‡
LC_COLLATE


1242 (Ë
	`£éoˇÀ
(
LC_COLLATE
, "");

1246 
pwöfo
.
pwd
 = 
NULL
;

1247 
pwöfo
.
gecos
 = 
NULL
;

1248 
pwöfo
.
home
 = 
NULL
;

1249 
pwöfo
.
Ælow_loˇl_ù
 =Öwöfo.
díy_loˇl_ù
 = 
NULL
;

1250 
pwöfo
.
Ælow_˛õ¡_ù
 =Öwöfo.
díy_˛õ¡_ù
 = 
NULL
;

1251 
pwöfo
.
has_bw_dl
 = 0;

1252 
pwöfo
.
has_bw_ul
 = 0;

1253 
pwöfo
.
has_quŸa_fûes
 = 0;

1254 
pwöfo
.
has_quŸa_size
 = 0;

1255 
pwöfo
.
has_ul_øtio
 = 0;

1256 
pwöfo
.
has_dl_øtio
 = 0;

1257 
pwöfo
.
has_time
 = 0;

1258 
pwöfo
.
time_begö
 =Öwöfo.
time_íd
 = 0U;

1259 
pwöfo
.
has_≥r_u£r_max
 = 0;

1260 
pwöfo
.
≥r_u£r_max
 = 0U;

1261 #i‡
	`deföed
(
WIN32
Ë|| deföed(
_WIN32
Ë|| deföed(
__WIN32__
Ë|| deföed(
__CYGWIN__
)

1262 
pwöfo
.
uid
 = (
uid_t
) 42U;

1263 
pwöfo
.
gid
 = (
gid_t
) 42U;

1265 
pwöfo
.
uid
 = (
uid_t
) 0U;

1266 
pwöfo
.
gid
 = (
gid_t
) 0U;

1269 
¨gv
++;

1270 
¨gc
--;

1271 
a˘i⁄
 = *
¨gv
;

1272 i‡(
¨gc
 > 1) {

1273 
¨gv
++;

1274 
¨gc
--;

1275 
pwöfo
.
logö
 = *
¨gv
;

1277 
pwöfo
.
logö
 = 
NULL
;

1279 
	`fûãr_pw_löe_£p
(
pwöfo
.
logö
);

1280 (
foddî
 =

1281 
	`gë›t
(
¨gc
, 
¨gv
,

1283 
foddî
) {

1285 i‡((
pwöfo
.
gecos
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

1286 
	`no_mem
();

1288 
	`fûãr_pw_löe_£p
(
pwöfo
.
gecos
);

1292 
wôh_chroŸ
 = 0;

1294 *
›èrg_c›y
;

1295 
size_t
 
sizeof_home
;

1296 
size_t
 
›èrg_Àn
;

1298 i‡((
›èrg_c›y
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

1299 
	`no_mem
();

1301 
agaö
:

1302 
›èrg_Àn
 = 
	`°æí
(
›èrg_c›y
);

1303 i‡(
›èrg_Àn
 < (
size_t
) 1U) {

1304 
	`Ârötf
(
°dîr
, "home directory is missing\n");

1305 
	`exô
(
EXIT_FAILURE
);

1307 i‡(
›èrg_c›y
[
›èrg_Àn
 - 1U] == '/') {

1308 
›èrg_Àn
--;

1309 
›èrg_c›y
[
›èrg_Àn
] = 0;

1310 
agaö
;

1312 
sizeof_home
 = 
›èrg_Àn
 +  "/./";

1313 i‡((
pwöfo
.
home
 = 
	`mÆloc
(
sizeof_home
)Ë=
NULL
) {

1314 
	`no_mem
();

1316 
	`¢¥ötf
(
pwöfo
.
home
, 
sizeof_home
, "%s%s", 
›èrg_c›y
,

1317 
wôh_chroŸ
 != 0 ? "/./" : "");

1318 
	`fûãr_pw_löe_£p
(
pwöfo
.
home
);

1322 i‡((
fûe
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

1323 
	`no_mem
();

1328 i‡((
dbfûe
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

1329 
	`no_mem
();

1334 
group
 *
gr
;

1336 i‡(
pwöfo
.
gid
 > (
gid_t
Ë0 &&Öwöfo.
uid
 <(
uid_t
) 0) {

1337 
	`Ârötf
(
°dîr
, "Youálready gaveá gid\n");

1338 
	`exô
(
EXIT_FAILURE
);

1340 i‡((
gr
 = 
	`gëg∫am
(
›èrg
)Ë!
NULL
) {

1341 
pwöfo
.
gid
 = 
gr
->
gr_gid
;

1343 
pwöfo
.
gid
 = (
gid_t
Ë
	`°πoul
(
›èrg
, 
NULL
, 10);

1348 
	`hñp
();

1352 i‡((
pwöfo
.
Ælow_loˇl_ù
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

1353 
	`no_mem
();

1358 i‡((
pwöfo
.
díy_loˇl_ù
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

1359 
	`no_mem
();

1364 
wôh_mkdb
 = 1;

1368 i‡(*
›èrg
 == 0) {

1369 
pwöfo
.
has_quŸa_fûes
 = -1;

1371 
pwöfo
.
quŸa_fûes
 = 
	`°πouŒ
(
›èrg
, 
NULL
, 10);

1372 
pwöfo
.
has_quŸa_fûes
 = 1;

1377 i‡(*
›èrg
 == 0) {

1378 
pwöfo
.
has_quŸa_size
 = -1;

1380 
pwöfo
.
quŸa_size
 = 
	`°πouŒ
(
›èrg
, 
NULL
, 10) *

1382 
pwöfo
.
has_quŸa_size
 = 1;

1387 i‡(*
›èrg
 == 0) {

1388 
pwöfo
.
has_ul_øtio
 = -1;

1390 
pwöfo
.
ul_øtio
 = (Ë
	`°πoul
(
›èrg
, 
NULL
, 10);

1391 i‡(
pwöfo
.
ul_øtio
 < 1U) {

1392 
	`Ârötf
(
°dîr
, "Illegal uploadÑatio\n");

1393 
	`exô
(
EXIT_FAILURE
);

1395 
pwöfo
.
has_ul_øtio
 = 1;

1400 i‡(*
›èrg
 == 0) {

1401 
pwöfo
.
has_dl_øtio
 = -1;

1403 
pwöfo
.
dl_øtio
 = (Ë
	`°πoul
(
›èrg
, 
NULL
, 10);

1404 i‡(
pwöfo
.
dl_øtio
 < 1U) {

1405 
	`Ârötf
(
°dîr
, "Illegal downloadÑatio\n");

1406 
	`exô
(
EXIT_FAILURE
);

1408 
pwöfo
.
has_dl_øtio
 = 1;

1413 i‡((
pwöfo
.
Ælow_˛õ¡_ù
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

1414 
	`no_mem
();

1419 i‡((
pwöfo
.
díy_˛õ¡_ù
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

1420 
	`no_mem
();

1425 i‡(*
›èrg
 == 0) {

1426 
pwöfo
.
has_bw_dl
 = -1;

1428 i‡((
pwöfo
.
bw_dl
 = 
	`°πoul
(
›èrg
, 
NULL
, 10)) > 0UL) {

1429 
pwöfo
.
bw_dl
 *= 1024UL;

1430 
pwöfo
.
has_bw_dl
 = 1;

1436 i‡(*
›èrg
 == 0) {

1437 
pwöfo
.
has_bw_ul
 = -1;

1439 i‡((
pwöfo
.
bw_ul
 = 
	`°πoul
(
›èrg
, 
NULL
, 10)) > 0UL) {

1440 
pwöfo
.
bw_ul
 *= 1024UL;

1441 
pwöfo
.
has_bw_ul
 = 1;

1447 
∑sswd
 *
pw
;

1449 i‡(
pwöfo
.
uid
 > (
uid_t
) 0) {

1450 
	`Ârötf
(
°dîr
, "Youálready gaveán uid\n");

1451 
	`exô
(
EXIT_FAILURE
);

1453 i‡((
pw
 = 
	`gëpw«m
(
›èrg
)Ë!
NULL
) {

1454 
pwöfo
.
uid
 = 
pw
->
pw_uid
;

1455 i‡(
pwöfo
.
gid
 <(
gid_t
) 0) {

1456 
pwöfo
.
gid
 = 
pw
->
pw_gid
;

1459 
pwöfo
.
uid
 = (
uid_t
Ë
	`°πoul
(
›èrg
, 
NULL
, 10);

1464 i‡((
pwöfo
.
≥r_u£r_max
 = (Ë
	`°πoul
(
›èrg
, 
NULL
, 10)) <= 0U) {

1465 
pwöfo
.
has_≥r_u£r_max
 = -1;

1467 
pwöfo
.
has_≥r_u£r_max
 = 1;

1472 i‡(
	`ssˇnf
(
›èrg
, "%u-%u",

1473 &
pwöfo
.
time_begö
, &pwöfo.
time_íd
) == 2 &&

1474 
pwöfo
.
time_begö
 < 2360 && (pwinfo.time_begin % 100) < 60 &&

1475 
pwöfo
.
time_íd
 < 2360 && (pwinfo.time_end % 100) < 60) {

1476 
pwöfo
.
has_time
 = 1;

1477 } i‡(*
›èrg
 != 0) {

1478 
	`Ârötf
(
°dîr
, "Time should be givenás hhmm-hhmm\n"

1480 
	`exô
(
EXIT_FAILURE
);

1482 
pwöfo
.
has_time
 = -1;

1487 
	`hñp
();

1490 i‡(
fûe
 =
NULL
) {

1491 *
fûe_
;

1493 i‡((
fûe_
 = 
	`gëív
(
ENV_DEFAULT_PW_FILE
)Ë!
NULL
 && *file_ != 0) {

1494 
fûe
 = 
fûe_
;

1495 } i‡((
fûe
 = 
	`°rdup
(
DEFAULT_PW_FILE
)Ë=
NULL
) {

1496 
	`no_mem
();

1499 (Ë
	`umask
(0177);

1500 
	`öô_zønd
();

1501 i‡(
	`°rˇ£cmp
(
a˘i⁄
, "useradd") == 0) {

1502 
ªt
 = 
	`do_u£ødd
(
fûe
, &
pwöfo
);

1503 i‡(
wôh_mkdb
 != 0) {

1504 
ªt
 |
	`do_mkdb
(
dbfûe
, 
fûe
);

1506 } i‡(
	`°rˇ£cmp
(
a˘i⁄
, "usermod") == 0) {

1507 
ªt
 = 
	`do_u£rmod
(
fûe
, &
pwöfo
);

1508 i‡(
wôh_mkdb
 != 0) {

1509 
ªt
 |
	`do_mkdb
(
dbfûe
, 
fûe
);

1511 } i‡(
	`°rˇ£cmp
(
a˘i⁄
, "userdel") == 0) {

1512 
ªt
 = 
	`do_u£rdñ
(
fûe
, &
pwöfo
);

1513 i‡(
wôh_mkdb
 != 0) {

1514 
ªt
 |
	`do_mkdb
(
dbfûe
, 
fûe
);

1516 } i‡(
	`°rˇ£cmp
(
a˘i⁄
, "passwd") == 0) {

1517 
ªt
 = 
	`do_∑sswd
(
fûe
, &
pwöfo
);

1518 i‡(
wôh_mkdb
 != 0) {

1519 
ªt
 |
	`do_mkdb
(
dbfûe
, 
fûe
);

1521 } i‡(
	`°rˇ£cmp
(
a˘i⁄
, "show") == 0) {

1522 
ªt
 = 
	`do_show
(
fûe
, &
pwöfo
);

1523 } i‡(
	`°rˇ£cmp
(
a˘i⁄
, "mkdb") == 0) {

1524 
ªt
 = 
	`do_mkdb
(
pwöfo
.
logö
, 
fûe
);

1525 } i‡(
	`°rˇ£cmp
(
a˘i⁄
, "list") == 0) {

1526 
ªt
 = 
	`do_li°
(
fûe
);

1528 
ªt
 = 
PW_ERROR_UNEXPECTED_ERROR
;

1529 
	`hñp
();

1532  
ªt
;

1533 
	}
}

	@src/pure-pw.h

1 #i‚de‡
__PURE_PW_H__


2 
	#__PURE_PW_H__
 1

	)

4 #i‚de‡
DEFAULT_PW_FILE


5 
	#DEFAULT_PW_FILE
 
CONFDIR
 "/puª·pd.∑sswd"

	)

8 #i‚de‡
ENV_DEFAULT_PW_FILE


9 
	#ENV_DEFAULT_PW_FILE
 "PURE_PASSWDFILE"

	)

12 #i‚de‡
DEFAULT_PW_DB


13 
	#DEFAULT_PW_DB
 
CONFDIR
 "/puª·pd.pdb"

	)

16 #i‚de‡
ENV_DEFAULT_PW_DB


17 
	#ENV_DEFAULT_PW_DB
 "PURE_DBFILE"

	)

20 #i‚de‡
NEWPASSWD_SUFFIX


21 
	#NEWPASSWD_SUFFIX
 ".tmp"

	)

24 #i‚de‡
NEWPASSWD_INDEX_SUFFIX


25 
	#NEWPASSWD_INDEX_SUFFIX
 ".ödex"

	)

28 #i‚de‡
NEWPASSWD_DATA_SUFFIX


29 
	#NEWPASSWD_DATA_SUFFIX
 ".d©a"

	)

32 #i‚de‡
LINE_MAX


33 
	#LINE_MAX
 4096

	)

36 #i‚de‡
PW_LINE_SEP


37 
	#PW_LINE_SEP
 ":"

	)

40 #i‚de‡
PW_LINE_COMMENT


41 
	#PW_LINE_COMMENT
 '#'

	)

44 #i‚de‡
MAX_PASSWD_CHANGE_TRIES


45 
	#MAX_PASSWD_CHANGE_TRIES
 3

	)

48 
	#PW_ERROR_MISSING_LOGIN
 (1 << 0)

	)

49 
	#PW_ERROR_MISSING_PASSWD_FILE
 (1 << 1)

	)

50 
	#PW_ERROR_USER_ALREADY_EXIST
 (1 << 2)

	)

51 
	#PW_ERROR_ENTER_PASSWD_PW_ERROR
 (1 << 3)

	)

52 
	#PW_ERROR_UNABLE_TO_FETCH
 (1 << 4)

	)

53 
	#PW_ERROR_USERADD_NOT_ROOT
 (1 << 5)

	)

54 
	#PW_ERROR_USERADD_MISSING_HOME_DIR
 (1 << 6)

	)

55 
	#PW_ERROR_MKDB_UNABLE_TO_OPEN_PASSWD
 (1 << 7)

	)

56 
	#PW_ERROR_UNEXPECTED_ERROR
 0xff

	)

58 
	sPWInfo_
 {

59 *
	mlogö
;

60 *
	mpwd
;

61 
uid_t
 
	muid
;

62 
gid_t
 
	mgid
;

63 *
	mhome
;

64 *
	mgecos
;

65 
	mbw_dl
;

66 
	mbw_ul
;

67 
	mhas_bw_dl
;

68 
	mhas_bw_ul
;

69 
	mquŸa_fûes
;

70 
	mquŸa_size
;

71 
	mhas_quŸa_fûes
;

72 
	mhas_quŸa_size
;

73 
	mul_øtio
;

74 
	mdl_øtio
;

75 
	mhas_ul_øtio
;

76 
	mhas_dl_øtio
;

77 *
	mÆlow_loˇl_ù
;

78 *
	mdíy_loˇl_ù
;

79 *
	mÆlow_˛õ¡_ù
;

80 *
	mdíy_˛õ¡_ù
;

81 
	mtime_begö
;

82 
	mtime_íd
;

83 
	mhas_time
;

84 
	mhas_≥r_u£r_max
;

85 
	m≥r_u£r_max
;

86 } 
	tPWInfo
;

88 *
√w∑sswd_fûíame
(c⁄° * c⁄° 
fûe
);

90 #i‚de‡
SHOW_STATE


91 
	#SHOW_STATE
(
X
Ë(((XË!0Ë? "íabÀd" : "u∆imôed")

	)

94 #i‚de‡
SHOW_IFEN


95 
	#SHOW_IFEN
(
X
, 
Y
Ë(((XË!0Ë? (YË: 0)

	)

97 #i‚de‡
SHOW_IFEN_S


98 
	#SHOW_IFEN_S
(
X
, 
Y
Ë(((XË!0Ë? (YË: "0")

	)

101 #i‚de‡
SHOW_STRING


102 
	#SHOW_STRING
(
X
Ë(((XË!
NULL
Ë? (XË: "-")

	)

	@src/pure-pwconvert.c

1 
	~<c⁄fig.h
>

3 
	~"·pd.h
"

5 #ifde‡
WITH_DMALLOC


6 
	~<dmÆloc.h
>

9 
	$maö
()

11 
∑sswd
 *
pwd
;

12 #ifde‡
USE_SHADOW


13 
•wd
 *
•w
;

15 c⁄° *
pw
;

16 
°©
 
°
;

18 #ifde‡
HAVE_SETLOCALE


19 #ifde‡
LC_MESSAGES


20 (Ë
	`£éoˇÀ
(
LC_MESSAGES
, "");

22 #ifde‡
LC_CTYPE


23 (Ë
	`£éoˇÀ
(
LC_CTYPE
, "");

25 #ifde‡
LC_COLLATE


26 (Ë
	`£éoˇÀ
(
LC_COLLATE
, "");

30 
	`£çwít
();

31 (
pwd
 = 
	`gëpwít
()Ë!
NULL
) {

32 i‡(
pwd
->
pw_«me
 =
NULL
) {

35 i‡(
pwd
->
pw_uid
 <(
uid_t
) 0 ||

36 
pwd
->
pw_gid
 <(
gid_t
) 0) {

39 i‡(
	`°©
(
pwd
->
pw_dú
, &
°
) != 0 ||

40 !
	`S_ISDIR
(
°
.
°_mode
)) {

43 #ifde‡
HAVE_SETUSERSHELL


44 i‡(
	`°rˇ£cmp
(
pwd
->
pw_shñl
, 
FAKE_SHELL
) != 0) {

45 c⁄° *
shñl
;

47 
	`£tu£rshñl
();

48 (
shñl
 = (*Ë
	`gëu£rshñl
()Ë!
NULL
 &&

49 
	`°rcmp
(
pwd
->
pw_shñl
, 
shñl
) != 0);

50 
	`ídu£rshñl
();

51 i‡(
shñl
 =
NULL
) {

56 
pw
 = 
pwd
->
pw_∑sswd
;

57 #ifde‡
USE_SHADOW


58 i‡(
pwd
->
pw_∑sswd
 !
NULL
 &&Öwd->
pw_«me
 != NULL &&

59 (((
pwd
->
pw_∑sswd
)[0] == 'x' && (pwd->pw_passwd)[1] == 0) ||

60 (
	`°rcmp
(
pwd
->
pw_∑sswd
, "********") == 0) ||

61 ((
pwd
->
pw_∑sswd
)[0] == '#' && (pwd->pw_passwd)[1] == '#' &&

62 
	`°rcmp
(
pwd
->
pw_∑sswd
 + 2,Öwd->
pw_«me
) == 0)) &&

63 (
•w
 = 
	`gë•«m
(
pwd
->
pw_«me
)Ë!
NULL
 && spw->
•_pwdp
 != NULL) {

64 
pw
 = 
•w
->
•_pwdp
[0] == '@' ? "*" : spw->sp_pwdp;

67 i‡(
pw
 =
NULL
 || *pw == 0) {

68 
pw
 = "*";

71 *
coma
;

73 i‡(
pwd
->
pw_gecos
 !
NULL
 &&

74 (
coma
 = 
	`°rchr
(
pwd
->
pw_gecos
, ',')Ë!
NULL
) {

75 *
coma
 = 0;

78 
	`¥ötf
("%s:%s:%lu:%lu:%s:%s/./\n", 
pwd
->
pw_«me
, 
pw
,

79 (Ë
pwd
->
pw_uid
, (Ëpwd->
pw_gid
,

80 
pwd
->
pw_gecos
,Öwd->
pw_dú
);

82 
	`ídpwít
();

85 
	}
}

	@src/pure-quotacheck.c

1 
	~<c⁄fig.h
>

3 
	~"·pd.h
"

4 
	~"quŸas.h
"

5 
	~"ß„_rw.h
"

7 #i‚de‡
HAVE_GETOPT_LONG


8 
	~"bsd-gë›t_l⁄g.h
"

10 
	~<gë›t.h
>

13 #ifde‡
WITH_DMALLOC


14 
	~<dmÆloc.h
>

17 
uid_t
 
	guid
;

18 
gid_t
 
	ggid
;

19 c⁄° *
	g°¨ç©h
;

20 
	gtŸÆ_size
;

21 
	gtŸÆ_fûes
;

22 sig√d 
	gi§oŸ
;

23 
	gdeÁu…_tz_f‹_puãnv
[] = "TZ=UTC+00:00";

31 
	sNode_
 {

32 
öo_t
 
	möode
;

33 
dev_t
 
	mdevi˚
;

34 } 
	tNode
;

36 
Node
 *
	gnodes
;

37 
size_t
 
	gnodes_size
;

39 
	$oom
()

41 
	`Âuts
("Ouào‡mem‹yÉº‹!\n", 
°dîr
);

42 
	`exô
(
EXIT_FAILURE
);

43 
	}
}

45 
	$öô_tz
()

47 
°buf
[10];

48 
tm
 *tm;

49 
time_t
 
now
;

51 #ifde‡
HAVE_TZSET


52 
	`tz£t
();

54 #ifde‡
HAVE_PUTENV


55 
	`time
(&
now
);

56 i‡((
tm
 = 
	`loˇ…ime
(&
now
)Ë=
NULL
 ||

57 
	`°r·ime
(
°buf
,  stbuf, "%z", 
tm
Ë!(
size_t
) 5U) {

60 
	`¢¥ötf
(
deÁu…_tz_f‹_puãnv
,  default_tz_for_putenv,

61 "TZ=UTC%c%c%c:%c%c", (*
°buf
 == '-' ? '+' : '-'),

62 
°buf
[1], stbuf[2], stbuf[3], stbuf[4]);

63 
	`puãnv
(
deÁu…_tz_f‹_puãnv
);

66 
	}
}

68 
	$åavîßl
(c⁄° * c⁄° 
s
)

70 
DIR
 *
d
;

71 
dúít
 *
de
;

72 
°©
 
°
;

73 
size_t
 
¶í
;

74 
Node
 *
nodes_≤t
 = 
nodes
;

75 
size_t
 
nodes_˙t
 = 
nodes_size
;

76 
fd
;

77 *
buf
 = 
NULL
;

78 
size_t
 
sizeof_buf
 = (size_t) 0U;

80 i‡((
fd
 = 
	`›í
(
s
, 
O_RDONLY
 | 
O_DIRECTORY
)) == -1) {

81 i‡(
î∫o
 !
EACCES
) {

84 i‡(
	`f°©
(
fd
, &
°
Ë!0 || !
	`S_ISDIR
(°.
°_mode
Ë|| st.
°_uid
 !
uid
) {

85 
	`˛o£
(
fd
);

88 (Ë
	`fchmod
(
fd
, 
°
.
°_mode
 | 0500);

89 
	`˛o£
(
fd
);

90 i‡((
fd
 = 
	`›í
(
s
, 
O_RDONLY
 | 
O_DIRECTORY
)) == -1) {

94 i‡(
	`f°©
(
fd
, &
°
Ë!0 || !
	`S_ISDIR
(°.
°_mode
)) {

95 
	`˛o£
(
fd
);

98 i‡((
°
.
°_mode
 & 0500Ë!0500 && st.
°_uid
 =
uid
) {

99 (Ë
	`fchmod
(
fd
, (
mode_t
Ë(
°
.
°_mode
 | 0500));

101 
	`˛o£
(
fd
);

102 
nodes_˙t
 > (
size_t
) 0U) {

103 i‡(
nodes_≤t
->
öode
 =
°
.
°_öo
 &&Çodes_≤t->
devi˚
 =°.
°_dev
) {

106 
nodes_≤t
++;

107 
nodes_˙t
 - *
nodes_≤t
;

109 i‡(
nodes
 =
NULL
) {

110 i‡((
nodes
 = 
	`mÆloc
( *nodes)Ë=
NULL
) {

111 
	`oom
();

114 
Node
 *
√w_nodes
;

116 i‡((
√w_nodes
 = 
	`ªÆloc
(
nodes
, 
nodes_size
 +  *
nodes_≤t
))

117 =
NULL
) {

118 
	`oom
();

120 
nodes
 = 
√w_nodes
;

123 
Node
 * c⁄° 
node
 =

124 (
Node
 *Ë(*Ë(((*Ë
nodes
Ë+ 
nodes_size
);

126 
node
->
öode
 = 
°
.
°_öo
;

127 
node
->
devi˚
 = 
°
.
°_dev
;

129 
nodes_size
 + *
nodes_≤t
;

130 i‡((
d
 = 
	`›ídú
(
s
)Ë=
NULL
) {

133 
¶í
 = 
	`°æí
(
s
Ë+ (
size_t
) 2U;

134 (
de
 = 
	`ªaddú
(
d
)Ë!
NULL
) {

135 
size_t
 
w™ãd_sizeof_buf
;

137 i‡((
de
->
d_«me
[0] == '.' && de->d_name[1] == 0) ||

138 (
de
->
d_«me
[0] == '.' && de->d_name[1] == '.' &&

139 
de
->
d_«me
[2] == 0)) {

142 i‡(
	`°rcmp
(
de
->
d_«me
, 
QUOTA_FILE
) == 0) {

145 
w™ãd_sizeof_buf
 = 
¶í
 + 
	`°æí
(
de
->
d_«me
);

146 i‡(
w™ãd_sizeof_buf
 > 
sizeof_buf
) {

147 i‡((
buf
 = 
	`ªÆloc
(buf, 
w™ãd_sizeof_buf
)Ë=
NULL
) {

148 
	`oom
();

150 
sizeof_buf
 = 
w™ãd_sizeof_buf
;

152 
	`¢¥ötf
(
buf
, 
sizeof_buf
, "%s/%s", 
s
, 
de
->
d_«me
);

153 i‡(
	`°©
(
buf
, &
°
) == 0) {

154 i‡(
	`S_ISDIR
(
°
.
°_mode
)) {

155 i‡(
	`åavîßl
(
buf
) == 0) {

156 
tŸÆ_fûes
++;

158 } i‡(
	`S_ISREG
(
°
.
°_mode
)) {

159 
tŸÆ_size
 +(Ë
°
.
°_size
;

160 
tŸÆ_fûes
++;

164 
	`‰ì
(
buf
);

165 
	`˛o£dú
(
d
);

168 
	}
}

170 
	$hñp
()

172 
	`puts
("\nUsage:\n\n"

178 
	`exô
(
EXIT_SUCCESS
);

179 
	}
}

181 
	$doöôsupgroups
(c⁄° *
u£r
, c⁄° 
uid_t
 
uid
, c⁄° 
gid_t
 
gid
)

183 #i‚de‡
NON_ROOT_FTP


184 #ifde‡
HAVE_SETGROUPS


185 i‡(
	`£tgroups
(1U, &
gid
) != 0) {

189 (Ë
gid
;

191 #ifde‡
HAVE_INITGROUPS


192 i‡(
u£r
 =
NULL
) {

193 c⁄° 
∑sswd
 * c⁄° 
Õwd
 = 
	`gëpwuid
(
uid
);

195 i‡(
Õwd
 !
NULL
 &&Üpwd->
pw_«me
 != NULL) {

196 
u£r
 = 
Õwd
->
pw_«me
;

201 
	`öôgroups
(
u£r
, 
gid
);

203 (Ë
u£r
;

204 (Ë
uid
;

207 (Ë
u£r
;

208 (Ë
uid
;

209 (Ë
gid
;

212 
	}
}

214 
	$ch™geuidgid
()

216 i‡(
	`£tgid
(
gid
Ë|| 
	`£ãgid
(gid) ||

217 
	`£tuid
(
uid
Ë|| 
	`£ãuid
(uidË|| 
	`chdú
("/")) {

221 
	}
}

223 
	$wrôequŸa
(c⁄° * c⁄° 
quŸa_fûe
)

225 
îr
 = -1;

226 
fd
;

227 
Êock
 
lock
;

228 
ssize_t
 
towrôe
;

229 
°©
 
°
;

230 
buf
[84];

231 c⁄° *
buÂ¡
 = 
buf
;

233 i‡((
fd
 = 
	`›í
("/", 
O_RDONLY
 | 
O_DIRECTORY
)) == -1) {

236 i‡(
	`f°©
(
fd
, &
°
Ë!0 || !
	`S_ISDIR
(°.
°_mode
)) {

237 
	`˛o£
(
fd
);

240 i‡((
°
.
°_mode
 & 0700Ë!0700 && st.
°_uid
 =
uid
) {

241 (Ë
	`fchmod
(
fd
, 
°
.
°_mode
 | 0700);

243 
	`˛o£
(
fd
);

244 i‡((
fd
 = 
	`›í
(
quŸa_fûe
, 
O_RDWR
 | 
O_CREAT
 | 
O_NOFOLLOW
,

245 (
mode_t
) 0600)) == -1) {

248 
lock
.
l_whí˚
 = 
SEEK_SET
;

249 
lock
.
l_°¨t
 = (
off_t
) 0;

250 
lock
.
l_Àn
 = (
off_t
) 0;

251 
lock
.
l_pid
 = 
	`gëpid
();

252 
lock
.
l_ty≥
 = 
F_WRLCK
;

253 
	`f˙é
(
fd
, 
F_SETLKW
, &
lock
) < 0) {

254 i‡(
î∫o
 !
EINTR
) {

255 
byíou∆ock
;

258 i‡(
	`SNCHECK
(
	`¢¥ötf
(
buf
,  buf, "%llu %llu\n",

259 
tŸÆ_fûes
, 
tŸÆ_size
),  
buf
) ||

260 
	`·runˇã
(
fd
, (
off_t
) 0) != 0) {

261 
bye
;

263 
towrôe
 = (
ssize_t
Ë
	`°æí
(
buf
);

264 
îr
 = - (
	`ß„_wrôe
(
fd
, 
buÂ¡
, 
towrôe
, -1Ë!(
ssize_t
)Åowrite);

265 
bye
:

266 
lock
.
l_ty≥
 = 
F_UNLCK
;

267 
	`f˙é
(
fd
, 
F_SETLK
, &
lock
Ë< 0 && 
î∫o
 =
EINTR
);

268 
byíou∆ock
:

269 
	`˛o£
(
fd
);

271  
îr
;

272 
	}
}

274 
	$maö
(
¨gc
, *
¨gv
[])

276 
foddî
;

278 i‡(
	`gëeuid
(Ë=(
uid_t
) 0) {

279 
i§oŸ
 = 1;

281 
uid
 = 
	`gëeuid
();

282 
gid
 = 
	`gëegid
();

284 i‡(
¨gc
 < 0) {

287 i‡(
¨gc
 < 2) {

288 
	`hñp
();

291 #ifde‡
HAVE_SETLOCALE


292 #ifde‡
LC_MESSAGES


293 (Ë
	`£éoˇÀ
(
LC_MESSAGES
, "");

295 #ifde‡
LC_CTYPE


296 (Ë
	`£éoˇÀ
(
LC_CTYPE
, "");

298 #ifde‡
LC_COLLATE


299 (Ë
	`£éoˇÀ
(
LC_COLLATE
, "");

303 
	`öô_tz
();

305 (
foddî
 = 
	`gë›t
(
¨gc
, 
¨gv
, "d:g:u:h")) != -1) {

306 
foddî
) {

308 
	`hñp
();

311 i‡(
°¨ç©h
 !
NULL
) {

312 
	`Ârötf
(
°dîr
, "AÃódy o√ sèπ∑th: [%s]\n", 
°¨ç©h
);

315 
°¨ç©h
 = 
	`°rdup
(
›èrg
);

316 i‡(
°¨ç©h
 =
NULL
) {

317 
	`oom
();

322 
group
 *
gr
;

324 i‡(
gid
 > (
gid_t
) 0) {

325 
	`Ârötf
(
°dîr
, "Youálready gaveá gid\n");

328 i‡((
gr
 = 
	`gëg∫am
(
›èrg
)Ë!
NULL
) {

329 
gid
 = 
gr
->
gr_gid
;

331 
gid
 = (
gid_t
Ë
	`°πoul
(
›èrg
, 
NULL
, 10);

337 
∑sswd
 *
pw
;

339 i‡(
uid
 > (
uid_t
) 0) {

340 
	`Ârötf
(
°dîr
, "Youálready gaveán uid\n");

343 i‡((
pw
 = 
	`gëpw«m
(
›èrg
)Ë!
NULL
) {

344 
uid
 = 
pw
->
pw_uid
;

345 i‡(
gid
 =(
gid_t
) 0) {

346 
gid
 = 
pw
->
pw_gid
;

349 
uid
 = (
uid_t
Ë
	`°πoul
(
›èrg
, 
NULL
, 10);

354 
	`hñp
();

357 i‡(
°¨ç©h
 =
NULL
) {

358 
	`Ârötf
(
°dîr
, "MissingÖath\n");

361 i‡(
uid
 <(
uid_t
) 0) {

362 
	`Ârötf
(
°dîr
, "Invalid/insecure/missing uid - must be > 0\n");

365 i‡(
gid
 <(
gid_t
) 0) {

366 
	`Ârötf
(
°dîr
, "Invalid/insecure/missing gid - must be > 0\n");

369 i‡(
i§oŸ
 != 0) {

370 i‡(
	`doöôsupgroups
(
NULL
, 
uid
, 
gid
)

371 #i‡
	`deföed
(
WIN32
Ë|| deföed(
_WIN32
Ë|| deföed(
__WIN32__
Ë|| deföed(
__CYGWIN__
)

375 
	`chdú
(
°¨ç©h
) != 0 ||

376 
	`chroŸ
(
°¨ç©h
Ë!0 || 
	`chdú
("/") != 0) {

377 
	`Ârötf
(
°dîr
, "Can't chrootÅo [%s]: [%s]\n",

378 
°¨ç©h
, 
	`°ªº‹
(
î∫o
));

381 i‡(
	`ch™geuidgid
() < 0) {

382 
	`Ârötf
(
°dîr
, "C™'àswôch uid/gid: [%s]\n", 
	`°ªº‹
(
î∫o
));

385 } i‡(
	`chdú
(
°¨ç©h
) != 0) {

386 
	`Ârötf
(
°dîr
, "Can'tÉnter directory [%s]: [%s]\n",

387 
°¨ç©h
, 
	`°ªº‹
(
î∫o
));

390 i‡(
	`åavîßl
(
i§oŸ
 != 0 ? "/" : "./") < 0) {

391 
	`Ârötf
(
°dîr
, "UnableÅoÅraverse [%s]: [%s]\n",

392 
°¨ç©h
, 
	`°ªº‹
(
î∫o
));

393 
	`‰ì
(
nodes
);

397 
	`‰ì
(
nodes
);

398 i‡(
i§oŸ
 != 0) {

399 i‡(
	`wrôequŸa
("/" 
QUOTA_FILE
) < 0) {

400 
îr_wrôequŸa
:

401 
	`Ârötf
(
°dîr
, "UnableÅo updateÅhe quota file ("

402 
QUOTA_FILE
 "): [%s]\n", 
	`°ªº‹
(
î∫o
));

405 } i‡(
	`chdú
(
°¨ç©h
Ë!0 || 
	`wrôequŸa
(
QUOTA_FILE
) < 0) {

406 
îr_wrôequŸa
;

410 
	}
}

	@src/pure-statsdecode.c

1 
	~<c⁄fig.h
>

3 
	~"·pd.h
"

5 #ifde‡
WITH_DMALLOC


6 
	~<dmÆloc.h
>

10 
	$ußge
()

12 
	`puts
("Usage:Öure-statsdecode [statsÜog file] [-]");

13 
	}
}

15 
	$maö
(
¨gc
, *
¨gv
[])

17 
ö°amp
 = 0;

18 
c
;

19 c⁄° *
fûe
;

20 
FILE
 *
Â
;

21 
time_t
 
d©e
;

22 
tm
 *tm;

23 
time°amp
[42];

25 i‡(
¨gc
 != 2) {

26 
	`ußge
();

30 #ifde‡
HAVE_SETLOCALE


31 #ifde‡
LC_MESSAGES


32 (Ë
	`£éoˇÀ
(
LC_MESSAGES
, "");

34 #ifde‡
LC_CTYPE


35 (Ë
	`£éoˇÀ
(
LC_CTYPE
, "");

37 #ifde‡
LC_COLLATE


38 (Ë
	`£éoˇÀ
(
LC_COLLATE
, "");

42 
fûe
 = 
¨gv
[1];

43 i‡(*
fûe
 == '-' && file[1] == 0) {

44 
Â
 = 
°dö
;

46 i‡((
Â
 = 
	`f›í
(
fûe
, "r")Ë=
NULL
) {

47 
	`≥º‹
("Can't open file: ");

51 (
c
 = 
	`gëc
(
Â
)Ë!
EOF
) {

52 i‡(
ö°amp
 >= 0) {

53 i‡(
	`isdigô
(
c
)) {

54 i‡(
ö°amp
 < (Ë( 
time°amp
 - 1U)) {

55 
time°amp
[
ö°amp
] = (Ë
c
;

56 
ö°amp
++;

59 
time°amp
[
ö°amp
] = 0;

60 
ö°amp
 = -1;

61 
d©e
 = (
time_t
Ë
	`°πoul
(
time°amp
, 
NULL
, 10);

62 
tm
 = 
	`loˇ…ime
(&
d©e
);

63 
	`¥ötf
("%d/%02d/%02d %02d:%02d:%02d ",

64 
tm
->
tm_yór
 + 1900,

65 
tm
->
tm_m⁄
 + 1,

66 
tm
->
tm_mday
,

67 
tm
->
tm_hour
,

68 
tm
->
tm_mö
,

69 
tm
->
tm_£c
);

72 i‡(
c
 ='\n' || !
	`ISCTRLCODE
(c)) {

73 
	`putch¨
(
c
);

76 i‡(
c
 == '\n') {

77 
	`fÊush
(
Â
);

78 
ö°amp
 = 0;

81 
	`f˛o£
(
Â
);

84 
	}
}

	@src/pure-uploadscript.c

1 
	~<c⁄fig.h
>

3 #i‚de‡
WITH_UPLOAD_SCRIPT


4 
	~<°dio.h
>

6 
	$maö
()

8 
	`puts
("Please compileÅhe server with --with-uploadscript\n"

12 
	}
}

15 
	~"·pd.h
"

16 
	~"u∂ﬂd-pùe.h
"

17 
	~"ß„_rw.h
"

18 
	~"puª-u∂ﬂds¸ùt_p.h
"

20 #ifde‡
WITH_DMALLOC


21 
	~<dmÆloc.h
>

24 
	$£t˛€xec
(c⁄° 
fd
)

26 
	`f˙é
(
fd
, 
F_SETFD
, 
FD_CLOEXEC
);

27 
	}
}

29 
	$u∂ﬂd_pùe_r›í
()

31 
°©
 
°
;

32 
u∂ﬂd_pùe_fd
;

33 
åõs
 = 
OPEN_TRIES
;

35 
agaö
:

36 i‡((
u∂ﬂd_pùe_fd
 =

37 
	`›í
(
UPLOAD_PIPE_FILE
, 
O_RDONLY
 | 
O_NOFOLLOW
)) == -1) {

38 i‡(
åõs
 > 0) {

39 
åõs
--;

40 (Ë
	`¶ìp
(
OPEN_DELAY
);

41 
agaö
;

43 
	`≥º‹
("U«bÀÅÿ›í " 
UPLOAD_PIPE_FILE
);

46 
	`£t˛€xec
(
u∂ﬂd_pùe_fd
);

47 i‡(
	`f°©
(
u∂ﬂd_pùe_fd
, &
°
) < 0 ||

48 (
°
.
°_mode
 & 0777Ë!0600 || !
	`S_ISFIFO
(st.st_mode) ||

49 #ifde‡
NON_ROOT_FTP


50 
°
.
°_uid
 !
	`gëeuid
()

52 
°
.
°_uid
 !(
uid_t
) 0

55 
	`Ârötf
(
°dîr
, "In£cuªÖîmissi⁄†⁄ " 
UPLOAD_PIPE_FILE
 "\n");

58  
u∂ﬂd_pùe_fd
;

59 
	}
}

61 
	$ªadch¨
(c⁄° 
u∂ﬂd_fûe_fd
)

63 
ssize_t
 
ªt
;

64 
c
;

66 (
ªt
 = 
	`ªad
(
u∂ﬂd_fûe_fd
, &
c
, (
size_t
Ë1U)Ë< (
ssize_t
) 0 &&

67 
î∫o
 =
EINTR
);

68 i‡(
ªt
 <(
ssize_t
) 0) {

69  
EOF
;

71  (Ë
c
;

72 
	}
}

74 
	$ªadpùe
(c⁄° 
u∂ﬂd_fûe_fd
,

75 ** c⁄° 
r_who
, ** c⁄° 
r_fûe
)

77 
who
[
MAX_USER_LENGTH
 + 1U];

78 
fûe
[
MAXPATHLEN
 + 
VHOST_PREFIX_MAX_LEN
];

79 c⁄° * c⁄° 
wh€nd
 = &
who
[ who];

80 c⁄° * c⁄° 
fûìnd
 = &
fûe
[ file];

81 *
wh›¡
 = 
who
;

82 *
fûï¡
 = 
fûe
;

83 
c
;

85 *
r_who
 = 
NULL
;

86 *
r_fûe
 = 
NULL
;

88 
c
 = 
	`ªadch¨
(
u∂ﬂd_fûe_fd
);

89 i‡(
c
 =
EOF
) {

92 } 
c
 != 2);

93 
wh›¡
 !
wh€nd
) {

94 
c
 = 
	`ªadch¨
(
u∂ﬂd_fûe_fd
);

95 i‡(
c
 =
EOF
 || (¯!1 && 
	`ISCTRLCODE
(c))) {

98 i‡(
c
 == 1) {

99 *
wh›¡
 = 0;

102 *
wh›¡
 = (Ë
c
;

103 
wh›¡
++;

105 
fûï¡
 !
fûìnd
) {

106 
c
 = 
	`ªadch¨
(
u∂ﬂd_fûe_fd
);

107 i‡(
c
 =
EOF
 || (¯!0 && 
	`ISCTRLCODE
(c))) {

110 *
fûï¡
 = (Ë
c
;

111 i‡(
c
 == 0) {

114 
fûï¡
++;

116 *
r_who
 = 
who
;

117 *
r_fûe
 = 
fûe
;

120 
	}
}

127 *
	$checkvútuÆ
(*
∑th
)

129 
buf
[
MAXPATHLEN
 + 1];

130 *
∑th_≤t
;

132 i‡(
∑th
 =
NULL
 || *path == '/' ||

133 (
∑th_≤t
 = 
	`°r°r
(
∑th
, ":/")Ë=
NULL
) {

134  
∑th
;

136 *
∑th_≤t
 = 0;

137 i‡(
	`SNCHECK
(
	`¢¥ötf
(
buf
,  buf, 
VHOST_PATH
 "/%s%s",

138 
∑th
, 
∑th_≤t
 + 1),  
buf
)) {

140  
NULL
;

143  
buf
;

144 
	}
}

146 
	$˛o£desc_Æl
(c⁄° 
˛o£°dö
)

148 
foddî
;

150 i‡(
˛o£°dö
 != 0) {

151 (Ë
	`˛o£
(0);

152 i‡((
foddî
 = 
	`›í
("/dev/nuŒ", 
O_RDONLY
)) == -1) {

155 (Ë
	`dup2
(
foddî
, 0);

156 i‡(
foddî
 > 0) {

157 (Ë
	`˛o£
(
foddî
);

160 i‡((
foddî
 = 
	`›í
("/dev/nuŒ", 
O_WRONLY
)) == -1) {

163 (Ë
	`dup2
(
foddî
, 1);

164 (Ë
	`dup2
(1, 2);

165 i‡(
foddî
 > 2) {

166 (Ë
	`˛o£
(
foddî
);

169 
	}
}

171 
	$dod´m⁄ize
()

173 
pid_t
 
chûd
;

175 i‡(
d´m⁄ize
 != 0) {

176 i‡((
chûd
 = 
	`f‹k
()Ë=(
pid_t
) -1) {

177 
	`≥º‹
("Daemonization failed - fork");

179 } i‡(
chûd
 !(
pid_t
) 0) {

180 
	`_exô
(
EXIT_SUCCESS
);

181 } i‡(
	`£tsid
(Ë=(
pid_t
) -1) {

182 
	`≥º‹
("Daemonization failed : setsid");

184 (Ë
	`chdú
("/");

185 #ifde‡
HAVE_CLOSEFROM


186 (Ë
	`˛o£‰om
(3);

188 (Ë
	`˛o£desc_Æl
(0);

190 
	}
}

192 
	$öô
()

194 (Ë
	`˛o£
(0);

195 #i‚de‡
NON_ROOT_FTP


196 i‡(
	`gëeuid
(Ë!(
uid_t
) 0) {

197 
	`Ârötf
(
°dîr
, "Sorry, but you haveÅo beÑ00tÅoÑunÅhisÖrogram\n");

203 
	}
}

205 
	$ußge
()

207 #i‚de‡
NO_GETOPT_LONG


208 c⁄° 
›ti⁄
 *
›ti⁄s
 = 
l⁄g_›ti⁄s
;

211 
	`¥ötf
("-%c\t--%s\t%s\n", 
›ti⁄s
->
vÆ
, o±i⁄s->
«me
,

212 
›ti⁄s
->
has_¨g
 ? "<opt>" : "");

213 
›ti⁄s
++;

214 } 
›ti⁄s
->
«me
 !
NULL
);

216 
	`exô
(
EXIT_SUCCESS
);

217 
	}
}

219 
	$∑r£›ti⁄s
(
¨gc
, *
¨gv
[])

221 #i‚de‡
NO_GETOPT_LONG


222 
›ti⁄_ödex
 = 0;

224 
foddî
;

226 (
foddî
 =

227 #i‚de‡
NO_GETOPT_LONG


228 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, 
GETOPT_OPTIONS
, 
l⁄g_›ti⁄s
, &
›ti⁄_ödex
)

230 
	`gë›t
(
¨gc
, 
¨gv
, 
GETOPT_OPTIONS
)

233 
foddî
) {

235 
d´m⁄ize
 = 1;

239 i‡((
u∂ﬂds¸ùt_pid_fûe
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

240 
	`≥º‹
("OhÇo ! More memory !");

245 c⁄° *
≈å
;

246 *
íd±r
;

248 
≈å
 = 
›èrg
;

249 
íd±r
 = 
NULL
;

250 
gid
 = (
gid_t
Ë
	`°πoul
(
≈å
, &
íd±r
, 10);

251 i‡(!
≈å
 || !*≈å || !
íd±r
 || *endptr) {

252 
	`≥º‹
("Illegal GID - Must beáÇumber\n");

256 #i‚de‡
NO_GETOPT_LONG


258 
	`ußge
();

262 i‡((
s¸ùt
 = 
	`°rdup
(
›èrg
)Ë=
NULL
) {

263 
	`≥º‹
("OhÇo ! More memory !");

268 c⁄° *
≈å
;

269 *
íd±r
;

271 
≈å
 = 
›èrg
;

272 
íd±r
 = 
NULL
;

273 
uid
 = (
uid_t
Ë
	`°πoul
(
≈å
, &
íd±r
, 10);

274 i‡(!
≈å
 || !*≈å || !
íd±r
 || *endptr) {

275 
	`≥º‹
("Illegal UID - Must beáÇumber\n");

280 
	`ußge
();

284 
	}
}

286 
	$ch™geuidgid
()

288 #i‚de‡
NON_ROOT_FTP


290 #ifde‡
HAVE_SETGROUPS


291 
	`£tgroups
(1U, &
gid
) ||

293 
	`£tgid
(
gid
Ë|| 
	`£ãgid
(gid) ||

294 
	`£tuid
(
uid
Ë|| 
	`£ãuid
(uidË|| 
	`chdú
("/")) {

299 
	}
}

301 #ifde‡
HAVE_PUTENV


302 
	$√wív_uŒ
(c⁄° * c⁄° 
v¨
, c⁄° 
vÆ
)

304 
size_t
 
s
;

305 *
v
;

307 
s
 = 
	`°æí
(
v¨
Ë+ (
size_t
) 42U;

308 i‡((
v
 = 
	`mÆloc
(
s
)Ë=
NULL
) {

311 i‡(
	`SNCHECK
(
	`¢¥ötf
(
v
, 
s
, "%s=%Œu", 
v¨
, 
vÆ
), s)) {

312 
	`‰ì
(
v
);

315 
	`puãnv
(
v
);

316 
	}
}

318 
	$√wív_uo
(c⁄° * c⁄° 
v¨
, c⁄° 
vÆ
)

320 
size_t
 
s
;

321 *
v
;

323 
s
 = 
	`°æí
(
v¨
Ë+ (
size_t
) 8U;

324 i‡((
v
 = 
	`mÆloc
(
s
)Ë=
NULL
) {

327 i‡(
	`SNCHECK
(
	`¢¥ötf
(
v
, 
s
, "%s=%o", 
v¨
, 
vÆ
), s)) {

328 
	`‰ì
(
v
);

331 
	`puãnv
(
v
);

332 
	}
}

334 
	$√wív_°r
(c⁄° * c⁄° 
v¨
, c⁄° * c⁄° 
°r
)

336 
size_t
 
s
;

337 *
v
;

339 i‡(
°r
 =
NULL
 || *str == 0) {

342 
s
 = 
	`°æí
(
v¨
Ë+ såÀn(
°r
Ë+ (
size_t
) 2U;

343 i‡((
v
 = 
	`mÆloc
(
s
)Ë=
NULL
) {

346 i‡(
	`SNCHECK
(
	`¢¥ötf
(
v
, 
s
, "%s=%s", 
v¨
, 
°r
), s)) {

347 
	`‰ì
(
v
);

350 
	`puãnv
(
v
);

351 
	}
}

354 
	$fûÀnv
(c⁄° * c⁄° 
who
, c⁄° 
°©
 * c⁄° 
°
)

356 #ifde‡
HAVE_PUTENV


357 
∑sswd
 *
pwd
;

358 
group
 *
gΩ
;

360 
pwd
 = 
	`gëpwuid
(
°
->
°_uid
);

361 
gΩ
 = 
	`gëgrgid
(
°
->
°_gid
);

362 
	`√wív_uŒ
("UPLOAD_SIZE", (Ë
°
->
°_size
);

363 
	`√wív_uo
("UPLOAD_PERMS", (Ë(
°
->
°_mode
 & 07777));

364 
	`√wív_uŒ
("UPLOAD_UID", (Ë
°
->
°_uid
);

365 
	`√wív_uŒ
("UPLOAD_GID", (Ë
°
->
°_gid
);

366 i‡(
pwd
 !
NULL
) {

367 
	`√wív_°r
("UPLOAD_USER", 
pwd
->
pw_«me
);

369 i‡(
gΩ
 !
NULL
) {

370 
	`√wív_°r
("UPLOAD_GROUP", 
gΩ
->
gr_«me
);

372 i‡(
who
 !
NULL
) {

373 
	`√wív_°r
("UPLOAD_VUSER", 
who
);

376 (Ë
°
;

378 
	}
}

380 
	$run
(c⁄° * c⁄° 
who
, c⁄° * c⁄° 
fûe
,

381 c⁄° 
u∂ﬂd_pùe_fd
)

383 
°©
 
°
;

384 
pid_t
 
pid
;

386 i‡(
s¸ùt
 =
NULL
 || *script == 0 ||

387 
fûe
 =
NULL
 || *file == 0 ||

388 
	`l°©
(
fûe
, &
°
) < 0 ||

389 !
	`S_ISREG
(
°
.
°_mode
)) {

392 
pid
 = 
	`f‹k
();

393 i‡(
pid
 =(
pid_t
) 0) {

397 i‡(
	`˛o£
(
u∂ﬂd_pùe_fd
Ë< 0 || 
	`˛o£desc_Æl
(1) < 0) {

398 
	`_exô
(
EXIT_FAILURE
);

400 
	`fûÀnv
(
who
, &
°
);

401 
	`exe˛
(
s¸ùt
, s¸ùt, 
fûe
, (*Ë
NULL
);

402 
	`_exô
(
EXIT_FAILURE
);

403 } i‡(
pid
 !(
pid_t
) -1) {

404 #ifde‡
HAVE_WAITPID


405 (Ë
	`waôpid
(
pid
, 
NULL
, 0);

408 
pid_t
 
foundpid
;

410 (
foundpid
 = 
	`waô3
(
NULL
, 0, NULL)Ë!(
pid_t
) -1 &&

411 
foundpid
 !
pid
);

417 
	}
}

419 
	$upd©ïidfûe
()

421 
buf
[42];

422 
size_t
 
buf_Àn
;

423 
fd
;

425 i‡(
	`SNCHECK
(
	`¢¥ötf
(
buf
,  buf, "%lu\n",

426 (Ë
	`gëpid
()),  
buf
)) {

429 i‡(
	`u∆ök
(
u∂ﬂds¸ùt_pid_fûe
Ë!0 && 
î∫o
 !
ENOENT
) {

432 i‡((
fd
 = 
	`›í
(
u∂ﬂds¸ùt_pid_fûe
, 
O_CREAT
 | 
O_WRONLY
 | 
O_TRUNC
 |

433 
O_NOFOLLOW
, (
mode_t
) 0644)) == -1) {

436 
buf_Àn
 = 
	`°æí
(
buf
);

437 i‡(
	`ß„_wrôe
(
fd
, 
buf
, 
buf_Àn
, -1Ë!(
ssize_t
) buf_len) {

438 
	`·runˇã
(
fd
, (
off_t
) 0);

440 
	`˛o£
(
fd
);

441 
	}
}

443 
	$maö
(
¨gc
, *
¨gv
[])

445 
u∂ﬂd_pùe_fd
;

446 *
who
;

447 *
fûe
;

449 #ifde‡
HAVE_SETLOCALE


450 #ifde‡
LC_MESSAGES


451 (Ë
	`£éoˇÀ
(
LC_MESSAGES
, "");

453 #ifde‡
LC_CTYPE


454 (Ë
	`£éoˇÀ
(
LC_CTYPE
, "");

456 #ifde‡
LC_COLLATE


457 (Ë
	`£éoˇÀ
(
LC_COLLATE
, "");

461 i‡(
	`öô
() < 0) {

464 i‡(
	`∑r£›ti⁄s
(
¨gc
, 
¨gv
) < 0) {

467 i‡(
s¸ùt
 =
NULL
) {

468 
	`Ârötf
(
°dîr
, "Sorry, but IÇeed -r <programÅoÑun>\n\n");

469 
	`ußge
();

471 i‡(
d´m⁄ize
 != 0) {

472 
	`dod´m⁄ize
();

474 i‡((
u∂ﬂd_pùe_fd
 = 
	`u∂ﬂd_pùe_r›í
()) == -1) {

477 
	`upd©ïidfûe
();

478 i‡(
	`ch™geuidgid
() < 0) {

479 
	`≥º‹
("Identity change");

480 (Ë
	`u∆ök
(
u∂ﬂds¸ùt_pid_fûe
);

483 #ifde‡
SIGPIPE


484 
	`sig«l
(
SIGPIPE
, 
SIG_IGN
);

486 #ifde‡
SIGCHLD


487 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

490 i‡(
	`ªadpùe
(
u∂ﬂd_pùe_fd
, &
who
, &
fûe
) != 0) {

491 (Ë
	`¶ìp
(1);

494 
fûe
 = 
	`checkvútuÆ
(file);

495 i‡(
fûe
 !
NULL
 && 
who
 != NULL) {

496 
	`run
(
who
, 
fûe
, 
u∂ﬂd_pùe_fd
);

501 
	`˛o£
(
u∂ﬂd_pùe_fd
);

502 (Ë
	`u∆ök
(
u∂ﬂds¸ùt_pid_fûe
);

506 
	}
}

	@src/pure-uploadscript_p.h

1 #i‚de‡
__PURE_UPLOADSCRIPT_P_H__


2 
	#__PURE_UPLOADSCRIPT_P_H__
 1

	)

4 #i‚de‡
HAVE_GETOPT_LONG


5 
	~"bsd-gë›t_l⁄g.h
"

7 
	~<gë›t.h
>

10 #ifde‡
HAVE_SYS_WAIT_H


11 
	~<sys/waô.h
>

14 c⁄° *
	gGETOPT_OPTIONS
 =

16 #i‚de‡
NO_GETOPT_LONG


21 #i‚de‡
NO_GETOPT_LONG


22 
›ti⁄
 
	gl⁄g_›ti⁄s
[] = {

23 { "d´m⁄ize", 0, 
NULL
, 'B' },

24 { "gid", 1, 
NULL
, 'g' },

25 #i‚de‡
NO_GETOPT_LONG


26 { "hñp", 0, 
NULL
, 'h' },

28 { "pidfûe", 1, 
NULL
, 'p' },

29 { "run", 1, 
NULL
, 'r' },

30 { "uid", 1, 
NULL
, 'u' },

31 { 
NULL
, 0, NULL, 0 }

35 sig√d 
	gd´m⁄ize
;

36 c⁄° *
	gu∂ﬂds¸ùt_pid_fûe
 = 
UPLOADSCRIPT_PID_FILE
;

37 
uid_t
 
	guid
;

38 
gid_t
 
	ggid
;

39 c⁄° *
	gs¸ùt
;

41 
	#OPEN_TRIES
 30U

	)

42 
	#OPEN_DELAY
 1U

	)

	@src/quotas.c

1 
	~<c⁄fig.h
>

3 #ifde‡
QUOTAS


4 
	~"·pd.h
"

5 
	~"dy«mic.h
"

6 
	~"·pwho-upd©e.h
"

7 
	~"globÆs.h
"

8 
	~"mesßges.h
"

9 
	~"quŸas.h
"

10 
	~"ß„_rw.h
"

12 #ifde‡
WITH_DMALLOC


13 
	~<dmÆloc.h
>

16 
	$hasquŸa
()

18 i‡(
gue°
 != 0 ||

19 (
u£r_quŸa_fûes
 >
ULONG_LONG_MAX
 &&

20 
u£r_quŸa_size
 >
ULONG_LONG_MAX
)) {

24 
	}
}

26 
	$quŸa_upd©e
(
QuŸa
 *
quŸa
,

27 c⁄° 
fûes_add
,

28 c⁄° 
size_add
,

29 *
ovîÊow
)

31 
fd
;

32 
QuŸa
 
ﬁd_quŸa
 = { 0ULL, 0ULL };

33 
QuŸa
 
dummy_quŸa
;

34 
Êock
 
lock
;

35 
ssize_t
 
ªadnb
;

36 
îr
 = -1;

37 
buf
[84];

38 *
buÂ¡
 = 
buf
;

39 
dummy_ovîÊow
;

40 
ssize_t
 
À·
 = (ssize_tË( 
buf
 - 1U);

41 
size_t
 
buf_Àn
;

43 i‡(
	`hasquŸa
(Ë!0 || 
chroŸed
 == 0) {

46 i‡(
ovîÊow
 =
NULL
) {

47 
ovîÊow
 = &
dummy_ovîÊow
;

49 i‡(
quŸa
 =
NULL
) {

50 
quŸa
 = &
dummy_quŸa
;

52 *
ovîÊow
 = 0;

53 *
quŸa
 = 
ﬁd_quŸa
;

54 i‡((
fd
 = 
	`›í
("/" 
QUOTA_FILE
, 
O_RDWR
 | 
O_CREAT
 | 
O_NOFOLLOW
,

55 (
mode_t
) 0600)) == -1) {

58 
lock
.
l_whí˚
 = 
SEEK_SET
;

59 
lock
.
l_°¨t
 = (
off_t
) 0;

60 
lock
.
l_Àn
 = (
off_t
) 0;

61 
lock
.
l_pid
 = 
	`gëpid
();

62 
lock
.
l_ty≥
 = 
F_WRLCK
;

63 
	`f˙é
(
fd
, 
F_SETLKW
, &
lock
) < 0) {

64 i‡(
î∫o
 !
EINTR
) {

65 
byíou∆ock
;

69 (
ªadnb
 = 
	`ªad
(
fd
, 
buÂ¡
, 
À·
)Ë< (
ssize_t
) 0 &&

70 
î∫o
 =
EINTR
);

71 i‡(
ªadnb
 < (
ssize_t
) 0) {

72 
bye
;

74 
buÂ¡
 +
ªadnb
;

75 
À·
 -
ªadnb
;

76 } 
À·
 > (
ssize_t
Ë0 && 
ªadnb
 != (ssize_t) 0);

77 *
buÂ¡
 = 0;

78 i‡((
buÂ¡
 = 
	`°rchr
(
buf
, ' ')Ë=
NULL
) {

79 
skù∑r£
;

81 *
buÂ¡
 = 0;

82 
ﬁd_quŸa
.
fûes
 = 
quŸa
->fûe†
	`°πouŒ
(
buf
, 
NULL
, 10);

83 
ﬁd_quŸa
.
size
 = 
quŸa
->sizê
	`°πouŒ
(
buÂ¡
 + 1, 
NULL
, 10);

84 
skù∑r£
:

85 i‡((
fûes_add
 | 
size_add
) == 0LL) {

86 
okbye
;

88 i‡(
fûes_add
 < 0LL) {

89 i‡(
quŸa
->
fûes
 > (Ë-
fûes_add
) {

90 
quŸa
->
fûes
 -(Ë(-
fûes_add
);

92 
quŸa
->
fûes
 = 0ULL;

94 } i‡(
fûes_add
 >= 0LL) {

95 
quŸa
->
fûes
 +(Ë
fûes_add
;

96 i‡(
quŸa
->
fûes
 > 
u£r_quŸa_fûes
) {

97 *
ovîÊow
 = 1;

100 i‡(
size_add
 < 0LL) {

101 i‡(
quŸa
->
size
 > (Ë-
size_add
) {

102 
quŸa
->
size
 -(Ë(-
size_add
);

104 
quŸa
->
size
 = 0ULL;

106 } i‡(
size_add
 >= 0LL) {

107 
quŸa
->
size
 +
size_add
;

108 i‡(
quŸa
->
size
 > 
u£r_quŸa_size
) {

109 *
ovîÊow
 = 2;

112 i‡((
ﬁd_quŸa
.
size
 !
quŸa
->sizê|| old_quŸa.
fûes
 != quota->files) &&

113 !
	`SNCHECK
(
	`¢¥ötf
(
buf
,  buf, "%llu %llu\n",

114 
quŸa
->
fûes
, quŸa->
size
),  
buf
) &&

115 
	`l£ek
(
fd
, (
off_t
Ë0, 
SEEK_SET
) != (off_t) -1 &&

116 
	`·runˇã
(
fd
, (
off_t
) 0) == 0) {

118 
buf_Àn
 = 
	`°æí
(
buf
);

119 i‡(
	`ß„_wrôe
(
fd
, 
buf
, 
buf_Àn
, -1Ë!(
ssize_t
) buf_len) {

120 (Ë
	`·runˇã
(
fd
, (
off_t
) 0);

121 
bye
;

124 
okbye
:

125 
îr
 = 0;

127 
bye
:

128 
lock
.
l_ty≥
 = 
F_UNLCK
;

129 
	`f˙é
(
fd
, 
F_SETLK
, &
lock
Ë< 0 && 
î∫o
 =
EINTR
);

130 
byíou∆ock
:

131 
	`˛o£
(
fd
);

133  
îr
;

134 
	}
}

136 
	$di•œyquŸa
(
QuŸa
 * c⁄° 
quŸa_
)

138 
QuŸa
 
quŸa
;

139 
p˘
;

141 i‡(
	`hasquŸa
() != 0) {

144 i‡(
quŸa_
 =
NULL
) {

145 i‡(
	`quŸa_upd©e
(&
quŸa
, 0LL, 0LL, 
NULL
) != 0) {

149 
quŸa
 = *
quŸa_
;

151 i‡(
u£r_quŸa_fûes
 < 
ULONG_LONG_MAX
) {

152 
p˘
 = (Ë
quŸa
.
fûes
 * 100.0 / (Ë
u£r_quŸa_fûes
;

153 
	`addª∂y
(0, 
MSG_QUOTA_FILES
, 
quŸa
.
fûes
, (Ë
p˘
,

154 (Ë
u£r_quŸa_fûes
);

156 i‡(
u£r_quŸa_size
 < 
ULONG_LONG_MAX
) {

157 
p˘
 = (Ë
quŸa
.
size
 * 100.0 / (Ë
u£r_quŸa_size
;

158 
	`addª∂y
(0, 
MSG_QUOTA_SIZE
,

159 
quŸa
.
size
 / 1024ULL, (Ë
p˘
,

160 (Ë
u£r_quŸa_size
 / 1024ULL);

162 
	}
}

	@src/quotas.h

1 #i‚de‡
__QUOTAS_H__


2 
	#__QUOTAS_H__
 1

	)

4 #i‚de‡
QUOTA_FILE


5 
	#QUOTA_FILE
 ".·pquŸa"

	)

8 
	sQuŸa_
 {

9 
	mfûes
;

10 
	msize
;

11 } 
	tQuŸa
;

13 
quŸa_upd©e
(
QuŸa
 *
quŸa
,

14 c⁄° 
fûes_add
, c⁄° 
size_add
,

15 *
ovîÊow
);

17 
di•œyquŸa
(
QuŸa
 * c⁄° 
quŸa_
);

19 
hasquŸa
();

	@src/safe_rw.c

2 
	~<c⁄fig.h
>

4 
	~"·pd.h
"

5 
	~"ß„_rw.h
"

7 #ifde‡
WITH_DMALLOC


8 
	~<dmÆloc.h
>

11 
ssize_t


12 
	$ß„_wrôe
(c⁄° 
fd
, c⁄° * c⁄° 
buf_
, 
size_t
 
cou¡
,

13 c⁄° 
timeout
)

15 
pﬁlfd
 
pfd
;

16 c⁄° *
buf
 = (c⁄° *Ë
buf_
;

17 
ssize_t
 
wrôãn
;

19 
pfd
.
fd
 = fd;

20 
pfd
.
evíts
 = 
POLLOUT
;

22 
cou¡
 > (
size_t
) 0) {

23 (
wrôãn
 = 
	`wrôe
(
fd
, 
buf
, 
cou¡
)Ë<(
ssize_t
) 0) {

24 i‡(
î∫o
 =
EAGAIN
) {

25 i‡(
	`pﬁl
(&
pfd
, (
nfds_t
Ë1, 
timeout
) == 0) {

26 
î∫o
 = 
ETIMEDOUT
;

27 
ªt
;

29 } i‡(
î∫o
 !
EINTR
) {

30 
ªt
;

33 
buf
 +
wrôãn
;

34 
cou¡
 -
wrôãn
;

36 
ªt
:

37  (
ssize_t
Ë(
buf
 - (c⁄° *Ë
buf_
);

38 
	}
}

40 
ssize_t


41 
	$ß„_ªad
(c⁄° 
fd
, * c⁄° 
buf_
, 
size_t
 
cou¡
)

43 *
buf
 = (*Ë
buf_
;

44 
ssize_t
 
ªadnb
;

47 (
ªadnb
 = 
	`ªad
(
fd
, 
buf
, 
cou¡
)Ë< (
ssize_t
) 0 &&

48 
î∫o
 =
EINTR
);

49 i‡(
ªadnb
 < (
ssize_t
) 0) {

50  
ªadnb
;

52 i‡(
ªadnb
 =(
ssize_t
) 0) {

55 
cou¡
 -
ªadnb
;

56 
buf
 +
ªadnb
;

57 } 
cou¡
 > (
ssize_t
) 0);

59  (
ssize_t
Ë(
buf
 - (*Ë
buf_
);

60 
	}
}

62 
ssize_t


63 
	$ß„_ªad_∑πül
(c⁄° 
fd
, * c⁄° 
buf_
, c⁄° 
size_t
 
max_cou¡
)

65 * c⁄° 
buf
 = (*Ë
buf_
;

66 
ssize_t
 
ªadnb
;

68 (
ªadnb
 = 
	`ªad
(
fd
, 
buf
, 
max_cou¡
)Ë< (
ssize_t
) 0 &&

69 
î∫o
 =
EINTR
);

71  
ªadnb
;

72 
	}
}

	@src/safe_rw.h

2 #i‚de‡
__SAFE_RW_H__


3 
	#__SAFE_RW_H__
 1

	)

5 
	~<sys/ty≥s.h
>

7 
ssize_t
 
ß„_wrôe
(c⁄° 
fd
, c⁄° * c⁄° 
buf_
, 
size_t
 
cou¡
,

8 c⁄° 
timeout
);

10 
ssize_t
 
ß„_ªad
(c⁄° 
fd
, * c⁄° 
buf_
, 
size_t
 
cou¡
);

12 
ssize_t
 
ß„_ªad_∑πül
(c⁄° 
fd
, * c⁄° 
buf_
,

13 c⁄° 
size_t
 
max_cou¡
);

	@src/syslognames.h

1 #i‚de‡
__SYSLOGNAMES_H__


2 
	#__SYSLOGNAMES_H__
 1

	)

4 #ifde‡
SYSLOG_NAMES


7 c⁄° *
	mc_«me
;

8 
	mc_vÆ
;

9 } 
	gÁcûôy«mes
[] =

11 #ifde‡
LOG_AUTH


12 { "auth", 
LOG_AUTH
 },

14 #ifde‡
LOG_AUTHPRIV


15 { "auth¥iv", 
LOG_AUTHPRIV
 },

17 #ifde‡
LOG_CRON


18 { "¸⁄", 
LOG_CRON
 },

20 #ifde‡
LOG_DAEMON


21 { "d´m⁄", 
LOG_DAEMON
 },

23 #ifde‡
LOG_FTP


24 { "·p", 
LOG_FTP
 },

26 #ifde‡
LOG_KERN


27 { "kîn", 
LOG_KERN
 },

29 #ifde‡
LOG_LPR


30 { "Õr", 
LOG_LPR
 },

32 #ifde‡
LOG_MAIL


33 { "maû", 
LOG_MAIL
 },

35 #ifde‡
INTERNAL_MARK


36 { "m¨k", 
INTERNAL_MARK
 },

38 #ifde‡
LOG_NEWS


39 { "√ws", 
LOG_NEWS
 },

41 #ifde‡
LOG_AUTH


42 { "£curôy", 
LOG_AUTH
 },

44 #ifde‡
LOG_SYSLOG


45 { "sy¶og", 
LOG_SYSLOG
 },

47 #ifde‡
LOG_USER


48 { "u£r", 
LOG_USER
 },

50 #ifde‡
LOG_UUCP


51 { "uu˝", 
LOG_UUCP
 },

53 #ifde‡
LOG_LOCAL0


54 { "loˇl0", 
LOG_LOCAL0
 },

56 #ifde‡
LOG_LOCAL1


57 { "loˇl1", 
LOG_LOCAL1
 },

59 #ifde‡
LOG_LOCAL2


60 { "loˇl2", 
LOG_LOCAL2
 },

62 #ifde‡
LOG_LOCAL3


63 { "loˇl3", 
LOG_LOCAL3
 },

65 #ifde‡
LOG_LOCAL4


66 { "loˇl4", 
LOG_LOCAL4
 },

68 #ifde‡
LOG_LOCAL5


69 { "loˇl5", 
LOG_LOCAL5
 },

71 #ifde‡
LOG_LOCAL6


72 { "loˇl6", 
LOG_LOCAL6
 },

74 #ifde‡
LOG_LOCAL7


75 { "loˇl7", 
LOG_LOCAL7
 },

77 #ifde‡
LOG_LOCAL8


78 { "loˇl8", 
LOG_LOCAL8
 },

80 #ifde‡
LOG_LOCAL9


81 { "loˇl9", 
LOG_LOCAL9
 },

83 { 
NULL
, -1 }

89 c⁄° *
c_«me
;

90 
c_vÆ
;

91 } 
Ácûôy«mes
[];

	@src/tls.c

1 
	~<c⁄fig.h
>

3 #ifde‡
WITH_TLS


4 #i‚de‡
IN_TLS_C


5 
	#IN_TLS_C
 1

	)

8 
	~"·pd.h
"

9 
	~"és.h
"

10 
	~"·pwho-upd©e.h
"

11 
	~"globÆs.h
"

12 
	~"mesßges.h
"

13 
	~"globÆs.h
"

14 
	~"Æt_¨c4øndom.h
"

16 #i‚de‡
DISABLE_SSL_RENEGOTIATION


17 #i‚de‡
SSL3_FLAGS_ALLOW_UNSAFE_LEGACY_RENEGOTIATION


18 #i‚de‡
ACCEPT_SSL_RENEGOTIATION


19 
	#DISABLE_SSL_RENEGOTIATION
 1

	)

22 #ifde‡
ACCEPT_SSL_RENEGOTIATION


23 
	#DISABLE_SSL_RENEGOTIATION
 0

	)

33 #i‚de‡
ONLY_ACCEPT_REUSED_SSL_SESSIONS


34 
	#ONLY_ACCEPT_REUSED_SSL_SESSIONS
 0

	)

37 
	$és_îr‹
(c⁄° 
löe
, 
îr
)

39 i‡(
îr
 == 0) {

40 
îr
 = 
	`ERR_gë_îr‹
();

42 i‡(
îr
 != 0) {

43 
	`logfûe
(
LOG_ERR
, "SSL/TLS [%s](%d): %s",

44 
TLS_CERTIFICATE_FILE
, 
löe
,

45 
	`ERR_îr‹_°rög
(
îr
, 
NULL
));

47 
	`_EXIT
(
EXIT_FAILURE
);

48 
	}
}

50 
DH
 *
	$gë_dh512
()

52 
dh512_p
[]={

60 
dh512_g
[]={

63 
DH
 *
dh
;

65 i‡((
dh
=
	`DH_√w
()Ë=
NULL
) (NULL);

66 
dh
->
p
=
	`BN_bö2bn
(
dh512_p
,(dh512_p),
NULL
);

67 
dh
->
g
=
	`BN_bö2bn
(
dh512_g
,(dh512_g),
NULL
);

68 i‡((
dh
->
p
 =
NULL
Ë|| (dh->
g
 == NULL))

69 { 
	`DH_‰ì
(
dh
); (
NULL
); }

70 (
dh
);

71 
	}
}

73 
DH
 *
	$gë_dh1024
()

75 
dh1024_p
[]={

88 
dh1024_g
[]={

91 
DH
 *
dh
;

93 i‡((
dh
=
	`DH_√w
()Ë=
NULL
) (NULL);

94 
dh
->
p
=
	`BN_bö2bn
(
dh1024_p
,(dh1024_p),
NULL
);

95 
dh
->
g
=
	`BN_bö2bn
(
dh1024_g
,(dh1024_g),
NULL
);

96 i‡((
dh
->
p
 =
NULL
Ë|| (dh->
g
 == NULL))

97 { 
	`DH_‰ì
(
dh
); (
NULL
); }

98 (
dh
);

99 
	}
}

101 
DH
 *
	$cb_tmp_dh
(
SSL
 * c⁄° 
˘x
, c⁄° 
f‹_exp‹t
,

102 c⁄° 
key_Àngth
)

104 (Ë
˘x
;

105 i‡(
f‹_exp‹t
 =0 || 
key_Àngth
 >= 1024) {

106  
	`gë_dh1024
();

108  
	`gë_dh512
();

109 
	}
}

111 
	$és_öô_diffõ
()

113 
DH
 *
dh
 = 
NULL
;

114 
BIO
 *
bio
 = 
NULL
;

115 
ªt
 = 0;

117 i‡((
bio
 = 
	`BIO_√w_fûe
(
TLS_CERTIFICATE_FILE
, "r")Ë=
NULL
) {

118 
	`logfûe
(
LOG_ERR
, "SSL/TLS: Can'tÑead [%s]",

119 
TLS_CERTIFICATE_FILE
);

120 
ªt
 = -1;

121 
íd
;

123 i‡((
dh
 = 
	`PEM_ªad_bio_DH∑øms
(
bio
, 
NULL
, NULL

124 #i‡
OPENSSL_VERSION_NUMBER
 >= 0x00904000L

125 , 
NULL


127 )Ë=
NULL
) {

128 
ªt
 = 1;

129 
íd
;

131 i‡(
	`SSL_CTX_£t_tmp_dh
(
és_˘x
, 
dh
) != 1) {

132 
	`logfûe
(
LOG_ERR
, "SSL/TLS: Can't setÉphemeral keys");

133 
ªt
 = -1;

135 
íd
:

136 i‡(
dh
 !
NULL
) {

137 
	`DH_‰ì
(
dh
);

139 i‡(
bio
 !
NULL
) {

140 
	`BIO_‰ì
(
bio
);

142 i‡(
ªt
 != 0) {

143 
	`SSL_CTX_£t_tmp_dh_ˇŒback
(
és_˘x
, 
cb_tmp_dh
);

146 
	}
}

148 
RSA
 *
	$gë_rß
(c⁄° 
key_Àngth
)

150  
	`RSA_gíî©e_key
(
key_Àngth
, 
RSA_F4
, 
NULL
, NULL);

151 
	}
}

153 
RSA
 *
	$cb_tmp_rß
(
SSL
 * c⁄° 
˘x
,

154 c⁄° 
f‹_exp‹t
, c⁄° 
key_Àngth
)

157 (Ë
˘x
;

158 i‡(
f‹_exp‹t
 =0 || 
key_Àngth
 >= 1024) {

159  
	`gë_rß
(1024);

161  
	`gë_rß
(512);

162 
	}
}

164 
	$és_öô_ˇche
()

166 c⁄° *
és_˘x_id
 = "pure-ftpd";

168 
	`SSL_CTX_£t_£ssi⁄_ˇche_mode
(
és_˘x
, 
SSL_SESS_CACHE_SERVER
);

169 
	`SSL_CTX_£t_£ssi⁄_id_c⁄ãxt
(
és_˘x
, (*Ë
és_˘x_id
,

170 (Ë
	`°æí
(
és_˘x_id
));

171 
	`SSL_CTX_£ss_£t_ˇche_size
(
és_˘x
, 10);

172 
	`SSL_CTX_£t_timeout
(
és_˘x
, 60 * 60L);

173 
	}
}

175 #ifde‡
DISABLE_SSL_RENEGOTIATION


176 
	$s¶_öfo_cb
(c⁄° 
SSL
 *
˙x
, 
whîe
, 
ªt
)

178 (Ë
ªt
;

180 #i‡
DISABLE_SSL_RENEGOTIATION
 == 1

181 i‡((
whîe
 & 
SSL_CB_HANDSHAKE_START
) != 0) {

182 i‡((
˙x
 =
és_˙x
 && 
és_˙x_h™dshaked
 != 0) ||

183 (
˙x
 =
és_d©a_˙x
 && 
és_d©a_˙x_h™dshaked
 != 0)) {

184 
	`dõ
(400, 
LOG_ERR
, "SSL/TLSÑenegociation");

189 i‡((
whîe
 & 
SSL_CB_HANDSHAKE_DONE
) != 0) {

190 i‡(
˙x
 =
és_˙x
) {

191 
és_˙x_h™dshaked
 = 1;

192 } i‡(
˙x
 =
és_d©a_˙x
) {

193 
és_d©a_˙x_h™dshaked
 = 1;

195 #i‡
DISABLE_SSL_RENEGOTIATION
 == 0

196 
˙x
->
s3
->
Êags
 &~(
SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS
);

197 
˙x
->
s3
->
Êags
 |
SSL3_FLAGS_ALLOW_UNSAFE_LEGACY_RENEGOTIATION
;

199 
˙x
->
s3
->
Êags
 |
SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS
;

203 
	}
}

206 
	$és_öô_libøry
()

208 
∫d
;

209 
›ti⁄s
;

211 
és_˙x_h™dshaked
 = 0;

212 
és_d©a_˙x_h™dshaked
 = 0;

213 
	`SSL_libøry_öô
();

214 
	`SSL_lﬂd_îr‹_°rögs
();

215 
	`O≥nSSL_add_Æl_Æg‹ôhms
();

216 
	`RAND_°©us
() == 0) {

217 
∫d
 = 
	`zønd
();

218 
	`RAND_£ed
(&
∫d
, () Ñnd);

220 i‡((
és_˘x
 = 
	`SSL_CTX_√w
(
	`SSLv23_£rvî_mëhod
())Ë=
NULL
) {

221 
	`és_îr‹
(
__LINE__
, 0);

223 #ifde‡
SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION


224 
›ti⁄s
 = 
SSL_OP_NO_SSLv2
 | 
SSL_OP_ALL
 |

225 
SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION
;

227 
›ti⁄s
 = 
SSL_OP_NO_SSLv2
 | 
SSL_OP_ALL
;

229 i‡(
s¶_dißbÀd
 != 0) {

230 
›ti⁄s
 |
SSL_OP_NO_SSLv3
;

232 
	`SSL_CTX_£t_›ti⁄s
(
és_˘x
, 
›ti⁄s
);

233 i‡(
	`SSL_CTX_u£_˚πifiˇã_chaö_fûe
(
és_˘x
,

234 
TLS_CERTIFICATE_FILE
) != 1) {

235 
	`dõ
(421, 
LOG_ERR
,

236 
MSG_FILE_DOESNT_EXIST
 ": [%s]", 
TLS_CERTIFICATE_FILE
);

238 i‡(
	`SSL_CTX_u£_Priv©eKey_fûe
(
és_˘x
, 
TLS_CERTIFICATE_FILE
,

239 
SSL_FILETYPE_PEM
) != 1) {

240 
	`és_îr‹
(
__LINE__
, 0);

242 i‡(
	`SSL_CTX_check_¥iv©e_key
(
és_˘x
) != 1) {

243 
	`és_îr‹
(
__LINE__
, 0);

245 
	`SSL_CTX_£t_tmp_rß_ˇŒback
(
és_˘x
, 
cb_tmp_rß
);

246 i‡(
	`és_öô_diffõ
() < 0) {

247 
	`és_îr‹
(
__LINE__
, 0);

249 
	`és_öô_ˇche
();

250 #ifde‡
DISABLE_SSL_RENEGOTIATION


251 
	`SSL_CTX_£t_öfo_ˇŒback
(
és_˘x
, 
s¶_öfo_cb
);

254 i‡(
éscùhîsuôe
 !
NULL
) {

255 i‡(
	`SSL_CTX_£t_cùhî_li°
(
és_˘x
, 
éscùhîsuôe
) != 1) {

256 
	`logfûe
(
LOG_ERR
, 
MSG_TLS_CIPHER_FAILED
, 
éscùhîsuôe
);

257 
	`_EXIT
(
EXIT_FAILURE
);

260 #ifde‡
REQUIRE_VALID_CLIENT_CERTIFICATE


261 
	`SSL_CTX_£t_vîify
(
és_˘x
, 
SSL_VERIFY_FAIL_IF_NO_PEER_CERT
 |

262 
SSL_VERIFY_PEER
 | 
SSL_VERIFY_CLIENT_ONCE
, 
NULL
);

263 i‡(
	`SSL_CTX_lﬂd_vîify_loˇti⁄s
(
és_˘x
,

264 
TLS_CERTIFICATE_FILE
, 
NULL
) != 1) {

265 
	`és_îr‹
(
__LINE__
, 0);

270 
	}
}

272 
	$és_‰ì_libøry
()

274 i‡(
és_d©a_˙x
 !
NULL
) {

275 
	`és_˛o£_£ssi⁄
(&
és_d©a_˙x
);

277 i‡(
és_˙x
 !
NULL
) {

278 
	`SSL_‰ì
(
és_˙x
);

279 
és_˙x
 = 
NULL
;

281 i‡(
és_˘x
 !
NULL
) {

282 
	`SSL_CTX_‰ì
(
és_˘x
);

283 
és_˘x
 = 
NULL
;

285 
	`EVP_˛ónup
();

286 
	}
}

288 
	$és_öô_√w_£ssi⁄
()

290 c⁄° 
SSL_CIPHER
 *
cùhî
;

291 
ªt
;

292 
ªt_
;

294 i‡(
és_˘x
 =
NULL
 || (
és_˙x
 = 
	`SSL_√w
(tls_ctx)) == NULL) {

295 
	`és_îr‹
(
__LINE__
, 0);

297 i‡(
	`SSL_£t_fd
(
és_˙x
, 
˛õ¡fd
) != 1) {

298 
	`és_îr‹
(
__LINE__
, 0);

300 
	`SSL_£t_ac˚±_°©e
(
és_˙x
);

302 
ªt
 = 
	`SSL_ac˚±
(
és_˙x
);

303 i‡(
ªt
 <= 0) {

304 
ªt_
 = 
	`SSL_gë_îr‹
(
és_˙x
, 
ªt
);

305 i‡(
ªt
 == -1 &&

306 (
ªt_
 =
SSL_ERROR_WANT_READ
 ||

307 
ªt_
 =
SSL_ERROR_WANT_WRITE
)) {

310 
	`dõ
(400, 
LOG_WARNING
, 
MSG_TLS_NEEDED
);

314 i‡((
cùhî
 = 
	`SSL_gë_cuºít_cùhî
(
és_˙x
)Ë!
NULL
) {

315 
Æg_bôs
;

316 
bôs
 = 
	`SSL_CIPHER_gë_bôs
(
cùhî
, &
Æg_bôs
);

318 i‡(
Æg_bôs
 < 
bôs
) {

319 
bôs
 = 
Æg_bôs
;

321 
	`logfûe
(
LOG_INFO
, 
MSG_TLS_INFO
, 
	`SSL_CIPHER_gë_vîsi⁄
(
cùhî
),

322 
	`SSL_CIPHER_gë_«me
(
cùhî
), 
bôs
);

323 i‡(
bôs
 < 
MINIMAL_CIPHER_KEY_LEN
) {

324 
	`dõ
(534, 
LOG_ERR
, 
MSG_TLS_WEAK
);

328 
	}
}

330 
	$és_öô_d©a_£ssi⁄
(c⁄° 
fd
, c⁄° 
∑ssive
)

332 c⁄° 
SSL_CIPHER
 *
cùhî
;

333 
ªt
;

334 
ªt_
;

336 (Ë
∑ssive
;

337 i‡(
és_˘x
 =
NULL
) {

338 
	`logfûe
(
LOG_ERR
, 
MSG_TLS_NO_CTX
);

339 
	`és_îr‹
(
__LINE__
, 0);

341 i‡(
és_d©a_˙x
 !
NULL
) {

342 
	`és_˛o£_£ssi⁄
(&
és_d©a_˙x
);

343 } i‡((
és_d©a_˙x
 = 
	`SSL_√w
(
és_˘x
)Ë=
NULL
) {

344 
	`és_îr‹
(
__LINE__
, 0);

346 i‡(
	`SSL_£t_fd
(
és_d©a_˙x
, 
fd
) != 1) {

347 
	`és_îr‹
(
__LINE__
, 0);

349 
	`SSL_£t_ac˚±_°©e
(
és_d©a_˙x
);

351 
ªt
 = 
	`SSL_ac˚±
(
és_d©a_˙x
);

352 i‡(
ªt
 <= 0) {

353 
ªt_
 = 
	`SSL_gë_îr‹
(
és_d©a_˙x
, 
ªt
);

354 i‡(
ªt
 =-1 && (
ªt_
 =
SSL_ERROR_WANT_READ
 ||

355 
ªt_
 =
SSL_ERROR_WANT_WRITE
)) {

358 
	`logfûe
(
LOG_INFO
, 
MSG_LOGOUT
);

359 
	`_EXIT
(
EXIT_FAILURE
);

363 #i‡
ONLY_ACCEPT_REUSED_SSL_SESSIONS


364 i‡(
	`SSL_£ssi⁄_ªu£d
(
és_d©a_˙x
) == 0) {

365 
	`és_îr‹
(
__LINE__
, 0);

368 i‡((
cùhî
 = 
	`SSL_gë_cuºít_cùhî
(
és_d©a_˙x
)Ë!
NULL
) {

369 
Æg_bôs
;

370 
bôs
 = 
	`SSL_CIPHER_gë_bôs
(
cùhî
, &
Æg_bôs
);

372 i‡(
Æg_bôs
 < 
bôs
) {

373 
bôs
 = 
Æg_bôs
;

375 
	`logfûe
(
LOG_INFO
, 
MSG_TLS_INFO
, 
	`SSL_CIPHER_gë_vîsi⁄
(
cùhî
),

376 
	`SSL_CIPHER_gë_«me
(
cùhî
), 
bôs
);

377 i‡(
bôs
 < 
MINIMAL_CIPHER_KEY_LEN
) {

378 
	`dõ
(534, 
LOG_ERR
, 
MSG_TLS_WEAK
);

382 
	}
}

384 
	$és_˛o£_£ssi⁄
(
SSL
 ** c⁄° 
˙x
)

386 i‡(*
˙x
 =
NULL
) {

389 
	`SSL_shutdown
(*
˙x
)) {

391 
SSL_SENT_SHUTDOWN
:

392 
SSL_RECEIVED_SHUTDOWN
:

396 i‡(
	`SSL_˛ór
(*
˙x
) == 1) {

399 
	`és_îr‹
(
__LINE__
, 0);

401 
	`SSL_‰ì
(*
˙x
);

402 i‡(*
˙x
 =
és_˙x
) {

403 
és_˙x_h™dshaked
 = 0;

404 } i‡(*
˙x
 =
és_d©a_˙x
) {

405 
és_d©a_˙x_h™dshaked
 = 0;

407 *
˙x
 = 
NULL
;

408 
	}
}

	@src/tls.h

1 #i‚de‡
__TLS_H__


2 
	#__TLS_H__
 1

	)

4 #ifde‡
WITH_TLS


6 
	~<›ís¶/s¶.h
>

7 
	~<›ís¶/îr.h
>

8 
	~<›ís¶/ønd.h
>

10 
és_öô_libøry
();

11 
és_‰ì_libøry
();

12 
és_öô_√w_£ssi⁄
();

13 
és_öô_d©a_£ssi⁄
(c⁄° 
fd
, c⁄° 
∑ssive
);

14 
és_˛o£_£ssi⁄
(
SSL
 **
˙x
);

16 #i‚de‡
IN_TLS_C


19 
SSL_CTX
 *
és_˘x
;

21 #i‚de‡
IN_TLS_C


24 
SSL
 *
és_˙x
;

26 #i‚de‡
IN_TLS_C


29 
és_˙x_h™dshaked
;

31 #i‚de‡
IN_TLS_C


34 
SSL
 *
és_d©a_˙x
;

36 #i‚de‡
IN_TLS_C


39 
és_d©a_˙x_h™dshaked
;

42 
	#MINIMAL_CIPHER_KEY_LEN
 40

	)

	@src/upload-pipe.c

1 
	~<c⁄fig.h
>

3 #i‡
deföed
(
WITH_UPLOAD_SCRIPT
)

4 
	~"·pd.h
"

5 
	~"·pwho-upd©e.h
"

6 
	~"globÆs.h
"

7 
	~"u∂ﬂd-pùe.h
"

8 
	~"ß„_rw.h
"

10 #ifde‡
WITH_DMALLOC


11 
	~<dmÆloc.h
>

14 
	$u∂ﬂd_pùe_›í
()

16 
°©
 
°
;

18 
	`u∂ﬂd_pùe_˛o£
();

20 
™ew
:

21 i‡((
u∂ﬂd_pùe_lock
 =

22 
	`›í
(
UPLOAD_PIPE_LOCK
,

23 
O_CREAT
 | 
O_RDWR
 | 
O_NOFOLLOW
, (
mode_t
) 0600)) == -1) {

24 
	`u∆ök
(
UPLOAD_PIPE_LOCK
);

27 i‡(
	`f°©
(
u∂ﬂd_pùe_lock
, &
°
) < 0 ||

28 (
°
.
°_mode
 & 0777Ë!0600 || !
	`S_ISREG
(st.st_mode) ||

29 #ifde‡
NON_ROOT_FTP


30 
°
.
°_uid
 !
	`gëeuid
()

32 
°
.
°_uid
 !(
uid_t
) 0

37 i‡(
	`l°©
(
UPLOAD_PIPE_LOCK
, &
°
) < 0 ||

38 (
°
.
°_mode
 & 0777Ë!0600 || !
	`S_ISREG
(st.st_mode) ||

39 #ifde‡
NON_ROOT_FTP


40 
°
.
°_uid
 !
	`gëeuid
()

42 
°
.
°_uid
 !(
uid_t
) 0

45 
	`u∆ök
(
UPLOAD_PIPE_LOCK
);

46 
™ew
;

48 
™ew2
:

49 
u∂ﬂd_pùe_fd
 =

50 
	`›í
(
UPLOAD_PIPE_FILE
, 
O_WRONLY
 | 
O_NOFOLLOW
);

51 i‡(
u∂ﬂd_pùe_fd
 =-1 && 
î∫o
 =
ENXIO
) {

52 
u∂ﬂd_pùe_fd
 =

53 
	`›í
(
UPLOAD_PIPE_FILE
, 
O_RDWR
 | 
O_NOFOLLOW
);

55 i‡(
u∂ﬂd_pùe_fd
 == -1) {

56 i‡(
	`mkfifo
(
UPLOAD_PIPE_FILE
, (
mode_t
) 0600) < 0) {

59 
™ew2
;

61 i‡(
	`f°©
(
u∂ﬂd_pùe_fd
, &
°
) < 0 ||

62 (
°
.
°_mode
 & 0777Ë!0600 || !
	`S_ISFIFO
(st.st_mode) ||

63 #ifde‡
NON_ROOT_FTP


64 
°
.
°_uid
 !
	`gëeuid
()

66 
°
.
°_uid
 !(
uid_t
) 0

71 i‡(
	`l°©
(
UPLOAD_PIPE_FILE
, &
°
) < 0 ||

72 (
°
.
°_mode
 & 0777Ë!0600 || !
	`S_ISFIFO
(st.st_mode) ||

73 #ifde‡
NON_ROOT_FTP


74 
°
.
°_uid
 !
	`gëeuid
()

76 
°
.
°_uid
 !(
uid_t
) 0

79 
	`u∆ök
(
UPLOAD_PIPE_FILE
);

80 
™ew2
;

83  
u∂ﬂd_pùe_fd
;

84 
	}
}

88 
	$u∂ﬂd_pùe_push
(c⁄° *
vu£r
, c⁄° *
fûe
)

90 
Êock
 
lock
;

91 c⁄° 
°¨ãr
 = 2;

92 
size_t
 
sizeof_°¨ãr
;

93 
size_t
 
sizeof_vu£r
;

94 
size_t
 
sizeof_fûe
;

95 
size_t
 
sizeof_buf
;

96 *
buf
;

97 *
≤t
;

99 i‡(
u∂ﬂd_pùe_lock
 =-1 || 
u∂ﬂd_pùe_fd
 == -1 ||

100 
fûe
 =
NULL
 || *file == 0) {

103 
lock
.
l_whí˚
 = 
SEEK_SET
;

104 
lock
.
l_°¨t
 = (
off_t
) 0;

105 
lock
.
l_Àn
 = (
off_t
) 0;

106 
lock
.
l_pid
 = 
	`gëpid
();

107 
lock
.
l_ty≥
 = 
F_WRLCK
;

108 
	`f˙é
(
u∂ﬂd_pùe_lock
, 
F_SETLKW
, &
lock
) < 0) {

109 i‡(
î∫o
 !
EINTR
) {

113 
sizeof_°¨ãr
 = (
size_t
) 1U;

114 
sizeof_vu£r
 = 
	`°æí
(
vu£r
);

115 
sizeof_fûe
 = 
	`°æí
(
fûe
Ë+ (
size_t
) 1U;

116 
sizeof_buf
 = 
sizeof_°¨ãr
 + 
sizeof_vu£r
 + 
sizeof_fûe
;

117 i‡((
buf
 = 
	`mÆloc
(
sizeof_buf
)Ë=
NULL
) {

120 
≤t
 = 
buf
;

121 *
buf
 = 
°¨ãr
;

122 
≤t
 +
sizeof_°¨ãr
;

123 
	`mem˝y
(
≤t
, 
vu£r
, 
sizeof_vu£r
);

124 
≤t
 +
sizeof_vu£r
;

125 
	`mem˝y
(
≤t
, 
fûe
, 
sizeof_fûe
);

126 (Ë
	`ß„_wrôe
(
u∂ﬂd_pùe_fd
, 
buf
, 
sizeof_buf
, -1);

127 
	`‰ì
(
buf
);

128 
lock
.
l_ty≥
 = 
F_UNLCK
;

129 
	`f˙é
(
u∂ﬂd_pùe_lock
, 
F_SETLK
, &
lock
Ë< 0 && 
î∫o
 =
EINTR
);

132 
	}
}

134 
	$u∂ﬂd_pùe_˛o£
()

136 i‡(
u∂ﬂd_pùe_fd
 != -1) {

137 
	`˛o£
(
u∂ﬂd_pùe_fd
);

138 
u∂ﬂd_pùe_fd
 = -1;

140 i‡(
u∂ﬂd_pùe_lock
 != -1) {

141 
	`˛o£
(
u∂ﬂd_pùe_lock
);

142 
u∂ﬂd_pùe_lock
 = -1;

144 
	}
}

146 sig√d 
v6ªady
;

	@src/upload-pipe.h

1 #i‚de‡
__UPLOAD_PIPE_H__


2 
	#__UPLOAD_PIPE_H__
 1

	)

4 #i‚de‡
UPLOAD_PIPE_FILE


5 #ifde‡
NON_ROOT_FTP


6 
	#UPLOAD_PIPE_FILE
 
CONFDIR
 "/puª-·pd.u∂ﬂd.pùe"

	)

8 
	#UPLOAD_PIPE_FILE
 
STATEDIR
 "/run/puª-·pd.u∂ﬂd.pùe"

	)

12 #i‚de‡
UPLOAD_PIPE_LOCK


13 #ifde‡
NON_ROOT_FTP


14 
	#UPLOAD_PIPE_LOCK
 
CONFDIR
 "/puª-·pd.u∂ﬂd.lock"

	)

16 
	#UPLOAD_PIPE_LOCK
 
STATEDIR
 "/run/puª-·pd.u∂ﬂd.lock"

	)

20 
u∂ﬂd_pùe_›í
();

21 
u∂ﬂd_pùe_push
(c⁄° *
vu£r
, c⁄° *
fûe
);

22 
u∂ﬂd_pùe_˛o£
();

	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/crypt.h

25 #i‚de‡
_CRYPT_H


26 
	#_CRYPT_H
 1

	)

28 
	~<„©uªs.h
>

30 
__BEGIN_DECLS


33 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

34 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

37 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

41 
	$í¸y±
 (*
__libc_block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

43 #ifde‡
__USE_GNU


46 
	s¸y±_d©a


48 
keysched
[16 * 8];

49 
sb0
[32768];

50 
sb1
[32768];

51 
sb2
[32768];

52 
sb3
[32768];

54 
¸y±_3_buf
[14];

55 
cuºít_ß…
[2];

56 
cuºít_ß…bôs
;

57 
dúe˘i⁄
, 
öôülized
;

60 *
	$¸y±_r
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
,

61 
¸y±_d©a
 * 
__ª°ri˘
 
__d©a
)

62 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

64 
	$£tkey_r
 (
__c⁄°
 *
__key
,

65 
¸y±_d©a
 * 
__ª°ri˘
 
__d©a
)

66 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

68 
	$í¸y±_r
 (*
__libc_block
, 
__edÊag
,

69 
¸y±_d©a
 * 
__ª°ri˘
 
__d©a
)

70 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

73 
__END_DECLS


	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/dirent.h

24 #i‚def 
_DIRENT_H


25 
	#_DIRENT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifde‡
__USE_XOPEN


34 #i‚de‡
__öo_t_deföed


35 #i‚de‡
__USE_FILE_OFFSET64


36 
__öo_t
 
	töo_t
;

38 
__öo64_t
 
	töo_t
;

40 
	#__öo_t_deföed


	)

42 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


43 
__öo64_t
 
	töo64_t
;

44 
	#__öo64_t_deföed


	)

63 
	~<bôs/dúít.h
>

65 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


66 
	#d_öo
 
d_fûío


	)

83 #ifde‡
_DIRENT_HAVE_D_NAMLEN


84 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

85 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

87 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

88 #ifde‡
_DIRENT_HAVE_D_RECLEN


89 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

91 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

92 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

97 #ifde‡
__USE_BSD


101 
	mDT_UNKNOWN
 = 0,

102 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

103 
	mDT_FIFO
 = 1,

104 
	#DT_FIFO
 
DT_FIFO


	)

105 
	mDT_CHR
 = 2,

106 
	#DT_CHR
 
DT_CHR


	)

107 
	mDT_DIR
 = 4,

108 
	#DT_DIR
 
DT_DIR


	)

109 
	mDT_BLK
 = 6,

110 
	#DT_BLK
 
DT_BLK


	)

111 
	mDT_REG
 = 8,

112 
	#DT_REG
 
DT_REG


	)

113 
	mDT_LNK
 = 10,

114 
	#DT_LNK
 
DT_LNK


	)

115 
	mDT_SOCK
 = 12,

116 
	#DT_SOCK
 
DT_SOCK


	)

117 
	mDT_WHT
 = 14

118 
	#DT_WHT
 
DT_WHT


	)

122 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

123 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

129 
__dú°ªam
 
	tDIR
;

136 
DIR
 *
	$›ídú
 (
__c⁄°
 *
__«me
Ë
	`__n⁄nuŒ
 ((1));

138 #ifde‡
__USE_XOPEN2K8


143 
DIR
 *
	`fd›ídú
 (
__fd
);

151 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

163 #i‚de‡
__USE_FILE_OFFSET64


164 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

166 #ifde‡
__REDIRECT


167 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

168 
	`__n⁄nuŒ
 ((1));

170 
	#ªaddú
 
ªaddú64


	)

174 #ifde‡
__USE_LARGEFILE64


175 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


184 #i‚de‡
__USE_FILE_OFFSET64


185 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

186 
dúít
 *
__ª°ri˘
 
__íåy
,

187 
dúít
 **
__ª°ri˘
 
__ªsu…
)

188 
	`__n⁄nuŒ
 ((1, 2, 3));

190 #ifde‡
__REDIRECT


191 
	`__REDIRECT
 (
ªaddú_r
,

192 (
DIR
 *
__ª°ri˘
 
__dúp
,

193 
dúít
 *
__ª°ri˘
 
__íåy
,

194 
dúít
 **
__ª°ri˘
 
__ªsu…
),

195 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

197 
	#ªaddú_r
 
ªaddú64_r


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

203 
dúít64
 *
__ª°ri˘
 
__íåy
,

204 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

205 
	`__n⁄nuŒ
 ((1, 2, 3));

210 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

212 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


213 
	~<bôs/ty≥s.h
>

216 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


225 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

227 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


228 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

231 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


232 #i‚de‡
MAXNAMLEN


234 
	~<bôs/posix1_lim.h
>

237 #ifde‡
NAME_MAX


238 
	#MAXNAMLEN
 
NAME_MAX


	)

240 
	#MAXNAMLEN
 255

	)

245 
	#__√ed_size_t


	)

246 
	~<°ddef.h
>

255 #i‚de‡
__USE_FILE_OFFSET64


256 
	`sˇndú
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

257 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

258 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

259 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

260 
__c⁄°
 
dúít
 **))

261 
	`__n⁄nuŒ
 ((1, 2));

263 #ifde‡
__REDIRECT


264 
	`__REDIRECT
 (
sˇndú
,

265 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

266 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

267 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

268 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

269 
__c⁄°
 
dúít
 **)),

270 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

272 
	#sˇndú
 
sˇndú64


	)

276 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


279 
	`sˇndú64
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

280 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

281 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

282 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

283 
__c⁄°
 
dúít64
 **))

284 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__USE_GNU


293 #i‚de‡
__USE_FILE_OFFSET64


294 
	`sˇndú©
 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

295 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

296 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

297 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

298 
__c⁄°
 
dúít
 **))

299 
	`__n⁄nuŒ
 ((2, 3));

301 #ifde‡
__REDIRECT


302 
	`__REDIRECT
 (
sˇndú©
,

303 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

304 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

305 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

306 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

307 
__c⁄°
 
dúít
 **)),

308 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

310 
	#sˇndú©
 
sˇndú©64


	)

316 
	`sˇndú©64
 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

317 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

318 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

319 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

320 
__c⁄°
 
dúít64
 **))

321 
	`__n⁄nuŒ
 ((2, 3));

325 #i‚de‡
__USE_FILE_OFFSET64


326 
	$Æphas‹t
 (
__c⁄°
 
dúít
 **
__e1
,

327 
__c⁄°
 
dúít
 **
__e2
)

328 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

330 #ifde‡
__REDIRECT


331 
	`__REDIRECT_NTH
 (
Æphas‹t
,

332 (
__c⁄°
 
dúít
 **
__e1
,

333 
__c⁄°
 
dúít
 **
__e2
),

334 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

336 
	#Æphas‹t
 
Æphas‹t64


	)

340 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


341 
	$Æphas‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

342 
__c⁄°
 
dúít64
 **
__e2
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


353 #i‚de‡
__USE_FILE_OFFSET64


354 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

355 
size_t
 
__nbyãs
,

356 
__off_t
 *
__ª°ri˘
 
__ba£p
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

359 #ifde‡
__REDIRECT


360 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

361 (
__fd
, *
__ª°ri˘
 
__buf
,

362 
size_t
 
__nbyãs
,

363 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

364 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

366 
	#gëdúíåõs
 
gëdúíåõs64


	)

370 #ifde‡
__USE_LARGEFILE64


371 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

372 
size_t
 
__nbyãs
,

373 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

374 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

378 #ifde‡
__USE_GNU


380 #i‚de‡
__USE_FILE_OFFSET64


381 
	$vîsi⁄s‹t
 (
__c⁄°
 
dúít
 **
__e1
,

382 
__c⁄°
 
dúít
 **
__e2
)

383 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

385 #ifde‡
__REDIRECT


386 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

387 (
__c⁄°
 
dúít
 **
__e1
,

388 
__c⁄°
 
dúít
 **
__e2
),

389 
vîsi⁄s‹t64
)

390 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

392 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

396 #ifde‡
__USE_LARGEFILE64


397 
	$vîsi⁄s‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

398 
__c⁄°
 
dúít64
 **
__e2
)

399 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

403 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

110 
f˙é
 (
__fd
, 
__cmd
, ...);

118 #i‚de‡
__USE_FILE_OFFSET64


119 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

121 #ifde‡
__REDIRECT


122 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

123 
	`__n⁄nuŒ
 ((1));

125 
	#›í
 
›í64


	)

128 #ifde‡
__USE_LARGEFILE64


129 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

132 #ifde‡
__USE_ATFILE


142 #i‚de‡
__USE_FILE_OFFSET64


143 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

144 
	`__n⁄nuŒ
 ((2));

146 #ifde‡
__REDIRECT


147 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

148 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

150 
	#›í©
 
›í©64


	)

153 #ifde‡
__USE_LARGEFILE64


154 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

155 
	`__n⁄nuŒ
 ((2));

164 #i‚de‡
__USE_FILE_OFFSET64


165 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

167 #ifde‡
__REDIRECT


168 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

169 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

171 
	#¸ót
 
¸ót64


	)

174 #ifde‡
__USE_LARGEFILE64


175 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

178 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

179 && !
deföed
 
__USE_POSIX
))

188 
	#F_ULOCK
 0

	)

189 
	#F_LOCK
 1

	)

190 
	#F_TLOCK
 2

	)

191 
	#F_TEST
 3

	)

193 #i‚de‡
__USE_FILE_OFFSET64


194 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

196 #ifde‡
__REDIRECT


197 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

199 
	#lockf
 
lockf64


	)

202 #ifde‡
__USE_LARGEFILE64


203 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

207 #ifde‡
__USE_XOPEN2K


210 #i‚de‡
__USE_FILE_OFFSET64


211 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

212 
__advi£
Ë
__THROW
;

214 #ifde‡
__REDIRECT_NTH


215 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

216 
__off64_t
 
__Àn
, 
__advi£
),

217 
posix_Ádvi£64
);

219 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

222 #ifde‡
__USE_LARGEFILE64


223 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

224 
__advi£
Ë
__THROW
;

232 #i‚de‡
__USE_FILE_OFFSET64


233 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

235 #ifde‡
__REDIRECT


236 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

237 
__off64_t
 
__Àn
),

238 
posix_ÁŒoˇã64
);

240 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

243 #ifde‡
__USE_LARGEFILE64


244 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

251 && 
deföed
 
__va_¨g_∑ck_Àn


252 
	~<bôs/f˙é2.h
>

255 
__END_DECLS


	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/grp.h

24 #i‚def 
_GRP_H


25 
	#_GRP_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 
	#__√ed_size_t


	)

34 
	~<°ddef.h
>

38 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
Ë&& !deföed 
__gid_t_deföed


39 
__gid_t
 
	tgid_t
;

40 
	#__gid_t_deföed


	)

44 
	sgroup


46 *
	mgr_«me
;

47 *
	mgr_∑sswd
;

48 
__gid_t
 
	mgr_gid
;

49 **
	mgr_mem
;

53 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


54 
	#__√ed_FILE


	)

55 
	~<°dio.h
>

59 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


64 
£tgª¡
 ();

67 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

68 || 
deföed
 
__USE_XOPEN2K8


73 
ídgª¡
 ();

79 
group
 *
gëgª¡
 ();

82 #ifdef 
__USE_SVID


89 
group
 *
fgëgª¡
 (
FILE
 *
__°ªam
);

92 #ifde‡
__USE_GNU


99 
putgª¡
 (
__c⁄°
 
group
 *
__ª°ri˘
 
__p
,

100 
FILE
 *
__ª°ri˘
 
__f
);

107 
group
 *
gëgrgid
 (
__gid_t
 
__gid
);

113 
group
 *
gëg∫am
 (
__c⁄°
 *
__«me
);

115 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


117 #ifde‡
__USE_MISC


120 
	#NSS_BUFLEN_GROUP
 1024

	)

136 #ifde‡
__USE_GNU


137 
gëgª¡_r
 (
group
 *
__ª°ri˘
 
__ªsu…buf
,

138 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

139 
group
 **
__ª°ri˘
 
__ªsu…
);

146 
gëgrgid_r
 (
__gid_t
 
__gid
, 
group
 *
__ª°ri˘
 
__ªsu…buf
,

147 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

148 
group
 **
__ª°ri˘
 
__ªsu…
);

154 
gëg∫am_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

155 
group
 *
__ª°ri˘
 
__ªsu…buf
,

156 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

157 
group
 **
__ª°ri˘
 
__ªsu…
);

159 #ifdef 
__USE_SVID


167 
fgëgª¡_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

168 
group
 *
__ª°ri˘
 
__ªsu…buf
,

169 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

170 
group
 **
__ª°ri˘
 
__ªsu…
);

176 #ifdef 
__USE_BSD


178 
	#__√ed_size_t


	)

179 
	~<°ddef.h
>

182 
	$£tgroups
 (
size_t
 
__n
, 
__c⁄°
 
__gid_t
 *
__groups
Ë
__THROW
;

192 
	`gëgrou∂i°
 (
__c⁄°
 *
__u£r
, 
__gid_t
 
__group
,

193 
__gid_t
 *
__groups
, *
__ngroups
);

203 
	`öôgroups
 (
__c⁄°
 *
__u£r
, 
__gid_t
 
__group
);

207 
__END_DECLS


	@/usr/include/iconv.h

19 #i‚de‡
_ICONV_H


20 
	#_ICONV_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
__BEGIN_DECLS


30 *
	tic⁄v_t
;

38 
ic⁄v_t
 
ic⁄v_›í
 (
__c⁄°
 *
__tocode
, __c⁄° *
__‰omcode
);

43 
size_t
 
ic⁄v
 (
ic⁄v_t
 
__cd
, **
__ª°ri˘
 
__öbuf
,

44 
size_t
 *
__ª°ri˘
 
__öbyã¶e·
,

45 **
__ª°ri˘
 
__outbuf
,

46 
size_t
 *
__ª°ri˘
 
__outbyã¶e·
);

52 
ic⁄v_˛o£
 (
ic⁄v_t
 
__cd
);

54 
	g__END_DECLS


	@/usr/include/inttypes.h

23 #i‚de‡
_INTTYPES_H


24 
	#_INTTYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<°döt.h
>

31 #i‚de‡
____gwch¨_t_deföed


32 #ifde‡
__˝lu•lus


33 
	#__gwch¨_t
 
wch¨_t


	)

34 #ñi‡
deföed
 
__WCHAR_TYPE__


35 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

37 
	#__√ed_wch¨_t


	)

38 
	~<°ddef.h
>

39 
wch¨_t
 
	t__gwch¨_t
;

41 
	#____gwch¨_t_deföed
 1

	)

47 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


49 #i‡
__WORDSIZE
 == 64

50 
	#__PRI64_PREFIX
 "l"

	)

51 
	#__PRIPTR_PREFIX
 "l"

	)

53 
	#__PRI64_PREFIX
 "Œ"

	)

54 
	#__PRIPTR_PREFIX


	)

60 
	#PRId8
 "d"

	)

61 
	#PRId16
 "d"

	)

62 
	#PRId32
 "d"

	)

63 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

65 
	#PRIdLEAST8
 "d"

	)

66 
	#PRIdLEAST16
 "d"

	)

67 
	#PRIdLEAST32
 "d"

	)

68 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIdFAST8
 "d"

	)

71 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

73 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

76 
	#PRIi8
 "i"

	)

77 
	#PRIi16
 "i"

	)

78 
	#PRIi32
 "i"

	)

79 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

81 
	#PRIiLEAST8
 "i"

	)

82 
	#PRIiLEAST16
 "i"

	)

83 
	#PRIiLEAST32
 "i"

	)

84 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIiFAST8
 "i"

	)

87 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

89 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

92 
	#PRIo8
 "o"

	)

93 
	#PRIo16
 "o"

	)

94 
	#PRIo32
 "o"

	)

95 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

97 
	#PRIoLEAST8
 "o"

	)

98 
	#PRIoLEAST16
 "o"

	)

99 
	#PRIoLEAST32
 "o"

	)

100 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIoFAST8
 "o"

	)

103 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

105 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

108 
	#PRIu8
 "u"

	)

109 
	#PRIu16
 "u"

	)

110 
	#PRIu32
 "u"

	)

111 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

113 
	#PRIuLEAST8
 "u"

	)

114 
	#PRIuLEAST16
 "u"

	)

115 
	#PRIuLEAST32
 "u"

	)

116 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIuFAST8
 "u"

	)

119 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

121 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

124 
	#PRIx8
 "x"

	)

125 
	#PRIx16
 "x"

	)

126 
	#PRIx32
 "x"

	)

127 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

129 
	#PRIxLEAST8
 "x"

	)

130 
	#PRIxLEAST16
 "x"

	)

131 
	#PRIxLEAST32
 "x"

	)

132 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIxFAST8
 "x"

	)

135 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

137 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

140 
	#PRIX8
 "X"

	)

141 
	#PRIX16
 "X"

	)

142 
	#PRIX32
 "X"

	)

143 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

145 
	#PRIXLEAST8
 "X"

	)

146 
	#PRIXLEAST16
 "X"

	)

147 
	#PRIXLEAST32
 "X"

	)

148 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

150 
	#PRIXFAST8
 "X"

	)

151 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

153 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

157 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

158 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

159 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

160 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

161 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

162 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

166 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

167 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

168 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

169 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

170 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

171 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

177 
	#SCNd8
 "hhd"

	)

178 
	#SCNd16
 "hd"

	)

179 
	#SCNd32
 "d"

	)

180 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

182 
	#SCNdLEAST8
 "hhd"

	)

183 
	#SCNdLEAST16
 "hd"

	)

184 
	#SCNdLEAST32
 "d"

	)

185 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNdFAST8
 "hhd"

	)

188 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

190 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

193 
	#SCNi8
 "hhi"

	)

194 
	#SCNi16
 "hi"

	)

195 
	#SCNi32
 "i"

	)

196 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

198 
	#SCNiLEAST8
 "hhi"

	)

199 
	#SCNiLEAST16
 "hi"

	)

200 
	#SCNiLEAST32
 "i"

	)

201 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNiFAST8
 "hhi"

	)

204 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

206 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

209 
	#SCNu8
 "hhu"

	)

210 
	#SCNu16
 "hu"

	)

211 
	#SCNu32
 "u"

	)

212 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

214 
	#SCNuLEAST8
 "hhu"

	)

215 
	#SCNuLEAST16
 "hu"

	)

216 
	#SCNuLEAST32
 "u"

	)

217 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNuFAST8
 "hhu"

	)

220 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

222 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

225 
	#SCNo8
 "hho"

	)

226 
	#SCNo16
 "ho"

	)

227 
	#SCNo32
 "o"

	)

228 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

230 
	#SCNoLEAST8
 "hho"

	)

231 
	#SCNoLEAST16
 "ho"

	)

232 
	#SCNoLEAST32
 "o"

	)

233 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNoFAST8
 "hho"

	)

236 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

238 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

241 
	#SCNx8
 "hhx"

	)

242 
	#SCNx16
 "hx"

	)

243 
	#SCNx32
 "x"

	)

244 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

246 
	#SCNxLEAST8
 "hhx"

	)

247 
	#SCNxLEAST16
 "hx"

	)

248 
	#SCNxLEAST32
 "x"

	)

249 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

251 
	#SCNxFAST8
 "hhx"

	)

252 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

254 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

258 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

259 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

260 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

261 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

262 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

265 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

266 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

267 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

268 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

269 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

274 
	g__BEGIN_DECLS


276 #i‡
__WORDSIZE
 == 64

281 
	mquŸ
;

282 
	mªm
;

283 } 
	timaxdiv_t
;

290 
	mquŸ
;

291 
	mªm
;

292 } 
	timaxdiv_t
;

298 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

301 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

302 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

305 
ötmax_t
 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

306 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

309 
uötmax_t
 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

310 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

313 
ötmax_t
 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

314 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

315 
__THROW
;

318 
uötmax_t
 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

319 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

320 
__THROW
;

322 #ifde‡
__USE_EXTERN_INLINES


324 #i‡
__WORDSIZE
 == 64

326 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

327 **
__ª°ri˘
 
__íd±r
,

328 
__ba£
, 
__group
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

331 
__exã∫_ölöe
 
ötmax_t


332 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

333 
ba£
))

335  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

336 
	}
}

338 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *

339 
__ª°ri˘
 
__≈å
,

340 ** 
__ª°ri˘
 
__íd±r
,

341 
__ba£
, 
__group
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

344 
__exã∫_ölöe
 
uötmax_t


345 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

346 
ba£
))

348  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

349 
	}
}

351 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

352 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

353 
__ba£
, 
__group
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

356 
__exã∫_ölöe
 
ötmax_t


357 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

358 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

360  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

361 
	}
}

363 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

364 
__ª°ri˘
 
__≈å
,

365 
__gwch¨_t
 **

366 
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
__group
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

370 
__exã∫_ölöe
 
uötmax_t


371 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

372 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

374  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

375 
	}
}

379 
__exãnsi⁄__


380 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

381 **
__ª°ri˘
 
__íd±r
,

382 
__ba£
, 
__group
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

385 
__exã∫_ölöe
 
ötmax_t


386 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

387 
ba£
))

389  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

390 
	}
}

392 
__exãnsi⁄__


393 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

394 
__ª°ri˘
 
__≈å
,

396 
__ª°ri˘
 
__íd±r
,

397 
__ba£
,

398 
__group
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

401 
__exã∫_ölöe
 
uötmax_t


402 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

403 
ba£
))

405  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

406 
	}
}

408 
__exãnsi⁄__


409 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

410 
__ª°ri˘
 
__≈å
,

411 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

412 
__ba£
, 
__group
)

413 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

415 
__exã∫_ölöe
 
ötmax_t


416 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

417 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

419  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

420 
	}
}

423 
__exãnsi⁄__


424 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

425 
__ª°ri˘
 
__≈å
,

426 
__gwch¨_t
 **

427 
__ª°ri˘
 
__íd±r
,

428 
__ba£
,

429 
__group
)

430 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

432 
__exã∫_ölöe
 
uötmax_t


433 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

434 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

436  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

437 
	}
}

442 
	g__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/locale.h

23 #i‚def 
_LOCALE_H


24 
	#_LOCALE_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

30 
	~<bôs/loˇÀ.h
>

32 
	g__BEGIN_DECLS


36 
	#LC_CTYPE
 
__LC_CTYPE


	)

37 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

38 
	#LC_TIME
 
__LC_TIME


	)

39 
	#LC_COLLATE
 
__LC_COLLATE


	)

40 
	#LC_MONETARY
 
__LC_MONETARY


	)

41 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

42 
	#LC_ALL
 
__LC_ALL


	)

43 
	#LC_PAPER
 
__LC_PAPER


	)

44 
	#LC_NAME
 
__LC_NAME


	)

45 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

46 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

47 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

48 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

51 
__BEGIN_NAMESPACE_STD


54 
	slc⁄v


58 *
	mdecimÆ_poöt
;

59 *
	mthoußnds_£p
;

65 *
	mgroupög
;

71 *
	möt_cuº_symbﬁ
;

72 *
	mcuºícy_symbﬁ
;

73 *
	mm⁄_decimÆ_poöt
;

74 *
	mm⁄_thoußnds_£p
;

75 *
	mm⁄_groupög
;

76 *
	mposôive_sign
;

77 *
	m√g©ive_sign
;

78 
	möt_‰ac_digôs
;

79 
	m‰ac_digôs
;

81 
	mp_cs_¥e˚des
;

83 
	mp_£p_by_•a˚
;

85 
	mn_cs_¥e˚des
;

87 
	mn_£p_by_•a˚
;

94 
	mp_sign_po¢
;

95 
	mn_sign_po¢
;

96 #ifde‡
__USE_ISOC99


98 
	möt_p_cs_¥e˚des
;

100 
	möt_p_£p_by_•a˚
;

102 
	möt_n_cs_¥e˚des
;

104 
	möt_n_£p_by_•a˚
;

111 
	möt_p_sign_po¢
;

112 
	möt_n_sign_po¢
;

114 
	m__öt_p_cs_¥e˚des
;

115 
	m__öt_p_£p_by_•a˚
;

116 
	m__öt_n_cs_¥e˚des
;

117 
	m__öt_n_£p_by_•a˚
;

118 
	m__öt_p_sign_po¢
;

119 
	m__öt_n_sign_po¢
;

125 *
	$£éoˇÀ
 (
__ˇãg‹y
, 
__c⁄°
 *
__loˇÀ
Ë
__THROW
;

128 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

130 
__END_NAMESPACE_STD


133 #ifdef 
__USE_XOPEN2K8


146 
	~<xloˇÀ.h
>

152 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, 
__c⁄°
 *
__loˇÀ
,

153 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

159 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

160 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

161 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

162 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

163 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

164 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

165 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

166 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

167 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

168 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

169 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

170 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

171 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

172 | 
LC_NUMERIC_MASK
 \

173 | 
LC_TIME_MASK
 \

174 | 
LC_COLLATE_MASK
 \

175 | 
LC_MONETARY_MASK
 \

176 | 
LC_MESSAGES_MASK
 \

177 | 
LC_PAPER_MASK
 \

178 | 
LC_NAME_MASK
 \

179 | 
LC_ADDRESS_MASK
 \

180 | 
LC_TELEPHONE_MASK
 \

181 | 
LC_MEASUREMENT_MASK
 \

182 | 
LC_IDENTIFICATION_MASK
 \

183 )

	)

187 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

191 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

198 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

202 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

206 
__END_DECLS


	@/usr/include/memory.h

23 #i‚def 
_MEMORY_H


24 
	#_MEMORY_H
 1

	)

26 
	~<„©uªs.h
>

29 #i‚def 
_STRING_H


30 
	~<°rög.h
>

	@/usr/include/netdb.h

23 #i‚def 
_NETDB_H


24 
	#_NETDB_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<√töë/ö.h
>

29 
	~<°döt.h
>

30 #ifde‡
__USE_MISC


33 
	~<Ωc/√tdb.h
>

36 #ifde‡
__USE_GNU


37 
	#__√ed_sigevít_t


	)

38 
	~<bôs/sigöfo.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

43 
	~<bôs/√tdb.h
>

46 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

47 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

48 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

49 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

50 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

51 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

54 
	g__BEGIN_DECLS


56 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


59 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

62 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

66 
	#HOST_NOT_FOUND
 1

	)

67 
	#TRY_AGAIN
 2

	)

69 
	#NO_RECOVERY
 3

	)

71 
	#NO_DATA
 4

	)

74 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


75 
	#NETDB_INTERNAL
 -1

	)

76 
	#NETDB_SUCCESS
 0

	)

77 
	#NO_ADDRESS
 
NO_DATA


	)

80 #ifde‡
__USE_XOPEN2K


82 
	#IPPORT_RESERVED
 1024

	)

85 #ifde‡
__USE_GNU


87 
	#SCOPE_DELIMITER
 '%'

	)

90 #ifde‡
__USE_MISC


93 
	$hîr‹
 (
__c⁄°
 *
__°r
Ë
__THROW
;

96 
__c⁄°
 *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

101 
	sho°ít


103 *
h_«me
;

104 **
h_Æü£s
;

105 
h_addπy≥
;

106 
h_Àngth
;

107 **
h_addr_li°
;

108 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


109 
	#h_addr
 
h_addr_li°
[0]

	)

118 
	`£tho°ít
 (
__°ay_›í
);

124 
	`ídho°ít
 ();

131 
ho°ít
 *
	`gëho°ít
 ();

138 
ho°ít
 *
	`gëho°byaddr
 (
__c⁄°
 *
__addr
, 
__sockÀn_t
 
__Àn
,

139 
__ty≥
);

145 
ho°ít
 *
	`gëho°by«me
 (
__c⁄°
 *
__«me
);

147 #ifde‡
__USE_MISC


156 
ho°ít
 *
	`gëho°by«me2
 (
__c⁄°
 *
__«me
, 
__af
);

168 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

169 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

170 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

171 *
__ª°ri˘
 
__h_î∫›
);

173 
	`gëho°byaddr_r
 (
__c⁄°
 *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

174 
__ty≥
,

175 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

176 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

177 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

178 *
__ª°ri˘
 
__h_î∫›
);

180 
	`gëho°by«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

181 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

182 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

183 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

184 *
__ª°ri˘
 
__h_î∫›
);

186 
	`gëho°by«me2_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, 
__af
,

187 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

188 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

189 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

190 *
__ª°ri˘
 
__h_î∫›
);

199 
	`£äëít
 (
__°ay_›í
);

205 
	`íd√ã¡
 ();

212 
√ã¡
 *
	`gë√ã¡
 ();

219 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

225 
√ã¡
 *
	`gë√tby«me
 (
__c⁄°
 *
__«me
);

227 #ifdef 
__USE_MISC


238 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

239 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

240 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

241 *
__ª°ri˘
 
__h_î∫›
);

243 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

244 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

245 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

246 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

247 *
__ª°ri˘
 
__h_î∫›
);

249 
	`gë√tby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

250 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

251 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

252 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

253 *
__ª°ri˘
 
__h_î∫›
);

258 
	s£rvít


260 *
s_«me
;

261 **
s_Æü£s
;

262 
s_p‹t
;

263 *
s_¥Ÿo
;

271 
	`£t£rvít
 (
__°ay_›í
);

277 
	`íd£rvít
 ();

284 
£rvít
 *
	`gë£rvít
 ();

291 
£rvít
 *
	`gë£rvby«me
 (
__c⁄°
 *
__«me
,

292 
__c⁄°
 *
__¥Ÿo
);

299 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, 
__c⁄°
 *
__¥Ÿo
);

302 #ifdef 
__USE_MISC


310 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

311 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

312 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

314 
	`gë£rvby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

315 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

316 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

317 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

318 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

320 
	`gë£rvbyp‹t_r
 (
__p‹t
, 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

321 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

322 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

323 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

328 
	s¥Ÿ€¡


330 *
p_«me
;

331 **
p_Æü£s
;

332 
p_¥Ÿo
;

340 
	`£çrŸ€¡
 (
__°ay_›í
);

346 
	`íd¥Ÿ€¡
 ();

353 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

359 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (
__c⁄°
 *
__«me
);

365 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

368 #ifdef 
__USE_MISC


376 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

377 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

378 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

380 
	`gë¥Ÿoby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

381 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

382 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

383 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

385 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

386 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

387 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

388 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

397 
	`£äëgª¡
 (
__c⁄°
 *
__√tgroup
);

405 
	`íd√tgª¡
 ();

414 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

415 **
__ª°ri˘
 
__u£Ω
,

416 **
__ª°ri˘
 
__domaöp
);

425 
	`ö√tgr
 (
__c⁄°
 *
__√tgroup
, __c⁄° *
__ho°
,

426 
__c⁄°
 *
__u£r
, __c⁄° *
__domaö
);

434 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

435 **
__ª°ri˘
 
__u£Ω
,

436 **
__ª°ri˘
 
__domaöp
,

437 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

441 #ifde‡
__USE_BSD


453 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

454 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

455 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

456 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

465 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

466 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

467 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

468 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

469 
ß_Ámûy_t
 
__af
);

481 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

482 
__c⁄°
 *
__ª°ri˘
 
__«me
,

483 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

484 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

493 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

494 
__c⁄°
 *
__ª°ri˘
 
__«me
,

495 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

496 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

497 
ß_Ámûy_t
 
__af
);

507 
	`ru£rok
 (
__c⁄°
 *
__rho°
, 
__su£r
,

508 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
);

517 
	`ru£rok_af
 (
__c⁄°
 *
__rho°
, 
__su£r
,

518 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
,

519 
ß_Ámûy_t
 
__af
);

530 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

531 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
);

541 
	`úu£rok_af
 (
__c⁄°
 *
__øddr
, 
__su£r
,

542 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
,

543 
ß_Ámûy_t
 
__af
);

553 
	`ºesvp‹t
 (*
__Æp‹t
);

562 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

567 #ifdef 
__USE_POSIX


569 
	saddröfo


571 
ai_Êags
;

572 
ai_Ámûy
;

573 
ai_sockty≥
;

574 
ai_¥Ÿocﬁ
;

575 
sockÀn_t
 
ai_addæí
;

576 
sockaddr
 *
ai_addr
;

577 *
ai_ˇn⁄«me
;

578 
addröfo
 *
ai_√xt
;

581 #ifde‡
__USE_GNU


583 
	sgaicb


585 c⁄° *
¨_«me
;

586 c⁄° *
¨_£rvi˚
;

587 c⁄° 
addröfo
 *
¨_ªque°
;

588 
addröfo
 *
¨_ªsu…
;

590 
__ªtu∫
;

591 
__unu£d
[5];

595 
	#GAI_WAIT
 0

	)

596 
	#GAI_NOWAIT
 1

	)

600 
	#AI_PASSIVE
 0x0001

	)

601 
	#AI_CANONNAME
 0x0002

	)

602 
	#AI_NUMERICHOST
 0x0004

	)

603 
	#AI_V4MAPPED
 0x0008

	)

604 
	#AI_ALL
 0x0010

	)

605 
	#AI_ADDRCONFIG
 0x0020

	)

607 #ifde‡
__USE_GNU


608 
	#AI_IDN
 0x0040

	)

611 
	#AI_CANONIDN
 0x0080

	)

612 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

614 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

617 
	#AI_NUMERICSERV
 0x0400

	)

620 
	#EAI_BADFLAGS
 -1

	)

621 
	#EAI_NONAME
 -2

	)

622 
	#EAI_AGAIN
 -3

	)

623 
	#EAI_FAIL
 -4

	)

624 
	#EAI_FAMILY
 -6

	)

625 
	#EAI_SOCKTYPE
 -7

	)

626 
	#EAI_SERVICE
 -8

	)

627 
	#EAI_MEMORY
 -10

	)

628 
	#EAI_SYSTEM
 -11

	)

629 
	#EAI_OVERFLOW
 -12

	)

630 #ifde‡
__USE_GNU


631 
	#EAI_NODATA
 -5

	)

632 
	#EAI_ADDRFAMILY
 -9

	)

633 
	#EAI_INPROGRESS
 -100

	)

634 
	#EAI_CANCELED
 -101

	)

635 
	#EAI_NOTCANCELED
 -102

	)

636 
	#EAI_ALLDONE
 -103

	)

637 
	#EAI_INTR
 -104

	)

638 
	#EAI_IDN_ENCODE
 -105

	)

641 #ifde‡
__USE_MISC


642 
	#NI_MAXHOST
 1025

	)

643 
	#NI_MAXSERV
 32

	)

646 
	#NI_NUMERICHOST
 1

	)

647 
	#NI_NUMERICSERV
 2

	)

648 
	#NI_NOFQDN
 4

	)

649 
	#NI_NAMEREQD
 8

	)

650 
	#NI_DGRAM
 16

	)

651 #ifde‡
__USE_GNU


652 
	#NI_IDN
 32

	)

653 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

655 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

664 
	`gëaddröfo
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

665 
__c⁄°
 *
__ª°ri˘
 
__£rvi˚
,

666 
__c⁄°
 
addröfo
 *
__ª°ri˘
 
__ªq
,

667 
addröfo
 **
__ª°ri˘
 
__∑i
);

670 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

673 
__c⁄°
 *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

679 
	`gë«meöfo
 (
__c⁄°
 
sockaddr
 *
__ª°ri˘
 
__ß
,

680 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

681 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

682 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

685 #ifde‡
__USE_GNU


694 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

695 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

705 
	`gai_su•íd
 (
__c⁄°
 
gaicb
 *__c⁄° 
__li°
[], 
__ít
,

706 
__c⁄°
 
time•ec
 *
__timeout
);

709 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

712 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

715 
__END_DECLS


	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_DCCP
 = 33,

57 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

58 
	mIPPROTO_IPV6
 = 41,

59 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

60 
	mIPPROTO_ROUTING
 = 43,

61 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

62 
	mIPPROTO_FRAGMENT
 = 44,

63 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

64 
	mIPPROTO_RSVP
 = 46,

65 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

66 
	mIPPROTO_GRE
 = 47,

67 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

68 
	mIPPROTO_ESP
 = 50,

69 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

70 
	mIPPROTO_AH
 = 51,

71 
	#IPPROTO_AH
 
IPPROTO_AH


	)

72 
	mIPPROTO_ICMPV6
 = 58,

73 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

74 
	mIPPROTO_NONE
 = 59,

75 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

76 
	mIPPROTO_DSTOPTS
 = 60,

77 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

78 
	mIPPROTO_MTP
 = 92,

79 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

80 
	mIPPROTO_ENCAP
 = 98,

81 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

82 
	mIPPROTO_PIM
 = 103,

83 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

84 
	mIPPROTO_COMP
 = 108,

85 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

86 
	mIPPROTO_SCTP
 = 132,

87 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

88 
	mIPPROTO_UDPLITE
 = 136,

89 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


97 
uöt16_t
 
	tö_p‹t_t
;

102 
	mIPPORT_ECHO
 = 7,

103 
	mIPPORT_DISCARD
 = 9,

104 
	mIPPORT_SYSTAT
 = 11,

105 
	mIPPORT_DAYTIME
 = 13,

106 
	mIPPORT_NETSTAT
 = 15,

107 
	mIPPORT_FTP
 = 21,

108 
	mIPPORT_TELNET
 = 23,

109 
	mIPPORT_SMTP
 = 25,

110 
	mIPPORT_TIMESERVER
 = 37,

111 
	mIPPORT_NAMESERVER
 = 42,

112 
	mIPPORT_WHOIS
 = 43,

113 
	mIPPORT_MTP
 = 57,

115 
	mIPPORT_TFTP
 = 69,

116 
	mIPPORT_RJE
 = 77,

117 
	mIPPORT_FINGER
 = 79,

118 
	mIPPORT_TTYLINK
 = 87,

119 
	mIPPORT_SUPDUP
 = 95,

122 
	mIPPORT_EXECSERVER
 = 512,

123 
	mIPPORT_LOGINSERVER
 = 513,

124 
	mIPPORT_CMDSERVER
 = 514,

125 
	mIPPORT_EFSSERVER
 = 520,

128 
	mIPPORT_BIFFUDP
 = 512,

129 
	mIPPORT_WHOSERVER
 = 513,

130 
	mIPPORT_ROUTESERVER
 = 520,

133 
	mIPPORT_RESERVED
 = 1024,

136 
	mIPPORT_USERRESERVED
 = 5000

141 
uöt32_t
 
	tö_addr_t
;

142 
	sö_addr


144 
ö_addr_t
 
	ms_addr
;

153 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

154 
	#IN_CLASSA_NET
 0xff000000

	)

155 
	#IN_CLASSA_NSHIFT
 24

	)

156 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

157 
	#IN_CLASSA_MAX
 128

	)

159 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

160 
	#IN_CLASSB_NET
 0xffff0000

	)

161 
	#IN_CLASSB_NSHIFT
 16

	)

162 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

163 
	#IN_CLASSB_MAX
 65536

	)

165 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

166 
	#IN_CLASSC_NET
 0xffffff00

	)

167 
	#IN_CLASSC_NSHIFT
 8

	)

168 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

170 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

171 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

173 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

174 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

177 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

179 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

181 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

184 
	#IN_LOOPBACKNET
 127

	)

186 #i‚de‡
INADDR_LOOPBACK


187 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

191 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

192 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

193 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

194 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

198 
	sö6_addr


202 
uöt8_t
 
	m__u6_addr8
[16];

203 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


204 
uöt16_t
 
	m__u6_addr16
[8];

205 
uöt32_t
 
	m__u6_addr32
[4];

207 } 
	m__ö6_u
;

208 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

209 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


210 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

211 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

215 c⁄° 
ö6_addr
 
ö6addr_™y
;

216 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

217 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

218 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

220 
	#INET_ADDRSTRLEN
 16

	)

221 
	#INET6_ADDRSTRLEN
 46

	)

225 
	ssockaddr_ö


227 
__SOCKADDR_COMMON
 (
sö_
);

228 
ö_p‹t_t
 
	msö_p‹t
;

229 
ö_addr
 
	msö_addr
;

232 
	msö_zîo
[ (
sockaddr
) -

233 
__SOCKADDR_COMMON_SIZE
 -

234  (
ö_p‹t_t
) -

235  (
ö_addr
)];

239 
	ssockaddr_ö6


241 
__SOCKADDR_COMMON
 (
sö6_
);

242 
ö_p‹t_t
 
	msö6_p‹t
;

243 
uöt32_t
 
	msö6_Êowöfo
;

244 
ö6_addr
 
	msö6_addr
;

245 
uöt32_t
 
	msö6_sc›e_id
;

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


251 
	sù_mªq


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
	sù_mªq_sour˚


263 
ö_addr
 
	mimr_mu…üddr
;

266 
ö_addr
 
	mimr_öãrÁ˚
;

269 
ö_addr
 
	mimr_sour˚addr
;

275 
	sùv6_mªq


278 
ö6_addr
 
	mùv6mr_mu…üddr
;

281 
	mùv6mr_öãrÁ˚
;

285 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


287 
	sgroup_ªq


290 
uöt32_t
 
	mgr_öãrÁ˚
;

293 
sockaddr_°‹age
 
	mgr_group
;

296 
	sgroup_sour˚_ªq


299 
uöt32_t
 
	mg§_öãrÁ˚
;

302 
sockaddr_°‹age
 
	mg§_group
;

305 
sockaddr_°‹age
 
	mg§_sour˚
;

310 
	sù_msfûãr


313 
ö_addr
 
	mimsf_mu…üddr
;

316 
ö_addr
 
	mimsf_öãrÁ˚
;

319 
uöt32_t
 
	mimsf_fmode
;

322 
uöt32_t
 
	mimsf_num§c
;

324 
ö_addr
 
	mimsf_¶i°
[1];

327 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

328 -  (
ö_addr
) \

329 + (
num§c
Ë*  (
ö_addr
))

	)

331 
	sgroup_fûãr


334 
uöt32_t
 
	mgf_öãrÁ˚
;

337 
sockaddr_°‹age
 
	mgf_group
;

340 
uöt32_t
 
	mgf_fmode
;

343 
uöt32_t
 
	mgf_num§c
;

345 
sockaddr_°‹age
 
	mgf_¶i°
[1];

348 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

349 -  (
sockaddr_°‹age
) \

350 + ((
num§c
) \

351 *  (
sockaddr_°‹age
)))

	)

356 
	~<bôs/ö.h
>

365 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

366 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

367 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

368 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

369 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

370 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

371 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

373 
	~<ídün.h
>

376 
	~<bôs/byãsw≠.h
>

378 #ifde‡
__OPTIMIZE__


382 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


385 
	#¡ohl
(
x
Ë(x)

	)

386 
	#¡ohs
(
x
Ë(x)

	)

387 
	#ht⁄l
(
x
Ë(x)

	)

388 
	#ht⁄s
(
x
Ë(x)

	)

390 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


391 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

392 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

393 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

394 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

399 #ifde‡
__GNUC__


400 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

401 (
__exãnsi⁄__
 \

402 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

403 
__a
->
s6_addr32
[0] == 0 \

404 && 
__a
->
s6_addr32
[1] == 0 \

405 && 
__a
->
s6_addr32
[2] == 0 \

406 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

408 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

409 (
__exãnsi⁄__
 \

410 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

411 
__a
->
s6_addr32
[0] == 0 \

412 && 
__a
->
s6_addr32
[1] == 0 \

413 && 
__a
->
s6_addr32
[2] == 0 \

414 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

416 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

417 (
__exãnsi⁄__
 \

418 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

419 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

421 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

422 (
__exãnsi⁄__
 \

423 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

424 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

426 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

427 (
__exãnsi⁄__
 \

428 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

429 
__a
->
s6_addr32
[0] == 0 \

430 && 
__a
->
s6_addr32
[1] == 0 \

431 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

433 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

434 (
__exãnsi⁄__
 \

435 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

436 
__a
->
s6_addr32
[0] == 0 \

437 && 
__a
->
s6_addr32
[1] == 0 \

438 && 
__a
->
s6_addr32
[2] == 0 \

439 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

441 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

442 (
__exãnsi⁄__
 \

443 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

444 
__c⁄°
 
ö6_addr
 *
__b
 = (__c⁄° ö6_add∏*Ë(
b
); \

445 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

446 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

447 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

448 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

450 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

451 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

452 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

453 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

454 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

456 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

457 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

458 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

459 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

460 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

462 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

463 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

464 =
	`ht⁄l
 (0x„800000))

	)

466 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

467 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

468 =
	`ht⁄l
 (0x„c00000))

	)

470 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

471 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

472 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

473 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

475 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

476 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

477 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

478 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

479 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

481 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

482 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

483 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

484 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

485 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

488 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

490 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


492 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

495 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

496 
__THROW
;

500 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

501 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

502 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

504 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

505 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

506 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

508 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

509 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

510 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

512 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

513 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

514 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

516 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

517 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

518 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

521 #ifde‡
__USE_GNU


523 
	sö6_pktöfo


525 
ö6_addr
 
ùi6_addr
;

526 
ùi6_ifödex
;

530 
	sù6_mtuöfo


532 
sockaddr_ö6
 
ù6m_addr
;

533 
uöt32_t
 
ù6m_mtu
;

538 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

539 
__THROW
 
__©åibuã_dïªˇãd__
;

540 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

541 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

542 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

543 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

544 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

545 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

546 
__mu…x
, 
__∂usy
)

547 
__THROW
 
__©åibuã_dïªˇãd__
;

548 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

549 
uöt8_t
 **
__çåp
)

550 
__THROW
 
__©åibuã_dïªˇãd__
;

551 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

552 
uöt8_t
 **
__çåp
, 
__ty≥
)

553 
__THROW
 
__©åibuã_dïªˇãd__
;

557 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

558 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

559 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

560 **
__d©abuÂ
Ë
__THROW
;

561 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

562 
__THROW
;

563 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

564 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

565 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

566 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

567 **
__d©abuÂ
Ë
__THROW
;

568 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

569 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

570 **
__d©abuÂ
Ë
__THROW
;

571 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

572 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

576 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

577 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

578 
__£gmíts
Ë
__THROW
;

579 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

580 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

581 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

582 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

583 
__THROW
;

589 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

590 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

591 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

592 
__THROW
;

595 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

596 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

597 
uöt32_t
 
__num§c
,

598 
__c⁄°
 
ö_addr
 *
__¶i°
)

599 
__THROW
;

603 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

604 
__c⁄°
 
sockaddr
 *
__group
,

605 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

606 
uöt32_t
 *
__num§c
,

607 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

610 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

611 
__c⁄°
 
sockaddr
 *
__group
,

612 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

613 
uöt32_t
 
__num§c
,

614 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

617 
__END_DECLS


	@/usr/include/netinet/in_systm.h

20 #i‚de‡
_NETINET_IN_SYSTM_H


21 
	#_NETINET_IN_SYSTM_H
 1

	)

23 
	~<sys/cdefs.h
>

24 
	~<sys/ty≥s.h
>

26 
__BEGIN_DECLS


35 
u_öt16_t
 
	tn_sh‹t
;

36 
u_öt32_t
 
	tn_l⁄g
;

37 
u_öt32_t
 
	tn_time
;

39 
	g__END_DECLS


	@/usr/include/netinet/ip.h

19 #i‚de‡
__NETINET_IP_H


20 
	#__NETINET_IP_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sys/ty≥s.h
>

25 
	~<√töë/ö.h
>

27 
__BEGIN_DECLS


29 
	stime°amp


31 
u_öt8_t
 
	mÀn
;

32 
u_öt8_t
 
	m±r
;

33 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


34 
	mÊags
:4;

35 
	movîÊow
:4;

36 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


37 
	movîÊow
:4;

38 
	mÊags
:4;

42 
u_öt32_t
 
	md©a
[9];

45 
	sùhdr


47 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


48 
	mihl
:4;

49 
	mvîsi⁄
:4;

50 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


51 
	mvîsi⁄
:4;

52 
	mihl
:4;

56 
u_öt8_t
 
	mtos
;

57 
u_öt16_t
 
	mtŸ_Àn
;

58 
u_öt16_t
 
	mid
;

59 
u_öt16_t
 
	m‰ag_off
;

60 
u_öt8_t
 
	mâl
;

61 
u_öt8_t
 
	m¥Ÿocﬁ
;

62 
u_öt16_t
 
	mcheck
;

63 
u_öt32_t
 
	mßddr
;

64 
u_öt32_t
 
	mdaddr
;

68 #ifde‡
__USE_BSD


108 
	sù


110 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


111 
	mù_hl
:4;

112 
	mù_v
:4;

114 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


115 
	mù_v
:4;

116 
	mù_hl
:4;

118 
u_öt8_t
 
	mù_tos
;

119 
u_sh‹t
 
	mù_Àn
;

120 
u_sh‹t
 
	mù_id
;

121 
u_sh‹t
 
	mù_off
;

122 
	#IP_RF
 0x8000

	)

123 
	#IP_DF
 0x4000

	)

124 
	#IP_MF
 0x2000

	)

125 
	#IP_OFFMASK
 0x1ff‡

	)

126 
u_öt8_t
 
	mù_âl
;

127 
u_öt8_t
 
	mù_p
;

128 
u_sh‹t
 
	mù_sum
;

129 
ö_addr
 
	mù_§c
, 
	mù_d°
;

135 
	sù_time°amp


137 
u_öt8_t
 
	mùt_code
;

138 
u_öt8_t
 
	mùt_Àn
;

139 
u_öt8_t
 
	mùt_±r
;

140 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


141 
	mùt_Êg
:4;

142 
	mùt_oÊw
:4;

144 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


145 
	mùt_oÊw
:4;

146 
	mùt_Êg
:4;

148 
u_öt32_t
 
	md©a
[9];

152 
	#IPVERSION
 4

	)

153 
	#IP_MAXPACKET
 65535

	)

161 
	#IPTOS_ECN_MASK
 0x03

	)

162 
	#IPTOS_ECN
(
x
Ë((xË& 
IPTOS_ECN_MASK
)

	)

163 
	#IPTOS_ECN_NOT_ECT
 0x00

	)

164 
	#IPTOS_ECN_ECT1
 0x01

	)

165 
	#IPTOS_ECN_ECT0
 0x02

	)

166 
	#IPTOS_ECN_CE
 0x03

	)

174 
	#IPTOS_DSCP_MASK
 0xfc

	)

175 
	#IPTOS_DSCP
(
x
Ë((xË& 
IPTOS_DSCP_MASK
)

	)

176 
	#IPTOS_DSCP_AF11
 0x28

	)

177 
	#IPTOS_DSCP_AF12
 0x30

	)

178 
	#IPTOS_DSCP_AF13
 0x38

	)

179 
	#IPTOS_DSCP_AF21
 0x48

	)

180 
	#IPTOS_DSCP_AF22
 0x50

	)

181 
	#IPTOS_DSCP_AF23
 0x58

	)

182 
	#IPTOS_DSCP_AF31
 0x68

	)

183 
	#IPTOS_DSCP_AF32
 0x70

	)

184 
	#IPTOS_DSCP_AF33
 0x78

	)

185 
	#IPTOS_DSCP_AF41
 0x88

	)

186 
	#IPTOS_DSCP_AF42
 0x90

	)

187 
	#IPTOS_DSCP_AF43
 0x98

	)

188 
	#IPTOS_DSCP_EF
 0xb8

	)

195 
	#IPTOS_CLASS_MASK
 0xe0

	)

196 
	#IPTOS_CLASS
(
˛ass
Ë((˛assË& 
IPTOS_CLASS_MASK
)

	)

197 
	#IPTOS_CLASS_CS0
 0x00

	)

198 
	#IPTOS_CLASS_CS1
 0x20

	)

199 
	#IPTOS_CLASS_CS2
 0x40

	)

200 
	#IPTOS_CLASS_CS3
 0x60

	)

201 
	#IPTOS_CLASS_CS4
 0x80

	)

202 
	#IPTOS_CLASS_CS5
 0xa0

	)

203 
	#IPTOS_CLASS_CS6
 0xc0

	)

204 
	#IPTOS_CLASS_CS7
 0xe0

	)

206 
	#IPTOS_CLASS_DEFAULT
 
IPTOS_CLASS_CS0


	)

212 
	#IPTOS_TOS_MASK
 0x1E

	)

213 
	#IPTOS_TOS
(
tos
Ë(—osË& 
IPTOS_TOS_MASK
)

	)

214 
	#IPTOS_LOWDELAY
 0x10

	)

215 
	#IPTOS_THROUGHPUT
 0x08

	)

216 
	#IPTOS_RELIABILITY
 0x04

	)

217 
	#IPTOS_LOWCOST
 0x02

	)

218 
	#IPTOS_MINCOST
 
IPTOS_LOWCOST


	)

223 
	#IPTOS_PREC_MASK
 
IPTOS_CLASS_MASK


	)

224 
	#IPTOS_PREC
(
tos
Ë
	`IPTOS_CLASS
—os)

	)

225 
	#IPTOS_PREC_NETCONTROL
 
IPTOS_CLASS_CS7


	)

226 
	#IPTOS_PREC_INTERNETCONTROL
 
IPTOS_CLASS_CS6


	)

227 
	#IPTOS_PREC_CRITIC_ECP
 
IPTOS_CLASS_CS5


	)

228 
	#IPTOS_PREC_FLASHOVERRIDE
 
IPTOS_CLASS_CS4


	)

229 
	#IPTOS_PREC_FLASH
 
IPTOS_CLASS_CS3


	)

230 
	#IPTOS_PREC_IMMEDIATE
 
IPTOS_CLASS_CS2


	)

231 
	#IPTOS_PREC_PRIORITY
 
IPTOS_CLASS_CS1


	)

232 
	#IPTOS_PREC_ROUTINE
 
IPTOS_CLASS_CS0


	)

237 
	#IPOPT_COPY
 0x80

	)

238 
	#IPOPT_CLASS_MASK
 0x60

	)

239 
	#IPOPT_NUMBER_MASK
 0x1f

	)

241 
	#IPOPT_COPIED
(
o
Ë((oË& 
IPOPT_COPY
)

	)

242 
	#IPOPT_CLASS
(
o
Ë((oË& 
IPOPT_CLASS_MASK
)

	)

243 
	#IPOPT_NUMBER
(
o
Ë((oË& 
IPOPT_NUMBER_MASK
)

	)

245 
	#IPOPT_CONTROL
 0x00

	)

246 
	#IPOPT_RESERVED1
 0x20

	)

247 
	#IPOPT_DEBMEAS
 0x40

	)

248 
	#IPOPT_MEASUREMENT
 
IPOPT_DEBMEAS


	)

249 
	#IPOPT_RESERVED2
 0x60

	)

251 
	#IPOPT_EOL
 0

	)

252 
	#IPOPT_END
 
IPOPT_EOL


	)

253 
	#IPOPT_NOP
 1

	)

254 
	#IPOPT_NOOP
 
IPOPT_NOP


	)

256 
	#IPOPT_RR
 7

	)

257 
	#IPOPT_TS
 68

	)

258 
	#IPOPT_TIMESTAMP
 
IPOPT_TS


	)

259 
	#IPOPT_SECURITY
 130

	)

260 
	#IPOPT_SEC
 
IPOPT_SECURITY


	)

261 
	#IPOPT_LSRR
 131

	)

262 
	#IPOPT_SATID
 136

	)

263 
	#IPOPT_SID
 
IPOPT_SATID


	)

264 
	#IPOPT_SSRR
 137

	)

265 
	#IPOPT_RA
 148

	)

270 
	#IPOPT_OPTVAL
 0

	)

271 
	#IPOPT_OLEN
 1

	)

272 
	#IPOPT_OFFSET
 2

	)

273 
	#IPOPT_MINOFF
 4

	)

275 
	#MAX_IPOPTLEN
 40

	)

278 
	#IPOPT_TS_TSONLY
 0

	)

279 
	#IPOPT_TS_TSANDADDR
 1

	)

280 
	#IPOPT_TS_PRESPEC
 3

	)

283 
	#IPOPT_SECUR_UNCLASS
 0x0000

	)

284 
	#IPOPT_SECUR_CONFID
 0xf135

	)

285 
	#IPOPT_SECUR_EFTO
 0x789a

	)

286 
	#IPOPT_SECUR_MMMM
 0xbc4d

	)

287 
	#IPOPT_SECUR_RESTR
 0xaf13

	)

288 
	#IPOPT_SECUR_SECRET
 0xd788

	)

289 
	#IPOPT_SECUR_TOPSECRET
 0x6bc5

	)

294 
	#MAXTTL
 255

	)

295 
	#IPDEFTTL
 64

	)

296 
	#IPFRAGTTL
 60

	)

297 
	#IPTTLDEC
 1

	)

299 
	#IP_MSS
 576

	)

301 
	g__END_DECLS


	@/usr/include/netinet/tcp.h

32 #i‚de‡
_NETINET_TCP_H


33 
	#_NETINET_TCP_H
 1

	)

35 
	~<„©uªs.h
>

40 
	#TCP_NODELAY
 1

	)

41 
	#TCP_MAXSEG
 2

	)

42 
	#TCP_CORK
 3

	)

43 
	#TCP_KEEPIDLE
 4

	)

44 
	#TCP_KEEPINTVL
 5

	)

45 
	#TCP_KEEPCNT
 6

	)

46 
	#TCP_SYNCNT
 7

	)

47 
	#TCP_LINGER2
 8

	)

48 
	#TCP_DEFER_ACCEPT
 9

	)

49 
	#TCP_WINDOW_CLAMP
 10

	)

50 
	#TCP_INFO
 11

	)

51 
	#TCP_QUICKACK
 12

	)

52 
	#TCP_CONGESTION
 13

	)

53 
	#TCP_MD5SIG
 14

	)

55 #ifde‡
__USE_MISC


56 
	~<sys/ty≥s.h
>

57 
	~<sys/sockë.h
>

59 #ifde‡
__FAVOR_BSD


60 
u_öt32_t
 
	tt˝_£q
;

65 
	st˝hdr


67 
u_öt16_t
 
	mth_•‹t
;

68 
u_öt16_t
 
	mth_dp‹t
;

69 
t˝_£q
 
	mth_£q
;

70 
t˝_£q
 
	mth_ack
;

71 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
u_öt8_t
 
	mth_x2
:4;

73 
u_öt8_t
 
	mth_off
:4;

75 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


76 
u_öt8_t
 
	mth_off
:4;

77 
u_öt8_t
 
	mth_x2
:4;

79 
u_öt8_t
 
	mth_Êags
;

80 
	#TH_FIN
 0x01

	)

81 
	#TH_SYN
 0x02

	)

82 
	#TH_RST
 0x04

	)

83 
	#TH_PUSH
 0x08

	)

84 
	#TH_ACK
 0x10

	)

85 
	#TH_URG
 0x20

	)

86 
u_öt16_t
 
	mth_wö
;

87 
u_öt16_t
 
	mth_sum
;

88 
u_öt16_t
 
	mth_uΩ
;

92 
	st˝hdr


94 
u_öt16_t
 
	msour˚
;

95 
u_öt16_t
 
	mde°
;

96 
u_öt32_t
 
	m£q
;

97 
u_öt32_t
 
	mack_£q
;

98 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


99 
u_öt16_t
 
	mªs1
:4;

100 
u_öt16_t
 
	mdoff
:4;

101 
u_öt16_t
 
	mfö
:1;

102 
u_öt16_t
 
	msyn
:1;

103 
u_öt16_t
 
	mr°
:1;

104 
u_öt16_t
 
	mpsh
:1;

105 
u_öt16_t
 
	mack
:1;

106 
u_öt16_t
 
	murg
:1;

107 
u_öt16_t
 
	mªs2
:2;

108 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


109 
u_öt16_t
 
	mdoff
:4;

110 
u_öt16_t
 
	mªs1
:4;

111 
u_öt16_t
 
	mªs2
:2;

112 
u_öt16_t
 
	murg
:1;

113 
u_öt16_t
 
	mack
:1;

114 
u_öt16_t
 
	mpsh
:1;

115 
u_öt16_t
 
	mr°
:1;

116 
u_öt16_t
 
	msyn
:1;

117 
u_öt16_t
 
	mfö
:1;

121 
u_öt16_t
 
	mwödow
;

122 
u_öt16_t
 
	mcheck
;

123 
u_öt16_t
 
	murg_±r
;

129 
	mTCP_ESTABLISHED
 = 1,

130 
	mTCP_SYN_SENT
,

131 
	mTCP_SYN_RECV
,

132 
	mTCP_FIN_WAIT1
,

133 
	mTCP_FIN_WAIT2
,

134 
	mTCP_TIME_WAIT
,

135 
	mTCP_CLOSE
,

136 
	mTCP_CLOSE_WAIT
,

137 
	mTCP_LAST_ACK
,

138 
	mTCP_LISTEN
,

139 
	mTCP_CLOSING


142 
	#TCPOPT_EOL
 0

	)

143 
	#TCPOPT_NOP
 1

	)

144 
	#TCPOPT_MAXSEG
 2

	)

145 
	#TCPOLEN_MAXSEG
 4

	)

146 
	#TCPOPT_WINDOW
 3

	)

147 
	#TCPOLEN_WINDOW
 3

	)

148 
	#TCPOPT_SACK_PERMITTED
 4

	)

149 
	#TCPOLEN_SACK_PERMITTED
 2

	)

150 
	#TCPOPT_SACK
 5

	)

151 
	#TCPOPT_TIMESTAMP
 8

	)

152 
	#TCPOLEN_TIMESTAMP
 10

	)

153 
	#TCPOLEN_TSTAMP_APPA
 (
TCPOLEN_TIMESTAMP
+2Ë

	)

155 
	#TCPOPT_TSTAMP_HDR
 \

156 (
TCPOPT_NOP
<<24|TCPOPT_NOP<<16|
TCPOPT_TIMESTAMP
<<8|
TCPOLEN_TIMESTAMP
)

	)

164 
	#TCP_MSS
 512

	)

166 
	#TCP_MAXWIN
 65535

	)

168 
	#TCP_MAX_WINSHIFT
 14

	)

170 
	#SOL_TCP
 6

	)

173 
	#TCPI_OPT_TIMESTAMPS
 1

	)

174 
	#TCPI_OPT_SACK
 2

	)

175 
	#TCPI_OPT_WSCALE
 4

	)

176 
	#TCPI_OPT_ECN
 8

	)

179 
	et˝_ˇ_°©e


181 
	mTCP_CA_O≥n
 = 0,

182 
	mTCP_CA_Dis‹dî
 = 1,

183 
	mTCP_CA_CWR
 = 2,

184 
	mTCP_CA_Recovîy
 = 3,

185 
	mTCP_CA_Loss
 = 4

188 
	st˝_öfo


190 
u_öt8_t
 
	mt˝i_°©e
;

191 
u_öt8_t
 
	mt˝i_ˇ_°©e
;

192 
u_öt8_t
 
	mt˝i_ªå™smôs
;

193 
u_öt8_t
 
	mt˝i_¥obes
;

194 
u_öt8_t
 
	mt˝i_backoff
;

195 
u_öt8_t
 
	mt˝i_›ti⁄s
;

196 
u_öt8_t
 
	mt˝i_¢d_wsˇÀ
 : 4, 
	mt˝i_rcv_wsˇÀ
 : 4;

198 
u_öt32_t
 
	mt˝i_πo
;

199 
u_öt32_t
 
	mt˝i_©o
;

200 
u_öt32_t
 
	mt˝i_¢d_mss
;

201 
u_öt32_t
 
	mt˝i_rcv_mss
;

203 
u_öt32_t
 
	mt˝i_u«cked
;

204 
u_öt32_t
 
	mt˝i_ßcked
;

205 
u_öt32_t
 
	mt˝i_lo°
;

206 
u_öt32_t
 
	mt˝i_ªå™s
;

207 
u_öt32_t
 
	mt˝i_Áckës
;

210 
u_öt32_t
 
	mt˝i_œ°_d©a_£¡
;

211 
u_öt32_t
 
	mt˝i_œ°_ack_£¡
;

212 
u_öt32_t
 
	mt˝i_œ°_d©a_ªcv
;

213 
u_öt32_t
 
	mt˝i_œ°_ack_ªcv
;

216 
u_öt32_t
 
	mt˝i_pmtu
;

217 
u_öt32_t
 
	mt˝i_rcv_s°hªsh
;

218 
u_öt32_t
 
	mt˝i_πt
;

219 
u_öt32_t
 
	mt˝i_πtv¨
;

220 
u_öt32_t
 
	mt˝i_¢d_s°hªsh
;

221 
u_öt32_t
 
	mt˝i_¢d_cwnd
;

222 
u_öt32_t
 
	mt˝i_advmss
;

223 
u_öt32_t
 
	mt˝i_ª‹dîög
;

225 
u_öt32_t
 
	mt˝i_rcv_πt
;

226 
u_öt32_t
 
	mt˝i_rcv_•a˚
;

228 
u_öt32_t
 
	mt˝i_tŸÆ_ªå™s
;

233 
	#TCP_MD5SIG_MAXKEYLEN
 80

	)

235 
	st˝_md5sig


237 
sockaddr_°‹age
 
	mt˝m_addr
;

238 
u_öt16_t
 
	m__t˝m_∑d1
;

239 
u_öt16_t
 
	mt˝m_keyÀn
;

240 
u_öt32_t
 
	m__t˝m_∑d2
;

241 
u_öt8_t
 
	mt˝m_key
[
TCP_MD5SIG_MAXKEYLEN
];

	@/usr/include/poll.h

1 
	~<sys/pﬁl.h
>

	@/usr/include/pwd.h

23 #i‚def 
_PWD_H


24 
	#_PWD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 
	#__√ed_size_t


	)

33 
	~<°ddef.h
>

35 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


38 #i‚de‡
__gid_t_deföed


39 
__gid_t
 
	tgid_t
;

40 
	#__gid_t_deföed


	)

43 #i‚de‡
__uid_t_deföed


44 
__uid_t
 
	tuid_t
;

45 
	#__uid_t_deföed


	)

50 
	s∑sswd


52 *
	mpw_«me
;

53 *
	mpw_∑sswd
;

54 
__uid_t
 
	mpw_uid
;

55 
__gid_t
 
	mpw_gid
;

56 *
	mpw_gecos
;

57 *
	mpw_dú
;

58 *
	mpw_shñl
;

62 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


63 
	#__√ed_FILE


	)

64 
	~<°dio.h
>

68 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


73 
£çwít
 ();

79 
ídpwít
 ();

85 
∑sswd
 *
gëpwít
 ();

88 #ifdef 
__USE_SVID


95 
∑sswd
 *
fgëpwít
 (
FILE
 *
__°ªam
);

103 
puçwít
 (
__c⁄°
 
∑sswd
 *
__ª°ri˘
 
__p
,

104 
FILE
 *
__ª°ri˘
 
__f
);

111 
∑sswd
 *
gëpwuid
 (
__uid_t
 
__uid
);

117 
∑sswd
 *
gëpw«m
 (
__c⁄°
 *
__«me
);

119 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


121 #ifde‡
__USE_MISC


124 
	#NSS_BUFLEN_PASSWD
 1024

	)

135 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


140 
gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

141 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

142 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

145 
gëpwuid_r
 (
__uid_t
 
__uid
,

146 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

147 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

148 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

150 
gëpw«m_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

151 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

152 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

153 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

156 #ifdef 
__USE_SVID


164 
fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

165 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

166 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

167 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

172 #ifde‡
__USE_GNU


181 
gëpw
 (
__uid_t
 
__uid
, *
__buf„r
);

184 
	g__END_DECLS


	@/usr/include/sgtty.h

19 #i‚def 
_SGTTY_H


20 
	#_SGTTY_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/io˘l.h
>

28 
	gsgâyb
;

30 
__BEGIN_DECLS


33 
	$gây
 (
__fd
, 
sgâyb
 *
__∑øms
Ë
__THROW
;

36 
	$°ty
 (
__fd
, 
__c⁄°
 
sgâyb
 *
__∑øms
Ë
__THROW
;

39 
__END_DECLS


	@/usr/include/shadow.h

21 #i‚de‡
_SHADOW_H


22 
	#_SHADOW_H
 1

	)

24 
	~<„©uªs.h
>

26 
	~<∑ths.h
>

28 
	#__√ed_FILE


	)

29 
	~<°dio.h
>

30 
	#__√ed_size_t


	)

31 
	~<°ddef.h
>

34 
	#SHADOW
 
_PATH_SHADOW


	)

37 
__BEGIN_DECLS


40 
	s•wd


42 *
	m•_«mp
;

43 *
	m•_pwdp
;

44 
	m•_l°chg
;

45 
	m•_mö
;

46 
	m•_max
;

47 
	m•_w¨n
;

49 
	m•_öa˘
;

51 
	m•_expúe
;

53 
	m•_Êag
;

63 
£t•ít
 ();

71 
íd•ít
 ();

79 
•wd
 *
gë•ít
 ();

87 
•wd
 *
gë•«m
 (
__c⁄°
 *
__«me
);

95 
•wd
 *
sgë•ít
 (
__c⁄°
 *
__°rög
);

103 
•wd
 *
fgë•ít
 (
FILE
 *
__°ªam
);

111 
put•ít
 (
__c⁄°
 
•wd
 *
__p
, 
FILE
 *
__°ªam
);

114 #ifde‡
__USE_MISC


121 
gë•ít_r
 (
•wd
 *
__ªsu…_buf
, *
__buf„r
,

122 
size_t
 
__buÊí
, 
•wd
 **
__ªsu…
);

124 
gë•«m_r
 (
__c⁄°
 *
__«me
, 
•wd
 *
__ªsu…_buf
,

125 *
__buf„r
, 
size_t
 
__buÊí
,

126 
•wd
 **
__ªsu…
);

128 
sgë•ít_r
 (
__c⁄°
 *
__°rög
, 
•wd
 *
__ªsu…_buf
,

129 *
__buf„r
, 
size_t
 
__buÊí
,

130 
•wd
 **
__ªsu…
);

132 
fgë•ít_r
 (
FILE
 *
__°ªam
, 
•wd
 *
__ªsu…_buf
,

133 *
__buf„r
, 
size_t
 
__buÊí
,

134 
•wd
 **
__ªsu…
);

142 
	$lckpwdf
 (Ë
__THROW
;

145 
	$ulckpwdf
 (Ë
__THROW
;

147 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

173 
	#°dö
 
°dö


	)

174 
	#°dout
 
°dout


	)

175 
	#°dîr
 
°dîr


	)

177 
__BEGIN_NAMESPACE_STD


179 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

181 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

182 
__END_NAMESPACE_STD


184 #ifde‡
__USE_ATFILE


186 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

187 
__c⁄°
 *
__√w
Ë
__THROW
;

190 
__BEGIN_NAMESPACE_STD


195 #i‚de‡
__USE_FILE_OFFSET64


196 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

198 #ifde‡
__REDIRECT


199 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

210 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

211 
__END_NAMESPACE_STD


213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

233 
__BEGIN_NAMESPACE_STD


238 
	`f˛o£
 (
FILE
 *
__°ªam
);

243 
	`fÊush
 (
FILE
 *
__°ªam
);

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_MISC


253 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

256 #ifde‡
__USE_GNU


263 
	`f˛o£Æl
 ();

267 
__BEGIN_NAMESPACE_STD


268 #i‚de‡
__USE_FILE_OFFSET64


273 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

279 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

283 #ifde‡
__REDIRECT


284 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

286 
__wur
;

287 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

288 
__c⁄°
 *
__ª°ri˘
 
__modes
,

289 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

290 
__wur
;

292 
	#f›í
 
f›í64


	)

293 
	#‰e›í
 
‰e›í64


	)

296 
__END_NAMESPACE_STD


297 #ifde‡
__USE_LARGEFILE64


298 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

300 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
,

302 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

305 #ifdef 
__USE_POSIX


307 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

310 #ifdef 
__USE_GNU


313 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

314 
__c⁄°
 *
__ª°ri˘
 
__modes
,

315 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

318 #ifde‡
__USE_XOPEN2K8


320 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

321 
__THROW
 
__wur
;

326 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

330 
__BEGIN_NAMESPACE_STD


333 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

337 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

338 
__modes
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifdef 
__USE_BSD


344 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

345 
size_t
 
__size
Ë
__THROW
;

348 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

352 
__BEGIN_NAMESPACE_STD


357 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

373 
_G_va_li°
 
__¨g
);

378 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

381 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

382 
__END_NAMESPACE_STD


384 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
__BEGIN_NAMESPACE_C99


387 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

389 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

391 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

392 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

393 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 
__END_NAMESPACE_C99


397 #ifde‡
__USE_GNU


400 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

401 
_G_va_li°
 
__¨g
)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

403 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

404 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

406 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

407 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

408 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

411 #ifde‡
__USE_XOPEN2K8


418 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

419 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

421 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

426 
__BEGIN_NAMESPACE_STD


431 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

432 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

440 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

442 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

443 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

444 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

445 #ifde‡
__REDIRECT


449 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

450 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_fsˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_sˇnf
Ë
__wur
;

454 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

456 
__isoc99_ssˇnf
);

458 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

459 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

460 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

461 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

463 
	#fsˇnf
 
__isoc99_fsˇnf


	)

464 
	#sˇnf
 
__isoc99_sˇnf


	)

465 
	#ssˇnf
 
__isoc99_ssˇnf


	)

469 
__END_NAMESPACE_STD


471 #ifdef 
__USE_ISOC99


472 
__BEGIN_NAMESPACE_C99


477 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

478 
_G_va_li°
 
__¨g
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

485 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

489 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

490 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

491 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

493 #i‡!
deföed
 
__USE_GNU
 \

494 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

495 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

496 #ifde‡
__REDIRECT


500 
	`__REDIRECT
 (
vfsˇnf
,

501 (
FILE
 *
__ª°ri˘
 
__s
,

502 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

503 
__isoc99_vfsˇnf
)

504 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

505 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

506 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

507 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

508 
	`__REDIRECT_NTH
 (
vssˇnf
,

509 (
__c⁄°
 *
__ª°ri˘
 
__s
,

510 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

511 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

512 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

514 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

515 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

520 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

521 
_G_va_li°
 
__¨g
Ë
__THROW
;

522 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

523 
	#vsˇnf
 
__isoc99_vsˇnf


	)

524 
	#vssˇnf
 
__isoc99_vssˇnf


	)

528 
__END_NAMESPACE_C99


532 
__BEGIN_NAMESPACE_STD


537 
	`fgëc
 (
FILE
 *
__°ªam
);

538 
	`gëc
 (
FILE
 *
__°ªam
);

544 
	`gëch¨
 ();

545 
__END_NAMESPACE_STD


549 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

551 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


556 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

557 
	`gëch¨_u∆ocked
 ();

560 #ifde‡
__USE_MISC


567 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

571 
__BEGIN_NAMESPACE_STD


579 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

586 
	`putch¨
 (
__c
);

587 
__END_NAMESPACE_STD


591 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

593 #ifde‡
__USE_MISC


600 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


608 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

609 
	`putch¨_u∆ocked
 (
__c
);

613 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

614 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

616 
	`gëw
 (
FILE
 *
__°ªam
);

619 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

623 
__BEGIN_NAMESPACE_STD


628 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

629 
__wur
;

636 *
	$gës
 (*
__s
Ë
__wur
;

637 
__END_NAMESPACE_STD


639 #ifde‡
__USE_GNU


646 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 #ifdef 
__USE_XOPEN2K8


662 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

663 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

664 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

665 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

676 
size_t
 *
__ª°ri˘
 
__n
,

677 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
__BEGIN_NAMESPACE_STD


686 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

692 
	`puts
 (
__c⁄°
 *
__s
);

699 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

706 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

714 
__END_NAMESPACE_STD


716 #ifde‡
__USE_GNU


723 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

724 
FILE
 *
__ª°ri˘
 
__°ªam
);

727 #ifde‡
__USE_MISC


734 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

736 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

741 
__BEGIN_NAMESPACE_STD


746 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

751 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

756 
	`ªwöd
 (
FILE
 *
__°ªam
);

757 
__END_NAMESPACE_STD


764 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


765 #i‚de‡
__USE_FILE_OFFSET64


770 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

775 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

777 #ifde‡
__REDIRECT


778 
	`__REDIRECT
 (
f£eko
,

779 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

780 
f£eko64
);

781 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

783 
	#f£eko
 
f£eko64


	)

784 
	#·ñlo
 
·ñlo64


	)

789 
__BEGIN_NAMESPACE_STD


790 #i‚de‡
__USE_FILE_OFFSET64


795 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

800 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

802 #ifde‡
__REDIRECT


803 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

804 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

805 
	`__REDIRECT
 (
f£ços
,

806 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

808 
	#fgëpos
 
fgëpos64


	)

809 
	#f£ços
 
f£ços64


	)

812 
__END_NAMESPACE_STD


814 #ifde‡
__USE_LARGEFILE64


815 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

816 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

817 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

818 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

821 
__BEGIN_NAMESPACE_STD


823 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

825 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

827 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

828 
__END_NAMESPACE_STD


830 #ifde‡
__USE_MISC


832 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

833 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

838 
__BEGIN_NAMESPACE_STD


843 
	`≥º‹
 (
__c⁄°
 *
__s
);

844 
__END_NAMESPACE_STD


850 
	~<bôs/sys_îæi°.h
>

853 #ifdef 
__USE_POSIX


855 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

858 #ifde‡
__USE_MISC


860 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

864 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

865 
deföed
 
__USE_MISC
)

870 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

876 
	`p˛o£
 (
FILE
 *
__°ªam
);

880 #ifdef 
__USE_POSIX


882 *
	$˘îmid
 (*
__s
Ë
__THROW
;

886 #ifde‡
__USE_XOPEN


888 *
	`cu£rid
 (*
__s
);

892 #ifdef 
__USE_GNU


893 
ob°ack
;

896 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

897 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

898 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

899 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

901 
_G_va_li°
 
__¨gs
)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

906 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


910 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

914 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

917 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

920 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


924 
	#__√ed_gë›t


	)

925 
	~<gë›t.h
>

930 #ifde‡
__USE_EXTERN_INLINES


931 
	~<bôs/°dio.h
>

933 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


934 
	~<bôs/°dio2.h
>

936 #ifde‡
__LDBL_COMPAT


937 
	~<bôs/°dio-ldbl.h
>

940 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/strings.h

20 #i‚def 
_STRINGS_H


21 
	#_STRINGS_H
 1

	)

26 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


28 
	~<„©uªs.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

33 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

34 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

37 
	g__BEGIN_DECLS


39 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


41 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

42 
__THROW
 
__©åibuã_puª__
;

45 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

48 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

51 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


54 *
	`ödex
 (*
__s
, 
__c
)

55 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

56 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

57 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

59 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


60 
__exã∫_Æways_ölöe
 *

61 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
__exã∫_Æways_ölöe
 
__c⁄°
 *

67 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


69  
	`__buûtö_ödex
 (
__s
, 
__c
);

72 
	}
}

74 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

75 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

79 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


82 *
	`rödex
 (*
__s
, 
__c
)

83 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

84 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

85 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

87 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


88 
__exã∫_Æways_ölöe
 *

89 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
__exã∫_Æways_ölöe
 
__c⁄°
 *

95 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


97  
	`__buûtö_rödex
 (
__s
, 
__c
);

100 
	}
}

102 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


110 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

114 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

115 
__THROW
 
__©åibuã_puª__
;

118 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

119 
__THROW
 
__©åibuã_puª__
;

121 #ifdef 
__USE_XOPEN2K8


125 
	~<xloˇÀ.h
>

129 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

130 
__loˇÀ_t
 
__loc
)

131 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

134 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


	@/usr/include/syslog.h

1 
	~<sys/sy¶og.h
>

	@/usr/include/termio.h

5 
	~<ãrmios.h
>

6 
	~<sys/io˘l.h
>

	@/usr/include/termios.h

23 #i‚def 
_TERMIOS_H


24 
	#_TERMIOS_H
 1

	)

26 
	~<„©uªs.h
>

27 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

36 
	g__BEGIN_DECLS


40 
	~<bôs/ãrmios.h
>

42 #ifde‡
__USE_BSD


45 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

49 
•ìd_t
 
	$cfgëo•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

52 
•ìd_t
 
	$cfgëi•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

55 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

58 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

60 #ifdef 
__USE_BSD


62 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

67 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

71 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

72 
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

75 #ifdef 
__USE_BSD


77 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

81 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

87 
	`tcdøö
 (
__fd
);

91 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

95 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

98 #ifde‡
__USE_UNIX98


100 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

104 #ifde‡
__USE_BSD


105 
	~<sys/âydeÁu…s.h
>

108 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

315 #ifde‡
__USE_GNU


316 
	#SEEK_DATA
 3

	)

317 
	#SEEK_HOLE
 4

	)

321 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


323 
	#L_SET
 
SEEK_SET


	)

324 
	#L_INCR
 
SEEK_CUR


	)

325 
	#L_XTND
 
SEEK_END


	)

334 #i‚de‡
__USE_FILE_OFFSET64


335 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

337 #ifde‡
__REDIRECT_NTH


338 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

339 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

340 
l£ek64
);

342 
	#l£ek
 
l£ek64


	)

345 #ifde‡
__USE_LARGEFILE64


346 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

347 
__THROW
;

354 
	`˛o£
 (
__fd
);

361 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

367 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

369 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


370 #i‚de‡
__USE_FILE_OFFSET64


377 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

378 
__off_t
 
__off£t
Ë
__wur
;

385 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

386 
__off_t
 
__off£t
Ë
__wur
;

388 #ifde‡
__REDIRECT


389 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off64_t
 
__off£t
),

391 
¥ód64
Ë
__wur
;

392 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

393 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

394 
pwrôe64
Ë
__wur
;

396 
	#¥ód
 
¥ód64


	)

397 
	#pwrôe
 
pwrôe64


	)

401 #ifde‡
__USE_LARGEFILE64


405 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

406 
__off64_t
 
__off£t
Ë
__wur
;

409 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

410 
__off64_t
 
__off£t
Ë
__wur
;

418 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

420 #ifde‡
__USE_GNU


423 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

433 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

445 
	`¶ìp
 (
__£c⁄ds
);

447 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

448 || 
deföed
 
__USE_BSD


453 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

454 
__THROW
;

461 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

470 
	`∑u£
 ();

474 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

475 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

477 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


479 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

484 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

489 #ifde‡
__USE_ATFILE


492 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

493 
__gid_t
 
__group
, 
__Êag
)

494 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

498 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


502 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

512 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

514 #ifdef 
__USE_GNU


518 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

521 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

522 || 
deföed
 
__USE_BSD


526 *
	$gëwd
 (*
__buf
)

527 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

532 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

535 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

537 #ifde‡
__USE_GNU


540 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

544 **
__ívú⁄
;

545 #ifde‡
__USE_GNU


546 **
ívú⁄
;

552 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

553 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

555 #ifde‡
__USE_XOPEN2K8


558 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((2));

564 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

580 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

586 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

588 #ifde‡
__USE_GNU


591 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

592 *
__c⁄°
 
__ívp
[])

593 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

597 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


599 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

604 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

610 
	~<bôs/c⁄‚ame.h
>

613 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

614 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

620 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

622 #ifdef 
__USE_POSIX2


624 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

629 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

632 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

636 #i‚de‡
__FAVOR_BSD


637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

639 #ifde‡
__REDIRECT_NTH


640 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

642 
	#gëpgΩ
 
__gëpgid


	)

647 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


649 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

656 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

658 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


669 #i‚de‡
__FAVOR_BSD


673 
	$£çgΩ
 (Ë
__THROW
;

678 #ifde‡
__REDIRECT_NTH


679 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

681 
	#£çgΩ
 
£çgid


	)

690 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

692 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


694 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

698 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

701 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

704 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

707 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

712 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

714 #ifdef 
__USE_GNU


716 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

723 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


728 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

731 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


733 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

740 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


745 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

748 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


750 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

753 #ifde‡
__USE_GNU


756 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

757 
__THROW
;

761 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

762 
__THROW
;

766 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

767 
__THROW
;

771 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

772 
__THROW
;

779 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

781 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

782 || 
deföed
 
__USE_BSD


787 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

793 *
	$ây«me
 (
__fd
Ë
__THROW
;

797 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

802 
	$ißây
 (
__fd
Ë
__THROW
;

804 #i‡
deföed
 
__USE_BSD
 \

805 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

808 
	$ây¶Ÿ
 (Ë
__THROW
;

813 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


819 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

820 
__c⁄°
 *
__to
, 
__Êags
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

824 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


826 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

832 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

833 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

837 #ifde‡
__USE_ATFILE


839 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

840 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

843 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

844 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

845 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

849 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_ATFILE


853 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

854 
__THROW
 
	`__n⁄nuŒ
 ((2));

858 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

862 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

865 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

872 *
	`gëlogö
 ();

873 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


880 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

883 #ifdef 
__USE_BSD


885 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

889 #ifdef 
__USE_POSIX2


893 
	#__√ed_gë›t


	)

894 
	~<gë›t.h
>

898 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


902 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

906 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

909 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

920 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

929 
	$vh™gup
 (Ë
__THROW
;

932 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

940 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

941 
size_t
 
__off£t
, 
__sˇÀ
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

952 *
	$gëu£rshñl
 (Ë
__THROW
;

953 
	$ídu£rshñl
 (Ë
__THROW
;

954 
	$£tu£rshñl
 (Ë
__THROW
;

960 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

964 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

967 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

971 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

975 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


980 
	`fsync
 (
__fd
);

984 #ifde‡
__USE_GNU


987 
	$syncfs
 (
__fd
Ë
__THROW
;

991 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


994 
	`gëho°id
 ();

997 
	$sync
 (Ë
__THROW
;

1000 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1003 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1008 
	$gëdèbÀsize
 (Ë
__THROW
;

1014 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1017 #i‚de‡
__USE_FILE_OFFSET64


1018 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
åunˇã
,

1023 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1024 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1026 
	#åunˇã
 
åunˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1036 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1039 #i‚de‡
__USE_FILE_OFFSET64


1040 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #ifde‡
__REDIRECT_NTH


1043 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1044 
·runˇã64
Ë
__wur
;

1046 
	#·runˇã
 
·runˇã64


	)

1049 #ifde‡
__USE_LARGEFILE64


1050 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1056 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1057 || 
deföed
 
__USE_MISC


1061 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1067 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1071 #ifde‡
__USE_MISC


1082 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1087 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1099 
	#F_ULOCK
 0

	)

1100 
	#F_LOCK
 1

	)

1101 
	#F_TLOCK
 2

	)

1102 
	#F_TEST
 3

	)

1104 #i‚de‡
__USE_FILE_OFFSET64


1105 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1107 #ifde‡
__REDIRECT


1108 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1109 
lockf64
Ë
__wur
;

1111 
	#lockf
 
lockf64


	)

1114 #ifde‡
__USE_LARGEFILE64


1115 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1120 #ifde‡
__USE_GNU


1125 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1126 (
__exãnsi⁄__
 \

1127 ({ 
__ªsu…
; \

1128 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1129 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1130 
__ªsu…
; 
	}
}))

	)

1133 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1136 
fd©async
 (
__fûdes
);

1142 #ifdef 
__USE_XOPEN


1144 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1145 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 
	$í¸y±
 (*
__libc_block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1156 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1157 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1163 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1165 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1170 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1171 
	~<bôs/uni°d.h
>

1174 
__END_DECLS


	@/usr/include/utime.h

23 #i‚def 
_UTIME_H


24 
	#_UTIME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


33 
	#__√ed_time_t


	)

34 
	~<time.h
>

38 
	sutimbuf


40 
__time_t
 
	ma˘ime
;

41 
__time_t
 
	mmodtime
;

46 
	$utime
 (
__c⁄°
 *
__fûe
,

47 
__c⁄°
 
utimbuf
 *
__fûe_times
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1));

50 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	~<bôs/¥edefs.h
>

327 
	#__STDC_ISO_10646__
 200009L

	)

335 #unde‡
__GNU_LIBRARY__


336 
	#__GNU_LIBRARY__
 6

	)

340 
	#__GLIBC__
 2

	)

341 
	#__GLIBC_MINOR__
 15

	)

343 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

344 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

347 #i‡
deföed
 
__GNUC__
 \

348 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

349 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

350 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

351 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

355 #i‚de‡
__ASSEMBLER__


356 #i‚de‡
_SYS_CDEFS_H


357 
	~<sys/cdefs.h
>

362 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


363 
	#__USE_LARGEFILE
 1

	)

364 
	#__USE_LARGEFILE64
 1

	)

370 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

371 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

372 && 
deföed
 
	g__exã∫_ölöe


373 
	#__USE_EXTERN_INLINES
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/paths.h

32 #i‚de‡
_PATHS_H_


33 
	#_PATHS_H_


	)

36 
	#_PATH_DEFPATH
 "/u§/bö:/bö"

	)

38 
	#_PATH_STDPATH
 \

39 "/u§/bö:/bö:/u§/sbö:/sbö"

	)

41 
	#_PATH_BSHELL
 "/bö/sh"

	)

42 
	#_PATH_CONSOLE
 "/dev/c⁄sﬁe"

	)

43 
	#_PATH_CSHELL
 "/bö/csh"

	)

44 
	#_PATH_DEVDB
 "/v¨/run/dev.db"

	)

45 
	#_PATH_DEVNULL
 "/dev/nuŒ"

	)

46 
	#_PATH_DRUM
 "/dev/drum"

	)

47 
	#_PATH_GSHADOW
 "/ëc/gshadow"

	)

48 
	#_PATH_KLOG
 "/¥oc/kmsg"

	)

49 
	#_PATH_KMEM
 "/dev/kmem"

	)

50 
	#_PATH_LASTLOG
 "/v¨/log/œ°log"

	)

51 
	#_PATH_MAILDIR
 "/v¨/maû"

	)

52 
	#_PATH_MAN
 "/u§/sh¨e/m™"

	)

53 
	#_PATH_MEM
 "/dev/mem"

	)

54 
	#_PATH_MNTTAB
 "/ëc/f°ab"

	)

55 
	#_PATH_MOUNTED
 "/ëc/mèb"

	)

56 
	#_PATH_NOLOGIN
 "/ëc/nﬁogö"

	)

57 
	#_PATH_PRESERVE
 "/v¨/lib"

	)

58 
	#_PATH_RWHODIR
 "/v¨/•oﬁ/rwho"

	)

59 
	#_PATH_SENDMAIL
 "/u§/sbö/£ndmaû"

	)

60 
	#_PATH_SHADOW
 "/ëc/shadow"

	)

61 
	#_PATH_SHELLS
 "/ëc/shñls"

	)

62 
	#_PATH_TTY
 "/dev/ây"

	)

63 
	#_PATH_UNIX
 "/boŸ/vmlöux"

	)

64 
	#_PATH_UTMP
 "/v¨/run/utmp"

	)

65 
	#_PATH_VI
 "/u§/bö/vi"

	)

66 
	#_PATH_WTMP
 "/v¨/log/wtmp"

	)

69 
	#_PATH_DEV
 "/dev/"

	)

70 
	#_PATH_TMP
 "/tmp/"

	)

71 
	#_PATH_VARDB
 "/v¨/lib/misc/"

	)

72 
	#_PATH_VARRUN
 "/v¨/run/"

	)

73 
	#_PATH_VARTMP
 "/v¨/tmp/"

	)

	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (
__c⁄°
 *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (
__c⁄°
 *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

60 
	m__GCONV_SWAP
 = 0x0004

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

68 
	g__gc⁄v_å™s_d©a
;

72 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 
	t__c⁄°
 **, __const *,

74 **, 
	tsize_t
 *, , );

77 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

80 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

81 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

85 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

86 
	t__gc⁄v_°ï_d©a
 *, *,

87 
	t__c⁄°
 *,

88 
	t__c⁄°
 **,

89 
	t__c⁄°
 *, **,

90 
	tsize_t
 *);

93 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

94 
	t__c⁄°
 *,

98 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

99 
	tsize_t
 *);

102 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

103 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

105 
	s__gc⁄v_å™s_d©a


108 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

109 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

110 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

111 *
__d©a
;

112 
__gc⁄v_å™s_d©a
 *
__√xt
;

117 
	s__gc⁄v_°ï


119 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

120 
__c⁄°
 *
__mod«me
;

122 
__cou¡î
;

124 *
__‰om_«me
;

125 *
__to_«me
;

127 
__gc⁄v_f˘
 
__f˘
;

128 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

129 
__gc⁄v_öô_f˘
 
__öô_f˘
;

130 
__gc⁄v_íd_f˘
 
__íd_f˘
;

134 
__mö_√eded_‰om
;

135 
__max_√eded_‰om
;

136 
__mö_√eded_to
;

137 
__max_√eded_to
;

140 
__°©eful
;

142 *
__d©a
;

147 
	s__gc⁄v_°ï_d©a


149 *
__outbuf
;

150 *
__outbu„nd
;

154 
__Êags
;

158 
__övoˇti⁄_cou¡î
;

162 
__öã∫Æ_u£
;

164 
__mb°©e_t
 *
__°©ï
;

165 
__mb°©e_t
 
__°©e
;

169 
__gc⁄v_å™s_d©a
 *
__å™s
;

174 
	s__gc⁄v_öfo


176 
size_t
 
__n°ïs
;

177 
__gc⁄v_°ï
 *
__°ïs
;

178 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

179 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@
1
.
1
/usr/include
170
3148
config.h
puredb/src/example_read.c
puredb/src/example_write.c
puredb/src/puredb_p.h
puredb/src/puredb_read.c
puredb/src/puredb_read.h
puredb/src/puredb_write.c
puredb/src/puredb_write.h
puredb/src/regression.c
src/alt_arc4random.c
src/alt_arc4random.h
src/altlog.c
src/altlog.h
src/bonjour.c
src/bonjour.h
src/bsd-getopt_long.c
src/bsd-getopt_long.h
src/bsd-glob.c
src/bsd-glob.h
src/bsd-realpath.c
src/bsd-realpath.h
src/caps.c
src/caps.h
src/caps_p.h
src/crypto-md5.c
src/crypto-md5.h
src/crypto-sha1.c
src/crypto-sha1.h
src/crypto.c
src/crypto.h
src/daemons.c
src/diraliases.c
src/diraliases.h
src/dynamic.c
src/dynamic.h
src/fakechroot.c
src/fakechroot.h
src/fakesnprintf.c
src/fakesnprintf.h
src/ftp_parser.c
src/ftpd.c
src/ftpd.h
src/ftpd_p.h
src/ftpwho-read.c
src/ftpwho-read.h
src/ftpwho-update.c
src/ftpwho-update.h
src/ftpwho-update_p.h
src/getloadavg.c
src/getloadavg.h
src/globals.h
src/ipstack.c
src/ipstack.h
src/log_extauth.c
src/log_extauth.h
src/log_extauth_p.h
src/log_ldap.c
src/log_ldap.h
src/log_ldap_p.h
src/log_mysql.c
src/log_mysql.h
src/log_mysql_p.h
src/log_pam.c
src/log_pam.h
src/log_pgsql.c
src/log_pgsql.h
src/log_pgsql_p.h
src/log_puredb.c
src/log_puredb.h
src/log_unix.c
src/log_unix.h
src/ls.c
src/ls_p.h
src/main.c
src/messages.h
src/messages_cs_cz.h
src/messages_da.h
src/messages_de.h
src/messages_en.h
src/messages_es.h
src/messages_fr.h
src/messages_fr_funny.h
src/messages_hu.h
src/messages_it.h
src/messages_kr.h
src/messages_nl.h
src/messages_no.h
src/messages_pl.h
src/messages_pt_br.h
src/messages_ro.h
src/messages_ru.h
src/messages_sk.h
src/messages_sv.h
src/messages_tr.h
src/messages_zh_cn.h
src/messages_zh_tw.h
src/mysnprintf.c
src/mysnprintf.h
src/parser.c
src/parser.h
src/parser_p.h
src/privsep.c
src/privsep.h
src/privsep_p.h
src/ptracetest.c
src/pure-authd.c
src/pure-authd_p.h
src/pure-ftpwho.c
src/pure-mrtginfo.c
src/pure-pw.c
src/pure-pw.h
src/pure-pwconvert.c
src/pure-quotacheck.c
src/pure-statsdecode.c
src/pure-uploadscript.c
src/pure-uploadscript_p.h
src/quotas.c
src/quotas.h
src/safe_rw.c
src/safe_rw.h
src/syslognames.h
src/tls.c
src/tls.h
src/upload-pipe.c
src/upload-pipe.h
/usr/include/alloca.h
/usr/include/arpa/inet.h
/usr/include/crypt.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/grp.h
/usr/include/iconv.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/locale.h
/usr/include/memory.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/netinet/in_systm.h
/usr/include/netinet/ip.h
/usr/include/netinet/tcp.h
/usr/include/poll.h
/usr/include/pwd.h
/usr/include/sgtty.h
/usr/include/shadow.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/syslog.h
/usr/include/termio.h
/usr/include/termios.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/utime.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/libio.h
/usr/include/paths.h
/usr/include/rpc/netdb.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
